  I1215 14:08:38.558662      22 e2e.go:117] Starting e2e run "6c0ee1bd-bb64-4c3b-ba37-15b40e6d8b2f" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1702649317 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Dec 15 14:08:38.660: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 14:08:38.660: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Dec 15 14:08:38.679: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Dec 15 14:08:38.681: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-flannel' (0 seconds elapsed)
  Dec 15 14:08:38.681: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Dec 15 14:08:38.681: INFO: e2e test version: v1.29.0
  Dec 15 14:08:38.681: INFO: kube-apiserver version: v1.29.0
  Dec 15 14:08:38.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 14:08:38.683: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.024 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 12/15/23 14:08:38.765
  Dec 15 14:08:38.765: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/23 14:08:38.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:08:38.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:08:38.774
  Dec 15 14:08:40.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8175" for this suite. @ 12/15/23 14:08:40.805
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/15/23 14:08:40.811
  Dec 15 14:08:40.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:08:40.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:08:40.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:08:40.825
  STEP: Creating configMap with name projected-configmap-test-volume-5b7abb1f-9b80-4113-ba02-f8c466636d54 @ 12/15/23 14:08:40.828
  STEP: Creating a pod to test consume configMaps @ 12/15/23 14:08:40.832
  STEP: Saw pod success @ 12/15/23 14:08:44.848
  Dec 15 14:08:44.850: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-6400b4ab-f549-41a1-b725-7c562ee26fdc container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:08:44.854
  Dec 15 14:08:44.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2960" for this suite. @ 12/15/23 14:08:44.865
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 12/15/23 14:08:44.868
  Dec 15 14:08:44.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 14:08:44.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:08:44.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:08:44.877
  STEP: Creating configMap configmap-4670/configmap-test-0e154f1c-758a-4ef5-b2dd-3cca749f8fd6 @ 12/15/23 14:08:44.878
  STEP: Creating a pod to test consume configMaps @ 12/15/23 14:08:44.881
  STEP: Saw pod success @ 12/15/23 14:08:46.891
  Dec 15 14:08:46.894: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-319af58d-bc5a-4173-8473-8403221a457f container env-test: <nil>
  STEP: delete the pod @ 12/15/23 14:08:46.9
  Dec 15 14:08:46.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4670" for this suite. @ 12/15/23 14:08:46.917
• [2.054 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/15/23 14:08:46.923
  Dec 15 14:08:46.923: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename namespaces @ 12/15/23 14:08:46.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:08:46.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:08:46.937
  STEP: Updating Namespace "namespaces-7182" @ 12/15/23 14:08:46.94
  Dec 15 14:08:46.946: INFO: Namespace "namespaces-7182" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"6c0ee1bd-bb64-4c3b-ba37-15b40e6d8b2f", "kubernetes.io/metadata.name":"namespaces-7182", "namespaces-7182":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Dec 15 14:08:46.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7182" for this suite. @ 12/15/23 14:08:46.95
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/15/23 14:08:46.956
  Dec 15 14:08:46.956: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename deployment @ 12/15/23 14:08:46.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:08:46.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:08:46.969
  Dec 15 14:08:46.972: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Dec 15 14:08:46.980: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 15 14:08:51.986: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/23 14:08:51.986
  Dec 15 14:08:51.986: INFO: Creating deployment "test-rolling-update-deployment"
  Dec 15 14:08:51.988: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Dec 15 14:08:51.994: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Dec 15 14:08:53.999: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Dec 15 14:08:54.001: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Dec 15 14:08:54.008: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9441",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f006814-cb12-4fea-aa84-2ee2afd55b94",
      ResourceVersion: (string) (len=4) "1238",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 15 14:08:54.012: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9441",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "acab3e78-1356-4743-bf83-2fbb5ef2d4e0",
      ResourceVersion: (string) (len=4) "1228",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "7f006814-cb12-4fea-aa84-2ee2afd55b94",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 66 30 30 36 38  31 34 2d 63 62 31 32 2d  |\"7f006814-cb12-|
              00000120  34 66 65 61 2d 61 61 38  34 2d 32 65 65 32 61 66  |4fea-aa84-2ee2af|
              00000130  64 35 35 62 39 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d55b94\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 14:08:54.013: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Dec 15 14:08:54.013: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9441",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "014c7429-c12b-44a6-945d-6ce099650b11",
      ResourceVersion: (string) (len=4) "1237",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246126,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "7f006814-cb12-4fea-aa84-2ee2afd55b94",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 37 66 30 30 36 38 31  |"uid\":\"7f00681|
              000000b0  34 2d 63 62 31 32 2d 34  66 65 61 2d 61 61 38 34  |4-cb12-4fea-aa84|
              000000c0  2d 32 65 65 32 61 66 64  35 35 62 39 34 5c 22 7d  |-2ee2afd55b94\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 14:08:54.017: INFO: Pod "test-rolling-update-deployment-7f5c55c64-vmm6b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-vmm6b",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-9441",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8fcaf00-3f6f-47f8-b093-5c0ab5fe5197",
      ResourceVersion: (string) (len=4) "1227",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "acab3e78-1356-4743-bf83-2fbb5ef2d4e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 63  61 62 33 65 37 38 2d 31  |d\":\"acab3e78-1|
              00000090  33 35 36 2d 34 37 34 33  2d 62 66 38 33 2d 32 66  |356-4743-bf83-2f|
              000000a0  62 62 35 65 66 32 64 34  65 30 5c 22 7d 22 3a 7b  |bb5ef2d4e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 33  5c 22 7d 22 3a 7b 22 2e  |.244.4.3\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8m2mj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8m2mj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) (len=10) "10.244.4.3",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.4.3"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838246133,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://44add4467805df8169d6b0579f0f341fb6d3f5c8b35da371397035b48ee42b77",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:08:54.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9441" for this suite. @ 12/15/23 14:08:54.026
• [7.073 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 12/15/23 14:08:54.03
  Dec 15 14:08:54.030: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 14:08:54.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:08:54.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:08:54.039
  STEP: Creating pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288 @ 12/15/23 14:08:54.041
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/23 14:08:56.059
  Dec 15 14:08:56.061: INFO: Initial restart count of pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 is 0
  Dec 15 14:08:56.063: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:08:58.067: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:00.070: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:02.073: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:04.076: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:06.081: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:08.084: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:10.089: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:12.092: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:14.097: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:16.100: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:18.104: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:20.108: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:22.112: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:24.116: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:26.120: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:28.124: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:30.128: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:32.134: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:34.138: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:36.142: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:38.145: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:40.149: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:42.152: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:44.155: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:46.159: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:48.163: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:50.167: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:52.172: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:54.176: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:56.179: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:09:58.183: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:00.188: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:02.192: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:04.196: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:06.200: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:08.204: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:10.209: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:12.213: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:14.216: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:16.219: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:18.223: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:20.227: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:22.231: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:24.236: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:26.240: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:28.245: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:30.250: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:32.255: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:34.258: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:36.263: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:38.267: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:40.272: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:42.276: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:44.279: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:46.284: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:48.288: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:50.292: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:52.298: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:54.303: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:56.307: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:10:58.310: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:00.314: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:02.317: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:04.321: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:06.324: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:08.329: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:10.335: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:12.340: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:14.343: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:16.347: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:18.351: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:20.355: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:22.359: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:24.363: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:26.367: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:28.371: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:30.376: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:32.380: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:34.384: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:36.388: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:38.392: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:40.396: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:42.400: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:44.403: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:46.406: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:48.412: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:50.416: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:52.421: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:54.424: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:56.428: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:11:58.432: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:00.436: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:02.440: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:04.444: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:06.447: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:08.451: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:10.454: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:12.458: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:14.462: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:16.466: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:18.470: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:20.474: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:22.478: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:24.480: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:26.485: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:28.488: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:30.493: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:32.498: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:34.501: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:36.504: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:38.508: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:40.513: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:42.517: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:44.522: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:46.525: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:48.529: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:50.534: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:52.539: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  Dec 15 14:12:54.544: INFO: Get pod test-grpc-5c794fbc-be08-4b06-84e2-3684e47d6f79 in namespace container-probe-288
  STEP: deleting the pod @ 12/15/23 14:12:56.545
  Dec 15 14:12:56.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-288" for this suite. @ 12/15/23 14:12:56.56
• [242.535 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 12/15/23 14:12:56.565
  Dec 15 14:12:56.565: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/23 14:12:56.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:12:56.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:12:56.577
  Dec 15 14:13:00.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8971" for this suite. @ 12/15/23 14:13:00.598
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/15/23 14:13:00.603
  Dec 15 14:13:00.603: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename endpointslice @ 12/15/23 14:13:00.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:13:00.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:13:00.618
  STEP: referencing a single matching pod @ 12/15/23 14:13:05.673
  STEP: referencing matching pods with named port @ 12/15/23 14:13:10.682
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/15/23 14:13:15.688
  STEP: recreating EndpointSlices after they've been deleted @ 12/15/23 14:13:20.694
  Dec 15 14:13:20.711: INFO: EndpointSlice for Service endpointslice-4205/example-named-port not found
  Dec 15 14:13:30.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4205" for this suite. @ 12/15/23 14:13:30.719
• [30.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/15/23 14:13:30.725
  Dec 15 14:13:30.725: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename proxy @ 12/15/23 14:13:30.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:13:30.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:13:30.738
  Dec 15 14:13:30.741: INFO: Creating pod...
  Dec 15 14:13:32.754: INFO: Creating service...
  Dec 15 14:13:32.766: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/pods/agnhost/proxy/some/path/with/DELETE
  Dec 15 14:13:32.770: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 15 14:13:32.770: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/pods/agnhost/proxy/some/path/with/GET
  Dec 15 14:13:32.772: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 15 14:13:32.772: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/pods/agnhost/proxy/some/path/with/HEAD
  Dec 15 14:13:32.774: INFO: http.Client request:HEAD | StatusCode:200
  Dec 15 14:13:32.774: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/pods/agnhost/proxy/some/path/with/OPTIONS
  Dec 15 14:13:32.776: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 15 14:13:32.776: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/pods/agnhost/proxy/some/path/with/PATCH
  Dec 15 14:13:32.778: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 15 14:13:32.778: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/pods/agnhost/proxy/some/path/with/POST
  Dec 15 14:13:32.779: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 15 14:13:32.779: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/pods/agnhost/proxy/some/path/with/PUT
  Dec 15 14:13:32.781: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 15 14:13:32.781: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/services/test-service/proxy/some/path/with/DELETE
  Dec 15 14:13:32.784: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 15 14:13:32.784: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/services/test-service/proxy/some/path/with/GET
  Dec 15 14:13:32.786: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 15 14:13:32.786: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/services/test-service/proxy/some/path/with/HEAD
  Dec 15 14:13:32.788: INFO: http.Client request:HEAD | StatusCode:200
  Dec 15 14:13:32.788: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/services/test-service/proxy/some/path/with/OPTIONS
  Dec 15 14:13:32.791: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 15 14:13:32.791: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/services/test-service/proxy/some/path/with/PATCH
  Dec 15 14:13:32.793: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 15 14:13:32.793: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/services/test-service/proxy/some/path/with/POST
  Dec 15 14:13:32.795: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 15 14:13:32.795: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2697/services/test-service/proxy/some/path/with/PUT
  Dec 15 14:13:32.797: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 15 14:13:32.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2697" for this suite. @ 12/15/23 14:13:32.8
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 12/15/23 14:13:32.803
  Dec 15 14:13:32.803: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 14:13:32.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:13:32.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:13:32.81
  STEP: Setting up server cert @ 12/15/23 14:13:32.818
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 14:13:32.998
  STEP: Deploying the webhook pod @ 12/15/23 14:13:33.003
  STEP: Wait for the deployment to be ready @ 12/15/23 14:13:33.008
  Dec 15 14:13:33.011: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/23 14:13:35.017
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 14:13:35.024
  Dec 15 14:13:36.025: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/15/23 14:13:36.062
  STEP: Creating a configMap that should be mutated @ 12/15/23 14:13:36.071
  STEP: Deleting the collection of validation webhooks @ 12/15/23 14:13:36.087
  STEP: Creating a configMap that should not be mutated @ 12/15/23 14:13:36.108
  Dec 15 14:13:36.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1159" for this suite. @ 12/15/23 14:13:36.136
  STEP: Destroying namespace "webhook-markers-1294" for this suite. @ 12/15/23 14:13:36.139
• [3.340 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/15/23 14:13:36.143
  Dec 15 14:13:36.143: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:13:36.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:13:36.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:13:36.152
  STEP: Creating projection with secret that has name projected-secret-test-1dde7b1e-d9a1-4116-8ca3-97ee86090c9e @ 12/15/23 14:13:36.153
  STEP: Creating a pod to test consume secrets @ 12/15/23 14:13:36.156
  STEP: Saw pod success @ 12/15/23 14:13:40.169
  Dec 15 14:13:40.172: INFO: Trying to get logs from node talos-default-worker-2 pod pod-projected-secrets-2ad34b8b-43be-424e-896e-5d7486a4b7eb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:13:40.178
  Dec 15 14:13:40.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6226" for this suite. @ 12/15/23 14:13:40.187
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 12/15/23 14:13:40.19
  Dec 15 14:13:40.190: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 14:13:40.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:13:40.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:13:40.199
  STEP: Counting existing ResourceQuota @ 12/15/23 14:13:40.2
  STEP: Creating a ResourceQuota @ 12/15/23 14:13:45.205
  STEP: Ensuring resource quota status is calculated @ 12/15/23 14:13:45.209
  STEP: Creating a Pod that fits quota @ 12/15/23 14:13:47.214
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/15/23 14:13:47.226
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/15/23 14:13:49.23
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/15/23 14:13:49.231
  STEP: Ensuring a pod cannot update its resource requirements @ 12/15/23 14:13:49.232
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/15/23 14:13:49.235
  STEP: Deleting the pod @ 12/15/23 14:13:51.239
  STEP: Ensuring resource quota status released the pod usage @ 12/15/23 14:13:51.248
  Dec 15 14:13:53.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6023" for this suite. @ 12/15/23 14:13:53.254
• [13.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/15/23 14:13:53.258
  Dec 15 14:13:53.258: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:13:53.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:13:53.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:13:53.266
  STEP: Creating configMap with name projected-configmap-test-volume-ddde5832-8218-4214-b501-58edf13ba8b2 @ 12/15/23 14:13:53.267
  STEP: Creating a pod to test consume configMaps @ 12/15/23 14:13:53.269
  STEP: Saw pod success @ 12/15/23 14:13:55.279
  Dec 15 14:13:55.281: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-12de3198-9ac4-438c-b5f5-7aa326b44d66 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 14:13:55.292
  Dec 15 14:13:55.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5913" for this suite. @ 12/15/23 14:13:55.31
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 12/15/23 14:13:55.316
  Dec 15 14:13:55.316: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 14:13:55.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:13:55.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:13:55.331
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7223 @ 12/15/23 14:13:55.334
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/15/23 14:13:55.348
  STEP: creating service externalsvc in namespace services-7223 @ 12/15/23 14:13:55.348
  STEP: creating replication controller externalsvc in namespace services-7223 @ 12/15/23 14:13:55.362
  I1215 14:13:55.367253      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-7223, replica count: 2
  I1215 14:13:58.418199      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/15/23 14:13:58.421
  Dec 15 14:13:58.433: INFO: Creating new exec pod
  Dec 15 14:14:00.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7223 exec execpodfjfg2 -- /bin/sh -x -c nslookup clusterip-service.services-7223.svc.cluster.local'
  Dec 15 14:14:00.613: INFO: stderr: "+ nslookup clusterip-service.services-7223.svc.cluster.local\n"
  Dec 15 14:14:00.613: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-7223.svc.cluster.local\tcanonical name = externalsvc.services-7223.svc.cluster.local.\nName:\texternalsvc.services-7223.svc.cluster.local\nAddress: 10.100.198.118\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7223, will wait for the garbage collector to delete the pods @ 12/15/23 14:14:00.613
  Dec 15 14:14:00.674: INFO: Deleting ReplicationController externalsvc took: 5.588924ms
  Dec 15 14:14:00.775: INFO: Terminating ReplicationController externalsvc pods took: 101.203115ms
  Dec 15 14:14:03.484: INFO: Cleaning up the ClusterIP to ExternalName test service
  Dec 15 14:14:03.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7223" for this suite. @ 12/15/23 14:14:03.491
• [8.177 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/15/23 14:14:03.494
  Dec 15 14:14:03.494: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 14:14:03.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:03.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:03.501
  STEP: Creating secret with name secret-test-map-5d1f363b-6082-47e3-82e2-59ee3276265b @ 12/15/23 14:14:03.503
  STEP: Creating a pod to test consume secrets @ 12/15/23 14:14:03.505
  STEP: Saw pod success @ 12/15/23 14:14:05.513
  Dec 15 14:14:05.516: INFO: Trying to get logs from node talos-default-worker-2 pod pod-secrets-c67d3c34-86d9-4f46-ac50-304e1bd540ce container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:14:05.52
  Dec 15 14:14:05.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2929" for this suite. @ 12/15/23 14:14:05.53
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/15/23 14:14:05.534
  Dec 15 14:14:05.534: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pod-network-test @ 12/15/23 14:14:05.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:05.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:05.542
  STEP: Performing setup for networking test in namespace pod-network-test-227 @ 12/15/23 14:14:05.543
  STEP: creating a selector @ 12/15/23 14:14:05.543
  STEP: Creating the service pods in kubernetes @ 12/15/23 14:14:05.543
  Dec 15 14:14:05.543: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/15/23 14:14:27.602
  Dec 15 14:14:29.614: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Dec 15 14:14:29.614: INFO: Breadth first check of 10.244.1.14 on host 172.20.0.5...
  Dec 15 14:14:29.617: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.15:9080/dial?request=hostname&protocol=udp&host=10.244.1.14&port=8081&tries=1'] Namespace:pod-network-test-227 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 14:14:29.618: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 14:14:29.618: INFO: ExecWithOptions: Clientset creation
  Dec 15 14:14:29.618: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-227/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.15%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.14%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 15 14:14:29.697: INFO: Waiting for responses: map[]
  Dec 15 14:14:29.697: INFO: reached 10.244.1.14 after 0/1 tries
  Dec 15 14:14:29.697: INFO: Breadth first check of 10.244.4.9 on host 172.20.0.6...
  Dec 15 14:14:29.700: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.15:9080/dial?request=hostname&protocol=udp&host=10.244.4.9&port=8081&tries=1'] Namespace:pod-network-test-227 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 14:14:29.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 14:14:29.701: INFO: ExecWithOptions: Clientset creation
  Dec 15 14:14:29.701: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-227/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.15%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.4.9%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 15 14:14:29.783: INFO: Waiting for responses: map[]
  Dec 15 14:14:29.783: INFO: reached 10.244.4.9 after 0/1 tries
  Dec 15 14:14:29.783: INFO: Going to retry 0 out of 2 pods....
  Dec 15 14:14:29.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-227" for this suite. @ 12/15/23 14:14:29.788
• [24.264 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 12/15/23 14:14:29.798
  Dec 15 14:14:29.798: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 14:14:29.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:29.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:29.809
  STEP: creating service endpoint-test2 in namespace services-2963 @ 12/15/23 14:14:29.811
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2963 to expose endpoints map[] @ 12/15/23 14:14:29.82
  Dec 15 14:14:29.827: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Dec 15 14:14:30.833: INFO: successfully validated that service endpoint-test2 in namespace services-2963 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2963 @ 12/15/23 14:14:30.833
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2963 to expose endpoints map[pod1:[80]] @ 12/15/23 14:14:32.845
  Dec 15 14:14:32.855: INFO: successfully validated that service endpoint-test2 in namespace services-2963 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/15/23 14:14:32.855
  Dec 15 14:14:32.855: INFO: Creating new exec pod
  Dec 15 14:14:35.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2963 exec execpodbhbdn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 15 14:14:36.016: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 15 14:14:36.016: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 14:14:36.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2963 exec execpodbhbdn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.186.28 80'
  Dec 15 14:14:36.110: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.186.28 80\nConnection to 10.109.186.28 80 port [tcp/http] succeeded!\n"
  Dec 15 14:14:36.110: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2963 @ 12/15/23 14:14:36.11
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2963 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/15/23 14:14:38.122
  Dec 15 14:14:38.135: INFO: successfully validated that service endpoint-test2 in namespace services-2963 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/15/23 14:14:38.135
  Dec 15 14:14:39.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2963 exec execpodbhbdn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 15 14:14:39.252: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 15 14:14:39.252: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 14:14:39.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2963 exec execpodbhbdn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.186.28 80'
  Dec 15 14:14:39.349: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.186.28 80\nConnection to 10.109.186.28 80 port [tcp/http] succeeded!\n"
  Dec 15 14:14:39.349: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2963 @ 12/15/23 14:14:39.349
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2963 to expose endpoints map[pod2:[80]] @ 12/15/23 14:14:39.356
  Dec 15 14:14:39.363: INFO: successfully validated that service endpoint-test2 in namespace services-2963 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/15/23 14:14:39.363
  Dec 15 14:14:40.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2963 exec execpodbhbdn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 15 14:14:40.465: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 15 14:14:40.465: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 14:14:40.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2963 exec execpodbhbdn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.186.28 80'
  Dec 15 14:14:40.581: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.186.28 80\nConnection to 10.109.186.28 80 port [tcp/http] succeeded!\n"
  Dec 15 14:14:40.581: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2963 @ 12/15/23 14:14:40.581
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2963 to expose endpoints map[] @ 12/15/23 14:14:40.592
  Dec 15 14:14:40.600: INFO: successfully validated that service endpoint-test2 in namespace services-2963 exposes endpoints map[]
  Dec 15 14:14:40.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2963" for this suite. @ 12/15/23 14:14:40.623
• [10.830 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 12/15/23 14:14:40.628
  Dec 15 14:14:40.628: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/23 14:14:40.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:40.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:40.639
  STEP: set up a multi version CRD @ 12/15/23 14:14:40.641
  Dec 15 14:14:40.642: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: rename a version @ 12/15/23 14:14:43.821
  STEP: check the new version name is served @ 12/15/23 14:14:43.83
  STEP: check the old version name is removed @ 12/15/23 14:14:44.606
  STEP: check the other version is not changed @ 12/15/23 14:14:45.225
  Dec 15 14:14:47.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9052" for this suite. @ 12/15/23 14:14:47.678
• [7.053 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 12/15/23 14:14:47.681
  Dec 15 14:14:47.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 14:14:47.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:47.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:47.691
  STEP: creating a Service @ 12/15/23 14:14:47.695
  STEP: watching for the Service to be added @ 12/15/23 14:14:47.703
  Dec 15 14:14:47.704: INFO: Found Service test-service-nk8jk in namespace services-8108 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31216}]
  Dec 15 14:14:47.704: INFO: Service test-service-nk8jk created
  STEP: Getting /status @ 12/15/23 14:14:47.704
  Dec 15 14:14:47.707: INFO: Service test-service-nk8jk has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/15/23 14:14:47.707
  STEP: watching for the Service to be patched @ 12/15/23 14:14:47.71
  Dec 15 14:14:47.711: INFO: observed Service test-service-nk8jk in namespace services-8108 with annotations: map[] & LoadBalancer: {[]}
  Dec 15 14:14:47.711: INFO: Found Service test-service-nk8jk in namespace services-8108 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Dec 15 14:14:47.711: INFO: Service test-service-nk8jk has service status patched
  STEP: updating the ServiceStatus @ 12/15/23 14:14:47.711
  Dec 15 14:14:47.716: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/15/23 14:14:47.716
  Dec 15 14:14:47.717: INFO: Observed Service test-service-nk8jk in namespace services-8108 with annotations: map[] & Conditions: {[]}
  Dec 15 14:14:47.717: INFO: Observed event: &Service{ObjectMeta:{test-service-nk8jk  services-8108  d276d594-3f1a-459d-a38f-19d477082699 2622 0 2023-12-15 14:14:47 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-12-15 14:14:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-12-15 14:14:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31216,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.102.169.19,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.102.169.19],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Dec 15 14:14:47.717: INFO: Found Service test-service-nk8jk in namespace services-8108 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 15 14:14:47.717: INFO: Service test-service-nk8jk has service status updated
  STEP: patching the service @ 12/15/23 14:14:47.717
  STEP: watching for the Service to be patched @ 12/15/23 14:14:47.722
  Dec 15 14:14:47.723: INFO: observed Service test-service-nk8jk in namespace services-8108 with labels: map[test-service-static:true]
  Dec 15 14:14:47.724: INFO: observed Service test-service-nk8jk in namespace services-8108 with labels: map[test-service-static:true]
  Dec 15 14:14:47.724: INFO: observed Service test-service-nk8jk in namespace services-8108 with labels: map[test-service-static:true]
  Dec 15 14:14:47.724: INFO: Found Service test-service-nk8jk in namespace services-8108 with labels: map[test-service:patched test-service-static:true]
  Dec 15 14:14:47.724: INFO: Service test-service-nk8jk patched
  STEP: deleting the service @ 12/15/23 14:14:47.724
  STEP: watching for the Service to be deleted @ 12/15/23 14:14:47.733
  Dec 15 14:14:47.733: INFO: Observed event: ADDED
  Dec 15 14:14:47.733: INFO: Observed event: MODIFIED
  Dec 15 14:14:47.733: INFO: Observed event: MODIFIED
  Dec 15 14:14:47.734: INFO: Observed event: MODIFIED
  Dec 15 14:14:47.734: INFO: Found Service test-service-nk8jk in namespace services-8108 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Dec 15 14:14:47.734: INFO: Service test-service-nk8jk deleted
  Dec 15 14:14:47.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8108" for this suite. @ 12/15/23 14:14:47.736
• [0.057 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 12/15/23 14:14:47.739
  Dec 15 14:14:47.739: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 14:14:47.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:47.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:47.748
  STEP: Setting up server cert @ 12/15/23 14:14:47.758
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 14:14:47.861
  STEP: Deploying the webhook pod @ 12/15/23 14:14:47.866
  STEP: Wait for the deployment to be ready @ 12/15/23 14:14:47.873
  Dec 15 14:14:47.878: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/23 14:14:49.885
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 14:14:49.891
  Dec 15 14:14:50.891: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 15 14:14:50.896: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9046-crds.webhook.example.com via the AdmissionRegistration API @ 12/15/23 14:14:51.403
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/15/23 14:14:51.419
  Dec 15 14:14:53.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-654" for this suite. @ 12/15/23 14:14:53.968
  STEP: Destroying namespace "webhook-markers-4450" for this suite. @ 12/15/23 14:14:53.971
• [6.235 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/15/23 14:14:53.974
  Dec 15 14:14:53.974: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename apf @ 12/15/23 14:14:53.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:53.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:53.983
  STEP: getting /apis @ 12/15/23 14:14:53.984
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/15/23 14:14:53.986
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/15/23 14:14:53.986
  STEP: creating @ 12/15/23 14:14:53.987
  STEP: getting @ 12/15/23 14:14:53.993
  STEP: listing @ 12/15/23 14:14:53.994
  STEP: watching @ 12/15/23 14:14:53.995
  Dec 15 14:14:53.995: INFO: starting watch
  STEP: patching @ 12/15/23 14:14:53.996
  STEP: updating @ 12/15/23 14:14:53.998
  Dec 15 14:14:54.001: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 12/15/23 14:14:54.001
  STEP: patching /status @ 12/15/23 14:14:54.003
  STEP: updating /status @ 12/15/23 14:14:54.005
  STEP: deleting @ 12/15/23 14:14:54.008
  STEP: deleting a collection @ 12/15/23 14:14:54.013
  Dec 15 14:14:54.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-224" for this suite. @ 12/15/23 14:14:54.023
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/15/23 14:14:54.026
  Dec 15 14:14:54.026: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/15/23 14:14:54.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:54.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:54.035
  STEP: Creating two CSIDrivers @ 12/15/23 14:14:54.037
  STEP: Getting "inline-driver-514a49a0-cb6e-49b9-b03e-c9026e3718f6" & "inline-driver-f9bf0fdb-0229-4f8a-b37d-f6baf51ced9b" @ 12/15/23 14:14:54.044
  STEP: Patching the CSIDriver "inline-driver-f9bf0fdb-0229-4f8a-b37d-f6baf51ced9b" @ 12/15/23 14:14:54.046
  STEP: Updating the CSIDriver "inline-driver-f9bf0fdb-0229-4f8a-b37d-f6baf51ced9b" @ 12/15/23 14:14:54.049
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9126" @ 12/15/23 14:14:54.053
  STEP: Deleting CSIDriver "inline-driver-514a49a0-cb6e-49b9-b03e-c9026e3718f6" @ 12/15/23 14:14:54.055
  STEP: Confirm deletion of CSIDriver "inline-driver-514a49a0-cb6e-49b9-b03e-c9026e3718f6" @ 12/15/23 14:14:54.058
  STEP: Deleting CSIDriver "inline-driver-f9bf0fdb-0229-4f8a-b37d-f6baf51ced9b" via DeleteCollection @ 12/15/23 14:14:54.059
  STEP: Confirm deletion of CSIDriver "inline-driver-f9bf0fdb-0229-4f8a-b37d-f6baf51ced9b" @ 12/15/23 14:14:54.063
  Dec 15 14:14:54.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9126" for this suite. @ 12/15/23 14:14:54.067
• [0.044 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/15/23 14:14:54.07
  Dec 15 14:14:54.070: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename namespaces @ 12/15/23 14:14:54.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:54.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:54.08
  STEP: Read namespace status @ 12/15/23 14:14:54.081
  Dec 15 14:14:54.083: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/15/23 14:14:54.083
  Dec 15 14:14:54.085: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/15/23 14:14:54.085
  Dec 15 14:14:54.089: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Dec 15 14:14:54.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7618" for this suite. @ 12/15/23 14:14:54.091
• [0.023 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 12/15/23 14:14:54.093
  Dec 15 14:14:54.093: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 14:14:54.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:54.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:54.101
  STEP: Creating configMap that has name configmap-test-emptyKey-7752bb9b-b40d-4468-9c85-2f2934f9cfea @ 12/15/23 14:14:54.103
  Dec 15 14:14:54.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2449" for this suite. @ 12/15/23 14:14:54.105
• [0.015 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 12/15/23 14:14:54.108
  Dec 15 14:14:54.108: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/15/23 14:14:54.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:14:54.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:14:54.116
  Dec 15 14:14:54.117: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 15 14:15:54.117: INFO: Waiting for terminating namespaces to be deleted...
  Dec 15 14:15:54.120: INFO: Starting informer...
  STEP: Starting pods... @ 12/15/23 14:15:54.12
  Dec 15 14:15:54.333: INFO: Pod1 is running on talos-default-worker-1. Tainting Node
  Dec 15 14:15:58.553: INFO: Pod2 is running on talos-default-worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/15/23 14:15:58.553
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/15/23 14:15:58.562
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/15/23 14:15:58.566
  Dec 15 14:16:04.173: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Dec 15 14:16:24.202: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/15/23 14:16:24.211
  Dec 15 14:16:24.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-172" for this suite. @ 12/15/23 14:16:24.219
• [90.117 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/15/23 14:16:24.224
  Dec 15 14:16:24.224: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 14:16:24.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:16:24.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:16:24.241
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/15/23 14:16:24.244
  STEP: Saw pod success @ 12/15/23 14:16:28.263
  Dec 15 14:16:28.265: INFO: Trying to get logs from node talos-default-worker-1 pod pod-c3da3520-e32f-4637-809e-5e42079ffe38 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 14:16:28.271
  Dec 15 14:16:28.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2435" for this suite. @ 12/15/23 14:16:28.281
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 12/15/23 14:16:28.284
  Dec 15 14:16:28.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename job @ 12/15/23 14:16:28.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:16:28.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:16:28.294
  STEP: Creating a suspended job @ 12/15/23 14:16:28.297
  STEP: Patching the Job @ 12/15/23 14:16:28.3
  STEP: Watching for Job to be patched @ 12/15/23 14:16:28.304
  Dec 15 14:16:28.305: INFO: Event ADDED observed for Job e2e-7t9kf in namespace job-3827 with labels: map[e2e-job-label:e2e-7t9kf] and annotations: map[]
  Dec 15 14:16:28.305: INFO: Event MODIFIED found for Job e2e-7t9kf in namespace job-3827 with labels: map[e2e-7t9kf:patched e2e-job-label:e2e-7t9kf] and annotations: map[]
  STEP: Updating the job @ 12/15/23 14:16:28.305
  STEP: Watching for Job to be updated @ 12/15/23 14:16:28.31
  Dec 15 14:16:28.311: INFO: Event MODIFIED found for Job e2e-7t9kf in namespace job-3827 with labels: map[e2e-7t9kf:patched e2e-job-label:e2e-7t9kf] and annotations: map[updated:true]
  Dec 15 14:16:28.311: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/15/23 14:16:28.311
  Dec 15 14:16:28.312: INFO: Job: e2e-7t9kf as labels: map[e2e-7t9kf:patched e2e-job-label:e2e-7t9kf]
  STEP: Waiting for job to complete @ 12/15/23 14:16:28.312
  STEP: Delete a job collection with a labelselector @ 12/15/23 14:16:34.316
  STEP: Watching for Job to be deleted @ 12/15/23 14:16:34.323
  Dec 15 14:16:34.325: INFO: Event MODIFIED observed for Job e2e-7t9kf in namespace job-3827 with labels: map[e2e-7t9kf:patched e2e-job-label:e2e-7t9kf] and annotations: map[updated:true]
  Dec 15 14:16:34.325: INFO: Event MODIFIED observed for Job e2e-7t9kf in namespace job-3827 with labels: map[e2e-7t9kf:patched e2e-job-label:e2e-7t9kf] and annotations: map[updated:true]
  Dec 15 14:16:34.325: INFO: Event MODIFIED observed for Job e2e-7t9kf in namespace job-3827 with labels: map[e2e-7t9kf:patched e2e-job-label:e2e-7t9kf] and annotations: map[updated:true]
  Dec 15 14:16:34.325: INFO: Event MODIFIED observed for Job e2e-7t9kf in namespace job-3827 with labels: map[e2e-7t9kf:patched e2e-job-label:e2e-7t9kf] and annotations: map[updated:true]
  Dec 15 14:16:34.325: INFO: Event MODIFIED observed for Job e2e-7t9kf in namespace job-3827 with labels: map[e2e-7t9kf:patched e2e-job-label:e2e-7t9kf] and annotations: map[updated:true]
  Dec 15 14:16:34.325: INFO: Event DELETED found for Job e2e-7t9kf in namespace job-3827 with labels: map[e2e-7t9kf:patched e2e-job-label:e2e-7t9kf] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/15/23 14:16:34.325
  Dec 15 14:16:34.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3827" for this suite. @ 12/15/23 14:16:34.333
• [6.055 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 12/15/23 14:16:34.34
  Dec 15 14:16:34.340: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 14:16:34.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:16:34.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:16:34.356
  Dec 15 14:17:34.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2432" for this suite. @ 12/15/23 14:17:34.367
• [60.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/15/23 14:17:34.376
  Dec 15 14:17:34.376: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 14:17:34.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:17:34.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:17:34.384
  STEP: Creating a pod to test downward api env vars @ 12/15/23 14:17:34.385
  STEP: Saw pod success @ 12/15/23 14:17:38.397
  Dec 15 14:17:38.400: INFO: Trying to get logs from node talos-default-worker-2 pod downward-api-6f3c5847-859a-4ca1-ab15-9bbf21d92017 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/23 14:17:38.412
  Dec 15 14:17:38.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4458" for this suite. @ 12/15/23 14:17:38.427
• [4.056 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 12/15/23 14:17:38.432
  Dec 15 14:17:38.432: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-pred @ 12/15/23 14:17:38.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:17:38.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:17:38.45
  Dec 15 14:17:38.452: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 15 14:17:38.459: INFO: Waiting for terminating namespaces to be deleted...
  Dec 15 14:17:38.462: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-1 before test
  Dec 15 14:17:38.467: INFO: test-webserver-92b4daef-3f21-4298-afb1-9bbfb1bc4811 from container-probe-2432 started at 2023-12-15 14:16:34 +0000 UTC (1 container statuses recorded)
  Dec 15 14:17:38.467: INFO: 	Container test-webserver ready: false, restart count 0
  Dec 15 14:17:38.467: INFO: kube-flannel-4fb48 from kube-system started at 2023-12-15 14:06:32 +0000 UTC (1 container statuses recorded)
  Dec 15 14:17:38.467: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 15 14:17:38.467: INFO: kube-proxy-87ntc from kube-system started at 2023-12-15 14:06:32 +0000 UTC (1 container statuses recorded)
  Dec 15 14:17:38.467: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 15 14:17:38.467: INFO: sonobuoy from sonobuoy started at 2023-12-15 14:07:57 +0000 UTC (1 container statuses recorded)
  Dec 15 14:17:38.467: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 15 14:17:38.467: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-2 before test
  Dec 15 14:17:38.472: INFO: kube-flannel-kq846 from kube-system started at 2023-12-15 14:06:34 +0000 UTC (1 container statuses recorded)
  Dec 15 14:17:38.472: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 15 14:17:38.472: INFO: kube-proxy-66gqq from kube-system started at 2023-12-15 14:06:34 +0000 UTC (1 container statuses recorded)
  Dec 15 14:17:38.472: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 15 14:17:38.472: INFO: sonobuoy-e2e-job-708fade0dc9c4cad from sonobuoy started at 2023-12-15 14:08:09 +0000 UTC (2 container statuses recorded)
  Dec 15 14:17:38.472: INFO: 	Container e2e ready: true, restart count 0
  Dec 15 14:17:38.472: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  STEP: verifying the node has the label node talos-default-worker-1 @ 12/15/23 14:17:38.481
  STEP: verifying the node has the label node talos-default-worker-2 @ 12/15/23 14:17:38.487
  Dec 15 14:17:38.495: INFO: Pod test-webserver-92b4daef-3f21-4298-afb1-9bbfb1bc4811 requesting resource cpu=0m on Node talos-default-worker-1
  Dec 15 14:17:38.495: INFO: Pod kube-flannel-4fb48 requesting resource cpu=100m on Node talos-default-worker-1
  Dec 15 14:17:38.495: INFO: Pod kube-flannel-kq846 requesting resource cpu=100m on Node talos-default-worker-2
  Dec 15 14:17:38.495: INFO: Pod kube-proxy-66gqq requesting resource cpu=0m on Node talos-default-worker-2
  Dec 15 14:17:38.495: INFO: Pod kube-proxy-87ntc requesting resource cpu=0m on Node talos-default-worker-1
  Dec 15 14:17:38.495: INFO: Pod sonobuoy requesting resource cpu=0m on Node talos-default-worker-1
  Dec 15 14:17:38.495: INFO: Pod sonobuoy-e2e-job-708fade0dc9c4cad requesting resource cpu=0m on Node talos-default-worker-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/15/23 14:17:38.495
  Dec 15 14:17:38.495: INFO: Creating a pod which consumes cpu=2695m on Node talos-default-worker-1
  Dec 15 14:17:38.500: INFO: Creating a pod which consumes cpu=2695m on Node talos-default-worker-2
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/15/23 14:17:40.51
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2a6cd41d-60cb-49d3-a5cd-c514fb4f552d.17a10706792dfce0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5030/filler-pod-2a6cd41d-60cb-49d3-a5cd-c514fb4f552d to talos-default-worker-1] @ 12/15/23 14:17:40.514
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2a6cd41d-60cb-49d3-a5cd-c514fb4f552d.17a10706900584c5], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/15/23 14:17:40.514
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2a6cd41d-60cb-49d3-a5cd-c514fb4f552d.17a1070690428087], Reason = [Created], Message = [Created container filler-pod-2a6cd41d-60cb-49d3-a5cd-c514fb4f552d] @ 12/15/23 14:17:40.514
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2a6cd41d-60cb-49d3-a5cd-c514fb4f552d.17a1070693fc5a4e], Reason = [Started], Message = [Started container filler-pod-2a6cd41d-60cb-49d3-a5cd-c514fb4f552d] @ 12/15/23 14:17:40.514
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ddcd2e92-9ee3-4dfc-9777-aefdf5e32066.17a10706795dee54], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5030/filler-pod-ddcd2e92-9ee3-4dfc-9777-aefdf5e32066 to talos-default-worker-2] @ 12/15/23 14:17:40.514
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ddcd2e92-9ee3-4dfc-9777-aefdf5e32066.17a107069025cea7], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 12/15/23 14:17:40.514
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ddcd2e92-9ee3-4dfc-9777-aefdf5e32066.17a10706a2987a46], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 309ms (309ms including waiting)] @ 12/15/23 14:17:40.514
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ddcd2e92-9ee3-4dfc-9777-aefdf5e32066.17a10706a2d82f7f], Reason = [Created], Message = [Created container filler-pod-ddcd2e92-9ee3-4dfc-9777-aefdf5e32066] @ 12/15/23 14:17:40.514
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ddcd2e92-9ee3-4dfc-9777-aefdf5e32066.17a10706a901bb00], Reason = [Started], Message = [Started container filler-pod-ddcd2e92-9ee3-4dfc-9777-aefdf5e32066] @ 12/15/23 14:17:40.514
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17a10706f1645a0e], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 Insufficient cpu, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/5 nodes are available: 2 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling.] @ 12/15/23 14:17:40.61
  STEP: removing the label node off the node talos-default-worker-1 @ 12/15/23 14:17:41.524
  STEP: verifying the node doesn't have the label node @ 12/15/23 14:17:41.532
  STEP: removing the label node off the node talos-default-worker-2 @ 12/15/23 14:17:41.536
  STEP: verifying the node doesn't have the label node @ 12/15/23 14:17:41.548
  Dec 15 14:17:41.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5030" for this suite. @ 12/15/23 14:17:41.557
• [3.131 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 12/15/23 14:17:41.568
  Dec 15 14:17:41.568: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 14:17:41.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:17:41.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:17:41.589
  STEP: Setting up server cert @ 12/15/23 14:17:41.61
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 14:17:41.858
  STEP: Deploying the webhook pod @ 12/15/23 14:17:41.864
  STEP: Wait for the deployment to be ready @ 12/15/23 14:17:41.872
  Dec 15 14:17:41.877: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/23 14:17:43.885
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 14:17:43.896
  Dec 15 14:17:44.896: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 15 14:17:44.901: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4138-crds.webhook.example.com via the AdmissionRegistration API @ 12/15/23 14:17:45.407
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/15/23 14:17:45.415
  Dec 15 14:17:47.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6383" for this suite. @ 12/15/23 14:17:47.978
  STEP: Destroying namespace "webhook-markers-9079" for this suite. @ 12/15/23 14:17:47.984
• [6.423 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/15/23 14:17:47.99
  Dec 15 14:17:47.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 14:17:47.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:17:48.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:17:48.008
  STEP: Creating secret with name secret-test-2f8666f2-9ee6-4630-81e1-278df484e169 @ 12/15/23 14:17:48.011
  STEP: Creating a pod to test consume secrets @ 12/15/23 14:17:48.015
  STEP: Saw pod success @ 12/15/23 14:17:52.033
  Dec 15 14:17:52.035: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-ab4e5a0b-2734-4bdc-9a57-67c4532a145b container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:17:52.04
  Dec 15 14:17:52.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9646" for this suite. @ 12/15/23 14:17:52.053
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/15/23 14:17:52.057
  Dec 15 14:17:52.057: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename deployment @ 12/15/23 14:17:52.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:17:52.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:17:52.069
  STEP: creating a Deployment @ 12/15/23 14:17:52.074
  STEP: waiting for Deployment to be created @ 12/15/23 14:17:52.077
  STEP: waiting for all Replicas to be Ready @ 12/15/23 14:17:52.078
  Dec 15 14:17:52.079: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 15 14:17:52.079: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 15 14:17:52.085: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 15 14:17:52.085: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 15 14:17:52.094: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 15 14:17:52.094: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 15 14:17:52.108: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 15 14:17:52.109: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 15 14:17:52.718: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Dec 15 14:17:52.718: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Dec 15 14:17:53.344: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/15/23 14:17:53.344
  Dec 15 14:17:53.351: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/15/23 14:17:53.351
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 0
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:53.352: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:53.355: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:53.355: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:53.361: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:53.361: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:53.367: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:53.367: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:53.373: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:53.373: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:54.363: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:54.363: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:54.380: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  STEP: listing Deployments @ 12/15/23 14:17:54.38
  Dec 15 14:17:54.384: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/15/23 14:17:54.384
  Dec 15 14:17:54.395: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/15/23 14:17:54.395
  Dec 15 14:17:54.400: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 15 14:17:54.402: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 15 14:17:54.414: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 15 14:17:54.427: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 15 14:17:54.432: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 15 14:17:55.385: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 15 14:17:55.393: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 15 14:17:55.405: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 15 14:17:55.410: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 15 14:17:57.739: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/15/23 14:17:57.754
  STEP: fetching the DeploymentStatus @ 12/15/23 14:17:57.762
  Dec 15 14:17:57.767: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:57.767: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:57.767: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:57.767: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:57.767: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 1
  Dec 15 14:17:57.767: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:57.767: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:57.767: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:57.768: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 2
  Dec 15 14:17:57.768: INFO: observed Deployment test-deployment in namespace deployment-5486 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/15/23 14:17:57.768
  Dec 15 14:17:57.776: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.777: INFO: observed event type MODIFIED
  Dec 15 14:17:57.778: INFO: observed event type MODIFIED
  Dec 15 14:17:57.778: INFO: observed event type MODIFIED
  Dec 15 14:17:57.780: INFO: Log out all the ReplicaSets if there is no deployment created
  Dec 15 14:17:57.782: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5486",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d0eb2f9-2f22-40ea-b0c3-96518b1af479",
      ResourceVersion: (string) (len=4) "3703",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246673,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "aafc3798-e307-4978-b3cc-ea215b146736",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 61 66 63  33 37 39 38 2d 65 33 30  |":\"aafc3798-e30|
              00000130  37 2d 34 39 37 38 2d 62  33 63 63 2d 65 61 32 31  |7-4978-b3cc-ea21|
              00000140  35 62 31 34 36 37 33 36  5c 22 7d 22 3a 7b 7d 7d  |5b146736\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 15 14:17:57.786: INFO: pod: "test-deployment-64fd565c98-zsvfc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-zsvfc",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5486",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f875e7d-e52b-4209-8277-cead5385de2c",
      ResourceVersion: (string) (len=4) "3698",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246673,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246679,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "4d0eb2f9-2f22-40ea-b0c3-96518b1af479",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 64 30 65 62 32 66 39  |uid\":\"4d0eb2f9|
              000000a0  2d 32 66 32 32 2d 34 30  65 61 2d 62 30 63 33 2d  |-2f22-40ea-b0c3-|
              000000b0  39 36 35 31 38 62 31 61  66 34 37 39 5c 22 7d 22  |96518b1af479\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  30 5c 22 7d 22 3a 7b 22  |.244.1.30\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hmvjw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hmvjw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=11) "10.244.1.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246673,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838246673,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://51b2c63fd3e5c5003aa8b33c4deb2777031057132a9857ad3b75c83bddfbc3e0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 15 14:17:57.789: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5486",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aaff9678-d441-4a15-8465-04159cac53c3",
      ResourceVersion: (string) (len=4) "3608",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246672,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "aafc3798-e307-4978-b3cc-ea215b146736",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 61 66 63  33 37 39 38 2d 65 33 30  |":\"aafc3798-e30|
              00000130  37 2d 34 39 37 38 2d 62  33 63 63 2d 65 61 32 31  |7-4978-b3cc-ea21|
              00000140  35 62 31 34 36 37 33 36  5c 22 7d 22 3a 7b 7d 7d  |5b146736\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 15 14:17:57.794: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5486",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68c1aa0a-5e16-4e55-bab7-f1092ccd8c7d",
      ResourceVersion: (string) (len=4) "3694",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "aafc3798-e307-4978-b3cc-ea215b146736",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 61 66 63  33 37 39 38 2d 65 33 30  |":\"aafc3798-e30|
              00000130  37 2d 34 39 37 38 2d 62  33 63 63 2d 65 61 32 31  |7-4978-b3cc-ea21|
              00000140  35 62 31 34 36 37 33 36  5c 22 7d 22 3a 7b 7d 7d  |5b146736\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 15 14:17:57.800: INFO: pod: "test-deployment-79ff746c4-fct77":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-fct77",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5486",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e8df38d-ce82-4232-8d3b-0a8ded94ad51",
      ResourceVersion: (string) (len=4) "3711",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246675,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "68c1aa0a-5e16-4e55-bab7-f1092ccd8c7d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 38 63 31 61 61 30 61  |uid\":\"68c1aa0a|
              000000a0  2d 35 65 31 36 2d 34 65  35 35 2d 62 61 62 37 2d  |-5e16-4e55-bab7-|
              000000b0  66 31 30 39 32 63 63 64  38 63 37 64 5c 22 7d 22  |f1092ccd8c7d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 31  36 5c 22 7d 22 3a 7b 22  |.244.4.16\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g89k8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g89k8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) (len=11) "10.244.4.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246675,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838246677,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dea2a70525a3b5aa8661a52b695038cf5e5e5cc4559642e358a145f4148f3895",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 15 14:17:57.803: INFO: pod: "test-deployment-79ff746c4-wt997":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-wt997",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5486",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b3c2ff3-d6ec-4d3e-9423-cfeab08754a6",
      ResourceVersion: (string) (len=4) "3712",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "68c1aa0a-5e16-4e55-bab7-f1092ccd8c7d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 38 63 31 61 61 30 61  |uid\":\"68c1aa0a|
              000000a0  2d 35 65 31 36 2d 34 65  35 35 2d 62 61 62 37 2d  |-5e16-4e55-bab7-|
              000000b0  66 31 30 39 32 63 63 64  38 63 37 64 5c 22 7d 22  |f1092ccd8c7d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  31 5c 22 7d 22 3a 7b 22  |.244.1.31\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n847g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n847g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838246674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=11) "10.244.1.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838246674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838246674,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://526bcee6316b72b5e1b2c4cc7701e20ae5941d90d30c89e490ed677e2d19783b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 15 14:17:57.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5486" for this suite. @ 12/15/23 14:17:57.808
• [5.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/15/23 14:17:57.813
  Dec 15 14:17:57.813: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 14:17:57.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:17:57.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:17:57.824
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 14:17:57.826
  STEP: Saw pod success @ 12/15/23 14:17:59.838
  Dec 15 14:17:59.840: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-b44ee677-d8a5-423e-a981-78ade0e17174 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 14:17:59.843
  Dec 15 14:17:59.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5278" for this suite. @ 12/15/23 14:17:59.852
• [2.041 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/15/23 14:17:59.855
  Dec 15 14:17:59.855: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:17:59.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:17:59.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:17:59.864
  STEP: Creating configMap with name projected-configmap-test-volume-21c1a221-b462-4779-9f12-d3aad02cf705 @ 12/15/23 14:17:59.865
  STEP: Creating a pod to test consume configMaps @ 12/15/23 14:17:59.867
  STEP: Saw pod success @ 12/15/23 14:18:03.877
  Dec 15 14:18:03.879: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-9a112a6d-cf6b-463a-89cc-3f36f2da2744 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 14:18:03.882
  Dec 15 14:18:03.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5233" for this suite. @ 12/15/23 14:18:03.89
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 12/15/23 14:18:03.893
  Dec 15 14:18:03.893: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 14:18:03.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:18:03.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:18:03.902
  STEP: Creating pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166 @ 12/15/23 14:18:03.904
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/23 14:18:05.914
  Dec 15 14:18:05.917: INFO: Initial restart count of pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca is 0
  Dec 15 14:18:05.922: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:07.927: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:09.932: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:11.937: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:13.941: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:15.946: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:17.951: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:19.956: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:21.960: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:23.965: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:25.969: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:25.969: INFO: Restart count of pod container-probe-1166/liveness-036c3156-4549-4df4-94d7-853e8ab186ca is now 1 (20.052120074s elapsed)
  Dec 15 14:18:27.974: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:29.978: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:31.982: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:33.986: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:35.991: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:37.995: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:39.999: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:42.003: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:44.005: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:46.008: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:46.008: INFO: Restart count of pod container-probe-1166/liveness-036c3156-4549-4df4-94d7-853e8ab186ca is now 2 (40.091336347s elapsed)
  Dec 15 14:18:48.013: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:50.019: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:52.024: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:54.027: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:56.032: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:18:58.036: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:00.041: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:02.044: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:04.047: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:06.052: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:06.052: INFO: Restart count of pod container-probe-1166/liveness-036c3156-4549-4df4-94d7-853e8ab186ca is now 3 (1m0.135123196s elapsed)
  Dec 15 14:19:08.056: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:10.061: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:12.065: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:14.069: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:16.073: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:18.076: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:20.079: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:22.083: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:24.086: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:26.089: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:26.089: INFO: Restart count of pod container-probe-1166/liveness-036c3156-4549-4df4-94d7-853e8ab186ca is now 4 (1m20.17164974s elapsed)
  Dec 15 14:19:28.092: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:30.097: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:32.100: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:34.104: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:36.108: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:38.112: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:40.115: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:42.119: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:44.123: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:46.128: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:48.132: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:50.136: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:52.141: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:54.146: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:56.149: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:19:58.154: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:00.158: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:02.161: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:04.164: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:06.168: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:08.173: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:10.178: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:12.182: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:14.187: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:16.190: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:18.195: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:20.200: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:22.203: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:24.208: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:26.212: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:28.217: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:30.221: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:32.224: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:34.228: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:36.233: INFO: Get pod liveness-036c3156-4549-4df4-94d7-853e8ab186ca in namespace container-probe-1166
  Dec 15 14:20:36.233: INFO: Restart count of pod container-probe-1166/liveness-036c3156-4549-4df4-94d7-853e8ab186ca is now 5 (2m30.316017612s elapsed)
  STEP: deleting the pod @ 12/15/23 14:20:36.233
  Dec 15 14:20:36.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1166" for this suite. @ 12/15/23 14:20:36.246
• [152.357 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/15/23 14:20:36.251
  Dec 15 14:20:36.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename discovery @ 12/15/23 14:20:36.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:20:36.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:20:36.27
  STEP: Setting up server cert @ 12/15/23 14:20:36.273
  STEP: Requesting APIResourceList from "/api/v1" @ 12/15/23 14:20:36.461
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/15/23 14:20:36.463
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/15/23 14:20:36.464
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/15/23 14:20:36.465
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/15/23 14:20:36.466
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/15/23 14:20:36.467
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/15/23 14:20:36.468
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/15/23 14:20:36.469
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/15/23 14:20:36.47
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/15/23 14:20:36.471
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/15/23 14:20:36.472
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/15/23 14:20:36.472
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/15/23 14:20:36.473
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/15/23 14:20:36.474
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/15/23 14:20:36.475
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/15/23 14:20:36.476
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/15/23 14:20:36.476
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/15/23 14:20:36.477
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/15/23 14:20:36.478
  Dec 15 14:20:36.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-100" for this suite. @ 12/15/23 14:20:36.482
• [0.236 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 12/15/23 14:20:36.487
  Dec 15 14:20:36.487: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/15/23 14:20:36.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:20:36.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:20:36.503
  STEP: create the container to handle the HTTPGet hook request. @ 12/15/23 14:20:36.508
  STEP: create the pod with lifecycle hook @ 12/15/23 14:20:38.521
  STEP: delete the pod with lifecycle hook @ 12/15/23 14:20:40.534
  STEP: check prestop hook @ 12/15/23 14:20:42.547
  Dec 15 14:20:42.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1078" for this suite. @ 12/15/23 14:20:42.565
• [6.083 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/15/23 14:20:42.571
  Dec 15 14:20:42.571: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:20:42.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:20:42.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:20:42.588
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 14:20:42.59
  STEP: Saw pod success @ 12/15/23 14:20:46.609
  Dec 15 14:20:46.612: INFO: Trying to get logs from node talos-default-worker-2 pod downwardapi-volume-e90422dd-4029-4bb4-901b-ab83b4fed780 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 14:20:46.622
  Dec 15 14:20:46.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9145" for this suite. @ 12/15/23 14:20:46.636
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/15/23 14:20:46.64
  Dec 15 14:20:46.640: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 14:20:46.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:20:46.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:20:46.654
  STEP: Creating configMap with name configmap-test-volume-442f5f84-6813-4723-9731-79fbaa451354 @ 12/15/23 14:20:46.656
  STEP: Creating a pod to test consume configMaps @ 12/15/23 14:20:46.66
  STEP: Saw pod success @ 12/15/23 14:20:50.676
  Dec 15 14:20:50.678: INFO: Trying to get logs from node talos-default-worker-2 pod pod-configmaps-9552eb77-a508-4ae5-9f03-c3729a89bedb container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 14:20:50.681
  Dec 15 14:20:50.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7875" for this suite. @ 12/15/23 14:20:50.689
• [4.051 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 12/15/23 14:20:50.692
  Dec 15 14:20:50.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 14:20:50.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:20:50.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:20:50.701
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/15/23 14:20:50.702
  Dec 15 14:20:50.702: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-567 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 15 14:20:50.739: INFO: stderr: ""
  Dec 15 14:20:50.739: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/15/23 14:20:50.739
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/15/23 14:20:55.79
  Dec 15 14:20:55.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-567 get pod e2e-test-httpd-pod -o json'
  Dec 15 14:20:55.856: INFO: stderr: ""
  Dec 15 14:20:55.856: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-12-15T14:20:50Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-567\",\n        \"resourceVersion\": \"4342\",\n        \"uid\": \"bbe979b3-320a-406b-a3fa-207c11f92251\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qzmqk\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"talos-default-worker-1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-qzmqk\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-15T14:20:51Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-15T14:20:50Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-15T14:20:51Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-15T14:20:51Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-15T14:20:50Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://947e4e7d3de36d33e9599758688524f3e84985a53811c1e9928451836f1da44d\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-12-15T14:20:51Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.20.0.5\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.20.0.5\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.37\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.37\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-12-15T14:20:50Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/15/23 14:20:55.856
  Dec 15 14:20:55.856: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-567 replace -f -'
  Dec 15 14:20:55.945: INFO: stderr: ""
  Dec 15 14:20:55.945: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/15/23 14:20:55.945
  Dec 15 14:20:55.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-567 delete pods e2e-test-httpd-pod'
  Dec 15 14:20:57.660: INFO: stderr: ""
  Dec 15 14:20:57.660: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 15 14:20:57.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-567" for this suite. @ 12/15/23 14:20:57.663
• [6.974 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 12/15/23 14:20:57.666
  Dec 15 14:20:57.666: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/23 14:20:57.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:20:57.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:20:57.677
  Dec 15 14:20:57.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8959" for this suite. @ 12/15/23 14:20:57.689
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/15/23 14:20:57.693
  Dec 15 14:20:57.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename gc @ 12/15/23 14:20:57.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:20:57.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:20:57.702
  STEP: create the rc1 @ 12/15/23 14:20:57.705
  STEP: create the rc2 @ 12/15/23 14:20:57.708
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/15/23 14:21:03.714
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/15/23 14:21:03.888
  STEP: wait for the rc to be deleted @ 12/15/23 14:21:03.891
  Dec 15 14:21:08.901: INFO: 72 pods remaining
  Dec 15 14:21:08.901: INFO: 72 pods has nil DeletionTimestamp
  Dec 15 14:21:08.901: INFO: 
  STEP: Gathering metrics @ 12/15/23 14:21:13.899
  Dec 15 14:21:13.937: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 15 14:21:13.937: INFO: Deleting pod "simpletest-rc-to-be-deleted-2jvlq" in namespace "gc-7658"
  Dec 15 14:21:13.942: INFO: Deleting pod "simpletest-rc-to-be-deleted-2qkt5" in namespace "gc-7658"
  Dec 15 14:21:13.947: INFO: Deleting pod "simpletest-rc-to-be-deleted-2w24x" in namespace "gc-7658"
  Dec 15 14:21:13.954: INFO: Deleting pod "simpletest-rc-to-be-deleted-48twl" in namespace "gc-7658"
  Dec 15 14:21:13.958: INFO: Deleting pod "simpletest-rc-to-be-deleted-4rswv" in namespace "gc-7658"
  Dec 15 14:21:13.965: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tfrb" in namespace "gc-7658"
  Dec 15 14:21:13.971: INFO: Deleting pod "simpletest-rc-to-be-deleted-5kxnj" in namespace "gc-7658"
  Dec 15 14:21:13.977: INFO: Deleting pod "simpletest-rc-to-be-deleted-5lxkm" in namespace "gc-7658"
  Dec 15 14:21:13.983: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mwkh" in namespace "gc-7658"
  Dec 15 14:21:13.990: INFO: Deleting pod "simpletest-rc-to-be-deleted-5phpx" in namespace "gc-7658"
  Dec 15 14:21:13.997: INFO: Deleting pod "simpletest-rc-to-be-deleted-6r7l5" in namespace "gc-7658"
  Dec 15 14:21:14.004: INFO: Deleting pod "simpletest-rc-to-be-deleted-6rzqb" in namespace "gc-7658"
  Dec 15 14:21:14.012: INFO: Deleting pod "simpletest-rc-to-be-deleted-75wxm" in namespace "gc-7658"
  Dec 15 14:21:14.019: INFO: Deleting pod "simpletest-rc-to-be-deleted-76ts2" in namespace "gc-7658"
  Dec 15 14:21:14.026: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bslq" in namespace "gc-7658"
  Dec 15 14:21:14.035: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mlnq" in namespace "gc-7658"
  Dec 15 14:21:14.043: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mxx8" in namespace "gc-7658"
  Dec 15 14:21:14.051: INFO: Deleting pod "simpletest-rc-to-be-deleted-7t8gd" in namespace "gc-7658"
  Dec 15 14:21:14.059: INFO: Deleting pod "simpletest-rc-to-be-deleted-8ctlq" in namespace "gc-7658"
  Dec 15 14:21:14.066: INFO: Deleting pod "simpletest-rc-to-be-deleted-8r7jz" in namespace "gc-7658"
  Dec 15 14:21:14.073: INFO: Deleting pod "simpletest-rc-to-be-deleted-8sdtf" in namespace "gc-7658"
  Dec 15 14:21:14.080: INFO: Deleting pod "simpletest-rc-to-be-deleted-9bjvs" in namespace "gc-7658"
  Dec 15 14:21:14.087: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mngm" in namespace "gc-7658"
  Dec 15 14:21:14.094: INFO: Deleting pod "simpletest-rc-to-be-deleted-9n9vn" in namespace "gc-7658"
  Dec 15 14:21:14.102: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wqkc" in namespace "gc-7658"
  Dec 15 14:21:14.108: INFO: Deleting pod "simpletest-rc-to-be-deleted-bcdjw" in namespace "gc-7658"
  Dec 15 14:21:14.116: INFO: Deleting pod "simpletest-rc-to-be-deleted-bg7nl" in namespace "gc-7658"
  Dec 15 14:21:14.123: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgkbr" in namespace "gc-7658"
  Dec 15 14:21:14.130: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhb5m" in namespace "gc-7658"
  Dec 15 14:21:14.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-bk2wt" in namespace "gc-7658"
  Dec 15 14:21:14.141: INFO: Deleting pod "simpletest-rc-to-be-deleted-bmb6j" in namespace "gc-7658"
  Dec 15 14:21:14.148: INFO: Deleting pod "simpletest-rc-to-be-deleted-bndnf" in namespace "gc-7658"
  Dec 15 14:21:14.156: INFO: Deleting pod "simpletest-rc-to-be-deleted-bscg8" in namespace "gc-7658"
  Dec 15 14:21:14.164: INFO: Deleting pod "simpletest-rc-to-be-deleted-bzn9c" in namespace "gc-7658"
  Dec 15 14:21:14.171: INFO: Deleting pod "simpletest-rc-to-be-deleted-cdrbg" in namespace "gc-7658"
  Dec 15 14:21:14.176: INFO: Deleting pod "simpletest-rc-to-be-deleted-cph9l" in namespace "gc-7658"
  Dec 15 14:21:14.182: INFO: Deleting pod "simpletest-rc-to-be-deleted-cpjs6" in namespace "gc-7658"
  Dec 15 14:21:14.189: INFO: Deleting pod "simpletest-rc-to-be-deleted-crqr4" in namespace "gc-7658"
  Dec 15 14:21:14.198: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwnzf" in namespace "gc-7658"
  Dec 15 14:21:14.204: INFO: Deleting pod "simpletest-rc-to-be-deleted-czsv6" in namespace "gc-7658"
  Dec 15 14:21:14.211: INFO: Deleting pod "simpletest-rc-to-be-deleted-d44w6" in namespace "gc-7658"
  Dec 15 14:21:14.218: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5cqj" in namespace "gc-7658"
  Dec 15 14:21:14.227: INFO: Deleting pod "simpletest-rc-to-be-deleted-dq6nk" in namespace "gc-7658"
  Dec 15 14:21:14.234: INFO: Deleting pod "simpletest-rc-to-be-deleted-f46mx" in namespace "gc-7658"
  Dec 15 14:21:14.242: INFO: Deleting pod "simpletest-rc-to-be-deleted-fjzpn" in namespace "gc-7658"
  Dec 15 14:21:14.248: INFO: Deleting pod "simpletest-rc-to-be-deleted-fsv6w" in namespace "gc-7658"
  Dec 15 14:21:14.255: INFO: Deleting pod "simpletest-rc-to-be-deleted-g292v" in namespace "gc-7658"
  Dec 15 14:21:14.261: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4kw9" in namespace "gc-7658"
  Dec 15 14:21:14.268: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfdtg" in namespace "gc-7658"
  Dec 15 14:21:14.275: INFO: Deleting pod "simpletest-rc-to-be-deleted-gjw5m" in namespace "gc-7658"
  Dec 15 14:21:14.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7658" for this suite. @ 12/15/23 14:21:14.286
• [16.597 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/15/23 14:21:14.29
  Dec 15 14:21:14.290: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:21:14.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:21:14.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:21:14.319
  STEP: Creating projection with secret that has name projected-secret-test-map-2b39fda3-e81e-44b7-a844-7ada8c2e3621 @ 12/15/23 14:21:14.336
  STEP: Creating a pod to test consume secrets @ 12/15/23 14:21:14.339
  STEP: Saw pod success @ 12/15/23 14:21:18.353
  Dec 15 14:21:18.355: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-secrets-5c25722a-1d23-465b-965f-41d310776a63 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:21:18.358
  Dec 15 14:21:18.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9353" for this suite. @ 12/15/23 14:21:18.367
• [4.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/15/23 14:21:18.371
  Dec 15 14:21:18.371: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/23 14:21:18.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:21:18.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:21:18.382
  Dec 15 14:21:18.385: INFO: Got root ca configmap in namespace "svcaccounts-516"
  Dec 15 14:21:18.388: INFO: Deleted root ca configmap in namespace "svcaccounts-516"
  STEP: waiting for a new root ca configmap created @ 12/15/23 14:21:18.889
  Dec 15 14:21:18.892: INFO: Recreated root ca configmap in namespace "svcaccounts-516"
  Dec 15 14:21:18.896: INFO: Updated root ca configmap in namespace "svcaccounts-516"
  STEP: waiting for the root ca configmap reconciled @ 12/15/23 14:21:19.397
  Dec 15 14:21:19.401: INFO: Reconciled root ca configmap in namespace "svcaccounts-516"
  Dec 15 14:21:19.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-516" for this suite. @ 12/15/23 14:21:19.407
• [1.042 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 12/15/23 14:21:19.413
  Dec 15 14:21:19.413: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 14:21:19.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:21:19.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:21:19.43
  STEP: Setting up server cert @ 12/15/23 14:21:19.443
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 14:21:19.712
  STEP: Deploying the webhook pod @ 12/15/23 14:21:19.717
  STEP: Wait for the deployment to be ready @ 12/15/23 14:21:19.722
  Dec 15 14:21:19.726: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/23 14:21:21.736
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 14:21:21.746
  Dec 15 14:21:22.746: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/15/23 14:21:22.751
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/15/23 14:21:22.751
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/15/23 14:21:22.763
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/15/23 14:21:23.77
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/15/23 14:21:23.77
  STEP: Having no error when timeout is longer than webhook latency @ 12/15/23 14:21:24.788
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/15/23 14:21:24.788
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/15/23 14:21:29.811
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/15/23 14:21:29.811
  Dec 15 14:21:34.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4842" for this suite. @ 12/15/23 14:21:34.884
  STEP: Destroying namespace "webhook-markers-8767" for this suite. @ 12/15/23 14:21:34.889
• [15.480 seconds]
------------------------------
S
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/15/23 14:21:34.894
  Dec 15 14:21:34.894: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 14:21:34.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:21:34.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:21:34.911
  STEP: creating the pod @ 12/15/23 14:21:34.914
  STEP: submitting the pod to kubernetes @ 12/15/23 14:21:34.914
  STEP: verifying QOS class is set on the pod @ 12/15/23 14:21:34.921
  Dec 15 14:21:34.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-834" for this suite. @ 12/15/23 14:21:34.928
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/15/23 14:21:34.933
  Dec 15 14:21:34.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 14:21:34.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:21:34.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:21:34.947
  STEP: Creating configMap with name configmap-test-upd-6e3b50d3-2b68-40ce-be00-e7ba7c0a7a6e @ 12/15/23 14:21:34.951
  STEP: Creating the pod @ 12/15/23 14:21:34.954
  STEP: Updating configmap configmap-test-upd-6e3b50d3-2b68-40ce-be00-e7ba7c0a7a6e @ 12/15/23 14:21:36.974
  STEP: waiting to observe update in volume @ 12/15/23 14:21:36.978
  Dec 15 14:23:03.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6842" for this suite. @ 12/15/23 14:23:03.29
• [88.362 seconds]
------------------------------
SSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/15/23 14:23:03.296
  Dec 15 14:23:03.296: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename lease-test @ 12/15/23 14:23:03.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:23:03.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:23:03.312
  Dec 15 14:23:03.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1454" for this suite. @ 12/15/23 14:23:03.368
• [0.077 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 12/15/23 14:23:03.372
  Dec 15 14:23:03.372: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 14:23:03.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:23:03.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:23:03.387
  STEP: Setting up server cert @ 12/15/23 14:23:03.401
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 14:23:03.706
  STEP: Deploying the webhook pod @ 12/15/23 14:23:03.71
  STEP: Wait for the deployment to be ready @ 12/15/23 14:23:03.714
  Dec 15 14:23:03.717: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/23 14:23:05.727
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 14:23:05.739
  Dec 15 14:23:06.739: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 15 14:23:06.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/15/23 14:23:07.25
  STEP: Creating a custom resource that should be denied by the webhook @ 12/15/23 14:23:07.264
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/15/23 14:23:09.279
  STEP: Updating the custom resource with disallowed data should be denied @ 12/15/23 14:23:09.284
  STEP: Deleting the custom resource should be denied @ 12/15/23 14:23:09.293
  STEP: Remove the offending key and value from the custom resource data @ 12/15/23 14:23:09.299
  STEP: Deleting the updated custom resource should be successful @ 12/15/23 14:23:09.307
  Dec 15 14:23:09.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3686" for this suite. @ 12/15/23 14:23:09.871
  STEP: Destroying namespace "webhook-markers-1099" for this suite. @ 12/15/23 14:23:09.876
• [6.509 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 12/15/23 14:23:09.881
  Dec 15 14:23:09.881: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename statefulset @ 12/15/23 14:23:09.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:23:09.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:23:09.899
  STEP: Creating service test in namespace statefulset-7865 @ 12/15/23 14:23:09.902
  STEP: Creating stateful set ss in namespace statefulset-7865 @ 12/15/23 14:23:09.906
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7865 @ 12/15/23 14:23:09.912
  Dec 15 14:23:09.915: INFO: Found 0 stateful pods, waiting for 1
  Dec 15 14:23:19.916: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/15/23 14:23:19.916
  Dec 15 14:23:19.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7865 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 14:23:20.073: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 14:23:20.073: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 14:23:20.073: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 15 14:23:20.076: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Dec 15 14:23:30.079: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 15 14:23:30.079: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 15 14:23:30.093: INFO: POD   NODE                    PHASE    GRACE  CONDITIONS
  Dec 15 14:23:30.093: INFO: ss-0  talos-default-worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:09 +0000 UTC  }]
  Dec 15 14:23:30.093: INFO: 
  Dec 15 14:23:30.093: INFO: StatefulSet ss has not reached scale 3, at 1
  Dec 15 14:23:31.097: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995692274s
  Dec 15 14:23:32.102: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991413614s
  Dec 15 14:23:33.107: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987254593s
  Dec 15 14:23:34.111: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982028897s
  Dec 15 14:23:35.114: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.978123376s
  Dec 15 14:23:36.117: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.975445377s
  Dec 15 14:23:37.120: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.972402883s
  Dec 15 14:23:38.125: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.9682915s
  Dec 15 14:23:39.129: INFO: Verifying statefulset ss doesn't scale past 3 for another 964.203632ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7865 @ 12/15/23 14:23:40.129
  Dec 15 14:23:40.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7865 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 15 14:23:40.277: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 15 14:23:40.277: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 15 14:23:40.277: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 15 14:23:40.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7865 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 15 14:23:40.377: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 15 14:23:40.377: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 15 14:23:40.377: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 15 14:23:40.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7865 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 15 14:23:40.498: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 15 14:23:40.498: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 15 14:23:40.498: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 15 14:23:40.501: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  Dec 15 14:23:50.503: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 14:23:50.503: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 14:23:50.503: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/15/23 14:23:50.503
  Dec 15 14:23:50.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7865 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 14:23:50.635: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 14:23:50.635: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 14:23:50.635: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 15 14:23:50.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7865 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 14:23:50.790: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 14:23:50.790: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 14:23:50.790: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 15 14:23:50.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7865 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 14:23:50.936: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 14:23:50.936: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 14:23:50.936: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 15 14:23:50.936: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 15 14:23:50.939: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Dec 15 14:24:00.944: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 15 14:24:00.944: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 15 14:24:00.944: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 15 14:24:00.955: INFO: POD   NODE                    PHASE    GRACE  CONDITIONS
  Dec 15 14:24:00.955: INFO: ss-0  talos-default-worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:09 +0000 UTC  }]
  Dec 15 14:24:00.955: INFO: ss-1  talos-default-worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:30 +0000 UTC  }]
  Dec 15 14:24:00.955: INFO: ss-2  talos-default-worker-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:23:30 +0000 UTC  }]
  Dec 15 14:24:00.955: INFO: 
  Dec 15 14:24:00.955: INFO: StatefulSet ss has not reached scale 0, at 3
  Dec 15 14:24:01.958: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.996505962s
  Dec 15 14:24:02.961: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992397666s
  Dec 15 14:24:03.964: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.990216253s
  Dec 15 14:24:04.967: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.986084399s
  Dec 15 14:24:05.971: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.983781423s
  Dec 15 14:24:06.974: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.980299549s
  Dec 15 14:24:07.979: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.975819054s
  Dec 15 14:24:08.983: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.971061697s
  Dec 15 14:24:09.986: INFO: Verifying statefulset ss doesn't scale past 0 for another 968.130781ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7865 @ 12/15/23 14:24:10.987
  Dec 15 14:24:10.991: INFO: Scaling statefulset ss to 0
  Dec 15 14:24:11.000: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 15 14:24:11.003: INFO: Deleting all statefulset in ns statefulset-7865
  Dec 15 14:24:11.005: INFO: Scaling statefulset ss to 0
  Dec 15 14:24:11.014: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 15 14:24:11.017: INFO: Deleting statefulset ss
  Dec 15 14:24:11.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7865" for this suite. @ 12/15/23 14:24:11.032
• [61.156 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 12/15/23 14:24:11.037
  Dec 15 14:24:11.037: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 14:24:11.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:24:11.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:24:11.053
  STEP: validating api versions @ 12/15/23 14:24:11.056
  Dec 15 14:24:11.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-7963 api-versions'
  Dec 15 14:24:11.112: INFO: stderr: ""
  Dec 15 14:24:11.112: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Dec 15 14:24:11.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7963" for this suite. @ 12/15/23 14:24:11.116
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/15/23 14:24:11.121
  Dec 15 14:24:11.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:24:11.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:24:11.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:24:11.137
  STEP: Creating projection with secret that has name projected-secret-test-map-b6bd0466-d695-4a62-9061-ec876639d9d1 @ 12/15/23 14:24:11.14
  STEP: Creating a pod to test consume secrets @ 12/15/23 14:24:11.143
  STEP: Saw pod success @ 12/15/23 14:24:15.161
  Dec 15 14:24:15.164: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-secrets-47e4f93f-d6d9-4584-8d6e-ce5d252a247f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:24:15.17
  Dec 15 14:24:15.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5256" for this suite. @ 12/15/23 14:24:15.19
• [4.074 seconds]
------------------------------
SS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/15/23 14:24:15.195
  Dec 15 14:24:15.195: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename hostport @ 12/15/23 14:24:15.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:24:15.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:24:15.212
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/15/23 14:24:15.218
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.20.0.6 on the node which pod1 resides and expect scheduled @ 12/15/23 14:24:17.232
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.20.0.6 but use UDP protocol on the node which pod2 resides @ 12/15/23 14:24:29.262
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/15/23 14:24:33.283
  Dec 15 14:24:33.283: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.20.0.6 http://127.0.0.1:54323/hostname] Namespace:hostport-8161 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 14:24:33.283: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 14:24:33.283: INFO: ExecWithOptions: Clientset creation
  Dec 15 14:24:33.284: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8161/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.20.0.6+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.0.6, port: 54323 @ 12/15/23 14:24:33.367
  Dec 15 14:24:33.367: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.20.0.6:54323/hostname] Namespace:hostport-8161 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 14:24:33.367: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 14:24:33.368: INFO: ExecWithOptions: Clientset creation
  Dec 15 14:24:33.368: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8161/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.20.0.6%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.0.6, port: 54323 UDP @ 12/15/23 14:24:33.442
  Dec 15 14:24:33.442: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.20.0.6 54323] Namespace:hostport-8161 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 14:24:33.442: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 14:24:33.442: INFO: ExecWithOptions: Clientset creation
  Dec 15 14:24:33.443: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8161/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.20.0.6+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Dec 15 14:24:38.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8161" for this suite. @ 12/15/23 14:24:38.542
• [23.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 12/15/23 14:24:38.55
  Dec 15 14:24:38.550: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-preemption @ 12/15/23 14:24:38.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:24:38.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:24:38.568
  Dec 15 14:24:38.582: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 15 14:25:38.587: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/15/23 14:25:38.59
  Dec 15 14:25:38.605: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 15 14:25:38.609: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 15 14:25:38.621: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 15 14:25:38.625: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/15/23 14:25:38.625
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/15/23 14:25:40.638
  Dec 15 14:25:44.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-311" for this suite. @ 12/15/23 14:25:44.685
• [66.138 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/15/23 14:25:44.688
  Dec 15 14:25:44.688: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 14:25:44.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:25:44.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:25:44.7
  STEP: Creating secret with name secret-test-0d351c05-217c-493a-809d-579ef4a1705e @ 12/15/23 14:25:44.702
  STEP: Creating a pod to test consume secrets @ 12/15/23 14:25:44.704
  STEP: Saw pod success @ 12/15/23 14:25:46.713
  Dec 15 14:25:46.716: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-ca84f24d-6f89-414f-8d08-a64ec1057374 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:25:46.726
  Dec 15 14:25:46.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6774" for this suite. @ 12/15/23 14:25:46.742
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 12/15/23 14:25:46.751
  Dec 15 14:25:46.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 14:25:46.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:25:46.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:25:46.769
  STEP: Creating pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884 @ 12/15/23 14:25:46.772
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/23 14:25:48.785
  Dec 15 14:25:48.788: INFO: Initial restart count of pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 is 0
  Dec 15 14:25:48.790: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:25:50.793: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:25:52.797: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:25:54.800: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:25:56.803: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:25:58.806: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:00.810: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:02.815: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:04.820: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:06.824: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:08.828: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:10.833: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:12.836: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:14.841: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:16.845: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:18.850: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:20.854: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:22.858: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:24.864: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:26.869: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:28.872: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:30.876: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:32.880: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:34.885: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:36.888: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:38.891: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:40.894: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:42.899: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:44.903: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:46.908: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:48.912: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:50.917: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:52.920: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:54.923: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:56.928: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:26:58.932: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:00.937: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:02.942: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:04.947: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:06.952: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:08.956: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:10.959: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:12.964: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:14.967: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:16.971: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:18.973: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:20.976: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:22.981: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:24.984: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:26.990: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:28.993: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:30.998: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:33.002: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:35.006: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:37.012: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:39.016: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:41.020: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:43.025: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:45.029: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:47.034: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:49.037: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:51.042: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:53.047: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:55.050: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:57.053: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:27:59.056: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:01.060: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:03.063: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:05.067: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:07.072: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:09.076: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:11.081: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:13.085: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:15.090: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:17.094: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:19.098: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:21.101: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:23.106: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:25.109: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:27.114: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:29.119: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:31.122: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:33.127: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:35.132: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:37.136: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:39.140: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:41.143: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:43.147: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:45.151: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:47.156: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:49.160: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:51.164: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:53.169: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:55.173: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:57.176: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:28:59.179: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:01.184: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:03.188: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:05.194: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:07.198: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:09.203: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:11.205: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:13.210: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:15.213: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:17.216: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:19.219: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:21.231: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:23.242: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:25.247: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:27.252: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:29.256: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:31.259: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:33.264: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:35.269: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:37.273: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:39.277: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:41.282: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:43.286: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:45.290: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  Dec 15 14:29:47.294: INFO: Get pod busybox-bf38a71b-f0a5-4f27-8fcb-93b3690c5216 in namespace container-probe-6884
  STEP: deleting the pod @ 12/15/23 14:29:49.295
  Dec 15 14:29:49.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6884" for this suite. @ 12/15/23 14:29:49.306
• [242.559 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/15/23 14:29:49.31
  Dec 15 14:29:49.310: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename events @ 12/15/23 14:29:49.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:29:49.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:29:49.323
  STEP: Create set of events @ 12/15/23 14:29:49.325
  Dec 15 14:29:49.328: INFO: created test-event-1
  Dec 15 14:29:49.331: INFO: created test-event-2
  Dec 15 14:29:49.333: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/15/23 14:29:49.333
  STEP: delete collection of events @ 12/15/23 14:29:49.335
  Dec 15 14:29:49.335: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/15/23 14:29:49.346
  Dec 15 14:29:49.346: INFO: requesting list of events to confirm quantity
  Dec 15 14:29:49.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9848" for this suite. @ 12/15/23 14:29:49.35
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 12/15/23 14:29:49.354
  Dec 15 14:29:49.354: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 14:29:49.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:29:49.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:29:49.364
  STEP: Creating configMap configmap-4930/configmap-test-4e084c4f-c291-4d34-9d5f-e93009ff6831 @ 12/15/23 14:29:49.365
  STEP: Creating a pod to test consume configMaps @ 12/15/23 14:29:49.368
  STEP: Saw pod success @ 12/15/23 14:29:53.38
  Dec 15 14:29:53.382: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-7088dbaf-6d1a-4e2b-9a6b-69282fe640c3 container env-test: <nil>
  STEP: delete the pod @ 12/15/23 14:29:53.388
  Dec 15 14:29:53.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4930" for this suite. @ 12/15/23 14:29:53.396
• [4.045 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/15/23 14:29:53.398
  Dec 15 14:29:53.398: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename deployment @ 12/15/23 14:29:53.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:29:53.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:29:53.407
  Dec 15 14:29:53.409: INFO: Creating deployment "webserver-deployment"
  Dec 15 14:29:53.411: INFO: Waiting for observed generation 1
  Dec 15 14:29:55.416: INFO: Waiting for all required pods to come up
  Dec 15 14:29:55.418: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/15/23 14:29:55.419
  Dec 15 14:29:55.419: INFO: Waiting for deployment "webserver-deployment" to complete
  Dec 15 14:29:55.422: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Dec 15 14:29:55.427: INFO: Updating deployment webserver-deployment
  Dec 15 14:29:55.427: INFO: Waiting for observed generation 2
  Dec 15 14:29:57.432: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Dec 15 14:29:57.433: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Dec 15 14:29:57.435: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 15 14:29:57.439: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Dec 15 14:29:57.439: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Dec 15 14:29:57.441: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 15 14:29:57.443: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Dec 15 14:29:57.443: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Dec 15 14:29:57.448: INFO: Updating deployment webserver-deployment
  Dec 15 14:29:57.448: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Dec 15 14:29:57.451: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Dec 15 14:29:57.452: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Dec 15 14:29:57.456: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aeced526-f713-4b6a-bbcb-027cce778349",
      ResourceVersion: (string) (len=4) "8315",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 15 14:29:57.462: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
      ResourceVersion: (string) (len=4) "8319",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "aeced526-f713-4b6a-bbcb-027cce778349",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 65 63 65 64 35  32 36 2d 66 37 31 33 2d  |\"aeced526-f713-|
              00000120  34 62 36 61 2d 62 62 63  62 2d 30 32 37 63 63 65  |4b6a-bbcb-027cce|
              00000130  37 37 38 33 34 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |778349\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 14:29:57.464: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Dec 15 14:29:57.464: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
      ResourceVersion: (string) (len=4) "8316",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "aeced526-f713-4b6a-bbcb-027cce778349",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 65 63 65 64 35  32 36 2d 66 37 31 33 2d  |\"aeced526-f713-|
              00000120  34 62 36 61 2d 62 62 63  62 2d 30 32 37 63 63 65  |4b6a-bbcb-027cce|
              00000130  37 37 38 33 34 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |778349\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 14:29:57.485: INFO: Pod "webserver-deployment-557759b7c7-2lstq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2lstq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c88ae287-48d5-48b3-958c-baf18229fb41",
      ResourceVersion: (string) (len=4) "8224",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  30 31 5c 22 7d 22 3a 7b  |.244.1.101\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wqk69",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wqk69",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=12) "10.244.1.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838247394,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e377434795f28d72b8197a131a08381fad7de5c4b01eb4ddfa4e4f5738ab49b0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.487: INFO: Pod "webserver-deployment-557759b7c7-2n7nv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2n7nv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42ac3a86-c19b-4631-b656-bdf0f0858b65",
      ResourceVersion: (string) (len=4) "8332",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w9zhg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w9zhg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.489: INFO: Pod "webserver-deployment-557759b7c7-5qrnp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5qrnp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17ab833a-02d3-413c-870a-bd1590e6731f",
      ResourceVersion: (string) (len=4) "8226",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  30 34 5c 22 7d 22 3a 7b  |.244.1.104\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czzkg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czzkg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=12) "10.244.1.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838247394,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b9c930a8e340d7cf79acfb7b4ba7315456ac9e97a6077a0ee5a4ff76ba973baf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.491: INFO: Pod "webserver-deployment-557759b7c7-7djsf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7djsf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b610f657-3842-4966-85ea-de72c314181f",
      ResourceVersion: (string) (len=4) "8336",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gs8th",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gs8th",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.492: INFO: Pod "webserver-deployment-557759b7c7-97kkl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-97kkl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c48f668-8f57-436c-9d31-b9ba978ed57b",
      ResourceVersion: (string) (len=4) "8232",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  30 35 5c 22 7d 22 3a 7b  |.244.1.105\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-plf5k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-plf5k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=12) "10.244.1.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838247394,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://58f66498a34fcda777e7bbbab62504e948031f2608703a44844de5f534d7a3fb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.496: INFO: Pod "webserver-deployment-557759b7c7-9kbjh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9kbjh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb1c2c41-f555-4444-ae96-e0912cd1bae2",
      ResourceVersion: (string) (len=4) "8341",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nknmc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nknmc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.498: INFO: Pod "webserver-deployment-557759b7c7-bj5lb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bj5lb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "298cb87a-dc6b-4265-b0a1-c9bc74154cb2",
      ResourceVersion: (string) (len=4) "8235",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  30 33 5c 22 7d 22 3a 7b  |.244.1.103\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fpgjj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fpgjj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=12) "10.244.1.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838247394,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0ba7696cee35bfced72ce41416ae5e46d091f21a1f467034d08b0879ac23bbdb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.500: INFO: Pod "webserver-deployment-557759b7c7-f49dv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f49dv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1013c284-93c9-4dbc-9b6f-6f5f1fd3ed5c",
      ResourceVersion: (string) (len=4) "8202",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 37  39 5c 22 7d 22 3a 7b 22  |.244.4.79\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x62mj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x62mj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) (len=11) "10.244.4.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838247393,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://07d4723594965a5870a7785e6f54e2072baafd277587678345e63e2535e07268",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.513: INFO: Pod "webserver-deployment-557759b7c7-f8bxf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f8bxf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "656d08dd-563a-49fe-833e-f706f384a358",
      ResourceVersion: (string) (len=4) "8229",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  30 32 5c 22 7d 22 3a 7b  |.244.1.102\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2c2pg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2c2pg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=12) "10.244.1.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838247393,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://789f072baeb4252cb69d20b80ce55b39633c4cc2a8378608f76b654e7fd69f4b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.518: INFO: Pod "webserver-deployment-557759b7c7-jlzn2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jlzn2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3df9ac7e-c6d1-47c5-87d4-7e9aea741c2f",
      ResourceVersion: (string) (len=4) "8205",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 37  36 5c 22 7d 22 3a 7b 22  |.244.4.76\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qnjc7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qnjc7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) (len=11) "10.244.4.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838247394,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://07a9eda4d60731e87dc7f20199ab355d6843b67b7f42103226523aea69d7bb11",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.520: INFO: Pod "webserver-deployment-557759b7c7-nhvnd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nhvnd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d24abc4a-4261-4cfe-be85-0ddb22eda74b",
      ResourceVersion: (string) (len=4) "8345",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l9sqw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l9sqw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.521: INFO: Pod "webserver-deployment-557759b7c7-pj4cf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pj4cf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d0a86e0-6d82-4d34-9b5b-151da59f095b",
      ResourceVersion: (string) (len=4) "8338",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qftdb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qftdb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.523: INFO: Pod "webserver-deployment-557759b7c7-pw7mg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pw7mg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57d8f5cf-be41-4c62-a56a-d726e516af26",
      ResourceVersion: (string) (len=4) "8337",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7mp4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7mp4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.524: INFO: Pod "webserver-deployment-557759b7c7-q6mpv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q6mpv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23422865-4b69-45f6-b2da-bd9c49b65bb9",
      ResourceVersion: (string) (len=4) "8200",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 37  35 5c 22 7d 22 3a 7b 22  |.244.4.75\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z8b2w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z8b2w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) (len=11) "10.244.4.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247393,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838247393,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9b3fcfe4208a3b25ebd3f753e501966ea3c0909b267321b74771a024b5d968d9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.526: INFO: Pod "webserver-deployment-557759b7c7-w64bp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-w64bp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83aa1d83-e3bf-42c7-b880-cdf5a9308c6f",
      ResourceVersion: (string) (len=4) "8327",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1aff67e6-331c-41bd-8012-110ecf199b72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  66 66 36 37 65 36 2d 33  |d\":\"1aff67e6-3|
              00000090  33 31 63 2d 34 31 62 64  2d 38 30 31 32 2d 31 31  |31c-41bd-8012-11|
              000000a0  30 65 63 66 31 39 39 62  37 32 5c 22 7d 22 3a 7b  |0ecf199b72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jpt2d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jpt2d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.527: INFO: Pod "webserver-deployment-9b4f5bf69-fnhks" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fnhks",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61593e24-b13e-4a30-8233-5feb258fa96e",
      ResourceVersion: (string) (len=4) "8339",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8pjf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8pjf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.529: INFO: Pod "webserver-deployment-9b4f5bf69-h5569" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-h5569",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4ae1dba-616a-45f4-a7b8-966a63b934fb",
      ResourceVersion: (string) (len=4) "8266",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f9d9m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f9d9m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.530: INFO: Pod "webserver-deployment-9b4f5bf69-j5x22" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j5x22",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1d7c087-7829-45d1-b78b-795e6882e5c4",
      ResourceVersion: (string) (len=4) "8346",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wck7t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wck7t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.531: INFO: Pod "webserver-deployment-9b4f5bf69-kbb68" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kbb68",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cea2ea36-093f-40e9-b0eb-eb968f0d9bf7",
      ResourceVersion: (string) (len=4) "8344",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qwlcn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qwlcn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.532: INFO: Pod "webserver-deployment-9b4f5bf69-lbf8l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lbf8l",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "377e483f-7c98-44c1-b3ef-7ac6dabf9d80",
      ResourceVersion: (string) (len=4) "8340",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5zxmj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5zxmj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.534: INFO: Pod "webserver-deployment-9b4f5bf69-lp2r2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lp2r2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47222d5e-84cc-47fd-ac43-ae5ca1eae61f",
      ResourceVersion: (string) (len=4) "8329",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdlzr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdlzr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.535: INFO: Pod "webserver-deployment-9b4f5bf69-s4kdf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-s4kdf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "459fcc62-dee7-46ea-95fe-0ae5c46739db",
      ResourceVersion: (string) (len=4) "8347",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bg2rn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bg2rn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.536: INFO: Pod "webserver-deployment-9b4f5bf69-sn9rs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-sn9rs",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3f416af-13fc-4edd-aba0-0228bb836634",
      ResourceVersion: (string) (len=4) "8343",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhx7w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhx7w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.537: INFO: Pod "webserver-deployment-9b4f5bf69-t27xg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t27xg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "922669ad-77bb-488e-8dd4-b519c13e7dfd",
      ResourceVersion: (string) (len=4) "8290",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lwb72",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lwb72",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.539: INFO: Pod "webserver-deployment-9b4f5bf69-t8kc9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t8kc9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7acb58c-1a9c-4ace-9cc1-11465231e9a2",
      ResourceVersion: (string) (len=4) "8262",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pd587",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pd587",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.541: INFO: Pod "webserver-deployment-9b4f5bf69-tmjlx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tmjlx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "adf93049-c7b5-43d0-a2b6-201e0fe95453",
      ResourceVersion: (string) (len=4) "8280",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v4pp2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v4pp2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.543: INFO: Pod "webserver-deployment-9b4f5bf69-ttfmc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ttfmc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4877",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c3394b1-abc1-4e02-b3cb-160438009cf0",
      ResourceVersion: (string) (len=4) "8289",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a843b48f-1361-4dc2-97c7-47db13b3890c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  34 33 62 34 38 66 2d 31  |d\":\"a843b48f-1|
              00000090  33 36 31 2d 34 64 63 32  2d 39 37 63 37 2d 34 37  |361-4dc2-97c7-47|
              000000a0  64 62 31 33 62 33 38 39  30 63 5c 22 7d 22 3a 7b  |db13b3890c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x5fnv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x5fnv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838247395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838247395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:29:57.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4877" for this suite. @ 12/15/23 14:29:57.548
• [4.154 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/15/23 14:29:57.553
  Dec 15 14:29:57.553: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 14:29:57.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:29:57.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:29:57.563
  STEP: Creating a pod to test downward api env vars @ 12/15/23 14:29:57.565
  STEP: Saw pod success @ 12/15/23 14:30:01.578
  Dec 15 14:30:01.581: INFO: Trying to get logs from node talos-default-worker-1 pod downward-api-47121dfc-5131-4257-a6f7-487381de7abd container dapi-container: <nil>
  STEP: delete the pod @ 12/15/23 14:30:01.588
  Dec 15 14:30:01.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3367" for this suite. @ 12/15/23 14:30:01.604
• [4.056 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 12/15/23 14:30:01.609
  Dec 15 14:30:01.609: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename var-expansion @ 12/15/23 14:30:01.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:30:01.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:30:01.627
  STEP: Creating a pod to test substitution in volume subpath @ 12/15/23 14:30:01.63
  STEP: Saw pod success @ 12/15/23 14:30:05.646
  Dec 15 14:30:05.650: INFO: Trying to get logs from node talos-default-worker-1 pod var-expansion-385a644e-6ac0-44ce-88fc-1e4397f2b939 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/23 14:30:05.656
  Dec 15 14:30:05.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8836" for this suite. @ 12/15/23 14:30:05.675
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 12/15/23 14:30:05.681
  Dec 15 14:30:05.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename security-context @ 12/15/23 14:30:05.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:30:05.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:30:05.699
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/15/23 14:30:05.702
  STEP: Saw pod success @ 12/15/23 14:30:09.72
  Dec 15 14:30:09.724: INFO: Trying to get logs from node talos-default-worker-1 pod security-context-b79f3cc0-de0a-4ba6-9b7d-ce9104f1f150 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 14:30:09.73
  Dec 15 14:30:09.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9666" for this suite. @ 12/15/23 14:30:09.745
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/15/23 14:30:09.751
  Dec 15 14:30:09.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/23 14:30:09.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:30:09.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:30:09.769
  Dec 15 14:30:09.783: INFO: created pod
  STEP: Saw pod success @ 12/15/23 14:30:13.794
  Dec 15 14:30:43.794: INFO: polling logs
  Dec 15 14:30:43.798: INFO: Pod logs: 
  I1215 14:30:10.234945       1 log.go:194] OK: Got token
  I1215 14:30:10.234987       1 log.go:194] validating with in-cluster discovery
  I1215 14:30:10.235156       1 log.go:194] OK: got issuer https://172.20.0.1:6443
  I1215 14:30:10.235168       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://172.20.0.1:6443", Subject:"system:serviceaccount:svcaccounts-9778:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000212d18), NotBefore:(*jwt.NumericDate)(0xc000212e58), IssuedAt:(*jwt.NumericDate)(0xc000212d28), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9778", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"61065a13-343e-444d-9aa7-5ff5e62df143"}}}
  I1215 14:30:10.237753       1 log.go:194] OK: Constructed OIDC provider for issuer https://172.20.0.1:6443
  I1215 14:30:10.239639       1 log.go:194] OK: Validated signature on JWT
  I1215 14:30:10.239698       1 log.go:194] OK: Got valid claims from token!
  I1215 14:30:10.239714       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://172.20.0.1:6443", Subject:"system:serviceaccount:svcaccounts-9778:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00047ca28), NotBefore:(*jwt.NumericDate)(0xc00047ca50), IssuedAt:(*jwt.NumericDate)(0xc00047ca30), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9778", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"61065a13-343e-444d-9aa7-5ff5e62df143"}}}

  Dec 15 14:30:43.798: INFO: completed pod
  Dec 15 14:30:43.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9778" for this suite. @ 12/15/23 14:30:43.804
• [34.056 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/15/23 14:30:43.807
  Dec 15 14:30:43.807: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/23 14:30:43.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:30:43.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:30:43.817
  STEP: Creating a pod to test service account token:  @ 12/15/23 14:30:43.818
  STEP: Saw pod success @ 12/15/23 14:30:47.832
  Dec 15 14:30:47.833: INFO: Trying to get logs from node talos-default-worker-1 pod test-pod-0d63d886-9415-4e4e-a09d-38a6acb5b092 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 14:30:47.838
  Dec 15 14:30:47.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1004" for this suite. @ 12/15/23 14:30:47.847
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 12/15/23 14:30:47.851
  Dec 15 14:30:47.851: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 14:30:47.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:30:47.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:30:47.861
  STEP: Counting existing ResourceQuota @ 12/15/23 14:30:47.862
  STEP: Creating a ResourceQuota @ 12/15/23 14:30:52.866
  STEP: Ensuring resource quota status is calculated @ 12/15/23 14:30:52.87
  STEP: Creating a Service @ 12/15/23 14:30:54.874
  STEP: Creating a NodePort Service @ 12/15/23 14:30:54.886
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/15/23 14:30:54.907
  STEP: Ensuring resource quota status captures service creation @ 12/15/23 14:30:54.929
  STEP: Deleting Services @ 12/15/23 14:30:56.932
  STEP: Ensuring resource quota status released usage @ 12/15/23 14:30:57.104
  Dec 15 14:30:59.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9194" for this suite. @ 12/15/23 14:30:59.161
• [11.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 12/15/23 14:30:59.183
  Dec 15 14:30:59.183: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 14:30:59.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:30:59.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:30:59.235
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3120 @ 12/15/23 14:30:59.24
  STEP: changing the ExternalName service to type=ClusterIP @ 12/15/23 14:30:59.25
  STEP: creating replication controller externalname-service in namespace services-3120 @ 12/15/23 14:30:59.299
  I1215 14:30:59.318493      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3120, replica count: 2
  I1215 14:31:02.371103      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 15 14:31:02.371: INFO: Creating new exec pod
  Dec 15 14:31:05.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-3120 exec execpodw8w8g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 15 14:31:05.570: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 15 14:31:05.570: INFO: stdout: "externalname-service-v9kg5"
  Dec 15 14:31:05.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-3120 exec execpodw8w8g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.81.10 80'
  Dec 15 14:31:05.688: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.81.10 80\nConnection to 10.107.81.10 80 port [tcp/http] succeeded!\n"
  Dec 15 14:31:05.688: INFO: stdout: ""
  Dec 15 14:31:06.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-3120 exec execpodw8w8g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.81.10 80'
  Dec 15 14:31:06.671: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.81.10 80\nConnection to 10.107.81.10 80 port [tcp/http] succeeded!\n"
  Dec 15 14:31:06.671: INFO: stdout: "externalname-service-v9kg5"
  Dec 15 14:31:06.671: INFO: Cleaning up the ExternalName to ClusterIP test service
  Dec 15 14:31:06.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3120" for this suite. @ 12/15/23 14:31:06.694
• [7.516 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 12/15/23 14:31:06.7
  Dec 15 14:31:06.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename taint-single-pod @ 12/15/23 14:31:06.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:31:06.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:31:06.714
  Dec 15 14:31:06.716: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 15 14:32:06.716: INFO: Waiting for terminating namespaces to be deleted...
  Dec 15 14:32:06.719: INFO: Starting informer...
  STEP: Starting pod... @ 12/15/23 14:32:06.719
  Dec 15 14:32:06.926: INFO: Pod is running on talos-default-worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/15/23 14:32:06.926
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/15/23 14:32:06.935
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/15/23 14:32:06.939
  Dec 15 14:32:06.939: INFO: Pod wasn't evicted. Proceeding
  Dec 15 14:32:06.939: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/15/23 14:32:06.948
  STEP: Waiting some time to make sure that toleration time passed. @ 12/15/23 14:32:06.951
  Dec 15 14:33:21.954: INFO: Pod wasn't evicted. Test successful
  Dec 15 14:33:21.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9688" for this suite. @ 12/15/23 14:33:21.959
• [135.265 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 12/15/23 14:33:21.965
  Dec 15 14:33:21.965: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pv @ 12/15/23 14:33:21.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:33:21.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:33:21.982
  STEP: Creating initial PV and PVC @ 12/15/23 14:33:21.984
  Dec 15 14:33:21.984: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1540" @ 12/15/23 14:33:21.994
  STEP: Listing PVCs in namespace "pv-1540" @ 12/15/23 14:33:21.996
  STEP: Reading "pvc-gpwpt" Status @ 12/15/23 14:33:21.999
  STEP: Reading "pv-1540-zqpb9" Status @ 12/15/23 14:33:22.002
  STEP: Patching "pvc-gpwpt" Status @ 12/15/23 14:33:22.007
  STEP: Patching "pv-1540-zqpb9" Status @ 12/15/23 14:33:22.011
  STEP: Updating "pvc-gpwpt" Status @ 12/15/23 14:33:22.016
  STEP: Updating "pv-1540-zqpb9" Status @ 12/15/23 14:33:22.023
  Dec 15 14:33:22.049: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Dec 15 14:33:22.049: INFO: Deleting PersistentVolumeClaim "pvc-gpwpt"
  Dec 15 14:33:22.054: INFO: Deleting PersistentVolume "pv-1540-zqpb9"
  Dec 15 14:33:22.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1540" for this suite. @ 12/15/23 14:33:22.061
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 12/15/23 14:33:22.065
  Dec 15 14:33:22.065: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 14:33:22.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:33:22.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:33:22.075
  STEP: Setting up server cert @ 12/15/23 14:33:22.085
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 14:33:22.24
  STEP: Deploying the webhook pod @ 12/15/23 14:33:22.246
  STEP: Wait for the deployment to be ready @ 12/15/23 14:33:22.253
  Dec 15 14:33:22.259: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/23 14:33:24.265
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 14:33:24.271
  Dec 15 14:33:25.271: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/15/23 14:33:25.276
  STEP: create a configmap that should be updated by the webhook @ 12/15/23 14:33:25.286
  Dec 15 14:33:25.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8537" for this suite. @ 12/15/23 14:33:25.339
  STEP: Destroying namespace "webhook-markers-5128" for this suite. @ 12/15/23 14:33:25.342
• [3.280 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/15/23 14:33:25.345
  Dec 15 14:33:25.345: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename init-container @ 12/15/23 14:33:25.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:33:25.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:33:25.356
  STEP: creating the pod @ 12/15/23 14:33:25.357
  Dec 15 14:33:25.357: INFO: PodSpec: initContainers in spec.initContainers
  Dec 15 14:34:10.519: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ee42114f-ccfe-469c-a220-079f3c7e92fb", GenerateName:"", Namespace:"init-container-594", SelfLink:"", UID:"664fd189-a19b-42d8-88f6-fed475384d6f", ResourceVersion:"9582", Generation:0, CreationTimestamp:time.Date(2023, time.December, 15, 14, 33, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"357920324"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 15, 14, 33, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ff60a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 15, 14, 34, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ff6120), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-629hq", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00174c020), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-629hq", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-629hq", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-629hq", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002bcc0d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"talos-default-worker-2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000278380), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002bcc160)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002bcc180)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002bcc188), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002bcc18c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0017ea030), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 15, 14, 33, 26, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 15, 14, 33, 25, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 15, 14, 33, 25, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 15, 14, 33, 25, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 15, 14, 33, 25, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.20.0.6", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.20.0.6"}}, PodIP:"10.244.4.84", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.4.84"}}, StartTime:time.Date(2023, time.December, 15, 14, 33, 25, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002785b0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000278620)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://6edaef1e73dd2f6abfdb0cb9db3d0d072b0b71d4c309b7071a0f83b61e32190d", Started:(*bool)(0xc002bcc24a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00174c0a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc002bcc25f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00174c080), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc002bcc20f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Dec 15 14:34:10.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-594" for this suite. @ 12/15/23 14:34:10.524
• [45.185 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/15/23 14:34:10.531
  Dec 15 14:34:10.531: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replicaset @ 12/15/23 14:34:10.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:34:10.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:34:10.55
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/15/23 14:34:10.552
  STEP: When a replicaset with a matching selector is created @ 12/15/23 14:34:12.568
  STEP: Then the orphan pod is adopted @ 12/15/23 14:34:12.573
  STEP: When the matched label of one of its pods change @ 12/15/23 14:34:13.581
  Dec 15 14:34:13.584: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/15/23 14:34:13.593
  Dec 15 14:34:14.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9357" for this suite. @ 12/15/23 14:34:14.605
• [4.080 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/15/23 14:34:14.611
  Dec 15 14:34:14.611: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-runtime @ 12/15/23 14:34:14.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:34:14.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:34:14.628
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/15/23 14:34:14.638
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/15/23 14:34:27.685
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/15/23 14:34:27.687
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/15/23 14:34:27.69
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/15/23 14:34:27.69
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/15/23 14:34:27.699
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/15/23 14:34:29.708
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/15/23 14:34:30.715
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/15/23 14:34:30.721
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/15/23 14:34:30.721
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/15/23 14:34:30.735
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/15/23 14:34:31.741
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/15/23 14:34:32.746
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/15/23 14:34:32.751
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/15/23 14:34:32.751
  Dec 15 14:34:32.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-713" for this suite. @ 12/15/23 14:34:32.771
• [18.164 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/15/23 14:34:32.775
  Dec 15 14:34:32.775: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 14:34:32.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:34:32.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:34:32.79
  STEP: creating the pod @ 12/15/23 14:34:32.793
  STEP: setting up watch @ 12/15/23 14:34:32.793
  STEP: submitting the pod to kubernetes @ 12/15/23 14:34:32.895
  STEP: verifying the pod is in kubernetes @ 12/15/23 14:34:32.901
  STEP: verifying pod creation was observed @ 12/15/23 14:34:32.904
  STEP: deleting the pod gracefully @ 12/15/23 14:34:34.914
  STEP: verifying pod deletion was observed @ 12/15/23 14:34:34.919
  Dec 15 14:34:36.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1962" for this suite. @ 12/15/23 14:34:36.312
• [3.540 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/15/23 14:34:36.315
  Dec 15 14:34:36.315: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename init-container @ 12/15/23 14:34:36.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:34:36.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:34:36.325
  STEP: creating the pod @ 12/15/23 14:34:36.327
  Dec 15 14:34:36.327: INFO: PodSpec: initContainers in spec.initContainers
  Dec 15 14:34:39.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4670" for this suite. @ 12/15/23 14:34:39.32
• [3.010 seconds]
------------------------------
S
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/15/23 14:34:39.325
  Dec 15 14:34:39.325: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename certificates @ 12/15/23 14:34:39.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:34:39.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:34:39.342
  STEP: getting /apis @ 12/15/23 14:34:39.781
  STEP: getting /apis/certificates.k8s.io @ 12/15/23 14:34:39.783
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/15/23 14:34:39.784
  STEP: creating @ 12/15/23 14:34:39.785
  STEP: getting @ 12/15/23 14:34:39.794
  STEP: listing @ 12/15/23 14:34:39.795
  STEP: watching @ 12/15/23 14:34:39.797
  Dec 15 14:34:39.797: INFO: starting watch
  STEP: patching @ 12/15/23 14:34:39.798
  STEP: updating @ 12/15/23 14:34:39.802
  Dec 15 14:34:39.806: INFO: waiting for watch events with expected annotations
  Dec 15 14:34:39.806: INFO: saw patched and updated annotations
  STEP: getting /approval @ 12/15/23 14:34:39.806
  STEP: patching /approval @ 12/15/23 14:34:39.808
  STEP: updating /approval @ 12/15/23 14:34:39.812
  STEP: getting /status @ 12/15/23 14:34:39.816
  STEP: patching /status @ 12/15/23 14:34:39.818
  STEP: updating /status @ 12/15/23 14:34:39.823
  STEP: deleting @ 12/15/23 14:34:39.827
  STEP: deleting a collection @ 12/15/23 14:34:39.833
  Dec 15 14:34:39.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2903" for this suite. @ 12/15/23 14:34:39.843
• [0.520 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 12/15/23 14:34:39.846
  Dec 15 14:34:39.846: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 14:34:39.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:34:39.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:34:39.856
  STEP: creating a secret @ 12/15/23 14:34:39.857
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/15/23 14:34:39.86
  STEP: patching the secret @ 12/15/23 14:34:39.861
  STEP: deleting the secret using a LabelSelector @ 12/15/23 14:34:39.865
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/15/23 14:34:39.869
  Dec 15 14:34:39.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3395" for this suite. @ 12/15/23 14:34:39.872
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/15/23 14:34:39.877
  Dec 15 14:34:39.877: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename server-version @ 12/15/23 14:34:39.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:34:39.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:34:39.887
  STEP: Request ServerVersion @ 12/15/23 14:34:39.888
  STEP: Confirm major version @ 12/15/23 14:34:39.889
  Dec 15 14:34:39.889: INFO: Major version: 1
  STEP: Confirm minor version @ 12/15/23 14:34:39.889
  Dec 15 14:34:39.889: INFO: cleanMinorVersion: 29
  Dec 15 14:34:39.889: INFO: Minor version: 29
  Dec 15 14:34:39.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6107" for this suite. @ 12/15/23 14:34:39.891
• [0.017 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/15/23 14:34:39.895
  Dec 15 14:34:39.895: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename namespaces @ 12/15/23 14:34:39.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:34:39.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:34:39.904
  STEP: Creating namespace "e2e-ns-lsfz9" @ 12/15/23 14:34:39.906
  Dec 15 14:34:39.912: INFO: Namespace "e2e-ns-lsfz9-2572" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-lsfz9-2572" @ 12/15/23 14:34:39.912
  Dec 15 14:34:39.916: INFO: Namespace "e2e-ns-lsfz9-2572" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-lsfz9-2572" @ 12/15/23 14:34:39.916
  Dec 15 14:34:39.919: INFO: Namespace "e2e-ns-lsfz9-2572" has []v1.FinalizerName{"kubernetes"}
  Dec 15 14:34:39.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1152" for this suite. @ 12/15/23 14:34:39.922
  STEP: Destroying namespace "e2e-ns-lsfz9-2572" for this suite. @ 12/15/23 14:34:39.924
• [0.032 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/15/23 14:34:39.927
  Dec 15 14:34:39.927: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename cronjob @ 12/15/23 14:34:39.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:34:39.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:34:39.936
  STEP: Creating a ForbidConcurrent cronjob @ 12/15/23 14:34:39.938
  STEP: Ensuring a job is scheduled @ 12/15/23 14:34:39.94
  STEP: Ensuring exactly one is scheduled @ 12/15/23 14:35:01.945
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/15/23 14:35:01.949
  STEP: Ensuring no more jobs are scheduled @ 12/15/23 14:35:01.952
  STEP: Removing cronjob @ 12/15/23 14:40:01.959
  Dec 15 14:40:01.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1800" for this suite. @ 12/15/23 14:40:01.966
• [322.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/15/23 14:40:01.971
  Dec 15 14:40:01.971: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-runtime @ 12/15/23 14:40:01.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:40:01.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:40:01.985
  STEP: create the container @ 12/15/23 14:40:01.987
  W1215 14:40:01.992648      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/15/23 14:40:01.992
  STEP: get the container status @ 12/15/23 14:40:04
  STEP: the container should be terminated @ 12/15/23 14:40:04.002
  STEP: the termination message should be set @ 12/15/23 14:40:04.002
  Dec 15 14:40:04.002: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/15/23 14:40:04.002
  Dec 15 14:40:04.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9646" for this suite. @ 12/15/23 14:40:04.011
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 12/15/23 14:40:04.015
  Dec 15 14:40:04.015: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename var-expansion @ 12/15/23 14:40:04.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:40:04.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:40:04.029
  Dec 15 14:40:06.044: INFO: Deleting pod "var-expansion-59820e40-b2d5-4629-b335-5c6fac223a56" in namespace "var-expansion-1821"
  Dec 15 14:40:06.050: INFO: Wait up to 5m0s for pod "var-expansion-59820e40-b2d5-4629-b335-5c6fac223a56" to be fully deleted
  Dec 15 14:40:08.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1821" for this suite. @ 12/15/23 14:40:08.059
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/15/23 14:40:08.063
  Dec 15 14:40:08.063: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replication-controller @ 12/15/23 14:40:08.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:40:08.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:40:08.074
  STEP: creating a ReplicationController @ 12/15/23 14:40:08.077
  STEP: waiting for RC to be added @ 12/15/23 14:40:08.08
  STEP: waiting for available Replicas @ 12/15/23 14:40:08.08
  STEP: patching ReplicationController @ 12/15/23 14:40:08.8
  STEP: waiting for RC to be modified @ 12/15/23 14:40:08.804
  STEP: patching ReplicationController status @ 12/15/23 14:40:08.804
  STEP: waiting for RC to be modified @ 12/15/23 14:40:08.807
  STEP: waiting for available Replicas @ 12/15/23 14:40:08.807
  STEP: fetching ReplicationController status @ 12/15/23 14:40:08.815
  STEP: patching ReplicationController scale @ 12/15/23 14:40:08.817
  STEP: waiting for RC to be modified @ 12/15/23 14:40:08.82
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/15/23 14:40:08.82
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/15/23 14:40:10.016
  STEP: updating ReplicationController status @ 12/15/23 14:40:10.018
  STEP: waiting for RC to be modified @ 12/15/23 14:40:10.021
  STEP: listing all ReplicationControllers @ 12/15/23 14:40:10.021
  STEP: checking that ReplicationController has expected values @ 12/15/23 14:40:10.023
  STEP: deleting ReplicationControllers by collection @ 12/15/23 14:40:10.023
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/15/23 14:40:10.027
  Dec 15 14:40:10.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1215 14:40:10.059443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3390" for this suite. @ 12/15/23 14:40:10.062
• [2.002 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/15/23 14:40:10.065
  Dec 15 14:40:10.065: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:40:10.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:40:10.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:40:10.077
  STEP: Creating configMap with name configmap-projected-all-test-volume-85ac7a9e-8892-451c-b20a-5b95cde1ae17 @ 12/15/23 14:40:10.079
  STEP: Creating secret with name secret-projected-all-test-volume-b4cd6395-de14-43fe-907b-f16dfc403e1e @ 12/15/23 14:40:10.081
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/15/23 14:40:10.084
  E1215 14:40:11.059570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:12.059979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:40:12.094
  Dec 15 14:40:12.097: INFO: Trying to get logs from node talos-default-worker-1 pod projected-volume-b7ca2e13-e936-421b-bc41-1ef7aded00f4 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:40:12.109
  Dec 15 14:40:12.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2517" for this suite. @ 12/15/23 14:40:12.124
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/15/23 14:40:12.13
  Dec 15 14:40:12.130: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename cronjob @ 12/15/23 14:40:12.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:40:12.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:40:12.149
  STEP: Creating a suspended cronjob @ 12/15/23 14:40:12.152
  STEP: Ensuring no jobs are scheduled @ 12/15/23 14:40:12.156
  E1215 14:40:13.060519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:14.060652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:15.060695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:16.060954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:17.061464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:18.061891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:19.062751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:20.062947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:21.063561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:22.063803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:23.064162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:24.064436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:25.064560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:26.064734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:27.064988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:28.065329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:29.066021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:30.066260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:31.067139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:32.067560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:33.068271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:34.068391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:35.069140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:36.069373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:37.070473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:38.070878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:39.071499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:40.071651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:41.071846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:42.072834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:43.073315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:44.073589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:45.074334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:46.074561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:47.075094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:48.075384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:49.076349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:50.076466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:51.077373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:52.077508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:53.077703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:54.078058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:55.078282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:56.078497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:57.079559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:58.079992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:40:59.080269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:00.081257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:01.081636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:02.081899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:03.082963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:04.083353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:05.083726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:06.083777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:07.084345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:08.084999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:09.085494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:10.085791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:11.086443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:12.086684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:13.087444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:14.087738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:15.088573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:16.088854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:17.089325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:18.090056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:19.090960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:20.091108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:21.091911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:22.092150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:23.092199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:24.092466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:25.093488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:26.093716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:27.094593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:28.095050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:29.095210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:30.095438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:31.095578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:32.095858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:33.096366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:34.096702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:35.097287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:36.097404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:37.098176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:38.098589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:39.099460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:40.099521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:41.100169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:42.100363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:43.100623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:44.100701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:45.100877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:46.101369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:47.101703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:48.102040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:49.102215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:50.102488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:51.102572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:52.102674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:53.103353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:54.103649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:55.104289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:56.104561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:57.104651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:58.104982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:41:59.105446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:00.106284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:01.106710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:02.106932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:03.106986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:04.107474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:05.108243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:06.108526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:07.108633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:08.108716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:09.109011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:10.109205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:11.110336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:12.110592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:13.111471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:14.111749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:15.112511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:16.112679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:17.113402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:18.114167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:19.115081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:20.115315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:21.115970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:22.116185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:23.116264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:24.116575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:25.116627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:26.116888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:27.117593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:28.118353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:29.119325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:30.119474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:31.119941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:32.120180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:33.120318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:34.120694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:35.121383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:36.121544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:37.122189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:38.122571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:39.123031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:40.123257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:41.123863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:42.124085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:43.124205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:44.124471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:45.124882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:46.125137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:47.125946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:48.126315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:49.126836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:50.127023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:51.127292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:52.127513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:53.127629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:54.127714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:55.127812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:56.127936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:57.128032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:58.128436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:42:59.128536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:00.128804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:01.129676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:02.130342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:03.130455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:04.130711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:05.131639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:06.131729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:07.132723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:08.133050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:09.133494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:10.133698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:11.134164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:12.134593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:13.134725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:14.135083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:15.135193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:16.135404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:17.135735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:18.136073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:19.136514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:20.136620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:21.137163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:22.137325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:23.137458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:24.137537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:25.137654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:26.138778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:27.138841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:28.139265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:29.140214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:30.140409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:31.140564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:32.140868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:33.141463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:34.141536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:35.142092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:36.142281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:37.142533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:38.143385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:39.143572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:40.143811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:41.143924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:42.144073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:43.144925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:44.145039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:45.145770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:46.145972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:47.146785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:48.147151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:49.147259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:50.147355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:51.147918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:52.148157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:53.148610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:54.148975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:55.149858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:56.150088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:57.150792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:58.151719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:43:59.152701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:00.152841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:01.153236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:02.153457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:03.154089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:04.154432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:05.155087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:06.155498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:07.155509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:08.156119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:09.157197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:10.157410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:11.157484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:12.157574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:13.158109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:14.158528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:15.158922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:16.159226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:17.160041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:18.160384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:19.160642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:20.161547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:21.161777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:22.162006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:23.162241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:24.162564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:25.162761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:26.163280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:27.163480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:28.163852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:29.164195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:30.164437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:31.164661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:32.164808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:33.164937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:34.165092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:35.165283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:36.166252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:37.166310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:38.166623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:39.167017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:40.167920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:41.168079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:42.168746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:43.169002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:44.168976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:45.169352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:46.170252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:47.170414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:48.170884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:49.171022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:50.171862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:51.172065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:52.172864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:53.173105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:54.173959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:55.174398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:56.174555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:57.175378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:58.175548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:44:59.175897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:00.176357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:01.176543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:02.177136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:03.177331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:04.177654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:05.177864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:06.178899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:07.179349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:08.180087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:09.180477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:10.181077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:11.181269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/15/23 14:45:12.162
  STEP: Removing cronjob @ 12/15/23 14:45:12.164
  Dec 15 14:45:12.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3972" for this suite. @ 12/15/23 14:45:12.171
• [300.046 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/15/23 14:45:12.176
  Dec 15 14:45:12.176: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename events @ 12/15/23 14:45:12.176
  E1215 14:45:12.181794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:45:12.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:45:12.191
  STEP: creating a test event @ 12/15/23 14:45:12.194
  STEP: listing all events in all namespaces @ 12/15/23 14:45:12.199
  STEP: patching the test event @ 12/15/23 14:45:12.204
  STEP: fetching the test event @ 12/15/23 14:45:12.21
  STEP: updating the test event @ 12/15/23 14:45:12.213
  STEP: getting the test event @ 12/15/23 14:45:12.22
  STEP: deleting the test event @ 12/15/23 14:45:12.223
  STEP: listing all events in all namespaces @ 12/15/23 14:45:12.227
  Dec 15 14:45:12.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4173" for this suite. @ 12/15/23 14:45:12.232
• [0.059 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 12/15/23 14:45:12.235
  Dec 15 14:45:12.235: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/23 14:45:12.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:45:12.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:45:12.244
  Dec 15 14:45:12.246: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 14:45:13.182860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/15/23 14:45:13.541
  Dec 15 14:45:13.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 create -f -'
  E1215 14:45:14.183037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:15.183131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:15.588: INFO: stderr: ""
  Dec 15 14:45:15.588: INFO: stdout: "e2e-test-crd-publish-openapi-2123-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 15 14:45:15.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 delete e2e-test-crd-publish-openapi-2123-crds test-cr'
  Dec 15 14:45:15.662: INFO: stderr: ""
  Dec 15 14:45:15.662: INFO: stdout: "e2e-test-crd-publish-openapi-2123-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Dec 15 14:45:15.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 apply -f -'
  Dec 15 14:45:15.734: INFO: stderr: ""
  Dec 15 14:45:15.734: INFO: stdout: "e2e-test-crd-publish-openapi-2123-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 15 14:45:15.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 delete e2e-test-crd-publish-openapi-2123-crds test-cr'
  Dec 15 14:45:15.786: INFO: stderr: ""
  Dec 15 14:45:15.786: INFO: stdout: "e2e-test-crd-publish-openapi-2123-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/15/23 14:45:15.786
  Dec 15 14:45:15.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-1142 explain e2e-test-crd-publish-openapi-2123-crds'
  Dec 15 14:45:15.828: INFO: stderr: ""
  Dec 15 14:45:15.828: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2123-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1215 14:45:16.183846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:17.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1142" for this suite. @ 12/15/23 14:45:17.127
• [4.896 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/15/23 14:45:17.131
  Dec 15 14:45:17.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/23 14:45:17.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:45:17.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:45:17.142
  STEP: creating a ServiceAccount @ 12/15/23 14:45:17.144
  STEP: watching for the ServiceAccount to be added @ 12/15/23 14:45:17.149
  STEP: patching the ServiceAccount @ 12/15/23 14:45:17.151
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/15/23 14:45:17.154
  STEP: deleting the ServiceAccount @ 12/15/23 14:45:17.156
  Dec 15 14:45:17.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9860" for this suite. @ 12/15/23 14:45:17.164
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 12/15/23 14:45:17.168
  Dec 15 14:45:17.168: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 14:45:17.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:45:17.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:45:17.181
  STEP: creating Agnhost RC @ 12/15/23 14:45:17.183
  E1215 14:45:17.183868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:17.183: INFO: namespace kubectl-4818
  Dec 15 14:45:17.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-4818 create -f -'
  Dec 15 14:45:17.283: INFO: stderr: ""
  Dec 15 14:45:17.283: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/15/23 14:45:17.283
  E1215 14:45:18.184236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:18.287: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 15 14:45:18.287: INFO: Found 1 / 1
  Dec 15 14:45:18.287: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 15 14:45:18.289: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 15 14:45:18.289: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 15 14:45:18.289: INFO: wait on agnhost-primary startup in kubectl-4818 
  Dec 15 14:45:18.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-4818 logs agnhost-primary-2xprz agnhost-primary'
  Dec 15 14:45:18.367: INFO: stderr: ""
  Dec 15 14:45:18.367: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 12/15/23 14:45:18.367
  Dec 15 14:45:18.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-4818 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Dec 15 14:45:18.440: INFO: stderr: ""
  Dec 15 14:45:18.440: INFO: stdout: "service/rm2 exposed\n"
  Dec 15 14:45:18.444: INFO: Service rm2 in namespace kubectl-4818 found.
  E1215 14:45:19.185278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:20.185414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 12/15/23 14:45:20.45
  Dec 15 14:45:20.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-4818 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Dec 15 14:45:20.523: INFO: stderr: ""
  Dec 15 14:45:20.524: INFO: stdout: "service/rm3 exposed\n"
  Dec 15 14:45:20.527: INFO: Service rm3 in namespace kubectl-4818 found.
  E1215 14:45:21.185633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:22.185870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:22.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4818" for this suite. @ 12/15/23 14:45:22.535
• [5.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/15/23 14:45:22.538
  Dec 15 14:45:22.538: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/23 14:45:22.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:45:22.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:45:22.549
  Dec 15 14:45:22.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6360" for this suite. @ 12/15/23 14:45:22.557
• [0.022 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 12/15/23 14:45:22.56
  Dec 15 14:45:22.560: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 14:45:22.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:45:22.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:45:22.57
  STEP: Discovering how many secrets are in namespace by default @ 12/15/23 14:45:22.572
  E1215 14:45:23.185890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:24.186863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:25.187411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:26.187875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:27.187989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/15/23 14:45:27.575
  E1215 14:45:28.188116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:29.189067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:30.189787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:31.190594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:32.191002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/15/23 14:45:32.578
  STEP: Ensuring resource quota status is calculated @ 12/15/23 14:45:32.581
  E1215 14:45:33.191921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:34.192149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 12/15/23 14:45:34.585
  STEP: Ensuring resource quota status captures secret creation @ 12/15/23 14:45:34.593
  E1215 14:45:35.192383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:36.192520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 12/15/23 14:45:36.597
  STEP: Ensuring resource quota status released usage @ 12/15/23 14:45:36.601
  E1215 14:45:37.192543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:38.193080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:38.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3105" for this suite. @ 12/15/23 14:45:38.61
• [16.054 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/15/23 14:45:38.615
  Dec 15 14:45:38.615: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replicaset @ 12/15/23 14:45:38.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:45:38.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:45:38.63
  Dec 15 14:45:38.633: INFO: Creating ReplicaSet my-hostname-basic-ca0e8efa-cde6-4e08-804c-470a11ffd405
  Dec 15 14:45:38.640: INFO: Pod name my-hostname-basic-ca0e8efa-cde6-4e08-804c-470a11ffd405: Found 0 pods out of 1
  E1215 14:45:39.193872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:40.194093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:41.194242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:42.194332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:43.194499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:43.644: INFO: Pod name my-hostname-basic-ca0e8efa-cde6-4e08-804c-470a11ffd405: Found 1 pods out of 1
  Dec 15 14:45:43.644: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-ca0e8efa-cde6-4e08-804c-470a11ffd405" is running
  Dec 15 14:45:43.647: INFO: Pod "my-hostname-basic-ca0e8efa-cde6-4e08-804c-470a11ffd405-8p8qz" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:45:39 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:45:38 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:45:39 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:45:39 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:45:38 +0000 UTC Reason: Message:}])
  Dec 15 14:45:43.647: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/15/23 14:45:43.647
  Dec 15 14:45:43.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-450" for this suite. @ 12/15/23 14:45:43.661
• [5.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 12/15/23 14:45:43.666
  Dec 15 14:45:43.666: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename var-expansion @ 12/15/23 14:45:43.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:45:43.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:45:43.684
  E1215 14:45:44.194746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:45.194950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:45.701: INFO: Deleting pod "var-expansion-c3600fcb-a4fb-438f-b073-0e02d0ebe6d0" in namespace "var-expansion-9381"
  Dec 15 14:45:45.706: INFO: Wait up to 5m0s for pod "var-expansion-c3600fcb-a4fb-438f-b073-0e02d0ebe6d0" to be fully deleted
  E1215 14:45:46.196036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:47.196245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:47.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9381" for this suite. @ 12/15/23 14:45:47.717
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 12/15/23 14:45:47.723
  Dec 15 14:45:47.723: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename statefulset @ 12/15/23 14:45:47.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:45:47.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:45:47.74
  STEP: Creating service test in namespace statefulset-2244 @ 12/15/23 14:45:47.743
  STEP: Looking for a node to schedule stateful set and pod @ 12/15/23 14:45:47.748
  STEP: Creating pod with conflicting port in namespace statefulset-2244 @ 12/15/23 14:45:47.752
  STEP: Waiting until pod test-pod will start running in namespace statefulset-2244 @ 12/15/23 14:45:47.759
  E1215 14:45:48.196775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:49.196968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-2244 @ 12/15/23 14:45:49.764
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2244 @ 12/15/23 14:45:49.769
  Dec 15 14:45:49.783: INFO: Observed stateful pod in namespace: statefulset-2244, name: ss-0, uid: cdff1a82-2833-4730-a5ca-1fdb7f11e57b, status phase: Pending. Waiting for statefulset controller to delete.
  Dec 15 14:45:49.795: INFO: Observed stateful pod in namespace: statefulset-2244, name: ss-0, uid: cdff1a82-2833-4730-a5ca-1fdb7f11e57b, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 15 14:45:49.818: INFO: Observed stateful pod in namespace: statefulset-2244, name: ss-0, uid: cdff1a82-2833-4730-a5ca-1fdb7f11e57b, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 15 14:45:49.823: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2244
  STEP: Removing pod with conflicting port in namespace statefulset-2244 @ 12/15/23 14:45:49.823
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2244 and will be in running state @ 12/15/23 14:45:49.832
  E1215 14:45:50.197290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:51.197440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:45:51.840: INFO: Deleting all statefulset in ns statefulset-2244
  Dec 15 14:45:51.843: INFO: Scaling statefulset ss to 0
  E1215 14:45:52.198286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:53.198472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:54.198804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:55.198994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:56.199217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:57.199299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:58.199683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:45:59.199762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:00.199866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:01.199973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:46:01.853: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 15 14:46:01.855: INFO: Deleting statefulset ss
  Dec 15 14:46:01.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2244" for this suite. @ 12/15/23 14:46:01.865
• [14.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/15/23 14:46:01.869
  Dec 15 14:46:01.869: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:46:01.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:46:01.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:46:01.883
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-0df9901c-d4cb-4d28-b8c4-2cc85ffabe43 @ 12/15/23 14:46:01.889
  STEP: Creating the pod @ 12/15/23 14:46:01.892
  E1215 14:46:02.200524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:03.201456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-0df9901c-d4cb-4d28-b8c4-2cc85ffabe43 @ 12/15/23 14:46:03.91
  STEP: waiting to observe update in volume @ 12/15/23 14:46:03.914
  E1215 14:46:04.201702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:05.201972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:06.202575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:07.202778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:08.203125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:09.203513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:10.203682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:11.203947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:12.204516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:13.204735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:14.205069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:15.206035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:16.206289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:17.206488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:18.206564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:19.206827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:20.207487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:21.207625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:22.207807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:23.208015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:24.208904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:25.209166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:26.209275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:27.209490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:28.209711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:29.210084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:30.210101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:31.210368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:32.210709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:33.210923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:34.211502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:35.211782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:36.212284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:37.212522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:38.213095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:39.213438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:40.214285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:41.214499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:42.215039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:43.215253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:44.216187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:45.216422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:46.217043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:47.217135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:48.217534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:49.217814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:50.218328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:51.218564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:52.218651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:53.218864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:54.219866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:55.219983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:56.220287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:57.220397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:58.220829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:46:59.221112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:00.221705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:01.221956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:02.222071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:03.222319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:04.222615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:05.222841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:06.223844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:07.224018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:08.225082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:09.225190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:10.225617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:11.225872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:12.226396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:13.226486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:14.227312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:15.227455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:16.228285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:17.228456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:18.229471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:19.229621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:20.230493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:21.230719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:47:22.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4287" for this suite. @ 12/15/23 14:47:22.157
• [80.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 12/15/23 14:47:22.164
  Dec 15 14:47:22.164: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/15/23 14:47:22.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:47:22.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:47:22.182
  STEP: create the container to handle the HTTPGet hook request. @ 12/15/23 14:47:22.189
  E1215 14:47:22.231772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:23.232685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/15/23 14:47:24.201
  E1215 14:47:24.233668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:25.233748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 12/15/23 14:47:26.212
  E1215 14:47:26.234161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:27.234355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 12/15/23 14:47:28.223
  E1215 14:47:28.234418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:47:28.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-886" for this suite. @ 12/15/23 14:47:28.237
• [6.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/15/23 14:47:28.243
  Dec 15 14:47:28.243: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 14:47:28.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:47:28.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:47:28.259
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/15/23 14:47:28.261
  E1215 14:47:29.235382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:30.235782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:31.236217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:32.236448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:47:32.276
  Dec 15 14:47:32.278: INFO: Trying to get logs from node talos-default-worker-1 pod pod-42ef3834-55fb-4ac1-81ba-6cdb607b20f4 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 14:47:32.282
  Dec 15 14:47:32.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-438" for this suite. @ 12/15/23 14:47:32.29
• [4.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 12/15/23 14:47:32.293
  Dec 15 14:47:32.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/15/23 14:47:32.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:47:32.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:47:32.304
  STEP: create the container to handle the HTTPGet hook request. @ 12/15/23 14:47:32.308
  E1215 14:47:33.237425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:34.237881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/15/23 14:47:34.319
  E1215 14:47:35.238029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:36.238794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/15/23 14:47:36.333
  STEP: delete the pod with lifecycle hook @ 12/15/23 14:47:36.338
  E1215 14:47:37.238948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:38.239293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:47:38.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8503" for this suite. @ 12/15/23 14:47:38.352
• [6.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/15/23 14:47:38.357
  Dec 15 14:47:38.358: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 14:47:38.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:47:38.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:47:38.375
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/15/23 14:47:38.378
  E1215 14:47:39.240264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:40.240488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:41.240580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:42.241570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:47:42.394
  Dec 15 14:47:42.396: INFO: Trying to get logs from node talos-default-worker-1 pod pod-06746c2a-a682-42a3-b39f-1af9aa24e7c2 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 14:47:42.401
  Dec 15 14:47:42.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5000" for this suite. @ 12/15/23 14:47:42.412
• [4.059 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 12/15/23 14:47:42.416
  Dec 15 14:47:42.416: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename dns @ 12/15/23 14:47:42.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:47:42.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:47:42.431
  STEP: Creating a test headless service @ 12/15/23 14:47:42.433
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4192 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4192;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4192 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4192;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4192.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4192.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4192.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4192.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4192.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4192.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4192.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4192.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4192.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4192.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4192.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4192.svc;check="$$(dig +notcp +noall +answer +search 204.135.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.135.204_udp@PTR;check="$$(dig +tcp +noall +answer +search 204.135.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.135.204_tcp@PTR;sleep 1; done
   @ 12/15/23 14:47:42.445
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4192 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4192;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4192 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4192;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4192.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4192.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4192.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4192.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4192.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4192.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4192.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4192.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4192.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4192.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4192.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4192.svc;check="$$(dig +notcp +noall +answer +search 204.135.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.135.204_udp@PTR;check="$$(dig +tcp +noall +answer +search 204.135.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.135.204_tcp@PTR;sleep 1; done
   @ 12/15/23 14:47:42.445
  STEP: creating a pod to probe DNS @ 12/15/23 14:47:42.445
  STEP: submitting the pod to kubernetes @ 12/15/23 14:47:42.445
  E1215 14:47:43.241880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:44.242233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:45.242732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:46.242950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/15/23 14:47:46.462
  STEP: looking for the results for each expected name from probers @ 12/15/23 14:47:46.464
  Dec 15 14:47:46.467: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.469: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.471: INFO: Unable to read wheezy_udp@dns-test-service.dns-4192 from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.473: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4192 from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.474: INFO: Unable to read wheezy_udp@dns-test-service.dns-4192.svc from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.476: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4192.svc from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.478: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4192.svc from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.480: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4192.svc from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.489: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.490: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.492: INFO: Unable to read jessie_udp@dns-test-service.dns-4192 from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.493: INFO: Unable to read jessie_tcp@dns-test-service.dns-4192 from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.495: INFO: Unable to read jessie_udp@dns-test-service.dns-4192.svc from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.496: INFO: Unable to read jessie_tcp@dns-test-service.dns-4192.svc from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.498: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4192.svc from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.499: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4192.svc from pod dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9: the server could not find the requested resource (get pods dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9)
  Dec 15 14:47:46.505: INFO: Lookups using dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4192 wheezy_tcp@dns-test-service.dns-4192 wheezy_udp@dns-test-service.dns-4192.svc wheezy_tcp@dns-test-service.dns-4192.svc wheezy_udp@_http._tcp.dns-test-service.dns-4192.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4192.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4192 jessie_tcp@dns-test-service.dns-4192 jessie_udp@dns-test-service.dns-4192.svc jessie_tcp@dns-test-service.dns-4192.svc jessie_udp@_http._tcp.dns-test-service.dns-4192.svc jessie_tcp@_http._tcp.dns-test-service.dns-4192.svc]

  Dec 15 14:47:46.508: INFO: Pod client logs for webserver: 
  Dec 15 14:47:46.510: INFO: Pod client logs for querier: 
  Dec 15 14:47:46.513: INFO: Pod client logs for jessie-querier: 
  E1215 14:47:47.243098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:48.243472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:49.243655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:50.244612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:51.244856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:47:51.534: INFO: DNS probes using dns-4192/dns-test-daf8c940-19f3-4d54-987e-79cf0cc195a9 succeeded

  STEP: deleting the pod @ 12/15/23 14:47:51.534
  STEP: deleting the test service @ 12/15/23 14:47:51.543
  STEP: deleting the test headless service @ 12/15/23 14:47:51.559
  Dec 15 14:47:51.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4192" for this suite. @ 12/15/23 14:47:51.571
• [9.159 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/15/23 14:47:51.575
  Dec 15 14:47:51.575: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-runtime @ 12/15/23 14:47:51.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:47:51.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:47:51.589
  STEP: create the container @ 12/15/23 14:47:51.592
  W1215 14:47:51.597438      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/15/23 14:47:51.597
  E1215 14:47:52.245802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:53.246069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/15/23 14:47:53.604
  STEP: the container should be terminated @ 12/15/23 14:47:53.606
  STEP: the termination message should be set @ 12/15/23 14:47:53.606
  Dec 15 14:47:53.606: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/15/23 14:47:53.606
  Dec 15 14:47:53.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6102" for this suite. @ 12/15/23 14:47:53.614
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 12/15/23 14:47:53.617
  Dec 15 14:47:53.617: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 14:47:53.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:47:53.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:47:53.627
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/15/23 14:47:53.628
  Dec 15 14:47:53.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-407 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 15 14:47:53.674: INFO: stderr: ""
  Dec 15 14:47:53.674: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/15/23 14:47:53.674
  Dec 15 14:47:53.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-407 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Dec 15 14:47:53.717: INFO: stderr: ""
  Dec 15 14:47:53.717: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/15/23 14:47:53.717
  Dec 15 14:47:53.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-407 delete pods e2e-test-httpd-pod'
  E1215 14:47:54.246706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:55.247099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:47:55.493: INFO: stderr: ""
  Dec 15 14:47:55.493: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 15 14:47:55.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-407" for this suite. @ 12/15/23 14:47:55.496
• [1.883 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/15/23 14:47:55.5
  Dec 15 14:47:55.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 14:47:55.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:47:55.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:47:55.515
  STEP: Creating secret with name secret-test-4848efdb-ec53-4863-b162-9fb2c18ee8f0 @ 12/15/23 14:47:55.517
  STEP: Creating a pod to test consume secrets @ 12/15/23 14:47:55.52
  E1215 14:47:56.247479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:57.247699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:58.248728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:47:59.249053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:47:59.536
  Dec 15 14:47:59.539: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-ada27e19-bf1a-4869-9108-5e9810ed13f2 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:47:59.544
  Dec 15 14:47:59.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-531" for this suite. @ 12/15/23 14:47:59.558
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/15/23 14:47:59.564
  Dec 15 14:47:59.564: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 14:47:59.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:47:59.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:47:59.581
  STEP: Creating a pod to test downward api env vars @ 12/15/23 14:47:59.583
  E1215 14:48:00.249624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:01.249956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:48:01.596
  Dec 15 14:48:01.598: INFO: Trying to get logs from node talos-default-worker-1 pod downward-api-4df26ab7-0bc5-47da-9e63-ede50cd33c47 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/23 14:48:01.604
  Dec 15 14:48:01.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3840" for this suite. @ 12/15/23 14:48:01.616
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 12/15/23 14:48:01.621
  Dec 15 14:48:01.621: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pv @ 12/15/23 14:48:01.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:48:01.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:48:01.635
  STEP: Creating initial PV and PVC @ 12/15/23 14:48:01.638
  Dec 15 14:48:01.638: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1616" @ 12/15/23 14:48:01.645
  STEP: Listing PVCs in namespace "pv-1616" @ 12/15/23 14:48:01.647
  STEP: Patching the PV "pv-1616-kqk6g" @ 12/15/23 14:48:01.649
  STEP: Patching the PVC "pvc-br7kt" @ 12/15/23 14:48:01.656
  STEP: Getting PV "pv-1616-kqk6g" @ 12/15/23 14:48:01.66
  STEP: Getting PVC "pvc-br7kt" @ 12/15/23 14:48:01.662
  STEP: Deleting PVC "pvc-br7kt" @ 12/15/23 14:48:01.664
  STEP: Confirm deletion of PVC "pvc-br7kt" @ 12/15/23 14:48:01.668
  E1215 14:48:02.250492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:03.251160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-1616-kqk6g" @ 12/15/23 14:48:03.674
  STEP: Confirm deletion of PV "pv-1616-kqk6g" @ 12/15/23 14:48:03.679
  E1215 14:48:04.251691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:05.251912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 12/15/23 14:48:05.685
  Dec 15 14:48:05.685: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1616-pps75" @ 12/15/23 14:48:05.689
  STEP: Updating the PVC "pvc-q59lg" @ 12/15/23 14:48:05.692
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-q59lg=updated" @ 12/15/23 14:48:05.696
  STEP: Deleting PVC "pvc-q59lg" via DeleteCollection @ 12/15/23 14:48:05.697
  STEP: Confirm deletion of PVC "pvc-q59lg" @ 12/15/23 14:48:05.7
  E1215 14:48:06.252904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:07.253229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-1616-pps75" via DeleteCollection @ 12/15/23 14:48:07.705
  STEP: Confirm deletion of PV "pv-1616-pps75" @ 12/15/23 14:48:07.708
  E1215 14:48:08.254100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:09.254535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:48:09.713: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Dec 15 14:48:09.713: INFO: Deleting PersistentVolumeClaim "pvc-q59lg"
  Dec 15 14:48:09.714: INFO: Deleting PersistentVolume "pv-1616-pps75"
  Dec 15 14:48:09.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1616" for this suite. @ 12/15/23 14:48:09.718
• [8.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/15/23 14:48:09.722
  Dec 15 14:48:09.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replication-controller @ 12/15/23 14:48:09.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:48:09.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:48:09.738
  STEP: Creating replication controller my-hostname-basic-382ee3a3-3454-4bcf-9845-d9e9bd89fe37 @ 12/15/23 14:48:09.741
  Dec 15 14:48:09.748: INFO: Pod name my-hostname-basic-382ee3a3-3454-4bcf-9845-d9e9bd89fe37: Found 0 pods out of 1
  E1215 14:48:10.254668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:11.255805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:12.256008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:13.256192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:14.256563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:48:14.752: INFO: Pod name my-hostname-basic-382ee3a3-3454-4bcf-9845-d9e9bd89fe37: Found 1 pods out of 1
  Dec 15 14:48:14.752: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-382ee3a3-3454-4bcf-9845-d9e9bd89fe37" are running
  Dec 15 14:48:14.754: INFO: Pod "my-hostname-basic-382ee3a3-3454-4bcf-9845-d9e9bd89fe37-skdlf" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:48:10 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:48:09 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:48:10 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:48:10 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-15 14:48:09 +0000 UTC Reason: Message:}])
  Dec 15 14:48:14.755: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/15/23 14:48:14.755
  Dec 15 14:48:14.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-835" for this suite. @ 12/15/23 14:48:14.767
• [5.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/15/23 14:48:14.773
  Dec 15 14:48:14.773: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename podtemplate @ 12/15/23 14:48:14.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:48:14.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:48:14.789
  STEP: Create a pod template @ 12/15/23 14:48:14.792
  STEP: Replace a pod template @ 12/15/23 14:48:14.796
  Dec 15 14:48:14.802: INFO: Found updated podtemplate annotation: "true"

  Dec 15 14:48:14.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1642" for this suite. @ 12/15/23 14:48:14.806
• [0.038 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/15/23 14:48:14.811
  Dec 15 14:48:14.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 14:48:14.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:48:14.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:48:14.826
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/15/23 14:48:14.829
  E1215 14:48:15.256670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:16.256835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:48:16.84
  Dec 15 14:48:16.842: INFO: Trying to get logs from node talos-default-worker-2 pod pod-98924ae8-f6ea-425a-b94c-e3f387e22403 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 14:48:16.846
  Dec 15 14:48:16.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7049" for this suite. @ 12/15/23 14:48:16.858
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/15/23 14:48:16.862
  Dec 15 14:48:16.862: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:48:16.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:48:16.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:48:16.876
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 14:48:16.879
  E1215 14:48:17.257813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:18.258026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:48:18.889
  Dec 15 14:48:18.892: INFO: Trying to get logs from node talos-default-worker-2 pod downwardapi-volume-1db5c657-012e-44e9-ad67-33530cee70ac container client-container: <nil>
  STEP: delete the pod @ 12/15/23 14:48:18.896
  Dec 15 14:48:18.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9439" for this suite. @ 12/15/23 14:48:18.908
• [2.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/15/23 14:48:18.912
  Dec 15 14:48:18.912: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/23 14:48:18.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:48:18.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:48:18.927
  STEP: fetching the /apis discovery document @ 12/15/23 14:48:18.929
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/15/23 14:48:18.93
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/15/23 14:48:18.93
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/15/23 14:48:18.93
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/15/23 14:48:18.931
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/15/23 14:48:18.931
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/15/23 14:48:18.932
  Dec 15 14:48:18.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5805" for this suite. @ 12/15/23 14:48:18.935
• [0.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 12/15/23 14:48:18.94
  Dec 15 14:48:18.940: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename statefulset @ 12/15/23 14:48:18.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:48:18.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:48:18.954
  STEP: Creating service test in namespace statefulset-7901 @ 12/15/23 14:48:18.956
  STEP: Creating a new StatefulSet @ 12/15/23 14:48:18.96
  Dec 15 14:48:18.967: INFO: Found 0 stateful pods, waiting for 3
  E1215 14:48:19.258577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:20.258878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:21.259080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:22.259263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:23.259417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:24.259797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:25.260130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:26.260362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:27.260600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:28.261239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:48:28.968: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 14:48:28.968: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 14:48:28.968: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 14:48:28.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7901 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 14:48:29.145: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 14:48:29.145: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 14:48:29.145: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1215 14:48:29.261675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:30.262487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:31.262741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:32.263041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:33.263254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:34.263443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:35.263640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:36.263975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:37.264187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:38.264435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/15/23 14:48:39.149
  Dec 15 14:48:39.163: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/15/23 14:48:39.163
  E1215 14:48:39.265316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:40.265517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:41.265744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:42.266469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:43.267361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:44.267606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:45.268660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:46.268857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:47.269087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:48.269551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 12/15/23 14:48:49.169
  Dec 15 14:48:49.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7901 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1215 14:48:49.269725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:48:49.297: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 15 14:48:49.297: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 15 14:48:49.297: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1215 14:48:50.270320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:51.270606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:52.270896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:53.271397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:54.271745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:55.271892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:56.272619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:57.272921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:58.273116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:48:59.273584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 12/15/23 14:48:59.309
  Dec 15 14:48:59.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7901 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 14:48:59.451: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 14:48:59.451: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 14:48:59.451: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1215 14:49:00.274589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:01.274813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:02.275018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:03.275249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:04.275972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:05.276161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:06.276347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:07.277186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:08.277523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:09.277778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:49:09.476: INFO: Updating stateful set ss2
  E1215 14:49:10.278021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:11.278268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:12.278481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:13.278652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:14.279045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:15.279262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:16.279702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:17.279919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:18.280212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:19.280296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 12/15/23 14:49:19.483
  Dec 15 14:49:19.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7901 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 15 14:49:19.615: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 15 14:49:19.615: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 15 14:49:19.615: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1215 14:49:20.281407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:21.281594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:22.281744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:23.282722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:24.283055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:25.283132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:26.283252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:27.283597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:28.284165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:29.284506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:49:29.622: INFO: Deleting all statefulset in ns statefulset-7901
  Dec 15 14:49:29.623: INFO: Scaling statefulset ss2 to 0
  E1215 14:49:30.285188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:31.285476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:32.285715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:33.285861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:34.286296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:35.286467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:36.286734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:37.287139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:38.287930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:39.288214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:49:39.631: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 15 14:49:39.633: INFO: Deleting statefulset ss2
  Dec 15 14:49:39.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7901" for this suite. @ 12/15/23 14:49:39.646
• [80.711 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 12/15/23 14:49:39.651
  Dec 15 14:49:39.651: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/23 14:49:39.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:49:39.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:49:39.667
  Dec 15 14:49:39.669: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 14:49:40.288679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/15/23 14:49:40.976
  Dec 15 14:49:40.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 create -f -'
  Dec 15 14:49:41.045: INFO: stderr: ""
  Dec 15 14:49:41.045: INFO: stdout: "e2e-test-crd-publish-openapi-925-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 15 14:49:41.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 delete e2e-test-crd-publish-openapi-925-crds test-foo'
  Dec 15 14:49:41.105: INFO: stderr: ""
  Dec 15 14:49:41.105: INFO: stdout: "e2e-test-crd-publish-openapi-925-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Dec 15 14:49:41.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 apply -f -'
  Dec 15 14:49:41.147: INFO: stderr: ""
  Dec 15 14:49:41.147: INFO: stdout: "e2e-test-crd-publish-openapi-925-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 15 14:49:41.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 delete e2e-test-crd-publish-openapi-925-crds test-foo'
  Dec 15 14:49:41.180: INFO: stderr: ""
  Dec 15 14:49:41.180: INFO: stdout: "e2e-test-crd-publish-openapi-925-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/15/23 14:49:41.18
  Dec 15 14:49:41.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 create -f -'
  Dec 15 14:49:41.212: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/15/23 14:49:41.212
  Dec 15 14:49:41.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 create -f -'
  Dec 15 14:49:41.244: INFO: rc: 1
  Dec 15 14:49:41.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 apply -f -'
  Dec 15 14:49:41.281: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/15/23 14:49:41.281
  Dec 15 14:49:41.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 create -f -'
  E1215 14:49:41.289457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:49:41.320: INFO: rc: 1
  Dec 15 14:49:41.320: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 apply -f -'
  Dec 15 14:49:41.361: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/15/23 14:49:41.361
  Dec 15 14:49:41.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 explain e2e-test-crd-publish-openapi-925-crds'
  Dec 15 14:49:41.397: INFO: stderr: ""
  Dec 15 14:49:41.397: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-925-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/15/23 14:49:41.398
  Dec 15 14:49:41.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 explain e2e-test-crd-publish-openapi-925-crds.metadata'
  Dec 15 14:49:41.435: INFO: stderr: ""
  Dec 15 14:49:41.435: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-925-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Dec 15 14:49:41.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 explain e2e-test-crd-publish-openapi-925-crds.spec'
  Dec 15 14:49:41.469: INFO: stderr: ""
  Dec 15 14:49:41.469: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-925-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Dec 15 14:49:41.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 explain e2e-test-crd-publish-openapi-925-crds.spec.bars'
  Dec 15 14:49:41.506: INFO: stderr: ""
  Dec 15 14:49:41.507: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-925-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/15/23 14:49:41.507
  Dec 15 14:49:41.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-6359 explain e2e-test-crd-publish-openapi-925-crds.spec.bars2'
  Dec 15 14:49:41.545: INFO: rc: 1
  E1215 14:49:42.289643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:49:42.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6359" for this suite. @ 12/15/23 14:49:42.788
• [3.141 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/15/23 14:49:42.792
  Dec 15 14:49:42.792: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 14:49:42.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:49:42.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:49:42.804
  STEP: Creating a pod to test downward api env vars @ 12/15/23 14:49:42.806
  E1215 14:49:43.289881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:44.290306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:49:44.818
  Dec 15 14:49:44.819: INFO: Trying to get logs from node talos-default-worker-1 pod downward-api-e037ebbc-09eb-42ec-8707-c7bc98b5aeb0 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/23 14:49:44.825
  Dec 15 14:49:44.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7657" for this suite. @ 12/15/23 14:49:44.835
• [2.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/15/23 14:49:44.838
  Dec 15 14:49:44.838: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:49:44.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:49:44.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:49:44.846
  STEP: Creating configMap with name cm-test-opt-del-f4d1c9ed-da8e-4706-91f6-d006b42c1553 @ 12/15/23 14:49:44.849
  STEP: Creating configMap with name cm-test-opt-upd-14087c16-eeee-47f6-b4ae-098a89a4885f @ 12/15/23 14:49:44.851
  STEP: Creating the pod @ 12/15/23 14:49:44.853
  E1215 14:49:45.290403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:46.290716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-f4d1c9ed-da8e-4706-91f6-d006b42c1553 @ 12/15/23 14:49:46.88
  STEP: Updating configmap cm-test-opt-upd-14087c16-eeee-47f6-b4ae-098a89a4885f @ 12/15/23 14:49:46.885
  STEP: Creating configMap with name cm-test-opt-create-c01d1efc-e16a-4ee0-b684-c751e78f19f7 @ 12/15/23 14:49:46.889
  STEP: waiting to observe update in volume @ 12/15/23 14:49:46.893
  E1215 14:49:47.291209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:48.291819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:49.292759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:50.293035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:51.293060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:52.293330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:53.294118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:54.294650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:55.295594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:56.295835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:57.296903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:58.297337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:49:59.297866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:00.298323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:01.299126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:02.299349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:03.299541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:04.300091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:05.300205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:06.300461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:07.301313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:08.301955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:09.302878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:10.303009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:11.303424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:12.303673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:13.304511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:14.304912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:15.305677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:16.305903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:17.307025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:18.307386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:19.308489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:20.308686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:21.309237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:22.309461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:23.309591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:24.309850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:25.310395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:26.310712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:27.310797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:28.311205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:29.311409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:30.311669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:31.312072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:32.312420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:33.313190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:34.313589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:35.314414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:36.315231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:37.315797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:38.316867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:39.317071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:40.317260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:41.318259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:42.318429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:43.318461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:44.318812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:45.319783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:46.320139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:47.320658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:48.321081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:49.321751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:50.322799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:51.323840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:52.324065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:53.324415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:54.324710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:55.325150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:56.325371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:57.326055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:58.327047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:50:59.327444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:00.327762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:01.328712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:02.329131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:03.330116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:04.330447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:05.331322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:06.331572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:07.332071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:08.332147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:09.332333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:10.332922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:11.333650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:12.333884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:13.334689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:14.334981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:51:15.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9921" for this suite. @ 12/15/23 14:51:15.199
• [90.364 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/15/23 14:51:15.202
  Dec 15 14:51:15.202: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-watch @ 12/15/23 14:51:15.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:51:15.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:51:15.21
  Dec 15 14:51:15.211: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 14:51:15.335842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:16.336795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:17.336974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 12/15/23 14:51:17.732
  Dec 15 14:51:17.735: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-15T14:51:17Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-15T14:51:17Z]] name:name1 resourceVersion:13410 uid:6ace663b-daa0-4e57-84b2-ee58f78b6d0d] num:map[num1:9223372036854775807 num2:1000000]]}
  E1215 14:51:18.337132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:19.337538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:20.337705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:21.337899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:22.338097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:23.338479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:24.339443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:25.339668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:26.339900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:27.340161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 12/15/23 14:51:27.735
  Dec 15 14:51:27.740: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-15T14:51:27Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-15T14:51:27Z]] name:name2 resourceVersion:13453 uid:fb97881c-ca7b-415c-942d-6f3afa8d2772] num:map[num1:9223372036854775807 num2:1000000]]}
  E1215 14:51:28.340911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:29.341227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:30.341613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:31.341843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:32.342107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:33.342348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:34.342752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:35.343318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:36.343708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:37.343927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 12/15/23 14:51:37.74
  Dec 15 14:51:37.746: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-15T14:51:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-15T14:51:37Z]] name:name1 resourceVersion:13474 uid:6ace663b-daa0-4e57-84b2-ee58f78b6d0d] num:map[num1:9223372036854775807 num2:1000000]]}
  E1215 14:51:38.344933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:39.345279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:40.345481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:41.345847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:42.345829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:43.346120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:44.346528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:45.347427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:46.347721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:47.347970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 12/15/23 14:51:47.746
  Dec 15 14:51:47.750: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-15T14:51:27Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-15T14:51:47Z]] name:name2 resourceVersion:13496 uid:fb97881c-ca7b-415c-942d-6f3afa8d2772] num:map[num1:9223372036854775807 num2:1000000]]}
  E1215 14:51:48.348857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:49.349035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:50.349448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:51.349703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:52.350594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:53.350798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:54.350925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:55.351110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:56.351462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:57.351702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 12/15/23 14:51:57.751
  Dec 15 14:51:57.759: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-15T14:51:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-15T14:51:37Z]] name:name1 resourceVersion:13518 uid:6ace663b-daa0-4e57-84b2-ee58f78b6d0d] num:map[num1:9223372036854775807 num2:1000000]]}
  E1215 14:51:58.351968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:51:59.352525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:00.352751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:01.352990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:02.353200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:03.353415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:04.353733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:05.354600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:06.354810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:07.354985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 12/15/23 14:52:07.759
  Dec 15 14:52:07.764: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-15T14:51:27Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-15T14:51:47Z]] name:name2 resourceVersion:13540 uid:fb97881c-ca7b-415c-942d-6f3afa8d2772] num:map[num1:9223372036854775807 num2:1000000]]}
  E1215 14:52:08.355054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:09.355782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:10.356008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:11.356254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:12.356317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:13.356441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:14.357414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:15.357585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:16.357713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:17.357932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:52:18.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5147" for this suite. @ 12/15/23 14:52:18.277
• [63.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 12/15/23 14:52:18.28
  Dec 15 14:52:18.280: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/23 14:52:18.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:52:18.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:52:18.289
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/15/23 14:52:18.291
  Dec 15 14:52:18.291: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 14:52:18.358236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:19.358783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:52:19.563: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 14:52:20.359792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:21.360836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:22.361208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:23.361715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:24.362082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:52:24.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9844" for this suite. @ 12/15/23 14:52:24.604
• [6.328 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/15/23 14:52:24.607
  Dec 15 14:52:24.607: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename deployment @ 12/15/23 14:52:24.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:52:24.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:52:24.617
  Dec 15 14:52:24.622: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E1215 14:52:25.362544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:26.362680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:27.362777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:28.363252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:29.363579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:52:29.626: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/23 14:52:29.626
  Dec 15 14:52:29.626: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/15/23 14:52:29.631
  Dec 15 14:52:29.636: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8618",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce56d6fc-adb6-48b0-815b-99b8847aabc5",
      ResourceVersion: (string) (len=5) "13630",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838248749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 15 14:52:29.639: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Dec 15 14:52:29.639: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Dec 15 14:52:29.639: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8618",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd334260-6219-419e-9ff4-0d887c078934",
      ResourceVersion: (string) (len=5) "13631",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838248744,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "ce56d6fc-adb6-48b0-815b-99b8847aabc5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 63 65 35 36 64 36 66  |"uid\":\"ce56d6f|
              00000040  63 2d 61 64 62 36 2d 34  38 62 30 2d 38 31 35 62  |c-adb6-48b0-815b|
              00000050  2d 39 39 62 38 38 34 37  61 61 62 63 35 5c 22 7d  |-99b8847aabc5\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 14:52:29.643: INFO: Pod "test-cleanup-controller-6g4b7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-6g4b7",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-8618",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9ba0fc3-aaf3-47c0-8585-d3d6ffdaf6d1",
      ResourceVersion: (string) (len=5) "13619",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838248744,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "fd334260-6219-419e-9ff4-0d887c078934",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  66 64 33 33 34 32 36 30  |uid\":\"fd334260|
              00000080  2d 36 32 31 39 2d 34 31  39 65 2d 39 66 66 34 2d  |-6219-419e-9ff4-|
              00000090  30 64 38 38 37 63 30 37  38 39 33 34 5c 22 7d 22  |0d887c078934\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  35 31 5c 22 7d 22 3a 7b  |.244.1.151\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5pxlf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5pxlf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838248744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=12) "10.244.1.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838248744,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838248745,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5ce1731d09e260e235fadcb9c4e1ac38524eb360dc8b86a2c0d6a7c5abbf175d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 14:52:29.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8618" for this suite. @ 12/15/23 14:52:29.647
• [5.043 seconds]
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/15/23 14:52:29.651
  Dec 15 14:52:29.651: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replication-controller @ 12/15/23 14:52:29.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:52:29.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:52:29.662
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/15/23 14:52:29.664
  E1215 14:52:30.363709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:31.364017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 12/15/23 14:52:31.674
  STEP: Then the orphan pod is adopted @ 12/15/23 14:52:31.678
  E1215 14:52:32.364855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:52:32.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-531" for this suite. @ 12/15/23 14:52:32.686
• [3.040 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/15/23 14:52:32.691
  Dec 15 14:52:32.691: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 14:52:32.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:52:32.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:52:32.704
  STEP: creating a Pod with a static label @ 12/15/23 14:52:32.709
  STEP: watching for Pod to be ready @ 12/15/23 14:52:32.713
  Dec 15 14:52:32.714: INFO: observed Pod pod-test in namespace pods-14 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Dec 15 14:52:32.716: INFO: observed Pod pod-test in namespace pods-14 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:32 +0000 UTC  }]
  Dec 15 14:52:32.722: INFO: observed Pod pod-test in namespace pods-14 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:32 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:32 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:32 +0000 UTC  }]
  E1215 14:52:33.365261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:52:33.927: INFO: Found Pod pod-test in namespace pods-14 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:33 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:33 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-15 14:52:32 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/15/23 14:52:33.93
  STEP: getting the Pod and ensuring that it's patched @ 12/15/23 14:52:33.937
  STEP: replacing the Pod's status Ready condition to False @ 12/15/23 14:52:33.94
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/15/23 14:52:33.947
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/15/23 14:52:33.947
  STEP: watching for the Pod to be deleted @ 12/15/23 14:52:33.953
  Dec 15 14:52:33.954: INFO: observed event type MODIFIED
  E1215 14:52:34.366285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:52:35.142: INFO: observed event type MODIFIED
  E1215 14:52:35.366507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:52:35.934: INFO: observed event type MODIFIED
  Dec 15 14:52:36.039: INFO: observed event type MODIFIED
  E1215 14:52:36.367281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:52:36.938: INFO: observed event type MODIFIED
  Dec 15 14:52:36.950: INFO: observed event type MODIFIED
  Dec 15 14:52:36.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-14" for this suite. @ 12/15/23 14:52:36.958
• [4.272 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 12/15/23 14:52:36.963
  Dec 15 14:52:36.963: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-preemption @ 12/15/23 14:52:36.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:52:36.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:52:36.979
  Dec 15 14:52:36.991: INFO: Waiting up to 1m0s for all nodes to be ready
  E1215 14:52:37.367445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:38.367478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:39.368240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:40.368458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:41.368486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:42.368726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:43.368877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:44.369270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:45.370009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:46.370254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:47.371092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:48.371420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:49.372232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:50.372452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:51.372715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:52.373586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:53.374468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:54.374770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:55.375561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:56.375798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:57.376405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:58.376523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:52:59.377534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:00.377845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:01.378801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:02.378936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:03.379541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:04.380168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:05.381204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:06.381422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:07.381424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:08.381561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:09.382103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:10.382278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:11.382535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:12.382625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:13.383284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:14.383648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:15.383815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:16.384008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:17.385107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:18.385244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:19.385950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:20.386095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:21.386770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:22.386949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:23.387136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:24.387243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:25.387927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:26.388097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:27.388898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:28.389952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:29.390370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:30.390562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:31.391166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:32.391358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:33.392403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:34.392783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:35.393153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:36.393200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:53:36.995: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/15/23 14:53:36.998
  Dec 15 14:53:37.012: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 15 14:53:37.016: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 15 14:53:37.029: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 15 14:53:37.033: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/15/23 14:53:37.033
  E1215 14:53:37.393697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:38.393986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/15/23 14:53:39.044
  E1215 14:53:39.394880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:40.395018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:53:41.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9731" for this suite. @ 12/15/23 14:53:41.072
• [64.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/15/23 14:53:41.075
  Dec 15 14:53:41.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:53:41.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:53:41.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:53:41.084
  STEP: Creating configMap with name projected-configmap-test-volume-map-24b20f8c-045a-4672-b38c-f4e0a7013ba4 @ 12/15/23 14:53:41.085
  STEP: Creating a pod to test consume configMaps @ 12/15/23 14:53:41.087
  E1215 14:53:41.396099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:42.396939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:43.397510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:44.397739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:53:45.097
  Dec 15 14:53:45.099: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-c7e06bb2-e7be-4ebb-8d05-0287663b50be container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 14:53:45.104
  Dec 15 14:53:45.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2993" for this suite. @ 12/15/23 14:53:45.112
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 12/15/23 14:53:45.115
  Dec 15 14:53:45.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 14:53:45.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:53:45.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:53:45.124
  STEP: creating secret secrets-4249/secret-test-b23a0de9-b74e-40b5-a4f5-b6b8259b1c4d @ 12/15/23 14:53:45.125
  STEP: Creating a pod to test consume secrets @ 12/15/23 14:53:45.127
  E1215 14:53:45.398406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:46.399261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:47.399832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:48.400163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:53:49.138
  Dec 15 14:53:49.141: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-22be7f62-b18f-40aa-adc9-9937845e0bfe container env-test: <nil>
  STEP: delete the pod @ 12/15/23 14:53:49.146
  Dec 15 14:53:49.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4249" for this suite. @ 12/15/23 14:53:49.161
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/15/23 14:53:49.166
  Dec 15 14:53:49.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 14:53:49.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:53:49.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:53:49.183
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/15/23 14:53:49.186
  E1215 14:53:49.400922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:50.401120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:53:51.197
  Dec 15 14:53:51.199: INFO: Trying to get logs from node talos-default-worker-1 pod pod-94c4c170-01fc-4430-a32c-22144453d632 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 14:53:51.203
  Dec 15 14:53:51.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5680" for this suite. @ 12/15/23 14:53:51.214
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 12/15/23 14:53:51.218
  Dec 15 14:53:51.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-webhook @ 12/15/23 14:53:51.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:53:51.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:53:51.234
  STEP: Setting up server cert @ 12/15/23 14:53:51.237
  E1215 14:53:51.401165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/15/23 14:53:51.469
  STEP: Deploying the custom resource conversion webhook pod @ 12/15/23 14:53:51.473
  STEP: Wait for the deployment to be ready @ 12/15/23 14:53:51.478
  Dec 15 14:53:51.481: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E1215 14:53:52.401299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:53.401509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 14:53:53.487
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 14:53:53.492
  E1215 14:53:54.401894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:53:54.493: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 15 14:53:54.497: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 14:53:55.402356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:56.402714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/15/23 14:53:57.031
  STEP: Create a v2 custom resource @ 12/15/23 14:53:57.038
  STEP: List CRs in v1 @ 12/15/23 14:53:57.048
  STEP: List CRs in v2 @ 12/15/23 14:53:57.05
  E1215 14:53:57.403823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:53:57.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9566" for this suite. @ 12/15/23 14:53:57.608
• [6.395 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/15/23 14:53:57.613
  Dec 15 14:53:57.613: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 14:53:57.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:53:57.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:53:57.625
  STEP: Creating secret with name s-test-opt-del-9de946db-70bf-4993-83bc-e93dfcdcd9a0 @ 12/15/23 14:53:57.629
  STEP: Creating secret with name s-test-opt-upd-ec0af2e2-418d-4498-baf6-d651847432ea @ 12/15/23 14:53:57.631
  STEP: Creating the pod @ 12/15/23 14:53:57.632
  E1215 14:53:58.403856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:53:59.404477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-9de946db-70bf-4993-83bc-e93dfcdcd9a0 @ 12/15/23 14:53:59.657
  STEP: Updating secret s-test-opt-upd-ec0af2e2-418d-4498-baf6-d651847432ea @ 12/15/23 14:53:59.661
  STEP: Creating secret with name s-test-opt-create-3b7babcb-7b0c-48f0-b93e-0d9e0749d52e @ 12/15/23 14:53:59.665
  STEP: waiting to observe update in volume @ 12/15/23 14:53:59.668
  E1215 14:54:00.405129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:01.405332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:02.405423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:03.405474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:04.405956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:05.406243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:06.406312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:07.407258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:08.408236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:09.408638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:10.409247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:11.409470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:12.410373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:13.410603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:14.411285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:15.411421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:16.412006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:17.413073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:18.413319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:19.413405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:20.413836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:21.414096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:22.414777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:23.415025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:24.415692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:25.415843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:26.416208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:27.416433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:28.416963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:29.417359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:30.418293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:31.418576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:32.419400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:33.419542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:34.420629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:35.420828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:36.421191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:37.421380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:38.422254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:39.423144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:40.423372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:41.423641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:42.424456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:43.424671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:44.425229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:45.425471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:46.425578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:47.426596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:48.426862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:49.427150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:50.428077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:51.428306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:52.428813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:53.429034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:54.429319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:55.429525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:56.430197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:57.430302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:58.431007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:54:59.431149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:00.432065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:01.432282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:02.432401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:03.432964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:04.433364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:05.433613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:55:05.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9074" for this suite. @ 12/15/23 14:55:05.89
• [68.282 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/15/23 14:55:05.895
  Dec 15 14:55:05.895: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename subpath @ 12/15/23 14:55:05.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:55:05.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:55:05.911
  STEP: Setting up data @ 12/15/23 14:55:05.913
  STEP: Creating pod pod-subpath-test-configmap-xwsk @ 12/15/23 14:55:05.92
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/23 14:55:05.92
  E1215 14:55:06.433798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:07.434319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:08.435294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:09.435594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:10.436250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:11.436966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:12.437067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:13.437261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:14.437699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:15.438259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:16.438296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:17.439331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:18.439766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:19.440099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:20.441032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:21.441102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:22.441399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:23.441553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:24.442048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:25.442291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:26.442404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:27.442589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:28.443343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:29.443557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:55:29.968
  Dec 15 14:55:29.971: INFO: Trying to get logs from node talos-default-worker-2 pod pod-subpath-test-configmap-xwsk container test-container-subpath-configmap-xwsk: <nil>
  STEP: delete the pod @ 12/15/23 14:55:29.983
  STEP: Deleting pod pod-subpath-test-configmap-xwsk @ 12/15/23 14:55:29.995
  Dec 15 14:55:29.995: INFO: Deleting pod "pod-subpath-test-configmap-xwsk" in namespace "subpath-7154"
  Dec 15 14:55:29.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7154" for this suite. @ 12/15/23 14:55:30.001
• [24.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/15/23 14:55:30.007
  Dec 15 14:55:30.007: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename init-container @ 12/15/23 14:55:30.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:55:30.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:55:30.023
  STEP: creating the pod @ 12/15/23 14:55:30.026
  Dec 15 14:55:30.026: INFO: PodSpec: initContainers in spec.initContainers
  E1215 14:55:30.443905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:31.444006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:32.444864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:55:33.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3300" for this suite. @ 12/15/23 14:55:33.297
• [3.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/15/23 14:55:33.302
  Dec 15 14:55:33.302: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 14:55:33.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:55:33.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:55:33.319
  STEP: Creating the pod @ 12/15/23 14:55:33.322
  E1215 14:55:33.445770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:34.446215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:35.447187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:55:35.850: INFO: Successfully updated pod "labelsupdatec5c5bf9c-047b-4053-ab95-0c613a052985"
  E1215 14:55:36.447282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:37.447526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 14:55:37.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5401" for this suite. @ 12/15/23 14:55:37.863
• [4.566 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/15/23 14:55:37.868
  Dec 15 14:55:37.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 14:55:37.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:55:37.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:55:37.884
  STEP: Creating configMap with name configmap-test-volume-49543b7d-8279-4069-9d58-f79fa181ce29 @ 12/15/23 14:55:37.887
  STEP: Creating a pod to test consume configMaps @ 12/15/23 14:55:37.89
  E1215 14:55:38.448338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:39.448685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:40.449452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:41.450478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 14:55:41.906
  Dec 15 14:55:41.908: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-ea68297c-45eb-46d7-954f-b11bbd3bdd6e container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 14:55:41.913
  Dec 15 14:55:41.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6039" for this suite. @ 12/15/23 14:55:41.927
• [4.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 12/15/23 14:55:41.932
  Dec 15 14:55:41.932: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-pred @ 12/15/23 14:55:41.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 14:55:41.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 14:55:41.954
  Dec 15 14:55:41.957: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 15 14:55:41.963: INFO: Waiting for terminating namespaces to be deleted...
  Dec 15 14:55:41.966: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-1 before test
  Dec 15 14:55:41.970: INFO: kube-flannel-4fb48 from kube-system started at 2023-12-15 14:06:32 +0000 UTC (1 container statuses recorded)
  Dec 15 14:55:41.970: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 15 14:55:41.970: INFO: kube-proxy-87ntc from kube-system started at 2023-12-15 14:06:32 +0000 UTC (1 container statuses recorded)
  Dec 15 14:55:41.970: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 15 14:55:41.970: INFO: labelsupdatec5c5bf9c-047b-4053-ab95-0c613a052985 from projected-5401 started at 2023-12-15 14:55:33 +0000 UTC (1 container statuses recorded)
  Dec 15 14:55:41.970: INFO: 	Container client-container ready: true, restart count 0
  Dec 15 14:55:41.970: INFO: sonobuoy from sonobuoy started at 2023-12-15 14:07:57 +0000 UTC (1 container statuses recorded)
  Dec 15 14:55:41.970: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 15 14:55:41.970: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-2 before test
  Dec 15 14:55:41.974: INFO: kube-flannel-kq846 from kube-system started at 2023-12-15 14:06:34 +0000 UTC (1 container statuses recorded)
  Dec 15 14:55:41.974: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 15 14:55:41.974: INFO: kube-proxy-66gqq from kube-system started at 2023-12-15 14:06:34 +0000 UTC (1 container statuses recorded)
  Dec 15 14:55:41.974: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 15 14:55:41.974: INFO: sonobuoy-e2e-job-708fade0dc9c4cad from sonobuoy started at 2023-12-15 14:08:09 +0000 UTC (2 container statuses recorded)
  Dec 15 14:55:41.974: INFO: 	Container e2e ready: true, restart count 0
  Dec 15 14:55:41.974: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/15/23 14:55:41.974
  E1215 14:55:42.450883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:43.451136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/15/23 14:55:43.987
  STEP: Trying to apply a random label on the found node. @ 12/15/23 14:55:43.995
  STEP: verifying the node has the label kubernetes.io/e2e-1b5c45d8-b983-4496-8ff6-aadb27901596 95 @ 12/15/23 14:55:44.001
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/15/23 14:55:44.005
  E1215 14:55:44.452007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:45.452193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.20.0.6 on the node which pod4 resides and expect not scheduled @ 12/15/23 14:55:46.014
  E1215 14:55:46.453081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:47.453267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:48.454305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:49.454367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:50.455082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:51.455294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:52.455490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:53.455754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:54.456544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:55.456694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:56.457116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:57.457813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:58.458853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:55:59.459226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:00.459361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:01.459606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:02.460548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:03.460737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:04.460841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:05.460983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:06.461624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:07.461775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:08.462548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:09.462800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:10.463639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:11.463836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:12.464353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:13.464621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:14.464889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:15.465126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:16.465352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:17.465483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:18.466348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:19.466694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:20.467627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:21.467796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:22.468178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:23.468391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:24.468680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:25.468780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:26.469457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:27.470057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:28.470770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:29.471222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:30.472311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:31.472565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:32.472679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:33.472864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:34.473466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:35.473560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:36.474096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:37.475185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:38.476164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:39.476603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:40.477127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:41.477351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:42.478034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:43.478290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:44.478826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:45.478954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:46.479359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:47.479531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:48.479605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:49.479872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:50.480485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:51.481570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:52.482123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:53.482633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:54.482746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:55.482938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:56.483092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:57.483234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:58.483521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:56:59.483748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:00.484506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:01.484634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:02.484995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:03.485144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:04.486092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:05.486264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:06.487346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:07.487500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:08.488398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:09.488729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:10.489719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:11.489979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:12.490069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:13.490258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:14.491339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:15.491514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:16.492141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:17.492250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:18.492405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:19.492697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:20.493768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:21.493944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:22.494538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:23.494721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:24.495259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:25.495455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:26.496248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:27.496431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:28.497342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:29.497700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:30.498782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:31.498960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:32.499932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:33.500052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:34.500890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:35.501645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:36.502397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:37.502527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:38.503489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:39.503830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:40.504113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:41.504206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:42.504948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:43.505174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:44.505374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:45.505552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:46.505754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:47.505896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:48.506784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:49.507056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:50.507549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:51.507701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:52.508304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:53.508425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:54.508495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:55.508748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:56.508969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:57.509295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:58.517887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:57:59.518936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:00.519200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:01.519611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:02.519843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:03.520076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:04.521253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:05.521947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:06.522440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:07.522569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:08.523186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:09.523492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:10.524476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:11.524858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:12.526299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:13.526615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:14.527161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:15.527398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:16.527558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:17.527832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:18.529076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:19.530865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:20.531679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:21.531788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:22.531913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:23.532154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:24.533036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:25.533166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:26.534317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:27.534837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:28.534942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:29.535841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:30.536232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:31.536452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:32.537271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:33.537495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:34.538291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:35.538359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:36.538584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:37.538885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:38.539478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:39.539839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:40.540465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:41.540732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:42.541373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:43.541558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:44.541581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:45.541771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:46.541966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:47.542157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:48.542956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:49.543634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:50.544360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:51.544469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:52.544652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:53.544789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:54.545029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:55.545238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:56.545896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:57.546054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:58.546848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:58:59.547167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:00.547334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:01.547521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:02.548048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:03.548236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:04.549093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:05.549293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:06.550362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:07.550702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:08.551573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:09.551793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:10.552853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:11.553206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:12.553656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:13.553809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:14.554544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:15.555013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:16.555889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:17.556811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:18.557666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:19.557786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:20.558322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:21.562376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:22.563053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:23.563978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:24.564519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:25.564839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:26.565286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:27.565540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:28.565954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:29.566228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:30.566446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:31.566585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:32.566621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:33.567279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:34.567932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:35.568180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:36.568526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:37.568537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:38.569099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:39.569231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:40.569734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:41.569899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:42.570114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:43.570548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:44.571627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:45.571928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:46.572801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:47.573049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:48.573897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:49.574109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:50.574559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:51.574687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:52.575701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:53.576110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:54.576517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:55.576897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:56.577219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:57.577402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:58.577650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 14:59:59.577833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:00.578604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:01.578819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:02.579789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:03.580134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:04.580887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:05.581153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:06.581599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:07.581824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:08.581815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:09.582052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:10.583025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:11.583374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:12.584297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:13.584742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:14.585661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:15.586410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:16.586657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:17.586832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:18.587347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:19.588016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:20.588037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:21.589017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:22.589703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:23.590672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:24.590706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:25.590869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:26.591245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:27.591438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:28.592152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:29.592376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:30.593215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:31.594152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:32.594341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:33.594798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:34.595703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:35.595803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:36.596506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:37.597070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:38.597157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:39.597852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:40.598038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:41.598305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:42.598373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:43.599469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:44.599543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:45.600063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-1b5c45d8-b983-4496-8ff6-aadb27901596 off the node talos-default-worker-2 @ 12/15/23 15:00:46.019
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-1b5c45d8-b983-4496-8ff6-aadb27901596 @ 12/15/23 15:00:46.024
  Dec 15 15:00:46.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9270" for this suite. @ 12/15/23 15:00:46.027
• [304.098 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 12/15/23 15:00:46.03
  Dec 15 15:00:46.030: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-pred @ 12/15/23 15:00:46.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:00:46.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:00:46.04
  Dec 15 15:00:46.041: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 15 15:00:46.044: INFO: Waiting for terminating namespaces to be deleted...
  Dec 15 15:00:46.046: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-1 before test
  Dec 15 15:00:46.048: INFO: kube-flannel-4fb48 from kube-system started at 2023-12-15 14:06:32 +0000 UTC (1 container statuses recorded)
  Dec 15 15:00:46.048: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 15 15:00:46.048: INFO: kube-proxy-87ntc from kube-system started at 2023-12-15 14:06:32 +0000 UTC (1 container statuses recorded)
  Dec 15 15:00:46.048: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 15 15:00:46.048: INFO: sonobuoy from sonobuoy started at 2023-12-15 14:07:57 +0000 UTC (1 container statuses recorded)
  Dec 15 15:00:46.048: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 15 15:00:46.048: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-2 before test
  Dec 15 15:00:46.051: INFO: kube-flannel-kq846 from kube-system started at 2023-12-15 14:06:34 +0000 UTC (1 container statuses recorded)
  Dec 15 15:00:46.051: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 15 15:00:46.051: INFO: kube-proxy-66gqq from kube-system started at 2023-12-15 14:06:34 +0000 UTC (1 container statuses recorded)
  Dec 15 15:00:46.051: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 15 15:00:46.051: INFO: pod4 from sched-pred-9270 started at 2023-12-15 14:55:44 +0000 UTC (1 container statuses recorded)
  Dec 15 15:00:46.051: INFO: 	Container agnhost ready: true, restart count 0
  Dec 15 15:00:46.051: INFO: sonobuoy-e2e-job-708fade0dc9c4cad from sonobuoy started at 2023-12-15 14:08:09 +0000 UTC (2 container statuses recorded)
  Dec 15 15:00:46.051: INFO: 	Container e2e ready: true, restart count 0
  Dec 15 15:00:46.051: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/15/23 15:00:46.051
  E1215 15:00:46.601036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:47.601334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:48.601865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:49.602094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:50.603024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:51.603148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17a1096256d9049d], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) didn't match Pod's node affinity/selector, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 12/15/23 15:00:52.095
  E1215 15:00:52.603901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:00:53.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5662" for this suite. @ 12/15/23 15:00:53.096
• [7.069 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 12/15/23 15:00:53.1
  Dec 15 15:00:53.100: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 15:00:53.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:00:53.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:00:53.116
  STEP: Counting existing ResourceQuota @ 12/15/23 15:00:53.119
  E1215 15:00:53.604989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:54.605210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:55.605378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:56.605493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:57.605860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/15/23 15:00:58.123
  STEP: Ensuring resource quota status is calculated @ 12/15/23 15:00:58.127
  E1215 15:00:58.606106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:00:59.606285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 12/15/23 15:01:00.131
  STEP: Ensuring resource quota status captures replication controller creation @ 12/15/23 15:01:00.139
  E1215 15:01:00.607032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:01.607251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 12/15/23 15:01:02.143
  STEP: Ensuring resource quota status released usage @ 12/15/23 15:01:02.148
  E1215 15:01:02.608005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:03.608356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:04.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5381" for this suite. @ 12/15/23 15:01:04.155
• [11.060 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 12/15/23 15:01:04.16
  Dec 15 15:01:04.160: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:01:04.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:01:04.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:01:04.175
  STEP: Setting up server cert @ 12/15/23 15:01:04.194
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:01:04.467
  STEP: Deploying the webhook pod @ 12/15/23 15:01:04.473
  STEP: Wait for the deployment to be ready @ 12/15/23 15:01:04.481
  Dec 15 15:01:04.485: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1215 15:01:04.609222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:05.609623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:01:06.495
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:01:06.505
  E1215 15:01:06.610625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:07.505: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/15/23 15:01:07.511
  STEP: create a pod @ 12/15/23 15:01:07.525
  E1215 15:01:07.611252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:08.611851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/15/23 15:01:09.537
  Dec 15 15:01:09.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=webhook-6454 attach --namespace=webhook-6454 to-be-attached-pod -i -c=container1'
  Dec 15 15:01:09.609: INFO: rc: 1
  E1215 15:01:09.612902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:09.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6454" for this suite. @ 12/15/23 15:01:09.64
  STEP: Destroying namespace "webhook-markers-7975" for this suite. @ 12/15/23 15:01:09.644
• [5.488 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/15/23 15:01:09.648
  Dec 15 15:01:09.648: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/15/23 15:01:09.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:01:09.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:01:09.659
  STEP: creating a target pod @ 12/15/23 15:01:09.661
  E1215 15:01:10.613501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:11.614376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/15/23 15:01:11.672
  E1215 15:01:12.614860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:13.615169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/15/23 15:01:13.686
  Dec 15 15:01:13.686: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6603 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:01:13.686: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:01:13.687: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:01:13.687: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-6603/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 15 15:01:13.744: INFO: Exec stderr: ""
  Dec 15 15:01:13.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6603" for this suite. @ 12/15/23 15:01:13.76
• [4.117 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 12/15/23 15:01:13.765
  Dec 15 15:01:13.765: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 15:01:13.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:01:13.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:01:13.776
  STEP: Creating pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182 @ 12/15/23 15:01:13.778
  E1215 15:01:14.616247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:15.616475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/23 15:01:15.787
  Dec 15 15:01:15.790: INFO: Initial restart count of pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe is 0
  Dec 15 15:01:15.792: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:16.617473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:17.617690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:17.796: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:18.618286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:19.618494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:19.799: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:20.618626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:21.618935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:21.802: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:22.619755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:23.620575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:23.806: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:24.621148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:25.621364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:25.810: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:26.622285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:27.622433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:27.814: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:28.623459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:29.623687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:29.818: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:30.624280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:31.624861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:31.822: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:32.625289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:33.625685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:33.826: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:34.626056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:35.626168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:35.830: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:36.626948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:37.627181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:37.833: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:38.628011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:39.628308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:39.838: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:40.628370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:41.628496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:41.841: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:42.628613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:43.629038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:43.845: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:44.629686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:45.630071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:45.849: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:46.630764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:47.630968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:47.853: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:48.631023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:49.631290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:49.856: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:50.631774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:51.631848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:51.859: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:52.632592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:53.632982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:53.863: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:54.633486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:55.633650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:55.866: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:56.634385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:57.634627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:57.869: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:01:58.635582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:01:59.635801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:01:59.872: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:00.635989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:01.636190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:01.874: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:02.636681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:03.637086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:03.877: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:04.637526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:05.637787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:05.881: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:06.638807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:07.639037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:07.884: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:08.639933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:09.640074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:09.888: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:10.640540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:11.640693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:11.891: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:12.641514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:13.641903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:13.894: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:14.642831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:15.643066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:15.898: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:16.644046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:17.644195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:17.900: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:18.644281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:19.644459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:19.903: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:20.645136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:21.645236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:21.907: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:22.646203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:23.646522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:23.911: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:24.647616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:25.647858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:25.916: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:26.648856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:27.649082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:27.919: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:28.649423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:29.649761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:29.922: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:30.649871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:31.650090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:31.927: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:32.650735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:33.651074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:33.930: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:34.652049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:35.652258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:35.934: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:36.652971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:37.653234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:37.937: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:38.653702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:39.653654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:39.940: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:40.654502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:41.654743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:41.943: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:42.655265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:43.655386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:43.945: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:44.655453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:45.655717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:45.949: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:46.656280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:47.656400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:47.952: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:48.656862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:49.657068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:49.957: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:50.657928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:51.658135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:51.960: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:52.658604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:53.659155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:53.964: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:54.659561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:55.659704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:55.969: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:56.659787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:57.659939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:57.972: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:02:58.660012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:02:59.660201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:02:59.976: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:00.660905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:01.661122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:01.979: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:02.661366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:03.662021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:03.982: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:04.662807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:05.663018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:05.986: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:06.664015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:07.665092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:07.991: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:08.665742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:09.665926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:09.993: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:10.666495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:11.666728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:11.996: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:12.666975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:13.667002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:14.000: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:14.667122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:15.667226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:16.004: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:16.667911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:17.668125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:18.007: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:18.669177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:19.669289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:20.009: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:20.669701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:21.669920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:22.013: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:22.670964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:23.671087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:24.016: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:24.671350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:25.671470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:26.019: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:26.672236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:27.672462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:28.023: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:28.673312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:29.673522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:30.027: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:30.673612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:31.673744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:32.031: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:32.674562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:33.675134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:34.035: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:34.675293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:35.675470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:36.039: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:36.675604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:37.675846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:38.043: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:38.676882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:39.677094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:40.047: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:40.677917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:41.678103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:42.051: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:42.678236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:43.678667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:44.054: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:44.679121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:45.679339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:46.058: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:46.679783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:47.680817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:48.061: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:48.681667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:49.681856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:50.065: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:50.682018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:51.682241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:52.069: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:52.682362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:53.682663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:54.072: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:54.682991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:55.683096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:56.075: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:56.683273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:57.683498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:03:58.079: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:03:58.683993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:03:59.684170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:00.082: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:00.684937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:01.685122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:02.084: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:02.686265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:03.686676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:04.087: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:04.686831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:05.687381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:06.091: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:06.687911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:07.688120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:08.094: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:08.688620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:09.688795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:10.097: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:10.688954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:11.689174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:12.101: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:12.689256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:13.689547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:14.105: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:14.689918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:15.690725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:16.109: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:16.691324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:17.691459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:18.112: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:18.692122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:19.692303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:20.116: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:20.693136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:21.693359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:22.119: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:22.694321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:23.694707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:24.123: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:24.694794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:25.694994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:26.127: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:26.695118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:27.695200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:28.130: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:28.696144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:29.696246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:30.133: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:30.696997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:31.697491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:32.137: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:32.698218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:33.699128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:34.140: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:34.699240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:35.699310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:36.144: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:36.700066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:37.700157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:38.147: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:38.700495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:39.700605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:40.150: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:40.701047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:41.701224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:42.153: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:42.701714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:43.702105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:44.155: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:44.702213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:45.702437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:46.158: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:46.703269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:47.703460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:48.162: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:48.703997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:49.704124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:50.165: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:50.704694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:51.705346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:52.169: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:52.705660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:53.706717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:54.172: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:54.707680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:55.707881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:56.176: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:56.708701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:57.708878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:04:58.179: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:04:58.709860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:04:59.709958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:00.184: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:05:00.710511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:01.710701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:02.187: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:05:02.711619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:03.712072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:04.191: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:05:04.712391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:05.712624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:06.195: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:05:06.713613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:07.713831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:08.199: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:05:08.714863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:09.715055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:10.202: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:05:10.715158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:11.715529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:12.206: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:05:12.715848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:13.716194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:14.209: INFO: Get pod test-webserver-2363c9fd-784e-4d36-9fc4-da7a382e1abe in namespace container-probe-4182
  E1215 15:05:14.717142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:15.717322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/15/23 15:05:16.211
  Dec 15 15:05:16.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4182" for this suite. @ 12/15/23 15:05:16.222
• [242.462 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/15/23 15:05:16.232
  Dec 15 15:05:16.232: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename subpath @ 12/15/23 15:05:16.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:05:16.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:05:16.248
  STEP: Setting up data @ 12/15/23 15:05:16.251
  STEP: Creating pod pod-subpath-test-projected-gkv5 @ 12/15/23 15:05:16.258
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/23 15:05:16.258
  E1215 15:05:16.718258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:17.718371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:18.718771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:19.719356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:20.719688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:21.719946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:22.720595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:23.720988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:24.721648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:25.721786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:26.722580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:27.722684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:28.723347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:29.723602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:30.724247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:31.725338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:32.725919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:33.726044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:34.726918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:35.727041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:36.727733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:37.727949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:05:38.301
  Dec 15 15:05:38.303: INFO: Trying to get logs from node talos-default-worker-1 pod pod-subpath-test-projected-gkv5 container test-container-subpath-projected-gkv5: <nil>
  STEP: delete the pod @ 12/15/23 15:05:38.308
  STEP: Deleting pod pod-subpath-test-projected-gkv5 @ 12/15/23 15:05:38.314
  Dec 15 15:05:38.314: INFO: Deleting pod "pod-subpath-test-projected-gkv5" in namespace "subpath-3257"
  Dec 15 15:05:38.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3257" for this suite. @ 12/15/23 15:05:38.318
• [22.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 12/15/23 15:05:38.321
  Dec 15 15:05:38.321: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename security-context-test @ 12/15/23 15:05:38.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:05:38.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:05:38.331
  E1215 15:05:38.728467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:39.728610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:40.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2015" for this suite. @ 12/15/23 15:05:40.346
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 12/15/23 15:05:40.35
  Dec 15 15:05:40.350: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 15:05:40.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:05:40.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:05:40.362
  STEP: Creating secret with name secret-test-4921f639-79e5-44c7-92d6-4639337ac9a8 @ 12/15/23 15:05:40.364
  STEP: Creating a pod to test consume secrets @ 12/15/23 15:05:40.367
  E1215 15:05:40.729381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:41.729679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:05:42.376
  Dec 15 15:05:42.379: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-e341783e-5ba1-414d-9903-6dde1f9a079c container secret-env-test: <nil>
  STEP: delete the pod @ 12/15/23 15:05:42.383
  Dec 15 15:05:42.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8797" for this suite. @ 12/15/23 15:05:42.395
• [2.048 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/15/23 15:05:42.398
  Dec 15 15:05:42.398: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename controllerrevisions @ 12/15/23 15:05:42.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:05:42.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:05:42.409
  STEP: Creating DaemonSet "e2e-9hsdb-daemon-set" @ 12/15/23 15:05:42.418
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/23 15:05:42.421
  Dec 15 15:05:42.422: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:05:42.423: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:05:42.423: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:05:42.424: INFO: Number of nodes with available pods controlled by daemonset e2e-9hsdb-daemon-set: 0
  Dec 15 15:05:42.424: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:05:42.729768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:43.424: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:05:43.424: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:05:43.424: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:05:43.426: INFO: Number of nodes with available pods controlled by daemonset e2e-9hsdb-daemon-set: 2
  Dec 15 15:05:43.426: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-9hsdb-daemon-set
  STEP: Confirm DaemonSet "e2e-9hsdb-daemon-set" successfully created with "daemonset-name=e2e-9hsdb-daemon-set" label @ 12/15/23 15:05:43.428
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-9hsdb-daemon-set" @ 12/15/23 15:05:43.431
  Dec 15 15:05:43.433: INFO: Located ControllerRevision: "e2e-9hsdb-daemon-set-8568d75dbc"
  STEP: Patching ControllerRevision "e2e-9hsdb-daemon-set-8568d75dbc" @ 12/15/23 15:05:43.434
  Dec 15 15:05:43.437: INFO: e2e-9hsdb-daemon-set-8568d75dbc has been patched
  STEP: Create a new ControllerRevision @ 12/15/23 15:05:43.438
  Dec 15 15:05:43.440: INFO: Created ControllerRevision: e2e-9hsdb-daemon-set-596dd8695
  STEP: Confirm that there are two ControllerRevisions @ 12/15/23 15:05:43.44
  Dec 15 15:05:43.440: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 15 15:05:43.442: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-9hsdb-daemon-set-8568d75dbc" @ 12/15/23 15:05:43.442
  STEP: Confirm that there is only one ControllerRevision @ 12/15/23 15:05:43.445
  Dec 15 15:05:43.445: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 15 15:05:43.447: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-9hsdb-daemon-set-596dd8695" @ 12/15/23 15:05:43.449
  Dec 15 15:05:43.452: INFO: e2e-9hsdb-daemon-set-596dd8695 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/15/23 15:05:43.452
  W1215 15:05:43.458018      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/15/23 15:05:43.458
  Dec 15 15:05:43.458: INFO: Requesting list of ControllerRevisions to confirm quantity
  E1215 15:05:43.730717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:44.458: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 15 15:05:44.460: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-9hsdb-daemon-set-596dd8695=updated" @ 12/15/23 15:05:44.46
  STEP: Confirm that there is only one ControllerRevision @ 12/15/23 15:05:44.463
  Dec 15 15:05:44.464: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 15 15:05:44.465: INFO: Found 1 ControllerRevisions
  Dec 15 15:05:44.467: INFO: ControllerRevision "e2e-9hsdb-daemon-set-6f84bb95cd" has revision 3
  STEP: Deleting DaemonSet "e2e-9hsdb-daemon-set" @ 12/15/23 15:05:44.468
  STEP: deleting DaemonSet.extensions e2e-9hsdb-daemon-set in namespace controllerrevisions-4101, will wait for the garbage collector to delete the pods @ 12/15/23 15:05:44.468
  Dec 15 15:05:44.523: INFO: Deleting DaemonSet.extensions e2e-9hsdb-daemon-set took: 2.88289ms
  Dec 15 15:05:44.624: INFO: Terminating DaemonSet.extensions e2e-9hsdb-daemon-set pods took: 101.056619ms
  E1215 15:05:44.731166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:45.731483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:46.328: INFO: Number of nodes with available pods controlled by daemonset e2e-9hsdb-daemon-set: 0
  Dec 15 15:05:46.328: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-9hsdb-daemon-set
  Dec 15 15:05:46.331: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16168"},"items":null}

  Dec 15 15:05:46.334: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16168"},"items":null}

  Dec 15 15:05:46.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4101" for this suite. @ 12/15/23 15:05:46.345
• [3.952 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 12/15/23 15:05:46.35
  Dec 15 15:05:46.350: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/15/23 15:05:46.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:05:46.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:05:46.367
  STEP: create the container to handle the HTTPGet hook request. @ 12/15/23 15:05:46.372
  E1215 15:05:46.732355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:47.732581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/15/23 15:05:48.384
  E1215 15:05:48.733293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:49.733368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/15/23 15:05:50.396
  STEP: delete the pod with lifecycle hook @ 12/15/23 15:05:50.407
  E1215 15:05:50.733752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:51.733940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:52.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8797" for this suite. @ 12/15/23 15:05:52.422
• [6.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/15/23 15:05:52.427
  Dec 15 15:05:52.427: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:05:52.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:05:52.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:05:52.443
  STEP: Creating the pod @ 12/15/23 15:05:52.445
  E1215 15:05:52.734014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:53.734298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:54.734543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:54.977: INFO: Successfully updated pod "annotationupdate30a16947-ff47-41cd-b96c-e1ccc208e4b8"
  E1215 15:05:55.734556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:56.734805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:56.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1650" for this suite. @ 12/15/23 15:05:56.992
• [4.570 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/15/23 15:05:56.997
  Dec 15 15:05:56.997: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename watch @ 12/15/23 15:05:56.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:05:57.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:05:57.012
  STEP: getting a starting resourceVersion @ 12/15/23 15:05:57.015
  STEP: starting a background goroutine to produce watch events @ 12/15/23 15:05:57.017
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/15/23 15:05:57.017
  E1215 15:05:57.735147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:58.735262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:05:59.736147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:05:59.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5380" for this suite. @ 12/15/23 15:05:59.851
• [2.906 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 12/15/23 15:05:59.903
  Dec 15 15:05:59.903: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:05:59.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:05:59.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:05:59.918
  STEP: Setting up server cert @ 12/15/23 15:05:59.935
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:06:00.049
  STEP: Deploying the webhook pod @ 12/15/23 15:06:00.053
  STEP: Wait for the deployment to be ready @ 12/15/23 15:06:00.057
  Dec 15 15:06:00.060: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1215 15:06:00.736888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:01.737242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:06:02.069
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:06:02.078
  E1215 15:06:02.737914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:03.079: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/15/23 15:06:03.083
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/15/23 15:06:03.084
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/15/23 15:06:03.084
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/15/23 15:06:03.085
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/15/23 15:06:03.086
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/15/23 15:06:03.086
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/15/23 15:06:03.087
  Dec 15 15:06:03.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2378" for this suite. @ 12/15/23 15:06:03.122
  STEP: Destroying namespace "webhook-markers-719" for this suite. @ 12/15/23 15:06:03.127
• [3.229 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/15/23 15:06:03.132
  Dec 15 15:06:03.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/23 15:06:03.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:03.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:03.144
  Dec 15 15:06:03.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:06:03.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4817" for this suite. @ 12/15/23 15:06:03.67
• [0.541 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 12/15/23 15:06:03.673
  Dec 15 15:06:03.673: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 15:06:03.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:03.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:03.682
  STEP: Creating resourceQuota "e2e-rq-status-qts2q" @ 12/15/23 15:06:03.685
  Dec 15 15:06:03.688: INFO: Resource quota "e2e-rq-status-qts2q" reports spec: hard cpu limit of 500m
  Dec 15 15:06:03.688: INFO: Resource quota "e2e-rq-status-qts2q" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-qts2q" /status @ 12/15/23 15:06:03.688
  STEP: Confirm /status for "e2e-rq-status-qts2q" resourceQuota via watch @ 12/15/23 15:06:03.692
  Dec 15 15:06:03.693: INFO: observed resourceQuota "e2e-rq-status-qts2q" in namespace "resourcequota-747" with hard status: v1.ResourceList(nil)
  Dec 15 15:06:03.693: INFO: Found resourceQuota "e2e-rq-status-qts2q" in namespace "resourcequota-747" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 15 15:06:03.693: INFO: ResourceQuota "e2e-rq-status-qts2q" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/15/23 15:06:03.694
  Dec 15 15:06:03.697: INFO: Resource quota "e2e-rq-status-qts2q" reports spec: hard cpu limit of 1
  Dec 15 15:06:03.697: INFO: Resource quota "e2e-rq-status-qts2q" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-qts2q" /status @ 12/15/23 15:06:03.697
  STEP: Confirm /status for "e2e-rq-status-qts2q" resourceQuota via watch @ 12/15/23 15:06:03.699
  Dec 15 15:06:03.699: INFO: observed resourceQuota "e2e-rq-status-qts2q" in namespace "resourcequota-747" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 15 15:06:03.699: INFO: Found resourceQuota "e2e-rq-status-qts2q" in namespace "resourcequota-747" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Dec 15 15:06:03.699: INFO: ResourceQuota "e2e-rq-status-qts2q" /status was patched
  STEP: Get "e2e-rq-status-qts2q" /status @ 12/15/23 15:06:03.699
  Dec 15 15:06:03.701: INFO: Resourcequota "e2e-rq-status-qts2q" reports status: hard cpu of 1
  Dec 15 15:06:03.701: INFO: Resourcequota "e2e-rq-status-qts2q" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-qts2q" /status before checking Spec is unchanged @ 12/15/23 15:06:03.702
  Dec 15 15:06:03.704: INFO: Resourcequota "e2e-rq-status-qts2q" reports status: hard cpu of 2
  Dec 15 15:06:03.704: INFO: Resourcequota "e2e-rq-status-qts2q" reports status: hard memory of 2Gi
  Dec 15 15:06:03.705: INFO: Found resourceQuota "e2e-rq-status-qts2q" in namespace "resourcequota-747" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Dec 15 15:06:03.706: INFO: ResourceQuota "e2e-rq-status-qts2q" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-qts2q", GenerateName:"", Namespace:"resourcequota-747", SelfLink:"", UID:"ada8965d-3ba5-462d-b25c-700ec4ca4c65", ResourceVersion:"16481", Generation:0, CreationTimestamp:time.Date(2023, time.December, 15, 15, 6, 3, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-qts2q"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 15, 15, 6, 3, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013095c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 15, 15, 6, 3, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001309608), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 15, 15, 6, 3, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013096b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  E1215 15:06:03.738794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:04.739308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:05.739453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:06.739681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:07.740176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:08.708: INFO: ResourceQuota "e2e-rq-status-qts2q" Spec was unchanged and /status reset
  Dec 15 15:06:08.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-747" for this suite. @ 12/15/23 15:06:08.71
• [5.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/15/23 15:06:08.713
  Dec 15 15:06:08.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 15:06:08.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:08.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:08.722
  STEP: creating the pod @ 12/15/23 15:06:08.724
  STEP: submitting the pod to kubernetes @ 12/15/23 15:06:08.724
  W1215 15:06:08.728040      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1215 15:06:08.740732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:09.741231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 12/15/23 15:06:10.733
  STEP: updating the pod @ 12/15/23 15:06:10.734
  E1215 15:06:10.742068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:11.242: INFO: Successfully updated pod "pod-update-activedeadlineseconds-55c777b8-1690-46fd-b2fe-075c78daa1bf"
  E1215 15:06:11.742506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:12.742630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:13.743426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:14.743683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:15.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9409" for this suite. @ 12/15/23 15:06:15.256
• [6.547 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 12/15/23 15:06:15.26
  Dec 15 15:06:15.260: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename dns @ 12/15/23 15:06:15.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:15.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:15.275
  STEP: Creating a test headless service @ 12/15/23 15:06:15.278
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-408.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-408.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/15/23 15:06:15.282
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-408.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-408.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/15/23 15:06:15.282
  STEP: creating a pod to probe DNS @ 12/15/23 15:06:15.282
  STEP: submitting the pod to kubernetes @ 12/15/23 15:06:15.282
  E1215 15:06:15.743998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:16.744376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/15/23 15:06:17.294
  STEP: looking for the results for each expected name from probers @ 12/15/23 15:06:17.296
  Dec 15 15:06:17.304: INFO: DNS probes using dns-408/dns-test-2b9ebf8c-4606-4222-8cd7-c3889baec13d succeeded

  STEP: deleting the pod @ 12/15/23 15:06:17.304
  STEP: deleting the test headless service @ 12/15/23 15:06:17.309
  Dec 15 15:06:17.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-408" for this suite. @ 12/15/23 15:06:17.32
• [2.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/15/23 15:06:17.323
  Dec 15 15:06:17.323: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename containers @ 12/15/23 15:06:17.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:17.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:17.334
  STEP: Creating a pod to test override arguments @ 12/15/23 15:06:17.336
  E1215 15:06:17.745244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:18.745676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:19.746546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:20.746713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:06:21.349
  Dec 15 15:06:21.352: INFO: Trying to get logs from node talos-default-worker-1 pod client-containers-e869e1bd-7bc2-481f-983e-3eedc227cbec container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:06:21.359
  Dec 15 15:06:21.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9127" for this suite. @ 12/15/23 15:06:21.371
• [4.053 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/15/23 15:06:21.376
  Dec 15 15:06:21.376: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/23 15:06:21.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:21.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:21.391
  Dec 15 15:06:21.394: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:06:21.747736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:22.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7804" for this suite. @ 12/15/23 15:06:22.412
• [1.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 12/15/23 15:06:22.416
  Dec 15 15:06:22.416: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 15:06:22.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:22.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:22.424
  STEP: Creating a ResourceQuota with terminating scope @ 12/15/23 15:06:22.426
  STEP: Ensuring ResourceQuota status is calculated @ 12/15/23 15:06:22.428
  E1215 15:06:22.747875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:23.748318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 12/15/23 15:06:24.431
  STEP: Ensuring ResourceQuota status is calculated @ 12/15/23 15:06:24.434
  E1215 15:06:24.748667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:25.748748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 12/15/23 15:06:26.437
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/15/23 15:06:26.446
  E1215 15:06:26.748906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:27.749130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/15/23 15:06:28.45
  E1215 15:06:28.750170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:29.750271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/15/23 15:06:30.454
  STEP: Ensuring resource quota status released the pod usage @ 12/15/23 15:06:30.462
  E1215 15:06:30.751091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:31.751279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 12/15/23 15:06:32.465
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/15/23 15:06:32.47
  E1215 15:06:32.751787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:33.752162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/15/23 15:06:34.473
  E1215 15:06:34.753317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:35.753293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/15/23 15:06:36.477
  STEP: Ensuring resource quota status released the pod usage @ 12/15/23 15:06:36.484
  E1215 15:06:36.754140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:37.754932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:38.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5021" for this suite. @ 12/15/23 15:06:38.491
• [16.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 12/15/23 15:06:38.495
  Dec 15 15:06:38.495: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:06:38.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:38.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:38.508
  STEP: Setting up server cert @ 12/15/23 15:06:38.521
  E1215 15:06:38.755252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:06:38.768
  STEP: Deploying the webhook pod @ 12/15/23 15:06:38.772
  STEP: Wait for the deployment to be ready @ 12/15/23 15:06:38.777
  Dec 15 15:06:38.780: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1215 15:06:39.755377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:40.755675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:06:40.789
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:06:40.798
  E1215 15:06:41.755795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:41.799: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/15/23 15:06:41.841
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/23 15:06:41.871
  STEP: Deleting the collection of validation webhooks @ 12/15/23 15:06:41.891
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/23 15:06:41.915
  Dec 15 15:06:41.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1402" for this suite. @ 12/15/23 15:06:41.937
  STEP: Destroying namespace "webhook-markers-3749" for this suite. @ 12/15/23 15:06:41.94
• [3.447 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 12/15/23 15:06:41.942
  Dec 15 15:06:41.942: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-pred @ 12/15/23 15:06:41.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:41.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:41.951
  Dec 15 15:06:41.952: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 15 15:06:41.955: INFO: Waiting for terminating namespaces to be deleted...
  Dec 15 15:06:41.956: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-1 before test
  Dec 15 15:06:41.958: INFO: kube-flannel-4fb48 from kube-system started at 2023-12-15 14:06:32 +0000 UTC (1 container statuses recorded)
  Dec 15 15:06:41.958: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 15 15:06:41.958: INFO: kube-proxy-87ntc from kube-system started at 2023-12-15 14:06:32 +0000 UTC (1 container statuses recorded)
  Dec 15 15:06:41.958: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 15 15:06:41.958: INFO: sonobuoy from sonobuoy started at 2023-12-15 14:07:57 +0000 UTC (1 container statuses recorded)
  Dec 15 15:06:41.958: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 15 15:06:41.958: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-2 before test
  Dec 15 15:06:41.960: INFO: kube-flannel-kq846 from kube-system started at 2023-12-15 14:06:34 +0000 UTC (1 container statuses recorded)
  Dec 15 15:06:41.960: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 15 15:06:41.960: INFO: kube-proxy-66gqq from kube-system started at 2023-12-15 14:06:34 +0000 UTC (1 container statuses recorded)
  Dec 15 15:06:41.960: INFO: 	Container kube-proxy ready: true, restart count 0
  Dec 15 15:06:41.960: INFO: sonobuoy-e2e-job-708fade0dc9c4cad from sonobuoy started at 2023-12-15 14:08:09 +0000 UTC (2 container statuses recorded)
  Dec 15 15:06:41.960: INFO: 	Container e2e ready: true, restart count 0
  Dec 15 15:06:41.960: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/15/23 15:06:41.96
  E1215 15:06:42.756211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:43.756654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/15/23 15:06:43.97
  STEP: Trying to apply a random label on the found node. @ 12/15/23 15:06:43.976
  STEP: verifying the node has the label kubernetes.io/e2e-456cded6-35e5-4a11-9e1c-706f2f2f0a08 42 @ 12/15/23 15:06:43.98
  STEP: Trying to relaunch the pod, now with labels. @ 12/15/23 15:06:43.982
  E1215 15:06:44.756770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:45.756933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-456cded6-35e5-4a11-9e1c-706f2f2f0a08 off the node talos-default-worker-1 @ 12/15/23 15:06:45.992
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-456cded6-35e5-4a11-9e1c-706f2f2f0a08 @ 12/15/23 15:06:45.998
  Dec 15 15:06:46.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4225" for this suite. @ 12/15/23 15:06:46.004
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/15/23 15:06:46.008
  Dec 15 15:06:46.008: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:06:46.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:46.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:46.023
  STEP: Creating the pod @ 12/15/23 15:06:46.025
  E1215 15:06:46.757151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:47.757368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:48.549: INFO: Successfully updated pod "annotationupdate263b1ea2-834f-4804-aae1-8f808347164e"
  E1215 15:06:48.757757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:49.758343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:50.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5850" for this suite. @ 12/15/23 15:06:50.56
• [4.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 12/15/23 15:06:50.564
  Dec 15 15:06:50.564: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:06:50.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:50.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:50.58
  STEP: fetching services @ 12/15/23 15:06:50.582
  Dec 15 15:06:50.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3866" for this suite. @ 12/15/23 15:06:50.588
• [0.028 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/15/23 15:06:50.593
  Dec 15 15:06:50.593: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename apf @ 12/15/23 15:06:50.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:50.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:50.608
  STEP: getting /apis @ 12/15/23 15:06:50.611
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/15/23 15:06:50.615
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/15/23 15:06:50.616
  STEP: creating @ 12/15/23 15:06:50.617
  STEP: getting @ 12/15/23 15:06:50.629
  STEP: listing @ 12/15/23 15:06:50.632
  STEP: watching @ 12/15/23 15:06:50.635
  Dec 15 15:06:50.635: INFO: starting watch
  STEP: patching @ 12/15/23 15:06:50.636
  STEP: updating @ 12/15/23 15:06:50.639
  Dec 15 15:06:50.645: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 12/15/23 15:06:50.645
  STEP: patching /status @ 12/15/23 15:06:50.648
  STEP: updating /status @ 12/15/23 15:06:50.652
  STEP: deleting @ 12/15/23 15:06:50.67
  STEP: deleting a collection @ 12/15/23 15:06:50.676
  Dec 15 15:06:50.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2734" for this suite. @ 12/15/23 15:06:50.685
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 12/15/23 15:06:50.688
  Dec 15 15:06:50.688: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:06:50.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:50.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:50.697
  Dec 15 15:06:50.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-2611 create -f -'
  E1215 15:06:50.758982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:50.762: INFO: stderr: ""
  Dec 15 15:06:50.762: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Dec 15 15:06:50.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-2611 create -f -'
  Dec 15 15:06:50.834: INFO: stderr: ""
  Dec 15 15:06:50.834: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/15/23 15:06:50.835
  E1215 15:06:51.759081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:51.837: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 15 15:06:51.837: INFO: Found 1 / 1
  Dec 15 15:06:51.837: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 15 15:06:51.839: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 15 15:06:51.839: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 15 15:06:51.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-2611 describe pod agnhost-primary-2jfrw'
  Dec 15 15:06:51.883: INFO: stderr: ""
  Dec 15 15:06:51.883: INFO: stdout: "Name:             agnhost-primary-2jfrw\nNamespace:        kubectl-2611\nPriority:         0\nService Account:  default\nNode:             talos-default-worker-2/172.20.0.6\nStart Time:       Fri, 15 Dec 2023 15:06:50 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.4.104\nIPs:\n  IP:           10.244.4.104\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://273d9cf8a00eb04e567650bcf7419d710069194b14b760bd8aaf722a9592e8de\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 15 Dec 2023 15:06:51 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-vcf68 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-vcf68:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-2611/agnhost-primary-2jfrw to talos-default-worker-2\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  Dec 15 15:06:51.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-2611 describe rc agnhost-primary'
  Dec 15 15:06:51.929: INFO: stderr: ""
  Dec 15 15:06:51.929: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2611\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-2jfrw\n"
  Dec 15 15:06:51.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-2611 describe service agnhost-primary'
  Dec 15 15:06:51.971: INFO: stderr: ""
  Dec 15 15:06:51.971: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2611\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.108.204.229\nIPs:               10.108.204.229\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.4.104:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Dec 15 15:06:51.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-2611 describe node talos-default-controlplane-1'
  Dec 15 15:06:52.035: INFO: stderr: ""
  Dec 15 15:06:52.035: INFO: stdout: "Name:               talos-default-controlplane-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=talos-default-controlplane-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"7a:90:f2:87:d8:97\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.20.0.2\n                    node.alpha.kubernetes.io/ttl: 0\n                    talos.dev/owned-labels: [\"node-role.kubernetes.io/control-plane\"]\n                    talos.dev/owned-taints: [\"node-role.kubernetes.io/control-plane\"]\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 15 Dec 2023 14:06:01 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  talos-default-controlplane-1\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 15 Dec 2023 15:06:46 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Fri, 15 Dec 2023 14:07:04 +0000   Fri, 15 Dec 2023 14:07:04 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Fri, 15 Dec 2023 15:03:40 +0000   Fri, 15 Dec 2023 14:06:01 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Fri, 15 Dec 2023 15:03:40 +0000   Fri, 15 Dec 2023 14:06:01 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Fri, 15 Dec 2023 15:03:40 +0000   Fri, 15 Dec 2023 14:06:01 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Fri, 15 Dec 2023 15:03:40 +0000   Fri, 15 Dec 2023 14:06:31 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.20.0.2\n  Hostname:    talos-default-controlplane-1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  4876Mi\n  hugepages-2Mi:      0\n  memory:             2954700Ki\n  pods:               110\nAllocatable:\n  cpu:                3950m\n  ephemeral-storage:  4333135455\n  hugepages-2Mi:      0\n  memory:             2655692Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 74e2cc6b38e6d1b34c73f326ddf81006\n  System UUID:                9aa70f98-3412-41f7-811e-edf0b60ed566\n  Boot ID:                    53e5bea3-0eeb-438d-b605-37633411706e\n  Kernel Version:             6.1.67-talos\n  OS Image:                   Talos (v1.6.0)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.10\n  Kubelet Version:            v1.29.0\n  Kube-Proxy Version:         v1.29.0\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                    ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-85b955d87b-ng5x7                                100m (2%)     0 (0%)      70Mi (2%)        170Mi (6%)     61m\n  kube-system                 coredns-85b955d87b-tfv6v                                100m (2%)     0 (0%)      70Mi (2%)        170Mi (6%)     61m\n  kube-system                 kube-apiserver-talos-default-controlplane-1             200m (5%)     0 (0%)      512Mi (19%)      0 (0%)         59m\n  kube-system                 kube-controller-manager-talos-default-controlplane-1    50m (1%)      0 (0%)      256Mi (9%)       0 (0%)         59m\n  kube-system                 kube-flannel-rtgtj                                      100m (2%)     0 (0%)      50Mi (1%)        0 (0%)         60m\n  kube-system                 kube-proxy-9k2sj                                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         60m\n  kube-system                 kube-scheduler-talos-default-controlplane-1             10m (0%)      0 (0%)      64Mi (2%)        0 (0%)         60m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests      Limits\n  --------           --------      ------\n  cpu                560m (14%)    0 (0%)\n  memory             1022Mi (39%)  340Mi (13%)\n  ephemeral-storage  0 (0%)        0 (0%)\n  hugepages-2Mi      0 (0%)        0 (0%)\nEvents:              <none>\n"
  Dec 15 15:06:52.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-2611 describe namespace kubectl-2611'
  Dec 15 15:06:52.091: INFO: stderr: ""
  Dec 15 15:06:52.091: INFO: stdout: "Name:         kubectl-2611\nLabels:       e2e-framework=kubectl\n              e2e-run=6c0ee1bd-bb64-4c3b-ba37-15b40e6d8b2f\n              kubernetes.io/metadata.name=kubectl-2611\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Dec 15 15:06:52.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2611" for this suite. @ 12/15/23 15:06:52.095
• [1.411 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 12/15/23 15:06:52.099
  Dec 15 15:06:52.099: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:06:52.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:06:52.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:06:52.112
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-347 @ 12/15/23 15:06:52.114
  STEP: changing the ExternalName service to type=NodePort @ 12/15/23 15:06:52.117
  STEP: creating replication controller externalname-service in namespace services-347 @ 12/15/23 15:06:52.134
  I1215 15:06:52.139516      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-347, replica count: 2
  E1215 15:06:52.759749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:53.759888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:54.761558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:06:55.190093      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 15 15:06:55.190: INFO: Creating new exec pod
  E1215 15:06:55.761705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:56.761944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:06:57.762660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:58.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-347 exec execpodgb7gl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 15 15:06:58.341: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 15 15:06:58.341: INFO: stdout: "externalname-service-scxhq"
  Dec 15 15:06:58.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-347 exec execpodgb7gl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.161.72 80'
  Dec 15 15:06:58.488: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.161.72 80\nConnection to 10.97.161.72 80 port [tcp/http] succeeded!\n"
  Dec 15 15:06:58.488: INFO: stdout: ""
  E1215 15:06:58.763729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:06:59.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-347 exec execpodgb7gl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.161.72 80'
  Dec 15 15:06:59.471: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.161.72 80\nConnection to 10.97.161.72 80 port [tcp/http] succeeded!\n"
  Dec 15 15:06:59.472: INFO: stdout: ""
  E1215 15:06:59.764143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:00.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-347 exec execpodgb7gl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.161.72 80'
  Dec 15 15:07:00.457: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.161.72 80\nConnection to 10.97.161.72 80 port [tcp/http] succeeded!\n"
  Dec 15 15:07:00.457: INFO: stdout: "externalname-service-49lg7"
  Dec 15 15:07:00.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-347 exec execpodgb7gl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.5 31251'
  Dec 15 15:07:00.599: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.5 31251\nConnection to 172.20.0.5 31251 port [tcp/*] succeeded!\n"
  Dec 15 15:07:00.599: INFO: stdout: "externalname-service-49lg7"
  Dec 15 15:07:00.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-347 exec execpodgb7gl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.6 31251'
  Dec 15 15:07:00.736: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.6 31251\nConnection to 172.20.0.6 31251 port [tcp/*] succeeded!\n"
  Dec 15 15:07:00.736: INFO: stdout: "externalname-service-scxhq"
  Dec 15 15:07:00.737: INFO: Cleaning up the ExternalName to NodePort test service
  Dec 15 15:07:00.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-347" for this suite. @ 12/15/23 15:07:00.76
  E1215 15:07:00.764764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [8.666 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 12/15/23 15:07:00.765
  Dec 15 15:07:00.766: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 15:07:00.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:07:00.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:07:00.781
  STEP: Creating projection with secret that has name secret-emptykey-test-47b84aed-9894-45d9-85a1-58f04c81b5cb @ 12/15/23 15:07:00.784
  Dec 15 15:07:00.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6778" for this suite. @ 12/15/23 15:07:00.788
• [0.025 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 12/15/23 15:07:00.791
  Dec 15 15:07:00.791: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename dns @ 12/15/23 15:07:00.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:07:00.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:07:00.799
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6141.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6141.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/15/23 15:07:00.801
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6141.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6141.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/15/23 15:07:00.801
  STEP: creating a pod to probe /etc/hosts @ 12/15/23 15:07:00.801
  STEP: submitting the pod to kubernetes @ 12/15/23 15:07:00.801
  E1215 15:07:01.764968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:02.765934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/15/23 15:07:02.81
  STEP: looking for the results for each expected name from probers @ 12/15/23 15:07:02.813
  Dec 15 15:07:02.825: INFO: DNS probes using dns-6141/dns-test-805ca98c-d5c1-40ea-b6e8-b10c8a4d010b succeeded

  STEP: deleting the pod @ 12/15/23 15:07:02.826
  Dec 15 15:07:02.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6141" for this suite. @ 12/15/23 15:07:02.837
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/15/23 15:07:02.842
  Dec 15 15:07:02.842: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename watch @ 12/15/23 15:07:02.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:07:02.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:07:02.857
  STEP: creating a watch on configmaps with a certain label @ 12/15/23 15:07:02.859
  STEP: creating a new configmap @ 12/15/23 15:07:02.861
  STEP: modifying the configmap once @ 12/15/23 15:07:02.864
  STEP: changing the label value of the configmap @ 12/15/23 15:07:02.87
  STEP: Expecting to observe a delete notification for the watched object @ 12/15/23 15:07:02.875
  Dec 15 15:07:02.875: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3466  e7bea7f2-0e11-4543-bd24-e52aaff627dc 17127 0 2023-12-15 15:07:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-15 15:07:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:07:02.875: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3466  e7bea7f2-0e11-4543-bd24-e52aaff627dc 17128 0 2023-12-15 15:07:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-15 15:07:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:07:02.876: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3466  e7bea7f2-0e11-4543-bd24-e52aaff627dc 17129 0 2023-12-15 15:07:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-15 15:07:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/15/23 15:07:02.876
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/15/23 15:07:02.882
  E1215 15:07:03.766194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:04.766281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:05.766474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:06.766684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:07.766916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:08.767420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:09.767634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:10.767837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:11.767999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:12.768179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 12/15/23 15:07:12.882
  STEP: modifying the configmap a third time @ 12/15/23 15:07:12.889
  STEP: deleting the configmap @ 12/15/23 15:07:12.895
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/15/23 15:07:12.899
  Dec 15 15:07:12.899: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3466  e7bea7f2-0e11-4543-bd24-e52aaff627dc 17204 0 2023-12-15 15:07:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-15 15:07:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:07:12.900: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3466  e7bea7f2-0e11-4543-bd24-e52aaff627dc 17205 0 2023-12-15 15:07:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-15 15:07:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:07:12.900: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3466  e7bea7f2-0e11-4543-bd24-e52aaff627dc 17206 0 2023-12-15 15:07:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-15 15:07:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:07:12.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3466" for this suite. @ 12/15/23 15:07:12.903
• [10.066 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 12/15/23 15:07:12.908
  Dec 15 15:07:12.908: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename statefulset @ 12/15/23 15:07:12.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:07:12.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:07:12.925
  STEP: Creating service test in namespace statefulset-2769 @ 12/15/23 15:07:12.928
  STEP: Creating statefulset ss in namespace statefulset-2769 @ 12/15/23 15:07:12.935
  Dec 15 15:07:12.943: INFO: Found 0 stateful pods, waiting for 1
  E1215 15:07:13.768410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:14.769092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:15.769390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:16.769613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:17.769801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:18.770281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:19.771061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:20.771356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:21.771566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:22.771771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:22.944: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/15/23 15:07:22.949
  STEP: Getting /status @ 12/15/23 15:07:22.957
  Dec 15 15:07:22.960: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/15/23 15:07:22.96
  Dec 15 15:07:22.967: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/15/23 15:07:22.967
  Dec 15 15:07:22.969: INFO: Observed &StatefulSet event: ADDED
  Dec 15 15:07:22.969: INFO: Found Statefulset ss in namespace statefulset-2769 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 15 15:07:22.969: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/15/23 15:07:22.969
  Dec 15 15:07:22.969: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 15 15:07:22.974: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/15/23 15:07:22.974
  Dec 15 15:07:22.975: INFO: Observed &StatefulSet event: ADDED
  Dec 15 15:07:22.975: INFO: Observed Statefulset ss in namespace statefulset-2769 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 15 15:07:22.975: INFO: Observed &StatefulSet event: MODIFIED
  Dec 15 15:07:22.975: INFO: Found Statefulset ss in namespace statefulset-2769 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Dec 15 15:07:22.976: INFO: Deleting all statefulset in ns statefulset-2769
  Dec 15 15:07:22.978: INFO: Scaling statefulset ss to 0
  E1215 15:07:23.771955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:24.772221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:25.772444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:26.772656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:27.772875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:28.773406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:29.773637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:30.773830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:31.774821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:32.775047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:32.989: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 15 15:07:32.990: INFO: Deleting statefulset ss
  Dec 15 15:07:32.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2769" for this suite. @ 12/15/23 15:07:32.998
• [20.092 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/15/23 15:07:33
  Dec 15 15:07:33.000: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename aggregator @ 12/15/23 15:07:33.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:07:33.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:07:33.01
  Dec 15 15:07:33.011: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Registering the sample API server. @ 12/15/23 15:07:33.011
  Dec 15 15:07:33.176: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Dec 15 15:07:33.185: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E1215 15:07:33.775924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:34.776786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:35.211: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:35.777590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:36.777857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:37.214: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:37.778321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:38.778952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:39.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:39.779017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:40.779458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:41.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:41.779740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:42.779908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:43.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:43.780044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:44.780721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:45.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:45.781059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:46.782015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:47.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:47.782317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:48.782771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:49.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:49.783336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:50.783510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:51.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:51.783902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:52.784070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:53.215: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:53.784857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:54.785157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:55.216: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:07:55.785276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:56.785488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:07:57.332: INFO: Waited 111.755719ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/15/23 15:07:57.363
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/15/23 15:07:57.366
  STEP: List APIServices @ 12/15/23 15:07:57.37
  Dec 15 15:07:57.375: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/15/23 15:07:57.375
  Dec 15 15:07:57.386: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/15/23 15:07:57.386
  Dec 15 15:07:57.393: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.December, 15, 15, 7, 57, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/15/23 15:07:57.393
  Dec 15 15:07:57.397: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-12-15 15:07:57 +0000 UTC Passed all checks passed}
  Dec 15 15:07:57.397: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 15 15:07:57.397: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/15/23 15:07:57.397
  Dec 15 15:07:57.405: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-39765795" @ 12/15/23 15:07:57.405
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/15/23 15:07:57.414
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/15/23 15:07:57.42
  STEP: Patch APIService Status @ 12/15/23 15:07:57.422
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/15/23 15:07:57.427
  Dec 15 15:07:57.429: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-12-15 15:07:57 +0000 UTC Passed all checks passed}
  Dec 15 15:07:57.429: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 15 15:07:57.429: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Dec 15 15:07:57.429: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/15/23 15:07:57.429
  STEP: Confirm that the generated APIService has been deleted @ 12/15/23 15:07:57.435
  Dec 15 15:07:57.435: INFO: Requesting list of APIServices to confirm quantity
  Dec 15 15:07:57.439: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Dec 15 15:07:57.439: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Dec 15 15:07:57.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4235" for this suite. @ 12/15/23 15:07:57.497
• [24.499 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 12/15/23 15:07:57.5
  Dec 15 15:07:57.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename var-expansion @ 12/15/23 15:07:57.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:07:57.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:07:57.511
  STEP: Creating a pod to test substitution in container's command @ 12/15/23 15:07:57.513
  E1215 15:07:57.785704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:58.786371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:07:59.787185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:00.787417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:08:01.527
  Dec 15 15:08:01.528: INFO: Trying to get logs from node talos-default-worker-1 pod var-expansion-fb2e6c23-96b5-4afe-9d84-fcc23cf5a4ce container dapi-container: <nil>
  STEP: delete the pod @ 12/15/23 15:08:01.531
  Dec 15 15:08:01.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7326" for this suite. @ 12/15/23 15:08:01.54
• [4.043 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 12/15/23 15:08:01.543
  Dec 15 15:08:01.543: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename security-context-test @ 12/15/23 15:08:01.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:01.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:01.551
  E1215 15:08:01.788049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:02.788240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:03.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5535" for this suite. @ 12/15/23 15:08:03.562
• [2.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/15/23 15:08:03.565
  Dec 15 15:08:03.565: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replication-controller @ 12/15/23 15:08:03.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:03.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:03.575
  Dec 15 15:08:03.576: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1215 15:08:03.788354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/15/23 15:08:04.582
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/15/23 15:08:04.584
  E1215 15:08:04.789285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/15/23 15:08:05.589
  Dec 15 15:08:05.597: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/15/23 15:08:05.597
  E1215 15:08:05.790314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:06.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2499" for this suite. @ 12/15/23 15:08:06.604
• [3.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/15/23 15:08:06.607
  Dec 15 15:08:06.607: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:08:06.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:06.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:06.617
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:08:06.618
  E1215 15:08:06.791060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:07.791275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:08:08.626
  Dec 15 15:08:08.627: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-2b2acf97-18a7-4de3-a2de-282920dacaeb container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:08:08.63
  Dec 15 15:08:08.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8768" for this suite. @ 12/15/23 15:08:08.639
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/15/23 15:08:08.643
  Dec 15 15:08:08.643: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 15:08:08.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:08.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:08.652
  Dec 15 15:08:08.654: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: creating the pod @ 12/15/23 15:08:08.654
  STEP: submitting the pod to kubernetes @ 12/15/23 15:08:08.655
  E1215 15:08:08.792210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:09.792680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:10.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5863" for this suite. @ 12/15/23 15:08:10.675
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 12/15/23 15:08:10.679
  Dec 15 15:08:10.679: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:08:10.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:10.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:10.692
  STEP: creating service in namespace services-7087 @ 12/15/23 15:08:10.694
  STEP: creating service affinity-clusterip in namespace services-7087 @ 12/15/23 15:08:10.694
  STEP: creating replication controller affinity-clusterip in namespace services-7087 @ 12/15/23 15:08:10.7
  I1215 15:08:10.705186      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7087, replica count: 3
  E1215 15:08:10.792683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:11.793462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:12.793658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:08:13.756000      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 15 15:08:13.761: INFO: Creating new exec pod
  E1215 15:08:13.794653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:14.794801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:15.795092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:16.774: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7087 exec execpod-affinityf8pdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E1215 15:08:16.795800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:16.910: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Dec 15 15:08:16.910: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:08:16.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7087 exec execpod-affinityf8pdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.245.254 80'
  Dec 15 15:08:17.001: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.245.254 80\nConnection to 10.99.245.254 80 port [tcp/http] succeeded!\n"
  Dec 15 15:08:17.002: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:08:17.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7087 exec execpod-affinityf8pdz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.99.245.254:80/ ; done'
  Dec 15 15:08:17.135: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.245.254:80/\n"
  Dec 15 15:08:17.135: INFO: stdout: "\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c\naffinity-clusterip-ndr8c"
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Received response from host: affinity-clusterip-ndr8c
  Dec 15 15:08:17.135: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7087, will wait for the garbage collector to delete the pods @ 12/15/23 15:08:17.14
  Dec 15 15:08:17.195: INFO: Deleting ReplicationController affinity-clusterip took: 2.641115ms
  Dec 15 15:08:17.296: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.099907ms
  E1215 15:08:17.796137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:18.796191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:19.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7087" for this suite. @ 12/15/23 15:08:19.616
• [8.942 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 12/15/23 15:08:19.621
  Dec 15 15:08:19.621: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:08:19.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:19.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:19.636
  STEP: creating service in namespace services-2484 @ 12/15/23 15:08:19.639
  STEP: creating service affinity-nodeport in namespace services-2484 @ 12/15/23 15:08:19.639
  STEP: creating replication controller affinity-nodeport in namespace services-2484 @ 12/15/23 15:08:19.651
  I1215 15:08:19.654630      22 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2484, replica count: 3
  E1215 15:08:19.797251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:20.798070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:21.798339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:08:22.705904      22 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 15 15:08:22.712: INFO: Creating new exec pod
  E1215 15:08:22.798990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:23.799359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:24.800210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:25.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2484 exec execpod-affinityrplwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E1215 15:08:25.800773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:25.861: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Dec 15 15:08:25.861: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:08:25.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2484 exec execpod-affinityrplwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.11.211 80'
  Dec 15 15:08:26.017: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.11.211 80\nConnection to 10.102.11.211 80 port [tcp/http] succeeded!\n"
  Dec 15 15:08:26.017: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:08:26.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2484 exec execpod-affinityrplwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.5 30961'
  Dec 15 15:08:26.151: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.5 30961\nConnection to 172.20.0.5 30961 port [tcp/*] succeeded!\n"
  Dec 15 15:08:26.151: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:08:26.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2484 exec execpod-affinityrplwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.6 30961'
  Dec 15 15:08:26.274: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.6 30961\nConnection to 172.20.0.6 30961 port [tcp/*] succeeded!\n"
  Dec 15 15:08:26.274: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:08:26.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-2484 exec execpod-affinityrplwn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.5:30961/ ; done'
  Dec 15 15:08:26.454: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30961/\n"
  Dec 15 15:08:26.454: INFO: stdout: "\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd\naffinity-nodeport-k42pd"
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Received response from host: affinity-nodeport-k42pd
  Dec 15 15:08:26.454: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2484, will wait for the garbage collector to delete the pods @ 12/15/23 15:08:26.462
  Dec 15 15:08:26.520: INFO: Deleting ReplicationController affinity-nodeport took: 3.509334ms
  Dec 15 15:08:26.621: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.04408ms
  E1215 15:08:26.801611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:27.802275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:28.802937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:29.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2484" for this suite. @ 12/15/23 15:08:29.642
• [10.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 12/15/23 15:08:29.648
  Dec 15 15:08:29.648: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/23 15:08:29.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:29.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:29.665
  Dec 15 15:08:29.668: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:08:29.803829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:30.804697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/15/23 15:08:30.939
  Dec 15 15:08:30.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7586 --namespace=crd-publish-openapi-7586 create -f -'
  E1215 15:08:31.805658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:32.805913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:33.002: INFO: stderr: ""
  Dec 15 15:08:33.002: INFO: stdout: "e2e-test-crd-publish-openapi-3709-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 15 15:08:33.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7586 --namespace=crd-publish-openapi-7586 delete e2e-test-crd-publish-openapi-3709-crds test-cr'
  Dec 15 15:08:33.065: INFO: stderr: ""
  Dec 15 15:08:33.065: INFO: stdout: "e2e-test-crd-publish-openapi-3709-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Dec 15 15:08:33.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7586 --namespace=crd-publish-openapi-7586 apply -f -'
  Dec 15 15:08:33.138: INFO: stderr: ""
  Dec 15 15:08:33.138: INFO: stdout: "e2e-test-crd-publish-openapi-3709-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 15 15:08:33.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7586 --namespace=crd-publish-openapi-7586 delete e2e-test-crd-publish-openapi-3709-crds test-cr'
  Dec 15 15:08:33.202: INFO: stderr: ""
  Dec 15 15:08:33.202: INFO: stdout: "e2e-test-crd-publish-openapi-3709-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/15/23 15:08:33.202
  Dec 15 15:08:33.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7586 explain e2e-test-crd-publish-openapi-3709-crds'
  Dec 15 15:08:33.256: INFO: stderr: ""
  Dec 15 15:08:33.256: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3709-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1215 15:08:33.805908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:34.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7586" for this suite. @ 12/15/23 15:08:34.546
• [4.903 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/15/23 15:08:34.551
  Dec 15 15:08:34.551: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:08:34.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:34.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:34.567
  STEP: Creating projection with secret that has name projected-secret-test-38fd17bc-ee45-412e-af2d-7f22ca947b04 @ 12/15/23 15:08:34.57
  STEP: Creating a pod to test consume secrets @ 12/15/23 15:08:34.573
  E1215 15:08:34.806917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:35.807178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:36.807393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:37.808271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:08:38.59
  Dec 15 15:08:38.593: INFO: Trying to get logs from node talos-default-worker-2 pod pod-projected-secrets-8c05ca79-45f3-43b2-949d-5ead43bb409d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 15:08:38.602
  Dec 15 15:08:38.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-747" for this suite. @ 12/15/23 15:08:38.615
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 12/15/23 15:08:38.621
  Dec 15 15:08:38.621: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename field-validation @ 12/15/23 15:08:38.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:38.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:38.637
  Dec 15 15:08:38.640: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:08:38.808759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:39.809641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:40.809836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1215 15:08:41.163614      22 warnings.go:70] unknown field "alpha"
  W1215 15:08:41.163649      22 warnings.go:70] unknown field "beta"
  W1215 15:08:41.163662      22 warnings.go:70] unknown field "delta"
  W1215 15:08:41.163676      22 warnings.go:70] unknown field "epsilon"
  W1215 15:08:41.163690      22 warnings.go:70] unknown field "gamma"
  Dec 15 15:08:41.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2774" for this suite. @ 12/15/23 15:08:41.694
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/15/23 15:08:41.697
  Dec 15 15:08:41.697: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:08:41.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:41.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:41.706
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/15/23 15:08:41.707
  E1215 15:08:41.810856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:42.811471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:08:43.716
  Dec 15 15:08:43.718: INFO: Trying to get logs from node talos-default-worker-1 pod pod-99afddd1-9557-4f2f-b414-71821c981cff container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:08:43.721
  Dec 15 15:08:43.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5611" for this suite. @ 12/15/23 15:08:43.73
• [2.036 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/15/23 15:08:43.733
  Dec 15 15:08:43.733: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 15:08:43.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:43.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:43.743
  STEP: Create a pod @ 12/15/23 15:08:43.745
  E1215 15:08:43.811854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:44.812339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/15/23 15:08:45.755
  Dec 15 15:08:45.759: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Dec 15 15:08:45.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7915" for this suite. @ 12/15/23 15:08:45.762
• [2.033 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/15/23 15:08:45.766
  Dec 15 15:08:45.766: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/23 15:08:45.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:45.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:45.778
  STEP: Creating ServiceAccount "e2e-sa-d72z2"  @ 12/15/23 15:08:45.78
  Dec 15 15:08:45.783: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-d72z2"  @ 12/15/23 15:08:45.783
  Dec 15 15:08:45.787: INFO: AutomountServiceAccountToken: true
  Dec 15 15:08:45.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1287" for this suite. @ 12/15/23 15:08:45.79
• [0.027 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/15/23 15:08:45.793
  Dec 15 15:08:45.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:08:45.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:45.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:45.804
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/15/23 15:08:45.806
  E1215 15:08:45.812616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:46.812729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:47.812929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:08:47.815
  Dec 15 15:08:47.816: INFO: Trying to get logs from node talos-default-worker-2 pod pod-3a958d47-5625-416e-a034-7df858613ce7 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:08:47.819
  Dec 15 15:08:47.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1359" for this suite. @ 12/15/23 15:08:47.827
• [2.037 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/15/23 15:08:47.83
  Dec 15 15:08:47.830: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename daemonsets @ 12/15/23 15:08:47.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:47.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:47.839
  Dec 15 15:08:47.849: INFO: Create a RollingUpdate DaemonSet
  Dec 15 15:08:47.851: INFO: Check that daemon pods launch on every node of the cluster
  Dec 15 15:08:47.853: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:47.853: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:47.853: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:47.854: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:08:47.854: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:08:48.813173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:48.854: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:48.854: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:48.854: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:48.856: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 15 15:08:48.856: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Dec 15 15:08:48.856: INFO: Update the DaemonSet to trigger a rollout
  Dec 15 15:08:48.860: INFO: Updating DaemonSet daemon-set
  E1215 15:08:49.814060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:49.868: INFO: Roll back the DaemonSet before rollout is complete
  Dec 15 15:08:49.872: INFO: Updating DaemonSet daemon-set
  Dec 15 15:08:49.872: INFO: Make sure DaemonSet rollback is complete
  Dec 15 15:08:49.874: INFO: Wrong image for pod: daemon-set-r6hxf. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Dec 15 15:08:49.874: INFO: Pod daemon-set-r6hxf is not available
  Dec 15 15:08:49.876: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:49.876: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:49.876: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1215 15:08:50.814310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:50.878: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:50.878: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:50.878: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1215 15:08:51.815208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:51.877: INFO: Pod daemon-set-2nfrg is not available
  Dec 15 15:08:51.881: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:51.881: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:08:51.881: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/23 15:08:51.906
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9520, will wait for the garbage collector to delete the pods @ 12/15/23 15:08:51.906
  Dec 15 15:08:51.963: INFO: Deleting DaemonSet.extensions daemon-set took: 4.063724ms
  Dec 15 15:08:52.064: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.700113ms
  E1215 15:08:52.815705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:08:53.666: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:08:53.666: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 15 15:08:53.669: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18214"},"items":null}

  Dec 15 15:08:53.671: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18214"},"items":null}

  Dec 15 15:08:53.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9520" for this suite. @ 12/15/23 15:08:53.682
• [5.856 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 12/15/23 15:08:53.686
  Dec 15 15:08:53.686: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename field-validation @ 12/15/23 15:08:53.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:53.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:53.702
  STEP: apply creating a deployment @ 12/15/23 15:08:53.705
  Dec 15 15:08:53.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8672" for this suite. @ 12/15/23 15:08:53.718
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 12/15/23 15:08:53.723
  Dec 15 15:08:53.723: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/23 15:08:53.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:08:53.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:08:53.739
  STEP: set up a multi version CRD @ 12/15/23 15:08:53.742
  Dec 15 15:08:53.742: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:08:53.815751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:54.816692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:55.817613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:56.818611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 12/15/23 15:08:56.859
  STEP: check the unserved version gets removed @ 12/15/23 15:08:56.869
  STEP: check the other version is not changed @ 12/15/23 15:08:57.667
  E1215 15:08:57.819589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:58.820008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:08:59.820203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:09:00.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9174" for this suite. @ 12/15/23 15:09:00.09
• [6.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 12/15/23 15:09:00.096
  Dec 15 15:09:00.096: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename job @ 12/15/23 15:09:00.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:09:00.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:09:00.111
  STEP: Creating a job @ 12/15/23 15:09:00.114
  STEP: Ensuring job reaches completions @ 12/15/23 15:09:00.118
  E1215 15:09:00.820298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:01.820411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:02.820552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:03.820902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:04.821616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:05.821810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:06.821885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:07.822018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:08.822051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:09.822252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:09:10.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1951" for this suite. @ 12/15/23 15:09:10.123
• [10.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/15/23 15:09:10.128
  Dec 15 15:09:10.128: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:09:10.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:09:10.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:09:10.14
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:09:10.142
  E1215 15:09:10.822709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:11.823821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:12.824765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:13.825361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:09:14.156
  Dec 15 15:09:14.158: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-92f42b97-01de-48ac-9d09-faf510c6a063 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:09:14.163
  Dec 15 15:09:14.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9952" for this suite. @ 12/15/23 15:09:14.172
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 12/15/23 15:09:14.175
  Dec 15 15:09:14.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:09:14.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:09:14.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:09:14.185
  STEP: Setting up server cert @ 12/15/23 15:09:14.196
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:09:14.316
  STEP: Deploying the webhook pod @ 12/15/23 15:09:14.321
  STEP: Wait for the deployment to be ready @ 12/15/23 15:09:14.326
  Dec 15 15:09:14.330: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1215 15:09:14.825854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:15.826037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:09:16.339
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:09:16.35
  E1215 15:09:16.826949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:09:17.350: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/15/23 15:09:17.356
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/15/23 15:09:17.371
  STEP: Creating a configMap that should not be mutated @ 12/15/23 15:09:17.376
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/15/23 15:09:17.385
  STEP: Creating a configMap that should be mutated @ 12/15/23 15:09:17.391
  Dec 15 15:09:17.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6995" for this suite. @ 12/15/23 15:09:17.454
  STEP: Destroying namespace "webhook-markers-2117" for this suite. @ 12/15/23 15:09:17.458
• [3.286 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/15/23 15:09:17.461
  Dec 15 15:09:17.461: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:09:17.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:09:17.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:09:17.472
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:09:17.474
  E1215 15:09:17.827732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:18.827918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:19.828358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:20.828555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:09:21.487
  Dec 15 15:09:21.488: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-6cc47b4c-ee79-4446-804c-79d300457110 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:09:21.491
  Dec 15 15:09:21.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6589" for this suite. @ 12/15/23 15:09:21.5
• [4.041 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 12/15/23 15:09:21.503
  Dec 15 15:09:21.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:09:21.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:09:21.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:09:21.511
  STEP: create deployment with httpd image @ 12/15/23 15:09:21.513
  Dec 15 15:09:21.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-212 create -f -'
  Dec 15 15:09:21.571: INFO: stderr: ""
  Dec 15 15:09:21.571: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/15/23 15:09:21.571
  Dec 15 15:09:21.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-212 diff -f -'
  Dec 15 15:09:21.643: INFO: rc: 1
  Dec 15 15:09:21.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-212 delete -f -'
  Dec 15 15:09:21.682: INFO: stderr: ""
  Dec 15 15:09:21.682: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Dec 15 15:09:21.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-212" for this suite. @ 12/15/23 15:09:21.685
• [0.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/15/23 15:09:21.69
  Dec 15 15:09:21.690: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/15/23 15:09:21.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:09:21.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:09:21.7
  STEP: creating @ 12/15/23 15:09:21.701
  STEP: getting @ 12/15/23 15:09:21.709
  STEP: listing in namespace @ 12/15/23 15:09:21.711
  STEP: patching @ 12/15/23 15:09:21.713
  STEP: deleting @ 12/15/23 15:09:21.717
  Dec 15 15:09:21.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1255" for this suite. @ 12/15/23 15:09:21.726
• [0.042 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 12/15/23 15:09:21.733
  Dec 15 15:09:21.733: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/23 15:09:21.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:09:21.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:09:21.746
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/15/23 15:09:21.747
  Dec 15 15:09:21.748: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:09:21.829508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:22.829886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:09:23.032: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:09:23.830752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:24.830776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:25.831345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:26.832264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:27.833313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:09:28.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7127" for this suite. @ 12/15/23 15:09:28.034
• [6.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/15/23 15:09:28.037
  Dec 15 15:09:28.037: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/15/23 15:09:28.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:09:28.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:09:28.046
  STEP: Creating 50 configmaps @ 12/15/23 15:09:28.048
  STEP: Creating RC which spawns configmap-volume pods @ 12/15/23 15:09:28.291
  Dec 15 15:09:28.394: INFO: Pod name wrapped-volume-race-f7aa3117-7a22-4c34-a9fd-4aef80ee2578: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/15/23 15:09:28.394
  E1215 15:09:28.833823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:29.833937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:30.834798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:31.834906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 12/15/23 15:09:32.462
  Dec 15 15:09:32.473: INFO: Pod name wrapped-volume-race-b3d0385b-7a68-4739-88df-9a218f089cc9: Found 0 pods out of 5
  E1215 15:09:32.835317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:33.835584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:34.835906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:35.836671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:36.836901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:09:37.478: INFO: Pod name wrapped-volume-race-b3d0385b-7a68-4739-88df-9a218f089cc9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/15/23 15:09:37.478
  STEP: Creating RC which spawns configmap-volume pods @ 12/15/23 15:09:37.49
  Dec 15 15:09:37.498: INFO: Pod name wrapped-volume-race-1d920ee9-543a-4138-86d4-3efc375e6ae6: Found 0 pods out of 5
  E1215 15:09:37.837545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:38.837637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:39.837748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:40.838723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:41.838832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:09:42.505: INFO: Pod name wrapped-volume-race-1d920ee9-543a-4138-86d4-3efc375e6ae6: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/15/23 15:09:42.505
  STEP: deleting ReplicationController wrapped-volume-race-1d920ee9-543a-4138-86d4-3efc375e6ae6 in namespace emptydir-wrapper-8685, will wait for the garbage collector to delete the pods @ 12/15/23 15:09:42.518
  Dec 15 15:09:42.575: INFO: Deleting ReplicationController wrapped-volume-race-1d920ee9-543a-4138-86d4-3efc375e6ae6 took: 4.066514ms
  Dec 15 15:09:42.675: INFO: Terminating ReplicationController wrapped-volume-race-1d920ee9-543a-4138-86d4-3efc375e6ae6 pods took: 100.388395ms
  E1215 15:09:42.839285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:43.840010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:44.840666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-b3d0385b-7a68-4739-88df-9a218f089cc9 in namespace emptydir-wrapper-8685, will wait for the garbage collector to delete the pods @ 12/15/23 15:09:44.976
  Dec 15 15:09:45.036: INFO: Deleting ReplicationController wrapped-volume-race-b3d0385b-7a68-4739-88df-9a218f089cc9 took: 7.087064ms
  Dec 15 15:09:45.136: INFO: Terminating ReplicationController wrapped-volume-race-b3d0385b-7a68-4739-88df-9a218f089cc9 pods took: 100.609349ms
  E1215 15:09:45.841079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:46.841592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-f7aa3117-7a22-4c34-a9fd-4aef80ee2578 in namespace emptydir-wrapper-8685, will wait for the garbage collector to delete the pods @ 12/15/23 15:09:46.937
  Dec 15 15:09:46.994: INFO: Deleting ReplicationController wrapped-volume-race-f7aa3117-7a22-4c34-a9fd-4aef80ee2578 took: 4.562489ms
  Dec 15 15:09:47.095: INFO: Terminating ReplicationController wrapped-volume-race-f7aa3117-7a22-4c34-a9fd-4aef80ee2578 pods took: 100.296603ms
  E1215 15:09:47.841888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 12/15/23 15:09:48.696
  E1215 15:09:48.842374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:09:48.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8685" for this suite. @ 12/15/23 15:09:48.861
• [20.826 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 12/15/23 15:09:48.864
  Dec 15 15:09:48.864: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-preemption @ 12/15/23 15:09:48.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:09:48.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:09:48.873
  Dec 15 15:09:48.879: INFO: Waiting up to 1m0s for all nodes to be ready
  E1215 15:09:49.842567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:50.842794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:51.843189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:52.844306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:53.844872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:54.845020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:55.845609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:56.845834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:57.846053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:58.846625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:09:59.847162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:00.847295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:01.847435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:02.848078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:03.848158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:04.848423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:05.849439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:06.849732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:07.850327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:08.850761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:09.851106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:10.851217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:11.852040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:12.852262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:13.852824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:14.853101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:15.853188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:16.854103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:17.854549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:18.855000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:19.856048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:20.856251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:21.856374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:22.856589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:23.857097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:24.857778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:25.858613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:26.859589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:27.859804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:28.860251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:29.860360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:30.860765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:31.861184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:32.862154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:33.862281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:34.862342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:35.862904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:36.863335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:37.863784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:38.864537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:39.864957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:40.865178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:41.865334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:42.865468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:43.865809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:44.866031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:45.866359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:46.866759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:47.867233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:48.868005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:10:48.883: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/15/23 15:10:48.884
  Dec 15 15:10:48.885: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/15/23 15:10:48.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:10:48.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:10:48.9
  STEP: Finding an available node @ 12/15/23 15:10:48.903
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/15/23 15:10:48.903
  E1215 15:10:49.868951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:50.869256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/15/23 15:10:50.917
  Dec 15 15:10:50.924: INFO: found a healthy node: talos-default-worker-1
  E1215 15:10:51.869918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:52.870989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:53.871082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:54.871382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:55.871653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:56.872800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:10:56.960: INFO: pods created so far: [1 1 1]
  Dec 15 15:10:56.960: INFO: length of pods created so far: 3
  E1215 15:10:57.873792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:10:58.874241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:10:58.968: INFO: pods created so far: [2 2 1]
  E1215 15:10:59.874319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:00.874435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:01.874850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:02.875066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:03.875334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:04.875558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:05.875799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:11:06.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8775" for this suite. @ 12/15/23 15:11:06.023
  Dec 15 15:11:06.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-89" for this suite. @ 12/15/23 15:11:06.032
• [77.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 12/15/23 15:11:06.037
  Dec 15 15:11:06.037: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:11:06.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:06.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:06.053
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/15/23 15:11:06.056
  Dec 15 15:11:06.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5467 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Dec 15 15:11:06.122: INFO: stderr: ""
  Dec 15 15:11:06.122: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/15/23 15:11:06.122
  Dec 15 15:11:06.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5467 delete pods e2e-test-httpd-pod'
  E1215 15:11:06.875816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:07.876605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:11:07.878: INFO: stderr: ""
  Dec 15 15:11:07.878: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 15 15:11:07.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5467" for this suite. @ 12/15/23 15:11:07.882
• [1.850 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/15/23 15:11:07.887
  Dec 15 15:11:07.887: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 15:11:07.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:07.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:07.902
  STEP: Creating configMap with name configmap-test-volume-map-38c7e62d-a5d1-4d89-9072-6219b0304294 @ 12/15/23 15:11:07.905
  STEP: Creating a pod to test consume configMaps @ 12/15/23 15:11:07.909
  E1215 15:11:08.877438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:09.877669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:10.878347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:11.879361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:11:11.925
  Dec 15 15:11:11.927: INFO: Trying to get logs from node talos-default-worker-2 pod pod-configmaps-845bd960-891a-45f7-b72d-d589c07a33b1 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:11:11.934
  Dec 15 15:11:11.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9420" for this suite. @ 12/15/23 15:11:11.941
• [4.056 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/15/23 15:11:11.944
  Dec 15 15:11:11.944: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pod-network-test @ 12/15/23 15:11:11.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:11.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:11.953
  STEP: Performing setup for networking test in namespace pod-network-test-327 @ 12/15/23 15:11:11.954
  STEP: creating a selector @ 12/15/23 15:11:11.954
  STEP: Creating the service pods in kubernetes @ 12/15/23 15:11:11.954
  Dec 15 15:11:11.954: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1215 15:11:12.880185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:13.880259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:14.880639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:15.880731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:16.880914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:17.881260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:18.882213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:19.882278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:20.882387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:21.882577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:22.882762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:23.883055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/15/23 15:11:23.994
  E1215 15:11:24.883447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:25.883631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:11:26.007: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Dec 15 15:11:26.007: INFO: Breadth first check of 10.244.1.208 on host 172.20.0.5...
  Dec 15 15:11:26.008: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.209:9080/dial?request=hostname&protocol=http&host=10.244.1.208&port=8083&tries=1'] Namespace:pod-network-test-327 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:11:26.009: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:11:26.009: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:11:26.009: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-327/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.209%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.208%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 15 15:11:26.075: INFO: Waiting for responses: map[]
  Dec 15 15:11:26.075: INFO: reached 10.244.1.208 after 0/1 tries
  Dec 15 15:11:26.075: INFO: Breadth first check of 10.244.4.132 on host 172.20.0.6...
  Dec 15 15:11:26.077: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.209:9080/dial?request=hostname&protocol=http&host=10.244.4.132&port=8083&tries=1'] Namespace:pod-network-test-327 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:11:26.077: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:11:26.077: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:11:26.077: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-327/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.209%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.4.132%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 15 15:11:26.139: INFO: Waiting for responses: map[]
  Dec 15 15:11:26.139: INFO: reached 10.244.4.132 after 0/1 tries
  Dec 15 15:11:26.139: INFO: Going to retry 0 out of 2 pods....
  Dec 15 15:11:26.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-327" for this suite. @ 12/15/23 15:11:26.142
• [14.202 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 12/15/23 15:11:26.145
  Dec 15 15:11:26.145: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename field-validation @ 12/15/23 15:11:26.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:26.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:26.156
  Dec 15 15:11:26.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:11:26.883780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:27.884580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1215 15:11:28.676752      22 warnings.go:70] unknown field "alpha"
  W1215 15:11:28.676773      22 warnings.go:70] unknown field "beta"
  W1215 15:11:28.676779      22 warnings.go:70] unknown field "delta"
  W1215 15:11:28.676783      22 warnings.go:70] unknown field "epsilon"
  W1215 15:11:28.676788      22 warnings.go:70] unknown field "gamma"
  E1215 15:11:28.885541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:11:29.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-96" for this suite. @ 12/15/23 15:11:29.199
• [3.059 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 12/15/23 15:11:29.204
  Dec 15 15:11:29.204: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:11:29.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:29.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:29.22
  Dec 15 15:11:29.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5635 version'
  Dec 15 15:11:29.258: INFO: stderr: ""
  Dec 15 15:11:29.258: INFO: stdout: "Client Version: v1.29.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.0\n"
  Dec 15 15:11:29.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5635" for this suite. @ 12/15/23 15:11:29.261
• [0.059 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 12/15/23 15:11:29.264
  Dec 15 15:11:29.264: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename job @ 12/15/23 15:11:29.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:29.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:29.272
  STEP: Creating Indexed job @ 12/15/23 15:11:29.274
  STEP: Ensuring job reaches completions @ 12/15/23 15:11:29.276
  E1215 15:11:29.886344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:30.886545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:31.887595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:32.887856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:33.888562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:34.889366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 12/15/23 15:11:35.279
  Dec 15 15:11:35.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3995" for this suite. @ 12/15/23 15:11:35.283
• [6.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/15/23 15:11:35.286
  Dec 15 15:11:35.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:11:35.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:35.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:35.295
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:11:35.296
  E1215 15:11:35.889528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:36.889785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:11:37.304
  Dec 15 15:11:37.305: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-3e7ce854-98be-4328-b38b-2dcf70068fc7 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:11:37.315
  Dec 15 15:11:37.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2387" for this suite. @ 12/15/23 15:11:37.325
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/15/23 15:11:37.329
  Dec 15 15:11:37.329: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename namespaces @ 12/15/23 15:11:37.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:37.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:37.345
  STEP: Creating a test namespace @ 12/15/23 15:11:37.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:37.36
  STEP: Creating a pod in the namespace @ 12/15/23 15:11:37.363
  STEP: Waiting for the pod to have running status @ 12/15/23 15:11:37.369
  E1215 15:11:37.890096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:38.890876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 12/15/23 15:11:39.376
  STEP: Waiting for the namespace to be removed. @ 12/15/23 15:11:39.38
  E1215 15:11:39.891654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:40.892567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:41.892644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:42.892833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:43.893097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:44.894198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:45.895049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:46.895563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:47.895656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:48.895771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:49.896208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/15/23 15:11:50.384
  STEP: Verifying there are no pods in the namespace @ 12/15/23 15:11:50.394
  Dec 15 15:11:50.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7014" for this suite. @ 12/15/23 15:11:50.399
  STEP: Destroying namespace "nsdeletetest-6135" for this suite. @ 12/15/23 15:11:50.403
  Dec 15 15:11:50.405: INFO: Namespace nsdeletetest-6135 was already deleted
  STEP: Destroying namespace "nsdeletetest-2768" for this suite. @ 12/15/23 15:11:50.405
• [13.080 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/15/23 15:11:50.409
  Dec 15 15:11:50.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:11:50.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:50.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:50.423
  STEP: Creating configMap with name projected-configmap-test-volume-map-e36814fa-f056-4642-8e26-47de6d1e8235 @ 12/15/23 15:11:50.426
  STEP: Creating a pod to test consume configMaps @ 12/15/23 15:11:50.429
  E1215 15:11:50.896475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:51.896682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:52.897504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:53.897786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:11:54.444
  Dec 15 15:11:54.445: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-5eedf8d3-9ece-4d4b-ad4b-b0f88ed1f3b8 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:11:54.449
  Dec 15 15:11:54.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4717" for this suite. @ 12/15/23 15:11:54.458
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 12/15/23 15:11:54.461
  Dec 15 15:11:54.461: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename field-validation @ 12/15/23 15:11:54.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:54.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:54.472
  STEP: apply creating a deployment @ 12/15/23 15:11:54.474
  Dec 15 15:11:54.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3578" for this suite. @ 12/15/23 15:11:54.486
• [0.028 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 12/15/23 15:11:54.489
  Dec 15 15:11:54.489: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename field-validation @ 12/15/23 15:11:54.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:54.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:54.501
  Dec 15 15:11:54.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:11:54.898723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:55.899663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:56.899775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1215 15:11:57.025443      22 warnings.go:70] unknown field "alpha"
  W1215 15:11:57.025470      22 warnings.go:70] unknown field "beta"
  W1215 15:11:57.025483      22 warnings.go:70] unknown field "delta"
  W1215 15:11:57.025491      22 warnings.go:70] unknown field "epsilon"
  W1215 15:11:57.025499      22 warnings.go:70] unknown field "gamma"
  Dec 15 15:11:57.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5359" for this suite. @ 12/15/23 15:11:57.561
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/15/23 15:11:57.566
  Dec 15 15:11:57.566: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:11:57.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:11:57.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:11:57.583
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:11:57.586
  E1215 15:11:57.900832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:58.901233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:11:59.901385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:00.901550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:12:01.6
  Dec 15 15:12:01.602: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-a8ba4b6c-780e-4973-8737-290146db3869 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:12:01.605
  Dec 15 15:12:01.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3643" for this suite. @ 12/15/23 15:12:01.617
• [4.054 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/15/23 15:12:01.62
  Dec 15 15:12:01.620: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename gc @ 12/15/23 15:12:01.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:01.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:01.634
  STEP: create the deployment @ 12/15/23 15:12:01.637
  W1215 15:12:01.640423      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/15/23 15:12:01.64
  E1215 15:12:01.901772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 12/15/23 15:12:02.144
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/15/23 15:12:02.148
  STEP: Gathering metrics @ 12/15/23 15:12:02.659
  Dec 15 15:12:02.706: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 15 15:12:02.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6402" for this suite. @ 12/15/23 15:12:02.709
• [1.092 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 12/15/23 15:12:02.712
  Dec 15 15:12:02.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename daemonsets @ 12/15/23 15:12:02.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:02.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:02.724
  STEP: Creating simple DaemonSet "daemon-set" @ 12/15/23 15:12:02.732
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/23 15:12:02.734
  Dec 15 15:12:02.736: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:12:02.736: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:12:02.736: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:12:02.738: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:12:02.738: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:12:02.902662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:03.739: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:12:03.739: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:12:03.739: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:12:03.742: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:12:03.742: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:12:03.903429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:04.739: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:12:04.739: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:12:04.739: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:12:04.742: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 15 15:12:04.742: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/15/23 15:12:04.745
  STEP: DeleteCollection of the DaemonSets @ 12/15/23 15:12:04.748
  STEP: Verify that ReplicaSets have been deleted @ 12/15/23 15:12:04.753
  Dec 15 15:12:04.761: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20028"},"items":null}

  Dec 15 15:12:04.765: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20029"},"items":[{"metadata":{"name":"daemon-set-9cdlx","generateName":"daemon-set-","namespace":"daemonsets-4091","uid":"d72aedaa-7a7e-4b72-bbce-1c9959f31a1a","resourceVersion":"20021","creationTimestamp":"2023-12-15T15:12:02Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f9cf0841-65e7-4e63-81f8-0f3f7b788182","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-15T15:12:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9cf0841-65e7-4e63-81f8-0f3f7b788182\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-15T15:12:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.218\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-kh6tl","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-kh6tl","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"talos-default-worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["talos-default-worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:03Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:02Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:03Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:03Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:02Z"}],"hostIP":"172.20.0.5","hostIPs":[{"ip":"172.20.0.5"}],"podIP":"10.244.1.218","podIPs":[{"ip":"10.244.1.218"}],"startTime":"2023-12-15T15:12:02Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-15T15:12:03Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://698198da7a636ec4efeba8d3427cc09c1d9deba0d69b00b3a64738cb6e96fe87","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gj84k","generateName":"daemon-set-","namespace":"daemonsets-4091","uid":"bf58a8ed-7044-4b6c-8be7-d8eb7db3518b","resourceVersion":"20023","creationTimestamp":"2023-12-15T15:12:02Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f9cf0841-65e7-4e63-81f8-0f3f7b788182","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-15T15:12:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9cf0841-65e7-4e63-81f8-0f3f7b788182\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-15T15:12:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.4.135\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gxvvt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gxvvt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"talos-default-worker-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["talos-default-worker-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:03Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:02Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:03Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:03Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-15T15:12:02Z"}],"hostIP":"172.20.0.6","hostIPs":[{"ip":"172.20.0.6"}],"podIP":"10.244.4.135","podIPs":[{"ip":"10.244.4.135"}],"startTime":"2023-12-15T15:12:02Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-15T15:12:03Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a89507f3751ea2ad2d724712b68ea3550e823c50d2616752a8e67a934df3e3f3","started":true}],"qosClass":"BestEffort"}}]}

  Dec 15 15:12:04.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4091" for this suite. @ 12/15/23 15:12:04.777
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/15/23 15:12:04.782
  Dec 15 15:12:04.782: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename prestop @ 12/15/23 15:12:04.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:04.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:04.798
  STEP: Creating server pod server in namespace prestop-1306 @ 12/15/23 15:12:04.801
  STEP: Waiting for pods to come up. @ 12/15/23 15:12:04.807
  E1215 15:12:04.903889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:05.904393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-1306 @ 12/15/23 15:12:06.814
  E1215 15:12:06.905169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:07.905887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 12/15/23 15:12:08.821
  E1215 15:12:08.906777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:09.907435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:10.907637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:11.907774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:12.908128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:13.829: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/15/23 15:12:13.83
  Dec 15 15:12:13.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1306" for this suite. @ 12/15/23 15:12:13.841
• [9.063 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/15/23 15:12:13.846
  Dec 15 15:12:13.846: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename endpointslice @ 12/15/23 15:12:13.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:13.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:13.86
  E1215 15:12:13.908861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:14.909183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:15.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7537" for this suite. @ 12/15/23 15:12:15.905
  E1215 15:12:15.910242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.064 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 12/15/23 15:12:15.91
  Dec 15 15:12:15.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-webhook @ 12/15/23 15:12:15.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:15.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:15.926
  STEP: Setting up server cert @ 12/15/23 15:12:15.929
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/15/23 15:12:16.029
  STEP: Deploying the custom resource conversion webhook pod @ 12/15/23 15:12:16.033
  STEP: Wait for the deployment to be ready @ 12/15/23 15:12:16.037
  Dec 15 15:12:16.041: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E1215 15:12:16.910333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:17.911073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:12:18.05
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:12:18.06
  E1215 15:12:18.911142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:19.061: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 15 15:12:19.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:12:19.911396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:20.911787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/15/23 15:12:21.615
  STEP: v2 custom resource should be converted @ 12/15/23 15:12:21.619
  E1215 15:12:21.912570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:22.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8902" for this suite. @ 12/15/23 15:12:22.162
• [6.255 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/15/23 15:12:22.165
  Dec 15 15:12:22.165: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:12:22.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:22.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:22.176
  STEP: Creating the pod @ 12/15/23 15:12:22.178
  E1215 15:12:22.913093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:23.913878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:24.704: INFO: Successfully updated pod "labelsupdate719a792d-6295-4f30-84cd-623b1a447c12"
  E1215 15:12:24.914837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:25.915178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:26.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1583" for this suite. @ 12/15/23 15:12:26.716
• [4.553 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 12/15/23 15:12:26.719
  Dec 15 15:12:26.719: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename cronjob @ 12/15/23 15:12:26.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:26.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:26.733
  STEP: Creating a cronjob @ 12/15/23 15:12:26.734
  STEP: creating @ 12/15/23 15:12:26.734
  STEP: getting @ 12/15/23 15:12:26.738
  STEP: listing @ 12/15/23 15:12:26.739
  STEP: watching @ 12/15/23 15:12:26.741
  Dec 15 15:12:26.741: INFO: starting watch
  STEP: cluster-wide listing @ 12/15/23 15:12:26.741
  STEP: cluster-wide watching @ 12/15/23 15:12:26.743
  Dec 15 15:12:26.743: INFO: starting watch
  STEP: patching @ 12/15/23 15:12:26.744
  STEP: updating @ 12/15/23 15:12:26.748
  Dec 15 15:12:26.753: INFO: waiting for watch events with expected annotations
  Dec 15 15:12:26.753: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/15/23 15:12:26.753
  STEP: updating /status @ 12/15/23 15:12:26.756
  STEP: get /status @ 12/15/23 15:12:26.759
  STEP: deleting @ 12/15/23 15:12:26.761
  STEP: deleting a collection @ 12/15/23 15:12:26.766
  Dec 15 15:12:26.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3976" for this suite. @ 12/15/23 15:12:26.772
• [0.056 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 12/15/23 15:12:26.775
  Dec 15 15:12:26.775: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename ingress @ 12/15/23 15:12:26.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:26.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:26.786
  STEP: getting /apis @ 12/15/23 15:12:26.788
  STEP: getting /apis/networking.k8s.io @ 12/15/23 15:12:26.79
  STEP: getting /apis/networking.k8s.iov1 @ 12/15/23 15:12:26.791
  STEP: creating @ 12/15/23 15:12:26.792
  STEP: getting @ 12/15/23 15:12:26.797
  STEP: listing @ 12/15/23 15:12:26.798
  STEP: watching @ 12/15/23 15:12:26.8
  Dec 15 15:12:26.800: INFO: starting watch
  STEP: cluster-wide listing @ 12/15/23 15:12:26.801
  STEP: cluster-wide watching @ 12/15/23 15:12:26.802
  Dec 15 15:12:26.802: INFO: starting watch
  STEP: patching @ 12/15/23 15:12:26.803
  STEP: updating @ 12/15/23 15:12:26.805
  Dec 15 15:12:26.809: INFO: waiting for watch events with expected annotations
  Dec 15 15:12:26.809: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/15/23 15:12:26.809
  STEP: updating /status @ 12/15/23 15:12:26.811
  STEP: get /status @ 12/15/23 15:12:26.814
  STEP: deleting @ 12/15/23 15:12:26.816
  STEP: deleting a collection @ 12/15/23 15:12:26.82
  Dec 15 15:12:26.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5398" for this suite. @ 12/15/23 15:12:26.827
• [0.053 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 12/15/23 15:12:26.829
  Dec 15 15:12:26.829: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 15:12:26.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:26.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:26.838
  STEP: Counting existing ResourceQuota @ 12/15/23 15:12:26.839
  E1215 15:12:26.915699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:27.915733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:28.916617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:29.916692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:30.916900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/15/23 15:12:31.842
  STEP: Ensuring resource quota status is calculated @ 12/15/23 15:12:31.846
  E1215 15:12:31.917524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:32.918168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:33.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5189" for this suite. @ 12/15/23 15:12:33.854
• [7.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/15/23 15:12:33.86
  Dec 15 15:12:33.860: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/15/23 15:12:33.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:33.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:33.876
  STEP: mirroring a new custom Endpoint @ 12/15/23 15:12:33.891
  Dec 15 15:12:33.898: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E1215 15:12:33.918997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:34.919345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 12/15/23 15:12:35.903
  Dec 15 15:12:35.909: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1215 15:12:35.920017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:36.920438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 12/15/23 15:12:37.914
  E1215 15:12:37.921079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:37.921: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E1215 15:12:38.922189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:39.922543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:39.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8644" for this suite. @ 12/15/23 15:12:39.926
• [6.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/15/23 15:12:39.93
  Dec 15 15:12:39.930: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 15:12:39.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:39.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:39.947
  STEP: Creating configMap with name configmap-test-upd-ddc2fa08-dbff-4d84-9837-b3173a7dc4b3 @ 12/15/23 15:12:39.952
  STEP: Creating the pod @ 12/15/23 15:12:39.956
  E1215 15:12:40.923386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:41.923579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 12/15/23 15:12:41.968
  STEP: Waiting for pod with binary data @ 12/15/23 15:12:41.971
  Dec 15 15:12:41.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-943" for this suite. @ 12/15/23 15:12:41.975
• [2.048 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 12/15/23 15:12:41.977
  Dec 15 15:12:41.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename security-context-test @ 12/15/23 15:12:41.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:41.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:41.985
  E1215 15:12:42.923601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:43.923704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:44.923802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:45.924000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:46.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1248" for this suite. @ 12/15/23 15:12:46.005
• [4.032 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/15/23 15:12:46.01
  Dec 15 15:12:46.010: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replicaset @ 12/15/23 15:12:46.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:46.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:46.023
  Dec 15 15:12:46.034: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1215 15:12:46.924107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:47.924769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:48.925633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:49.925784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:50.925874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:51.039: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/23 15:12:51.039
  STEP: Scaling up "test-rs" replicaset @ 12/15/23 15:12:51.039
  Dec 15 15:12:51.046: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/15/23 15:12:51.046
  Dec 15 15:12:51.055: INFO: observed ReplicaSet test-rs in namespace replicaset-2066 with ReadyReplicas 1, AvailableReplicas 1
  Dec 15 15:12:51.064: INFO: observed ReplicaSet test-rs in namespace replicaset-2066 with ReadyReplicas 1, AvailableReplicas 1
  Dec 15 15:12:51.076: INFO: observed ReplicaSet test-rs in namespace replicaset-2066 with ReadyReplicas 1, AvailableReplicas 1
  Dec 15 15:12:51.080: INFO: observed ReplicaSet test-rs in namespace replicaset-2066 with ReadyReplicas 1, AvailableReplicas 1
  E1215 15:12:51.926374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:12:52.032: INFO: observed ReplicaSet test-rs in namespace replicaset-2066 with ReadyReplicas 2, AvailableReplicas 2
  Dec 15 15:12:52.041: INFO: observed Replicaset test-rs in namespace replicaset-2066 with ReadyReplicas 3 found true
  Dec 15 15:12:52.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2066" for this suite. @ 12/15/23 15:12:52.045
• [6.040 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/15/23 15:12:52.05
  Dec 15 15:12:52.051: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename gc @ 12/15/23 15:12:52.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:12:52.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:12:52.067
  STEP: create the rc @ 12/15/23 15:12:52.073
  W1215 15:12:52.077838      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1215 15:12:52.926365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:53.927304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:54.927405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:55.927692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/15/23 15:12:56.081
  STEP: wait for the rc to be deleted @ 12/15/23 15:12:56.084
  E1215 15:12:56.928715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:57.928763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:58.929781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:12:59.929953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:00.930129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/15/23 15:13:01.087
  E1215 15:13:01.931037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:02.931156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:03.931676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:04.931774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:05.931967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:06.932051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:07.932181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:08.932813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:09.933028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:10.933151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:11.933264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:12.933960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:13.934381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:14.934594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:15.935354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:16.935493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:17.936033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:18.936510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:19.936706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:20.936868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:21.937038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:22.937517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:23.937782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:24.937984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:25.938200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:26.938413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:27.938656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:28.939655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:29.939860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:30.940086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/15/23 15:13:31.096
  Dec 15 15:13:31.141: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 15 15:13:31.141: INFO: Deleting pod "simpletest.rc-2k8cp" in namespace "gc-1914"
  Dec 15 15:13:31.149: INFO: Deleting pod "simpletest.rc-2l6sf" in namespace "gc-1914"
  Dec 15 15:13:31.158: INFO: Deleting pod "simpletest.rc-2lnjh" in namespace "gc-1914"
  Dec 15 15:13:31.167: INFO: Deleting pod "simpletest.rc-2wgnt" in namespace "gc-1914"
  Dec 15 15:13:31.177: INFO: Deleting pod "simpletest.rc-49gd9" in namespace "gc-1914"
  Dec 15 15:13:31.184: INFO: Deleting pod "simpletest.rc-4d9bt" in namespace "gc-1914"
  Dec 15 15:13:31.190: INFO: Deleting pod "simpletest.rc-58hj7" in namespace "gc-1914"
  Dec 15 15:13:31.195: INFO: Deleting pod "simpletest.rc-5lhzw" in namespace "gc-1914"
  Dec 15 15:13:31.200: INFO: Deleting pod "simpletest.rc-5rwqk" in namespace "gc-1914"
  Dec 15 15:13:31.205: INFO: Deleting pod "simpletest.rc-76jvj" in namespace "gc-1914"
  Dec 15 15:13:31.211: INFO: Deleting pod "simpletest.rc-7lblz" in namespace "gc-1914"
  Dec 15 15:13:31.216: INFO: Deleting pod "simpletest.rc-7pm26" in namespace "gc-1914"
  Dec 15 15:13:31.222: INFO: Deleting pod "simpletest.rc-88npw" in namespace "gc-1914"
  Dec 15 15:13:31.227: INFO: Deleting pod "simpletest.rc-8mdlj" in namespace "gc-1914"
  Dec 15 15:13:31.233: INFO: Deleting pod "simpletest.rc-92gdh" in namespace "gc-1914"
  Dec 15 15:13:31.238: INFO: Deleting pod "simpletest.rc-95fn8" in namespace "gc-1914"
  Dec 15 15:13:31.244: INFO: Deleting pod "simpletest.rc-9bt4m" in namespace "gc-1914"
  Dec 15 15:13:31.249: INFO: Deleting pod "simpletest.rc-9pbl9" in namespace "gc-1914"
  Dec 15 15:13:31.254: INFO: Deleting pod "simpletest.rc-9q7st" in namespace "gc-1914"
  Dec 15 15:13:31.259: INFO: Deleting pod "simpletest.rc-9sfvd" in namespace "gc-1914"
  Dec 15 15:13:31.265: INFO: Deleting pod "simpletest.rc-9sw9c" in namespace "gc-1914"
  Dec 15 15:13:31.270: INFO: Deleting pod "simpletest.rc-9v4sl" in namespace "gc-1914"
  Dec 15 15:13:31.277: INFO: Deleting pod "simpletest.rc-9v8xm" in namespace "gc-1914"
  Dec 15 15:13:31.283: INFO: Deleting pod "simpletest.rc-bpqh4" in namespace "gc-1914"
  Dec 15 15:13:31.290: INFO: Deleting pod "simpletest.rc-bx9pt" in namespace "gc-1914"
  Dec 15 15:13:31.296: INFO: Deleting pod "simpletest.rc-c6ghs" in namespace "gc-1914"
  Dec 15 15:13:31.302: INFO: Deleting pod "simpletest.rc-c97ws" in namespace "gc-1914"
  Dec 15 15:13:31.308: INFO: Deleting pod "simpletest.rc-cpkzp" in namespace "gc-1914"
  Dec 15 15:13:31.313: INFO: Deleting pod "simpletest.rc-csxjv" in namespace "gc-1914"
  Dec 15 15:13:31.319: INFO: Deleting pod "simpletest.rc-cvz5b" in namespace "gc-1914"
  Dec 15 15:13:31.324: INFO: Deleting pod "simpletest.rc-d9kwx" in namespace "gc-1914"
  Dec 15 15:13:31.330: INFO: Deleting pod "simpletest.rc-dg486" in namespace "gc-1914"
  Dec 15 15:13:31.335: INFO: Deleting pod "simpletest.rc-f9dc6" in namespace "gc-1914"
  Dec 15 15:13:31.341: INFO: Deleting pod "simpletest.rc-fc6z8" in namespace "gc-1914"
  Dec 15 15:13:31.347: INFO: Deleting pod "simpletest.rc-fgvhn" in namespace "gc-1914"
  Dec 15 15:13:31.353: INFO: Deleting pod "simpletest.rc-fh4lx" in namespace "gc-1914"
  Dec 15 15:13:31.363: INFO: Deleting pod "simpletest.rc-fnbz2" in namespace "gc-1914"
  Dec 15 15:13:31.368: INFO: Deleting pod "simpletest.rc-fqxn4" in namespace "gc-1914"
  Dec 15 15:13:31.373: INFO: Deleting pod "simpletest.rc-fxqfb" in namespace "gc-1914"
  Dec 15 15:13:31.378: INFO: Deleting pod "simpletest.rc-fxsqw" in namespace "gc-1914"
  Dec 15 15:13:31.383: INFO: Deleting pod "simpletest.rc-g8nwn" in namespace "gc-1914"
  Dec 15 15:13:31.388: INFO: Deleting pod "simpletest.rc-hpcp5" in namespace "gc-1914"
  Dec 15 15:13:31.393: INFO: Deleting pod "simpletest.rc-hpk5h" in namespace "gc-1914"
  Dec 15 15:13:31.399: INFO: Deleting pod "simpletest.rc-jkwwl" in namespace "gc-1914"
  Dec 15 15:13:31.405: INFO: Deleting pod "simpletest.rc-jnhvt" in namespace "gc-1914"
  Dec 15 15:13:31.410: INFO: Deleting pod "simpletest.rc-kp4bp" in namespace "gc-1914"
  Dec 15 15:13:31.416: INFO: Deleting pod "simpletest.rc-l8d7n" in namespace "gc-1914"
  Dec 15 15:13:31.435: INFO: Deleting pod "simpletest.rc-lc4lv" in namespace "gc-1914"
  Dec 15 15:13:31.447: INFO: Deleting pod "simpletest.rc-lnr58" in namespace "gc-1914"
  Dec 15 15:13:31.455: INFO: Deleting pod "simpletest.rc-lshdh" in namespace "gc-1914"
  Dec 15 15:13:31.462: INFO: Deleting pod "simpletest.rc-lwdqq" in namespace "gc-1914"
  Dec 15 15:13:31.467: INFO: Deleting pod "simpletest.rc-lz6cj" in namespace "gc-1914"
  Dec 15 15:13:31.472: INFO: Deleting pod "simpletest.rc-m8md2" in namespace "gc-1914"
  Dec 15 15:13:31.479: INFO: Deleting pod "simpletest.rc-mjfd4" in namespace "gc-1914"
  Dec 15 15:13:31.496: INFO: Deleting pod "simpletest.rc-mn85f" in namespace "gc-1914"
  Dec 15 15:13:31.545: INFO: Deleting pod "simpletest.rc-mqq6f" in namespace "gc-1914"
  Dec 15 15:13:31.596: INFO: Deleting pod "simpletest.rc-njtwj" in namespace "gc-1914"
  Dec 15 15:13:31.644: INFO: Deleting pod "simpletest.rc-nlqxd" in namespace "gc-1914"
  Dec 15 15:13:31.695: INFO: Deleting pod "simpletest.rc-nxhzj" in namespace "gc-1914"
  Dec 15 15:13:31.745: INFO: Deleting pod "simpletest.rc-p4k2h" in namespace "gc-1914"
  Dec 15 15:13:31.794: INFO: Deleting pod "simpletest.rc-p5djj" in namespace "gc-1914"
  Dec 15 15:13:31.846: INFO: Deleting pod "simpletest.rc-pdksm" in namespace "gc-1914"
  Dec 15 15:13:31.896: INFO: Deleting pod "simpletest.rc-pmltt" in namespace "gc-1914"
  E1215 15:13:31.940160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:31.944: INFO: Deleting pod "simpletest.rc-qkdwn" in namespace "gc-1914"
  Dec 15 15:13:31.995: INFO: Deleting pod "simpletest.rc-qrjqz" in namespace "gc-1914"
  Dec 15 15:13:32.045: INFO: Deleting pod "simpletest.rc-qrq5x" in namespace "gc-1914"
  Dec 15 15:13:32.096: INFO: Deleting pod "simpletest.rc-qxf9w" in namespace "gc-1914"
  Dec 15 15:13:32.144: INFO: Deleting pod "simpletest.rc-r4pxk" in namespace "gc-1914"
  Dec 15 15:13:32.194: INFO: Deleting pod "simpletest.rc-rcvcf" in namespace "gc-1914"
  Dec 15 15:13:32.246: INFO: Deleting pod "simpletest.rc-sfqts" in namespace "gc-1914"
  Dec 15 15:13:32.294: INFO: Deleting pod "simpletest.rc-srrl2" in namespace "gc-1914"
  Dec 15 15:13:32.345: INFO: Deleting pod "simpletest.rc-ss74n" in namespace "gc-1914"
  Dec 15 15:13:32.398: INFO: Deleting pod "simpletest.rc-t5c57" in namespace "gc-1914"
  Dec 15 15:13:32.444: INFO: Deleting pod "simpletest.rc-t8nnc" in namespace "gc-1914"
  Dec 15 15:13:32.494: INFO: Deleting pod "simpletest.rc-tch9s" in namespace "gc-1914"
  Dec 15 15:13:32.544: INFO: Deleting pod "simpletest.rc-tn7xk" in namespace "gc-1914"
  Dec 15 15:13:32.595: INFO: Deleting pod "simpletest.rc-tskcg" in namespace "gc-1914"
  Dec 15 15:13:32.643: INFO: Deleting pod "simpletest.rc-txkpp" in namespace "gc-1914"
  Dec 15 15:13:32.695: INFO: Deleting pod "simpletest.rc-v65wd" in namespace "gc-1914"
  Dec 15 15:13:32.743: INFO: Deleting pod "simpletest.rc-vffqh" in namespace "gc-1914"
  Dec 15 15:13:32.794: INFO: Deleting pod "simpletest.rc-vgsj7" in namespace "gc-1914"
  Dec 15 15:13:32.844: INFO: Deleting pod "simpletest.rc-vv7sr" in namespace "gc-1914"
  Dec 15 15:13:32.894: INFO: Deleting pod "simpletest.rc-vx5rs" in namespace "gc-1914"
  E1215 15:13:32.940884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:32.944: INFO: Deleting pod "simpletest.rc-vzb77" in namespace "gc-1914"
  Dec 15 15:13:32.994: INFO: Deleting pod "simpletest.rc-wm2md" in namespace "gc-1914"
  Dec 15 15:13:33.043: INFO: Deleting pod "simpletest.rc-wwjp8" in namespace "gc-1914"
  Dec 15 15:13:33.094: INFO: Deleting pod "simpletest.rc-x8697" in namespace "gc-1914"
  Dec 15 15:13:33.143: INFO: Deleting pod "simpletest.rc-xdz64" in namespace "gc-1914"
  Dec 15 15:13:33.194: INFO: Deleting pod "simpletest.rc-xhbgr" in namespace "gc-1914"
  Dec 15 15:13:33.244: INFO: Deleting pod "simpletest.rc-xn4m5" in namespace "gc-1914"
  Dec 15 15:13:33.295: INFO: Deleting pod "simpletest.rc-xsptr" in namespace "gc-1914"
  Dec 15 15:13:33.344: INFO: Deleting pod "simpletest.rc-xvzdz" in namespace "gc-1914"
  Dec 15 15:13:33.393: INFO: Deleting pod "simpletest.rc-xwmd2" in namespace "gc-1914"
  Dec 15 15:13:33.444: INFO: Deleting pod "simpletest.rc-z5xrm" in namespace "gc-1914"
  Dec 15 15:13:33.493: INFO: Deleting pod "simpletest.rc-z727p" in namespace "gc-1914"
  Dec 15 15:13:33.543: INFO: Deleting pod "simpletest.rc-z822m" in namespace "gc-1914"
  Dec 15 15:13:33.594: INFO: Deleting pod "simpletest.rc-zbhq8" in namespace "gc-1914"
  Dec 15 15:13:33.644: INFO: Deleting pod "simpletest.rc-zjllt" in namespace "gc-1914"
  Dec 15 15:13:33.694: INFO: Deleting pod "simpletest.rc-zk227" in namespace "gc-1914"
  Dec 15 15:13:33.743: INFO: Deleting pod "simpletest.rc-zlmcr" in namespace "gc-1914"
  Dec 15 15:13:33.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1914" for this suite. @ 12/15/23 15:13:33.841
• [41.841 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 12/15/23 15:13:33.892
  Dec 15 15:13:33.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename var-expansion @ 12/15/23 15:13:33.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:13:33.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:13:33.91
  STEP: Creating a pod to test substitution in container's args @ 12/15/23 15:13:33.912
  E1215 15:13:33.940970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:34.942035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:13:35.92
  Dec 15 15:13:35.921: INFO: Trying to get logs from node talos-default-worker-1 pod var-expansion-b2d95fd7-ba1b-404e-b371-67247be6117a container dapi-container: <nil>
  STEP: delete the pod @ 12/15/23 15:13:35.925
  Dec 15 15:13:35.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9841" for this suite. @ 12/15/23 15:13:35.933
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/15/23 15:13:35.936
  Dec 15 15:13:35.936: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename svc-latency @ 12/15/23 15:13:35.937
  E1215 15:13:35.942398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:13:35.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:13:35.946
  Dec 15 15:13:35.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8393 @ 12/15/23 15:13:35.948
  I1215 15:13:35.951431      22 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8393, replica count: 1
  E1215 15:13:36.943337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:13:37.002698      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 15 15:13:37.112: INFO: Created: latency-svc-b8g9v
  Dec 15 15:13:37.117: INFO: Got endpoints: latency-svc-b8g9v [14.242866ms]
  Dec 15 15:13:37.130: INFO: Created: latency-svc-d7snp
  Dec 15 15:13:37.135: INFO: Got endpoints: latency-svc-d7snp [17.658914ms]
  Dec 15 15:13:37.138: INFO: Created: latency-svc-lk8zp
  Dec 15 15:13:37.144: INFO: Got endpoints: latency-svc-lk8zp [26.516546ms]
  Dec 15 15:13:37.150: INFO: Created: latency-svc-7v4gv
  Dec 15 15:13:37.151: INFO: Got endpoints: latency-svc-7v4gv [33.203901ms]
  Dec 15 15:13:37.158: INFO: Created: latency-svc-hbsb8
  Dec 15 15:13:37.162: INFO: Got endpoints: latency-svc-hbsb8 [44.300999ms]
  Dec 15 15:13:37.163: INFO: Created: latency-svc-pnkqf
  Dec 15 15:13:37.167: INFO: Got endpoints: latency-svc-pnkqf [48.953944ms]
  Dec 15 15:13:37.169: INFO: Created: latency-svc-gp27f
  Dec 15 15:13:37.173: INFO: Got endpoints: latency-svc-gp27f [55.411343ms]
  Dec 15 15:13:37.175: INFO: Created: latency-svc-9v4hp
  Dec 15 15:13:37.179: INFO: Got endpoints: latency-svc-9v4hp [60.626093ms]
  Dec 15 15:13:37.180: INFO: Created: latency-svc-p5z9v
  Dec 15 15:13:37.183: INFO: Got endpoints: latency-svc-p5z9v [65.239394ms]
  Dec 15 15:13:37.186: INFO: Created: latency-svc-68bkc
  Dec 15 15:13:37.188: INFO: Got endpoints: latency-svc-68bkc [70.256331ms]
  Dec 15 15:13:37.190: INFO: Created: latency-svc-9kh76
  Dec 15 15:13:37.193: INFO: Got endpoints: latency-svc-9kh76 [74.820347ms]
  Dec 15 15:13:37.195: INFO: Created: latency-svc-w5pvb
  Dec 15 15:13:37.198: INFO: Got endpoints: latency-svc-w5pvb [80.133605ms]
  Dec 15 15:13:37.200: INFO: Created: latency-svc-zrwzb
  Dec 15 15:13:37.202: INFO: Got endpoints: latency-svc-zrwzb [83.951877ms]
  Dec 15 15:13:37.205: INFO: Created: latency-svc-zxhhp
  Dec 15 15:13:37.207: INFO: Got endpoints: latency-svc-zxhhp [88.151564ms]
  Dec 15 15:13:37.209: INFO: Created: latency-svc-456ch
  Dec 15 15:13:37.212: INFO: Got endpoints: latency-svc-456ch [93.366856ms]
  Dec 15 15:13:37.214: INFO: Created: latency-svc-strhg
  Dec 15 15:13:37.216: INFO: Got endpoints: latency-svc-strhg [97.395005ms]
  Dec 15 15:13:37.219: INFO: Created: latency-svc-dmv24
  Dec 15 15:13:37.221: INFO: Got endpoints: latency-svc-dmv24 [86.287497ms]
  Dec 15 15:13:37.223: INFO: Created: latency-svc-22bh5
  Dec 15 15:13:37.225: INFO: Got endpoints: latency-svc-22bh5 [81.720405ms]
  Dec 15 15:13:37.237: INFO: Created: latency-svc-gnl8k
  Dec 15 15:13:37.237: INFO: Created: latency-svc-p6dhp
  Dec 15 15:13:37.242: INFO: Got endpoints: latency-svc-gnl8k [91.533898ms]
  Dec 15 15:13:37.243: INFO: Created: latency-svc-9bmn6
  Dec 15 15:13:37.243: INFO: Got endpoints: latency-svc-p6dhp [17.201948ms]
  Dec 15 15:13:37.245: INFO: Got endpoints: latency-svc-9bmn6 [78.109396ms]
  Dec 15 15:13:37.249: INFO: Created: latency-svc-mbhh2
  Dec 15 15:13:37.251: INFO: Got endpoints: latency-svc-mbhh2 [77.853731ms]
  Dec 15 15:13:37.254: INFO: Created: latency-svc-7wk62
  Dec 15 15:13:37.256: INFO: Got endpoints: latency-svc-7wk62 [77.72125ms]
  Dec 15 15:13:37.259: INFO: Created: latency-svc-7sk9v
  Dec 15 15:13:37.262: INFO: Got endpoints: latency-svc-7sk9v [78.368797ms]
  Dec 15 15:13:37.264: INFO: Created: latency-svc-l7ldc
  Dec 15 15:13:37.267: INFO: Got endpoints: latency-svc-l7ldc [78.858637ms]
  Dec 15 15:13:37.269: INFO: Created: latency-svc-tcblr
  Dec 15 15:13:37.271: INFO: Got endpoints: latency-svc-tcblr [78.051215ms]
  Dec 15 15:13:37.277: INFO: Created: latency-svc-djdmc
  Dec 15 15:13:37.279: INFO: Got endpoints: latency-svc-djdmc [81.248961ms]
  Dec 15 15:13:37.284: INFO: Created: latency-svc-ch8lq
  Dec 15 15:13:37.286: INFO: Got endpoints: latency-svc-ch8lq [83.772266ms]
  Dec 15 15:13:37.292: INFO: Created: latency-svc-pqcgq
  Dec 15 15:13:37.294: INFO: Got endpoints: latency-svc-pqcgq [87.382144ms]
  Dec 15 15:13:37.301: INFO: Created: latency-svc-slkl8
  Dec 15 15:13:37.302: INFO: Got endpoints: latency-svc-slkl8 [89.966605ms]
  Dec 15 15:13:37.308: INFO: Created: latency-svc-nwwfq
  Dec 15 15:13:37.310: INFO: Got endpoints: latency-svc-nwwfq [93.73794ms]
  Dec 15 15:13:37.316: INFO: Created: latency-svc-q7tlr
  Dec 15 15:13:37.318: INFO: Got endpoints: latency-svc-q7tlr [96.376063ms]
  Dec 15 15:13:37.323: INFO: Created: latency-svc-7bdc9
  Dec 15 15:13:37.325: INFO: Got endpoints: latency-svc-7bdc9 [163.323666ms]
  Dec 15 15:13:37.383: INFO: Created: latency-svc-kx9nk
  Dec 15 15:13:37.386: INFO: Got endpoints: latency-svc-kx9nk [143.054581ms]
  Dec 15 15:13:37.391: INFO: Created: latency-svc-vcgxr
  Dec 15 15:13:37.393: INFO: Got endpoints: latency-svc-vcgxr [150.984432ms]
  Dec 15 15:13:37.399: INFO: Created: latency-svc-dvk89
  Dec 15 15:13:37.407: INFO: Created: latency-svc-7b6q5
  Dec 15 15:13:37.414: INFO: Created: latency-svc-vt7kp
  Dec 15 15:13:37.416: INFO: Got endpoints: latency-svc-dvk89 [171.110937ms]
  Dec 15 15:13:37.436: INFO: Created: latency-svc-tl7c6
  Dec 15 15:13:37.444: INFO: Created: latency-svc-z58sl
  Dec 15 15:13:37.450: INFO: Created: latency-svc-btzc2
  Dec 15 15:13:37.454: INFO: Created: latency-svc-79bcw
  Dec 15 15:13:37.457: INFO: Created: latency-svc-fqppl
  Dec 15 15:13:37.461: INFO: Created: latency-svc-67248
  Dec 15 15:13:37.465: INFO: Created: latency-svc-pdkmn
  Dec 15 15:13:37.466: INFO: Got endpoints: latency-svc-7b6q5 [215.138198ms]
  Dec 15 15:13:37.469: INFO: Created: latency-svc-995pz
  Dec 15 15:13:37.472: INFO: Created: latency-svc-9vmbt
  Dec 15 15:13:37.476: INFO: Created: latency-svc-hfrlh
  Dec 15 15:13:37.479: INFO: Created: latency-svc-lxtwv
  Dec 15 15:13:37.483: INFO: Created: latency-svc-r2wmf
  Dec 15 15:13:37.486: INFO: Created: latency-svc-gdz77
  Dec 15 15:13:37.490: INFO: Created: latency-svc-rmpgb
  Dec 15 15:13:37.516: INFO: Got endpoints: latency-svc-vt7kp [259.149598ms]
  Dec 15 15:13:37.521: INFO: Created: latency-svc-hnvqd
  Dec 15 15:13:37.566: INFO: Got endpoints: latency-svc-tl7c6 [304.662114ms]
  Dec 15 15:13:37.573: INFO: Created: latency-svc-w45bp
  Dec 15 15:13:37.616: INFO: Got endpoints: latency-svc-z58sl [348.416095ms]
  Dec 15 15:13:37.622: INFO: Created: latency-svc-ddhg4
  Dec 15 15:13:37.665: INFO: Got endpoints: latency-svc-btzc2 [394.291821ms]
  Dec 15 15:13:37.672: INFO: Created: latency-svc-4l76r
  Dec 15 15:13:37.715: INFO: Got endpoints: latency-svc-79bcw [436.252641ms]
  Dec 15 15:13:37.722: INFO: Created: latency-svc-4c8mj
  Dec 15 15:13:37.766: INFO: Got endpoints: latency-svc-fqppl [479.345597ms]
  Dec 15 15:13:37.773: INFO: Created: latency-svc-6fjpc
  Dec 15 15:13:37.816: INFO: Got endpoints: latency-svc-67248 [521.763735ms]
  Dec 15 15:13:37.828: INFO: Created: latency-svc-c2nh8
  Dec 15 15:13:37.867: INFO: Got endpoints: latency-svc-pdkmn [565.539868ms]
  Dec 15 15:13:37.877: INFO: Created: latency-svc-gthm9
  Dec 15 15:13:37.917: INFO: Got endpoints: latency-svc-995pz [607.311749ms]
  Dec 15 15:13:37.928: INFO: Created: latency-svc-vrkm6
  E1215 15:13:37.944346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:37.967: INFO: Got endpoints: latency-svc-9vmbt [648.839538ms]
  Dec 15 15:13:37.976: INFO: Created: latency-svc-dz4dx
  Dec 15 15:13:38.017: INFO: Got endpoints: latency-svc-hfrlh [692.350898ms]
  Dec 15 15:13:38.027: INFO: Created: latency-svc-cmb8q
  Dec 15 15:13:38.067: INFO: Got endpoints: latency-svc-lxtwv [681.375219ms]
  Dec 15 15:13:38.077: INFO: Created: latency-svc-6xl5r
  Dec 15 15:13:38.117: INFO: Got endpoints: latency-svc-r2wmf [723.082676ms]
  Dec 15 15:13:38.130: INFO: Created: latency-svc-mpwkf
  Dec 15 15:13:38.168: INFO: Got endpoints: latency-svc-gdz77 [751.536826ms]
  Dec 15 15:13:38.180: INFO: Created: latency-svc-twjdg
  Dec 15 15:13:38.216: INFO: Got endpoints: latency-svc-rmpgb [749.831279ms]
  Dec 15 15:13:38.224: INFO: Created: latency-svc-wlkw5
  Dec 15 15:13:38.266: INFO: Got endpoints: latency-svc-hnvqd [750.654529ms]
  Dec 15 15:13:38.275: INFO: Created: latency-svc-xgt85
  Dec 15 15:13:38.316: INFO: Got endpoints: latency-svc-w45bp [749.155954ms]
  Dec 15 15:13:38.322: INFO: Created: latency-svc-pw2pk
  Dec 15 15:13:38.365: INFO: Got endpoints: latency-svc-ddhg4 [749.604563ms]
  Dec 15 15:13:38.371: INFO: Created: latency-svc-2h2fc
  Dec 15 15:13:38.416: INFO: Got endpoints: latency-svc-4l76r [750.465884ms]
  Dec 15 15:13:38.423: INFO: Created: latency-svc-xhjmq
  Dec 15 15:13:38.466: INFO: Got endpoints: latency-svc-4c8mj [750.759481ms]
  Dec 15 15:13:38.476: INFO: Created: latency-svc-bgv9f
  Dec 15 15:13:38.516: INFO: Got endpoints: latency-svc-6fjpc [750.640905ms]
  Dec 15 15:13:38.526: INFO: Created: latency-svc-xvmtl
  Dec 15 15:13:38.568: INFO: Got endpoints: latency-svc-c2nh8 [751.63059ms]
  Dec 15 15:13:38.577: INFO: Created: latency-svc-8hr9s
  Dec 15 15:13:38.617: INFO: Got endpoints: latency-svc-gthm9 [749.14804ms]
  Dec 15 15:13:38.626: INFO: Created: latency-svc-kr7gm
  Dec 15 15:13:38.667: INFO: Got endpoints: latency-svc-vrkm6 [749.92994ms]
  Dec 15 15:13:38.677: INFO: Created: latency-svc-spbpp
  Dec 15 15:13:38.717: INFO: Got endpoints: latency-svc-dz4dx [750.340116ms]
  Dec 15 15:13:38.725: INFO: Created: latency-svc-jzt4r
  Dec 15 15:13:38.767: INFO: Got endpoints: latency-svc-cmb8q [748.989023ms]
  Dec 15 15:13:38.777: INFO: Created: latency-svc-xlxl6
  Dec 15 15:13:38.817: INFO: Got endpoints: latency-svc-6xl5r [749.579604ms]
  Dec 15 15:13:38.829: INFO: Created: latency-svc-fzk7x
  Dec 15 15:13:38.867: INFO: Got endpoints: latency-svc-mpwkf [750.392486ms]
  Dec 15 15:13:38.877: INFO: Created: latency-svc-shpfn
  Dec 15 15:13:38.916: INFO: Got endpoints: latency-svc-twjdg [748.772814ms]
  Dec 15 15:13:38.927: INFO: Created: latency-svc-rqvck
  E1215 15:13:38.944669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:38.966: INFO: Got endpoints: latency-svc-wlkw5 [750.069413ms]
  Dec 15 15:13:38.976: INFO: Created: latency-svc-8876j
  Dec 15 15:13:39.015: INFO: Got endpoints: latency-svc-xgt85 [749.042856ms]
  Dec 15 15:13:39.022: INFO: Created: latency-svc-mvdwx
  Dec 15 15:13:39.065: INFO: Got endpoints: latency-svc-pw2pk [749.798247ms]
  Dec 15 15:13:39.071: INFO: Created: latency-svc-5j9jv
  Dec 15 15:13:39.115: INFO: Got endpoints: latency-svc-2h2fc [749.537531ms]
  Dec 15 15:13:39.122: INFO: Created: latency-svc-l4dn7
  Dec 15 15:13:39.165: INFO: Got endpoints: latency-svc-xhjmq [749.231278ms]
  Dec 15 15:13:39.171: INFO: Created: latency-svc-pkb6n
  Dec 15 15:13:39.215: INFO: Got endpoints: latency-svc-bgv9f [748.923964ms]
  Dec 15 15:13:39.221: INFO: Created: latency-svc-pjf7g
  Dec 15 15:13:39.265: INFO: Got endpoints: latency-svc-xvmtl [748.63342ms]
  Dec 15 15:13:39.271: INFO: Created: latency-svc-mzkk5
  Dec 15 15:13:39.315: INFO: Got endpoints: latency-svc-8hr9s [747.017113ms]
  Dec 15 15:13:39.321: INFO: Created: latency-svc-ftjll
  Dec 15 15:13:39.365: INFO: Got endpoints: latency-svc-kr7gm [748.003833ms]
  Dec 15 15:13:39.371: INFO: Created: latency-svc-vb67x
  Dec 15 15:13:39.415: INFO: Got endpoints: latency-svc-spbpp [747.76601ms]
  Dec 15 15:13:39.422: INFO: Created: latency-svc-gw7sp
  Dec 15 15:13:39.465: INFO: Got endpoints: latency-svc-jzt4r [747.794453ms]
  Dec 15 15:13:39.471: INFO: Created: latency-svc-mjvpb
  Dec 15 15:13:39.515: INFO: Got endpoints: latency-svc-xlxl6 [748.581865ms]
  Dec 15 15:13:39.521: INFO: Created: latency-svc-5vz2w
  Dec 15 15:13:39.565: INFO: Got endpoints: latency-svc-fzk7x [748.177586ms]
  Dec 15 15:13:39.571: INFO: Created: latency-svc-nbqqk
  Dec 15 15:13:39.616: INFO: Got endpoints: latency-svc-shpfn [748.584606ms]
  Dec 15 15:13:39.622: INFO: Created: latency-svc-72km4
  Dec 15 15:13:39.665: INFO: Got endpoints: latency-svc-rqvck [748.368345ms]
  Dec 15 15:13:39.671: INFO: Created: latency-svc-78wx2
  Dec 15 15:13:39.715: INFO: Got endpoints: latency-svc-8876j [748.841441ms]
  Dec 15 15:13:39.722: INFO: Created: latency-svc-6k6db
  Dec 15 15:13:39.765: INFO: Got endpoints: latency-svc-mvdwx [749.927869ms]
  Dec 15 15:13:39.771: INFO: Created: latency-svc-dlcmg
  Dec 15 15:13:39.815: INFO: Got endpoints: latency-svc-5j9jv [749.824193ms]
  Dec 15 15:13:39.822: INFO: Created: latency-svc-lvppd
  Dec 15 15:13:39.865: INFO: Got endpoints: latency-svc-l4dn7 [750.114513ms]
  Dec 15 15:13:39.888: INFO: Created: latency-svc-r9zvb
  Dec 15 15:13:39.915: INFO: Got endpoints: latency-svc-pkb6n [749.329564ms]
  Dec 15 15:13:39.920: INFO: Created: latency-svc-2mbjg
  E1215 15:13:39.944913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:39.965: INFO: Got endpoints: latency-svc-pjf7g [749.870009ms]
  Dec 15 15:13:39.971: INFO: Created: latency-svc-rhxdl
  Dec 15 15:13:40.035: INFO: Got endpoints: latency-svc-mzkk5 [769.94727ms]
  Dec 15 15:13:40.041: INFO: Created: latency-svc-nqcfb
  Dec 15 15:13:40.066: INFO: Got endpoints: latency-svc-ftjll [751.088169ms]
  Dec 15 15:13:40.072: INFO: Created: latency-svc-r68sg
  Dec 15 15:13:40.116: INFO: Got endpoints: latency-svc-vb67x [751.786211ms]
  Dec 15 15:13:40.125: INFO: Created: latency-svc-7qthh
  Dec 15 15:13:40.166: INFO: Got endpoints: latency-svc-gw7sp [751.191982ms]
  Dec 15 15:13:40.173: INFO: Created: latency-svc-kzcsh
  Dec 15 15:13:40.216: INFO: Got endpoints: latency-svc-mjvpb [751.074686ms]
  Dec 15 15:13:40.223: INFO: Created: latency-svc-cgmqv
  Dec 15 15:13:40.265: INFO: Got endpoints: latency-svc-5vz2w [749.738882ms]
  Dec 15 15:13:40.271: INFO: Created: latency-svc-p9r64
  Dec 15 15:13:40.315: INFO: Got endpoints: latency-svc-nbqqk [750.358765ms]
  Dec 15 15:13:40.321: INFO: Created: latency-svc-kr6hr
  Dec 15 15:13:40.365: INFO: Got endpoints: latency-svc-72km4 [749.436834ms]
  Dec 15 15:13:40.371: INFO: Created: latency-svc-h2grm
  Dec 15 15:13:40.415: INFO: Got endpoints: latency-svc-78wx2 [750.249204ms]
  Dec 15 15:13:40.422: INFO: Created: latency-svc-m8dg9
  Dec 15 15:13:40.465: INFO: Got endpoints: latency-svc-6k6db [749.936118ms]
  Dec 15 15:13:40.471: INFO: Created: latency-svc-k9zzp
  Dec 15 15:13:40.516: INFO: Got endpoints: latency-svc-dlcmg [750.719452ms]
  Dec 15 15:13:40.524: INFO: Created: latency-svc-m5p6h
  Dec 15 15:13:40.566: INFO: Got endpoints: latency-svc-lvppd [750.51323ms]
  Dec 15 15:13:40.573: INFO: Created: latency-svc-rcvfx
  Dec 15 15:13:40.615: INFO: Got endpoints: latency-svc-r9zvb [750.188573ms]
  Dec 15 15:13:40.623: INFO: Created: latency-svc-bwg25
  Dec 15 15:13:40.667: INFO: Got endpoints: latency-svc-2mbjg [752.680177ms]
  Dec 15 15:13:40.677: INFO: Created: latency-svc-xvqc9
  Dec 15 15:13:40.717: INFO: Got endpoints: latency-svc-rhxdl [751.813742ms]
  Dec 15 15:13:40.728: INFO: Created: latency-svc-8qvxz
  Dec 15 15:13:40.767: INFO: Got endpoints: latency-svc-nqcfb [731.545238ms]
  Dec 15 15:13:40.777: INFO: Created: latency-svc-nlbgz
  Dec 15 15:13:40.818: INFO: Got endpoints: latency-svc-r68sg [751.843577ms]
  Dec 15 15:13:40.827: INFO: Created: latency-svc-bkl9c
  Dec 15 15:13:40.867: INFO: Got endpoints: latency-svc-7qthh [750.302164ms]
  Dec 15 15:13:40.876: INFO: Created: latency-svc-6cpjr
  Dec 15 15:13:40.918: INFO: Got endpoints: latency-svc-kzcsh [751.557584ms]
  Dec 15 15:13:40.929: INFO: Created: latency-svc-9th4z
  E1215 15:13:40.945219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:40.967: INFO: Got endpoints: latency-svc-cgmqv [751.124623ms]
  Dec 15 15:13:40.978: INFO: Created: latency-svc-p4sn4
  Dec 15 15:13:41.015: INFO: Got endpoints: latency-svc-p9r64 [750.125718ms]
  Dec 15 15:13:41.024: INFO: Created: latency-svc-kvsbw
  Dec 15 15:13:41.065: INFO: Got endpoints: latency-svc-kr6hr [749.917099ms]
  Dec 15 15:13:41.071: INFO: Created: latency-svc-82tvw
  Dec 15 15:13:41.116: INFO: Got endpoints: latency-svc-h2grm [750.412637ms]
  Dec 15 15:13:41.125: INFO: Created: latency-svc-7zcs2
  Dec 15 15:13:41.165: INFO: Got endpoints: latency-svc-m8dg9 [750.131202ms]
  Dec 15 15:13:41.172: INFO: Created: latency-svc-mh7bg
  Dec 15 15:13:41.215: INFO: Got endpoints: latency-svc-k9zzp [749.612036ms]
  Dec 15 15:13:41.222: INFO: Created: latency-svc-5sp5z
  Dec 15 15:13:41.265: INFO: Got endpoints: latency-svc-m5p6h [749.320913ms]
  Dec 15 15:13:41.272: INFO: Created: latency-svc-g7tdf
  Dec 15 15:13:41.316: INFO: Got endpoints: latency-svc-rcvfx [749.651908ms]
  Dec 15 15:13:41.324: INFO: Created: latency-svc-4bp78
  Dec 15 15:13:41.365: INFO: Got endpoints: latency-svc-bwg25 [749.913864ms]
  Dec 15 15:13:41.374: INFO: Created: latency-svc-tb8fx
  Dec 15 15:13:41.416: INFO: Got endpoints: latency-svc-xvqc9 [748.178992ms]
  Dec 15 15:13:41.425: INFO: Created: latency-svc-l6kmf
  Dec 15 15:13:41.467: INFO: Got endpoints: latency-svc-8qvxz [750.03467ms]
  Dec 15 15:13:41.478: INFO: Created: latency-svc-tp9nt
  Dec 15 15:13:41.517: INFO: Got endpoints: latency-svc-nlbgz [749.916644ms]
  Dec 15 15:13:41.527: INFO: Created: latency-svc-kbr5q
  Dec 15 15:13:41.567: INFO: Got endpoints: latency-svc-bkl9c [749.24047ms]
  Dec 15 15:13:41.577: INFO: Created: latency-svc-z8xfk
  Dec 15 15:13:41.617: INFO: Got endpoints: latency-svc-6cpjr [750.316219ms]
  Dec 15 15:13:41.628: INFO: Created: latency-svc-fzw8g
  Dec 15 15:13:41.667: INFO: Got endpoints: latency-svc-9th4z [749.277385ms]
  Dec 15 15:13:41.678: INFO: Created: latency-svc-tp7dd
  Dec 15 15:13:41.717: INFO: Got endpoints: latency-svc-p4sn4 [749.809965ms]
  Dec 15 15:13:41.727: INFO: Created: latency-svc-rjcsf
  Dec 15 15:13:41.767: INFO: Got endpoints: latency-svc-kvsbw [751.562707ms]
  Dec 15 15:13:41.778: INFO: Created: latency-svc-62sbf
  Dec 15 15:13:41.818: INFO: Got endpoints: latency-svc-82tvw [752.754649ms]
  Dec 15 15:13:41.828: INFO: Created: latency-svc-j7kjv
  Dec 15 15:13:41.867: INFO: Got endpoints: latency-svc-7zcs2 [751.127442ms]
  Dec 15 15:13:41.875: INFO: Created: latency-svc-5fv27
  Dec 15 15:13:41.917: INFO: Got endpoints: latency-svc-mh7bg [751.29986ms]
  Dec 15 15:13:41.925: INFO: Created: latency-svc-kwj7w
  E1215 15:13:41.945491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:41.968: INFO: Got endpoints: latency-svc-5sp5z [752.606257ms]
  Dec 15 15:13:41.975: INFO: Created: latency-svc-cblr7
  Dec 15 15:13:42.016: INFO: Got endpoints: latency-svc-g7tdf [750.449597ms]
  Dec 15 15:13:42.022: INFO: Created: latency-svc-prk8v
  Dec 15 15:13:42.066: INFO: Got endpoints: latency-svc-4bp78 [750.659392ms]
  Dec 15 15:13:42.072: INFO: Created: latency-svc-m6548
  Dec 15 15:13:42.116: INFO: Got endpoints: latency-svc-tb8fx [750.720267ms]
  Dec 15 15:13:42.123: INFO: Created: latency-svc-pb4gr
  Dec 15 15:13:42.166: INFO: Got endpoints: latency-svc-l6kmf [750.508382ms]
  Dec 15 15:13:42.172: INFO: Created: latency-svc-8t79g
  Dec 15 15:13:42.216: INFO: Got endpoints: latency-svc-tp9nt [748.569745ms]
  Dec 15 15:13:42.222: INFO: Created: latency-svc-njg92
  Dec 15 15:13:42.266: INFO: Got endpoints: latency-svc-kbr5q [749.02205ms]
  Dec 15 15:13:42.273: INFO: Created: latency-svc-z8wbn
  Dec 15 15:13:42.315: INFO: Got endpoints: latency-svc-z8xfk [748.156978ms]
  Dec 15 15:13:42.322: INFO: Created: latency-svc-4dnfc
  Dec 15 15:13:42.366: INFO: Got endpoints: latency-svc-fzw8g [748.878715ms]
  Dec 15 15:13:42.374: INFO: Created: latency-svc-f58hg
  Dec 15 15:13:42.416: INFO: Got endpoints: latency-svc-tp7dd [748.915333ms]
  Dec 15 15:13:42.424: INFO: Created: latency-svc-rcdk6
  Dec 15 15:13:42.466: INFO: Got endpoints: latency-svc-rjcsf [748.965116ms]
  Dec 15 15:13:42.472: INFO: Created: latency-svc-6qrf2
  Dec 15 15:13:42.516: INFO: Got endpoints: latency-svc-62sbf [749.425167ms]
  Dec 15 15:13:42.523: INFO: Created: latency-svc-6kz2k
  Dec 15 15:13:42.566: INFO: Got endpoints: latency-svc-j7kjv [748.057612ms]
  Dec 15 15:13:42.576: INFO: Created: latency-svc-97hs4
  Dec 15 15:13:42.617: INFO: Got endpoints: latency-svc-5fv27 [750.352341ms]
  Dec 15 15:13:42.627: INFO: Created: latency-svc-kl7nw
  Dec 15 15:13:42.666: INFO: Got endpoints: latency-svc-kwj7w [749.639979ms]
  Dec 15 15:13:42.679: INFO: Created: latency-svc-2n5sf
  Dec 15 15:13:42.717: INFO: Got endpoints: latency-svc-cblr7 [749.516413ms]
  Dec 15 15:13:42.727: INFO: Created: latency-svc-6svw7
  Dec 15 15:13:42.766: INFO: Got endpoints: latency-svc-prk8v [750.142728ms]
  Dec 15 15:13:42.785: INFO: Created: latency-svc-w22t9
  Dec 15 15:13:42.816: INFO: Got endpoints: latency-svc-m6548 [749.644755ms]
  Dec 15 15:13:42.822: INFO: Created: latency-svc-c8df2
  Dec 15 15:13:42.866: INFO: Got endpoints: latency-svc-pb4gr [749.74285ms]
  Dec 15 15:13:42.872: INFO: Created: latency-svc-d7n7p
  Dec 15 15:13:42.916: INFO: Got endpoints: latency-svc-8t79g [750.017591ms]
  Dec 15 15:13:42.923: INFO: Created: latency-svc-q5nqf
  E1215 15:13:42.946292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:42.965: INFO: Got endpoints: latency-svc-njg92 [749.638202ms]
  Dec 15 15:13:42.972: INFO: Created: latency-svc-b2pm7
  Dec 15 15:13:43.016: INFO: Got endpoints: latency-svc-z8wbn [750.3282ms]
  Dec 15 15:13:43.022: INFO: Created: latency-svc-cnxvj
  Dec 15 15:13:43.067: INFO: Got endpoints: latency-svc-4dnfc [751.11416ms]
  Dec 15 15:13:43.075: INFO: Created: latency-svc-nbd2r
  Dec 15 15:13:43.116: INFO: Got endpoints: latency-svc-f58hg [750.426815ms]
  Dec 15 15:13:43.128: INFO: Created: latency-svc-qmlb7
  Dec 15 15:13:43.168: INFO: Got endpoints: latency-svc-rcdk6 [751.563177ms]
  Dec 15 15:13:43.178: INFO: Created: latency-svc-vtsrt
  Dec 15 15:13:43.217: INFO: Got endpoints: latency-svc-6qrf2 [751.431486ms]
  Dec 15 15:13:43.228: INFO: Created: latency-svc-bk767
  Dec 15 15:13:43.266: INFO: Got endpoints: latency-svc-6kz2k [749.752861ms]
  Dec 15 15:13:43.272: INFO: Created: latency-svc-gk2jv
  Dec 15 15:13:43.317: INFO: Got endpoints: latency-svc-97hs4 [750.801417ms]
  Dec 15 15:13:43.324: INFO: Created: latency-svc-hptbm
  Dec 15 15:13:43.366: INFO: Got endpoints: latency-svc-kl7nw [748.934756ms]
  Dec 15 15:13:43.372: INFO: Created: latency-svc-2fqch
  Dec 15 15:13:43.416: INFO: Got endpoints: latency-svc-2n5sf [749.984204ms]
  Dec 15 15:13:43.422: INFO: Created: latency-svc-p7sbx
  Dec 15 15:13:43.466: INFO: Got endpoints: latency-svc-6svw7 [748.84899ms]
  Dec 15 15:13:43.472: INFO: Created: latency-svc-6lwtz
  Dec 15 15:13:43.516: INFO: Got endpoints: latency-svc-w22t9 [750.069183ms]
  Dec 15 15:13:43.522: INFO: Created: latency-svc-h5rwl
  Dec 15 15:13:43.566: INFO: Got endpoints: latency-svc-c8df2 [749.719847ms]
  Dec 15 15:13:43.571: INFO: Created: latency-svc-8zn45
  Dec 15 15:13:43.616: INFO: Got endpoints: latency-svc-d7n7p [749.691041ms]
  Dec 15 15:13:43.622: INFO: Created: latency-svc-4j759
  Dec 15 15:13:43.667: INFO: Got endpoints: latency-svc-q5nqf [750.691116ms]
  Dec 15 15:13:43.673: INFO: Created: latency-svc-wq7wq
  Dec 15 15:13:43.716: INFO: Got endpoints: latency-svc-b2pm7 [750.755988ms]
  Dec 15 15:13:43.723: INFO: Created: latency-svc-2l96v
  Dec 15 15:13:43.767: INFO: Got endpoints: latency-svc-cnxvj [750.390693ms]
  Dec 15 15:13:43.774: INFO: Created: latency-svc-q59bq
  Dec 15 15:13:43.816: INFO: Got endpoints: latency-svc-nbd2r [749.657322ms]
  Dec 15 15:13:43.824: INFO: Created: latency-svc-bz94k
  Dec 15 15:13:43.866: INFO: Got endpoints: latency-svc-qmlb7 [749.490277ms]
  Dec 15 15:13:43.874: INFO: Created: latency-svc-k9s7q
  Dec 15 15:13:43.915: INFO: Got endpoints: latency-svc-vtsrt [747.627404ms]
  Dec 15 15:13:43.922: INFO: Created: latency-svc-kkb94
  E1215 15:13:43.946606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:43.966: INFO: Got endpoints: latency-svc-bk767 [748.186924ms]
  Dec 15 15:13:43.973: INFO: Created: latency-svc-dc2ww
  Dec 15 15:13:44.016: INFO: Got endpoints: latency-svc-gk2jv [749.81383ms]
  Dec 15 15:13:44.022: INFO: Created: latency-svc-99c64
  Dec 15 15:13:44.066: INFO: Got endpoints: latency-svc-hptbm [749.523728ms]
  Dec 15 15:13:44.073: INFO: Created: latency-svc-b4n5h
  Dec 15 15:13:44.117: INFO: Got endpoints: latency-svc-2fqch [750.56367ms]
  Dec 15 15:13:44.125: INFO: Created: latency-svc-7szjs
  Dec 15 15:13:44.167: INFO: Got endpoints: latency-svc-p7sbx [750.198906ms]
  Dec 15 15:13:44.173: INFO: Created: latency-svc-25qr9
  Dec 15 15:13:44.216: INFO: Got endpoints: latency-svc-6lwtz [749.993004ms]
  Dec 15 15:13:44.223: INFO: Created: latency-svc-bx66g
  Dec 15 15:13:44.266: INFO: Got endpoints: latency-svc-h5rwl [749.903973ms]
  Dec 15 15:13:44.273: INFO: Created: latency-svc-rt7zv
  Dec 15 15:13:44.317: INFO: Got endpoints: latency-svc-8zn45 [751.179693ms]
  Dec 15 15:13:44.325: INFO: Created: latency-svc-njd9w
  Dec 15 15:13:44.367: INFO: Got endpoints: latency-svc-4j759 [750.993838ms]
  Dec 15 15:13:44.376: INFO: Created: latency-svc-c6gf9
  Dec 15 15:13:44.416: INFO: Got endpoints: latency-svc-wq7wq [749.247234ms]
  Dec 15 15:13:44.424: INFO: Created: latency-svc-597fs
  Dec 15 15:13:44.466: INFO: Got endpoints: latency-svc-2l96v [749.707746ms]
  Dec 15 15:13:44.474: INFO: Created: latency-svc-8rp2m
  Dec 15 15:13:44.516: INFO: Got endpoints: latency-svc-q59bq [749.497676ms]
  Dec 15 15:13:44.524: INFO: Created: latency-svc-zh69q
  Dec 15 15:13:44.566: INFO: Got endpoints: latency-svc-bz94k [749.906589ms]
  Dec 15 15:13:44.574: INFO: Created: latency-svc-4c56k
  Dec 15 15:13:44.616: INFO: Got endpoints: latency-svc-k9s7q [750.142213ms]
  Dec 15 15:13:44.626: INFO: Created: latency-svc-nn4cm
  Dec 15 15:13:44.667: INFO: Got endpoints: latency-svc-kkb94 [751.181563ms]
  Dec 15 15:13:44.678: INFO: Created: latency-svc-5tsqq
  Dec 15 15:13:44.716: INFO: Got endpoints: latency-svc-dc2ww [750.576773ms]
  Dec 15 15:13:44.726: INFO: Created: latency-svc-sxqhk
  Dec 15 15:13:44.767: INFO: Got endpoints: latency-svc-99c64 [750.937367ms]
  Dec 15 15:13:44.779: INFO: Created: latency-svc-pgfj9
  Dec 15 15:13:44.818: INFO: Got endpoints: latency-svc-b4n5h [751.25628ms]
  Dec 15 15:13:44.829: INFO: Created: latency-svc-kr4kl
  Dec 15 15:13:44.867: INFO: Got endpoints: latency-svc-7szjs [750.520958ms]
  Dec 15 15:13:44.878: INFO: Created: latency-svc-7k2xt
  Dec 15 15:13:44.917: INFO: Got endpoints: latency-svc-25qr9 [750.711519ms]
  Dec 15 15:13:44.929: INFO: Created: latency-svc-vfbfh
  E1215 15:13:44.946999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:44.967: INFO: Got endpoints: latency-svc-bx66g [751.335623ms]
  Dec 15 15:13:45.019: INFO: Got endpoints: latency-svc-rt7zv [752.689578ms]
  Dec 15 15:13:45.066: INFO: Got endpoints: latency-svc-njd9w [749.372516ms]
  Dec 15 15:13:45.117: INFO: Got endpoints: latency-svc-c6gf9 [750.309032ms]
  Dec 15 15:13:45.167: INFO: Got endpoints: latency-svc-597fs [750.354976ms]
  Dec 15 15:13:45.218: INFO: Got endpoints: latency-svc-8rp2m [751.627327ms]
  Dec 15 15:13:45.267: INFO: Got endpoints: latency-svc-zh69q [750.789166ms]
  Dec 15 15:13:45.316: INFO: Got endpoints: latency-svc-4c56k [750.035224ms]
  Dec 15 15:13:45.366: INFO: Got endpoints: latency-svc-nn4cm [750.162965ms]
  Dec 15 15:13:45.416: INFO: Got endpoints: latency-svc-5tsqq [749.753227ms]
  Dec 15 15:13:45.467: INFO: Got endpoints: latency-svc-sxqhk [750.697836ms]
  Dec 15 15:13:45.522: INFO: Got endpoints: latency-svc-pgfj9 [755.435851ms]
  Dec 15 15:13:45.569: INFO: Got endpoints: latency-svc-kr4kl [750.864439ms]
  Dec 15 15:13:45.617: INFO: Got endpoints: latency-svc-7k2xt [749.658851ms]
  Dec 15 15:13:45.667: INFO: Got endpoints: latency-svc-vfbfh [749.392935ms]
  Dec 15 15:13:45.667: INFO: Latencies: [17.201948ms 17.658914ms 26.516546ms 33.203901ms 44.300999ms 48.953944ms 55.411343ms 60.626093ms 65.239394ms 70.256331ms 74.820347ms 77.72125ms 77.853731ms 78.051215ms 78.109396ms 78.368797ms 78.858637ms 80.133605ms 81.248961ms 81.720405ms 83.772266ms 83.951877ms 86.287497ms 87.382144ms 88.151564ms 89.966605ms 91.533898ms 93.366856ms 93.73794ms 96.376063ms 97.395005ms 143.054581ms 150.984432ms 163.323666ms 171.110937ms 215.138198ms 259.149598ms 304.662114ms 348.416095ms 394.291821ms 436.252641ms 479.345597ms 521.763735ms 565.539868ms 607.311749ms 648.839538ms 681.375219ms 692.350898ms 723.082676ms 731.545238ms 747.017113ms 747.627404ms 747.76601ms 747.794453ms 748.003833ms 748.057612ms 748.156978ms 748.177586ms 748.178992ms 748.186924ms 748.368345ms 748.569745ms 748.581865ms 748.584606ms 748.63342ms 748.772814ms 748.841441ms 748.84899ms 748.878715ms 748.915333ms 748.923964ms 748.934756ms 748.965116ms 748.989023ms 749.02205ms 749.042856ms 749.14804ms 749.155954ms 749.231278ms 749.24047ms 749.247234ms 749.277385ms 749.320913ms 749.329564ms 749.372516ms 749.392935ms 749.425167ms 749.436834ms 749.490277ms 749.497676ms 749.516413ms 749.523728ms 749.537531ms 749.579604ms 749.604563ms 749.612036ms 749.638202ms 749.639979ms 749.644755ms 749.651908ms 749.657322ms 749.658851ms 749.691041ms 749.707746ms 749.719847ms 749.738882ms 749.74285ms 749.752861ms 749.753227ms 749.798247ms 749.809965ms 749.81383ms 749.824193ms 749.831279ms 749.870009ms 749.903973ms 749.906589ms 749.913864ms 749.916644ms 749.917099ms 749.927869ms 749.92994ms 749.936118ms 749.984204ms 749.993004ms 750.017591ms 750.03467ms 750.035224ms 750.069183ms 750.069413ms 750.114513ms 750.125718ms 750.131202ms 750.142213ms 750.142728ms 750.162965ms 750.188573ms 750.198906ms 750.249204ms 750.302164ms 750.309032ms 750.316219ms 750.3282ms 750.340116ms 750.352341ms 750.354976ms 750.358765ms 750.390693ms 750.392486ms 750.412637ms 750.426815ms 750.449597ms 750.465884ms 750.508382ms 750.51323ms 750.520958ms 750.56367ms 750.576773ms 750.640905ms 750.654529ms 750.659392ms 750.691116ms 750.697836ms 750.711519ms 750.719452ms 750.720267ms 750.755988ms 750.759481ms 750.789166ms 750.801417ms 750.864439ms 750.937367ms 750.993838ms 751.074686ms 751.088169ms 751.11416ms 751.124623ms 751.127442ms 751.179693ms 751.181563ms 751.191982ms 751.25628ms 751.29986ms 751.335623ms 751.431486ms 751.536826ms 751.557584ms 751.562707ms 751.563177ms 751.627327ms 751.63059ms 751.786211ms 751.813742ms 751.843577ms 752.606257ms 752.680177ms 752.689578ms 752.754649ms 755.435851ms 769.94727ms]
  Dec 15 15:13:45.667: INFO: 50 %ile: 749.657322ms
  Dec 15 15:13:45.667: INFO: 90 %ile: 751.191982ms
  Dec 15 15:13:45.667: INFO: 99 %ile: 755.435851ms
  Dec 15 15:13:45.667: INFO: Total sample count: 200
  Dec 15 15:13:45.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8393" for this suite. @ 12/15/23 15:13:45.673
• [9.741 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/15/23 15:13:45.678
  Dec 15 15:13:45.678: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:13:45.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:13:45.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:13:45.695
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/15/23 15:13:45.697
  E1215 15:13:45.947845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:46.948260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:13:47.71
  Dec 15 15:13:47.712: INFO: Trying to get logs from node talos-default-worker-1 pod pod-304e79bb-07d0-449c-8b59-040edaa73c59 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:13:47.717
  Dec 15 15:13:47.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5018" for this suite. @ 12/15/23 15:13:47.728
• [2.054 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/15/23 15:13:47.732
  Dec 15 15:13:47.732: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename containers @ 12/15/23 15:13:47.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:13:47.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:13:47.747
  STEP: Creating a pod to test override command @ 12/15/23 15:13:47.749
  E1215 15:13:47.948320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:48.948937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:13:49.761
  Dec 15 15:13:49.763: INFO: Trying to get logs from node talos-default-worker-2 pod client-containers-13d06fee-5ae4-486b-a852-373b16ec76d4 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:13:49.767
  Dec 15 15:13:49.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8805" for this suite. @ 12/15/23 15:13:49.779
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 12/15/23 15:13:49.784
  Dec 15 15:13:49.784: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 15:13:49.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:13:49.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:13:49.798
  STEP: Creating pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106 @ 12/15/23 15:13:49.801
  E1215 15:13:49.948997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:50.949233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/23 15:13:51.812
  Dec 15 15:13:51.814: INFO: Initial restart count of pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b is 0
  Dec 15 15:13:51.816: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:13:51.949313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:52.949501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:53.819: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:13:53.950021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:54.950116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:55.822: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:13:55.950806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:56.951480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:57.826: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:13:57.952095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:13:58.952464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:13:59.829: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:13:59.953184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:00.953381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:01.834: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:01.954261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:02.954417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:03.838: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:03.955382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:04.956337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:05.841: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:05.957344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:06.957889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:07.845: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:07.957970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:08.958288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:09.848: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:09.958861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:10.959084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:11.852: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:11.959422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:12.959901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:13.855: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:13.960042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:14.960187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:15.858: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:15.961089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:16.961441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:17.862: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:17.962008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:18.962352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:19.866: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:19.962815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:20.963051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:21.869: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:21.963800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:22.964060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:23.872: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:23.964060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:24.964221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:25.876: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:25.965226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:26.965732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:27.879: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:27.966278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:28.966940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:29.882: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:29.967790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:30.968007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:31.886: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:31.968737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:32.968861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:33.889: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:33.969542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:34.970350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:35.893: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:35.970756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:36.971400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:37.897: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:37.972420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:38.973484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:39.901: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:39.974254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:40.974724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:41.904: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:41.974903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:42.974991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:43.908: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:43.975359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:44.975881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:45.911: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:45.976251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:46.976377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:47.914: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:47.977104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:48.977414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:49.918: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:49.978361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:50.978526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:51.922: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:51.979508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:52.979734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:53.924: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:53.979797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:54.979917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:55.928: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:55.980736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:56.981248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:57.932: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:57.981421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:14:58.982502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:14:59.935: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:14:59.983097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:00.983839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:01.939: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:01.984723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:02.984879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:03.943: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:03.985252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:04.985472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:05.945: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:05.986052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:06.986225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:07.948: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:07.986751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:08.987171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:09.952: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:09.987701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:10.987805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:11.956: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:11.988445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:12.988601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:13.959: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:13.989236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:14.989492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:15.961: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:15.989838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:16.990034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:17.965: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:17.990438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:18.990755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:19.969: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:19.991382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:20.991590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:21.973: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:21.992432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:22.993542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:23.976: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:23.994115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:24.994710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:25.981: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:25.995254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:26.995457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:27.983: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:27.995978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:28.996295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:29.987: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:29.996781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:30.997150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:31.990: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:31.997584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:32.997767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:33.994: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:33.998513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:34.999335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:35.998: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:35.999574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:36.999697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:38.000135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:38.002: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:39.000198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:40.001207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:40.005: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:41.001523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:42.001663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:42.009: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:43.002059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:44.002975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:44.013: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:45.003744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:46.003821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:46.017: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:47.004354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:48.004493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:48.020: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:49.005438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:50.005504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:50.022: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:51.005651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:52.005860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:52.025: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:53.006284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:54.006649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:54.027: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:55.006909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:56.007582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:56.032: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:57.007753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:15:58.008323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:15:58.035: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:15:59.009031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:00.009283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:00.040: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:01.009423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:02.009672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:02.044: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:03.009975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:04.010400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:04.047: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:05.011405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:06.011544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:06.052: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:07.011825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:08.012359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:08.055: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:09.012775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:10.013062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:10.058: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:11.013494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:12.013586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:12.063: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:13.013914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:14.014100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:14.066: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:15.014908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:16.015080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:16.068: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:17.015603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:18.016003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:18.072: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:19.016229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:20.016497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:20.075: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:21.017256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:22.017548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:22.080: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:23.018430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:24.019069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:24.084: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:25.020166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:26.020256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:26.087: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:27.020781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:28.021312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:28.092: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:29.022288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:30.023341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:30.094: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:31.023695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:32.023917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:32.097: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:33.024640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:34.024966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:34.100: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:35.025115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:36.025122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:36.104: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:37.025510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:38.025923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:38.107: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:39.026778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:40.026884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:40.111: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:41.027337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:42.027528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:42.115: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:43.028472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:44.028794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:44.119: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:45.028864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:46.029112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:46.122: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:47.029283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:48.029963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:48.125: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:49.029991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:50.030273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:50.129: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:51.030848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:52.030998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:52.134: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:53.031112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:54.031395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:54.137: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:55.031478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:56.031682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:56.142: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:57.032259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:16:58.032844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:16:58.145: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:16:59.032993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:00.033214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:00.149: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:01.033936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:02.034241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:02.153: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:03.034418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:04.035438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:04.156: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:05.035680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:06.036625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:06.160: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:07.037348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:08.037945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:08.164: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:09.038703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:10.038809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:10.167: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:11.039335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:12.039426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:12.169: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:13.039846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:14.040256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:14.172: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:15.041327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:16.041406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:16.176: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:17.042226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:18.042585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:18.180: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:19.042934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:20.043133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:20.183: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:21.043303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:22.043539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:22.187: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:23.043893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:24.043989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:24.190: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:25.044067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:26.044185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:26.194: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:27.045041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:28.046034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:28.197: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:29.046558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:30.046932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:30.200: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:31.047043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:32.047319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:32.204: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:33.047519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:34.047808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:34.208: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:35.048161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:36.048212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:36.211: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:37.048883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:38.049388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:38.214: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:39.049453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:40.049778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:40.217: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:41.050176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:42.050474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:42.221: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:43.051316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:44.052367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:44.225: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:45.052455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:46.052531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:46.229: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:47.053068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:48.054019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:48.233: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:49.054679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:50.054952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:50.237: INFO: Get pod liveness-a732799c-3fe8-4432-95ad-ab0bd7089a9b in namespace container-probe-4106
  E1215 15:17:51.055886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:52.056361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/15/23 15:17:52.238
  Dec 15 15:17:52.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4106" for this suite. @ 12/15/23 15:17:52.249
• [242.470 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 12/15/23 15:17:52.254
  Dec 15 15:17:52.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename dns @ 12/15/23 15:17:52.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:17:52.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:17:52.271
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/15/23 15:17:52.274
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/15/23 15:17:52.274
  STEP: creating a pod to probe DNS @ 12/15/23 15:17:52.274
  STEP: submitting the pod to kubernetes @ 12/15/23 15:17:52.274
  E1215 15:17:53.056506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:17:54.056538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/15/23 15:17:54.288
  STEP: looking for the results for each expected name from probers @ 12/15/23 15:17:54.29
  Dec 15 15:17:54.301: INFO: DNS probes using dns-6156/dns-test-80970b46-fbd7-4da9-9447-0665aeed9bb8 succeeded

  STEP: deleting the pod @ 12/15/23 15:17:54.301
  Dec 15 15:17:54.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6156" for this suite. @ 12/15/23 15:17:54.312
• [2.063 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/15/23 15:17:54.317
  Dec 15 15:17:54.317: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replication-controller @ 12/15/23 15:17:54.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:17:54.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:17:54.331
  STEP: Creating ReplicationController "e2e-rc-4klf8" @ 12/15/23 15:17:54.335
  Dec 15 15:17:54.338: INFO: Get Replication Controller "e2e-rc-4klf8" to confirm replicas
  E1215 15:17:55.056692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:55.339: INFO: Get Replication Controller "e2e-rc-4klf8" to confirm replicas
  Dec 15 15:17:55.342: INFO: Found 1 replicas for "e2e-rc-4klf8" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-4klf8" @ 12/15/23 15:17:55.342
  STEP: Updating a scale subresource @ 12/15/23 15:17:55.344
  STEP: Verifying replicas where modified for replication controller "e2e-rc-4klf8" @ 12/15/23 15:17:55.348
  Dec 15 15:17:55.348: INFO: Get Replication Controller "e2e-rc-4klf8" to confirm replicas
  E1215 15:17:56.056836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:56.349: INFO: Get Replication Controller "e2e-rc-4klf8" to confirm replicas
  Dec 15 15:17:56.351: INFO: Found 2 replicas for "e2e-rc-4klf8" replication controller
  Dec 15 15:17:56.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6902" for this suite. @ 12/15/23 15:17:56.353
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/15/23 15:17:56.356
  Dec 15 15:17:56.356: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename daemonsets @ 12/15/23 15:17:56.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:17:56.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:17:56.365
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/15/23 15:17:56.373
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/23 15:17:56.376
  Dec 15 15:17:56.377: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:56.377: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:56.377: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:56.379: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:17:56.379: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:17:57.057129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:57.380: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:57.380: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:57.380: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:57.382: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 15 15:17:57.382: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/15/23 15:17:57.385
  Dec 15 15:17:57.393: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:57.393: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:57.394: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:57.395: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 15 15:17:57.395: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E1215 15:17:58.057794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:58.394: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:58.394: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:58.394: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:17:58.396: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 15 15:17:58.396: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/15/23 15:17:58.396
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/23 15:17:58.399
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6545, will wait for the garbage collector to delete the pods @ 12/15/23 15:17:58.399
  Dec 15 15:17:58.453: INFO: Deleting DaemonSet.extensions daemon-set took: 2.451643ms
  Dec 15 15:17:58.553: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.437727ms
  E1215 15:17:59.058184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:17:59.957: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:17:59.957: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 15 15:17:59.960: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24886"},"items":null}

  Dec 15 15:17:59.963: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24886"},"items":null}

  Dec 15 15:17:59.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6545" for this suite. @ 12/15/23 15:17:59.976
• [3.624 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 12/15/23 15:17:59.98
  Dec 15 15:17:59.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 15:17:59.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:17:59.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:17:59.997
  STEP: Creating pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629 @ 12/15/23 15:18:00
  E1215 15:18:00.058795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:01.059045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/23 15:18:02.012
  Dec 15 15:18:02.014: INFO: Initial restart count of pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 is 0
  Dec 15 15:18:02.016: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:02.059309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:03.059891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:04.020: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:04.060402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:05.060649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:06.024: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:06.061242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:07.061389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:08.027: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:08.061868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:09.062261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:10.031: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:10.062713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:11.062835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:12.035: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:12.063388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:13.063549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:14.039: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:14.063582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:15.063802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:16.043: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:16.064810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:17.065027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:18.046: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:18.065250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:19.066345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:20.049: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:20.066808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:21.066938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:22.053: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:22.067184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:23.067315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:24.056: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:24.067494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:25.068304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:26.060: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:26.068475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:27.069289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:28.063: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:28.069145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:29.069437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:30.066: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:30.069929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:31.070140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:32.069: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:32.070207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:33.070346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:34.070361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:34.072: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:35.070792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:36.071038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:36.076: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:37.071456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:38.072410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:38.079: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:39.072800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:40.072983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:40.083: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:41.073468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:42.073590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:42.087: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:43.074179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:44.075163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:44.090: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:45.075872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:46.076194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:46.094: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:47.076277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:48.076867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:48.098: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:49.077033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:50.077784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:50.101: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:51.078253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:52.078510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:52.104: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:53.078957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:54.079134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:54.109: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:55.080127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:56.080215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:56.112: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:57.080610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:18:58.081070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:18:58.116: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:18:59.081861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:00.082106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:19:00.120: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:19:01.082706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:02.083460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:19:02.124: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:19:03.084220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:04.085304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:19:04.127: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  E1215 15:19:05.085642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:06.086270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:19:06.131: INFO: Get pod test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 in namespace container-probe-5629
  Dec 15 15:19:06.131: INFO: Restart count of pod container-probe-5629/test-grpc-1540e720-576b-4ef2-8d6c-8d022d074ae9 is now 1 (1m4.116904873s elapsed)
  STEP: deleting the pod @ 12/15/23 15:19:06.131
  Dec 15 15:19:06.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5629" for this suite. @ 12/15/23 15:19:06.142
• [66.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/15/23 15:19:06.148
  Dec 15 15:19:06.148: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename subpath @ 12/15/23 15:19:06.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:06.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:06.164
  STEP: Setting up data @ 12/15/23 15:19:06.167
  STEP: Creating pod pod-subpath-test-downwardapi-vlns @ 12/15/23 15:19:06.174
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/23 15:19:06.174
  E1215 15:19:07.086512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:08.086946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:09.087285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:10.088386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:11.088567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:12.088758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:13.089578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:14.089718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:15.089863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:16.090102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:17.090663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:18.090994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:19.091691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:20.091958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:21.092127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:22.092219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:23.092350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:24.092413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:25.092875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:26.093668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:27.094322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:28.094722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:19:28.221
  Dec 15 15:19:28.223: INFO: Trying to get logs from node talos-default-worker-1 pod pod-subpath-test-downwardapi-vlns container test-container-subpath-downwardapi-vlns: <nil>
  STEP: delete the pod @ 12/15/23 15:19:28.232
  STEP: Deleting pod pod-subpath-test-downwardapi-vlns @ 12/15/23 15:19:28.239
  Dec 15 15:19:28.239: INFO: Deleting pod "pod-subpath-test-downwardapi-vlns" in namespace "subpath-8725"
  Dec 15 15:19:28.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8725" for this suite. @ 12/15/23 15:19:28.243
• [22.098 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/15/23 15:19:28.247
  Dec 15 15:19:28.247: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename conformance-tests @ 12/15/23 15:19:28.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:28.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:28.258
  STEP: Getting node addresses @ 12/15/23 15:19:28.26
  Dec 15 15:19:28.260: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Dec 15 15:19:28.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6616" for this suite. @ 12/15/23 15:19:28.266
• [0.022 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 12/15/23 15:19:28.269
  Dec 15 15:19:28.269: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/23 15:19:28.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:28.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:28.279
  Dec 15 15:19:28.281: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:19:29.094852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/15/23 15:19:29.6
  Dec 15 15:19:29.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7924 --namespace=crd-publish-openapi-7924 create -f -'
  E1215 15:19:30.095171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:31.096149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:19:31.654: INFO: stderr: ""
  Dec 15 15:19:31.654: INFO: stdout: "e2e-test-crd-publish-openapi-4708-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 15 15:19:31.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7924 --namespace=crd-publish-openapi-7924 delete e2e-test-crd-publish-openapi-4708-crds test-cr'
  Dec 15 15:19:31.709: INFO: stderr: ""
  Dec 15 15:19:31.709: INFO: stdout: "e2e-test-crd-publish-openapi-4708-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Dec 15 15:19:31.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7924 --namespace=crd-publish-openapi-7924 apply -f -'
  Dec 15 15:19:31.776: INFO: stderr: ""
  Dec 15 15:19:31.776: INFO: stdout: "e2e-test-crd-publish-openapi-4708-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 15 15:19:31.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7924 --namespace=crd-publish-openapi-7924 delete e2e-test-crd-publish-openapi-4708-crds test-cr'
  Dec 15 15:19:31.818: INFO: stderr: ""
  Dec 15 15:19:31.818: INFO: stdout: "e2e-test-crd-publish-openapi-4708-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/15/23 15:19:31.818
  Dec 15 15:19:31.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=crd-publish-openapi-7924 explain e2e-test-crd-publish-openapi-4708-crds'
  Dec 15 15:19:31.873: INFO: stderr: ""
  Dec 15 15:19:31.873: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4708-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1215 15:19:32.096931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:33.097598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:19:33.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7924" for this suite. @ 12/15/23 15:19:33.16
• [4.895 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 12/15/23 15:19:33.164
  Dec 15 15:19:33.164: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename field-validation @ 12/15/23 15:19:33.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:33.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:33.171
  Dec 15 15:19:33.173: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  W1215 15:19:33.173657      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000ddd220 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1215 15:19:34.098088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:35.098487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1215 15:19:35.695621      22 warnings.go:70] unknown field "alpha"
  W1215 15:19:35.695652      22 warnings.go:70] unknown field "beta"
  W1215 15:19:35.695662      22 warnings.go:70] unknown field "delta"
  W1215 15:19:35.695670      22 warnings.go:70] unknown field "epsilon"
  W1215 15:19:35.695679      22 warnings.go:70] unknown field "gamma"
  E1215 15:19:36.099194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:19:36.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3409" for this suite. @ 12/15/23 15:19:36.236
• [3.078 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/15/23 15:19:36.242
  Dec 15 15:19:36.242: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename gc @ 12/15/23 15:19:36.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:36.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:36.257
  STEP: create the deployment @ 12/15/23 15:19:36.26
  W1215 15:19:36.264719      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/15/23 15:19:36.264
  STEP: delete the deployment @ 12/15/23 15:19:36.767
  STEP: wait for all rs to be garbage collected @ 12/15/23 15:19:36.771
  STEP: expected 0 rs, got 1 rs @ 12/15/23 15:19:36.774
  STEP: expected 0 pods, got 2 pods @ 12/15/23 15:19:36.776
  E1215 15:19:37.100140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/15/23 15:19:37.278
  Dec 15 15:19:37.315: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 15 15:19:37.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4396" for this suite. @ 12/15/23 15:19:37.319
• [1.082 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/15/23 15:19:37.324
  Dec 15 15:19:37.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 15:19:37.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:37.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:37.334
  STEP: Creating secret with name secret-test-8cbc9917-7496-45a5-acff-5f9d6d3945f0 @ 12/15/23 15:19:37.346
  STEP: Creating a pod to test consume secrets @ 12/15/23 15:19:37.349
  E1215 15:19:38.100463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:39.100724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:19:39.36
  Dec 15 15:19:39.362: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-486f9beb-73a8-478b-8cc9-9676c188c356 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 15:19:39.37
  Dec 15 15:19:39.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-21" for this suite. @ 12/15/23 15:19:39.386
  STEP: Destroying namespace "secret-namespace-6588" for this suite. @ 12/15/23 15:19:39.391
• [2.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/15/23 15:19:39.396
  Dec 15 15:19:39.396: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:19:39.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:39.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:39.411
  STEP: Creating configMap with name projected-configmap-test-volume-map-09f252b6-6614-40e9-a56f-27f68b406347 @ 12/15/23 15:19:39.414
  STEP: Creating a pod to test consume configMaps @ 12/15/23 15:19:39.418
  E1215 15:19:40.101485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:41.102578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:19:41.431
  Dec 15 15:19:41.433: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-dde99d54-c6bc-4e10-9595-33a5f3db1ad5 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:19:41.437
  Dec 15 15:19:41.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4000" for this suite. @ 12/15/23 15:19:41.447
• [2.054 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/15/23 15:19:41.451
  Dec 15 15:19:41.451: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:19:41.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:41.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:41.46
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:19:41.462
  E1215 15:19:42.103496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:43.103633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:19:43.473
  Dec 15 15:19:43.476: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-f404cd23-b51f-470d-abc7-9682a4d2af48 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:19:43.483
  Dec 15 15:19:43.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7244" for this suite. @ 12/15/23 15:19:43.498
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/15/23 15:19:43.504
  Dec 15 15:19:43.504: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:19:43.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:43.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:43.518
  STEP: Creating configMap with name projected-configmap-test-volume-b332e8c8-f961-497b-8c92-f70248c49236 @ 12/15/23 15:19:43.521
  STEP: Creating a pod to test consume configMaps @ 12/15/23 15:19:43.525
  E1215 15:19:44.104313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:45.104679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:19:45.539
  Dec 15 15:19:45.541: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-14821d05-849c-437a-912a-62e7790907c3 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:19:45.545
  Dec 15 15:19:45.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6897" for this suite. @ 12/15/23 15:19:45.557
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/15/23 15:19:45.562
  Dec 15 15:19:45.562: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename endpointslice @ 12/15/23 15:19:45.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:45.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:45.571
  Dec 15 15:19:45.580: INFO: Endpoints addresses: [172.20.0.2 172.20.0.3 172.20.0.4] , ports: [6443]
  Dec 15 15:19:45.580: INFO: EndpointSlices addresses: [172.20.0.2 172.20.0.3 172.20.0.4] , ports: [6443]
  Dec 15 15:19:45.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3211" for this suite. @ 12/15/23 15:19:45.583
• [0.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/15/23 15:19:45.587
  Dec 15 15:19:45.587: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 15:19:45.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:45.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:45.597
  STEP: Creating configMap with name configmap-test-volume-0eaf420b-7068-4513-b092-620a48563921 @ 12/15/23 15:19:45.598
  STEP: Creating a pod to test consume configMaps @ 12/15/23 15:19:45.601
  E1215 15:19:46.104778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:47.105060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:19:47.611
  Dec 15 15:19:47.613: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-a29df2af-3693-4f99-af29-3bec9c187bef container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:19:47.617
  Dec 15 15:19:47.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5160" for this suite. @ 12/15/23 15:19:47.629
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/15/23 15:19:47.633
  Dec 15 15:19:47.633: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename watch @ 12/15/23 15:19:47.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:19:47.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:19:47.646
  STEP: creating a watch on configmaps with label A @ 12/15/23 15:19:47.649
  STEP: creating a watch on configmaps with label B @ 12/15/23 15:19:47.65
  STEP: creating a watch on configmaps with label A or B @ 12/15/23 15:19:47.651
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/15/23 15:19:47.652
  Dec 15 15:19:47.655: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8487  2faf85a9-9ab4-4c31-8256-7b6b7b47c2d8 25435 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:19:47.656: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8487  2faf85a9-9ab4-4c31-8256-7b6b7b47c2d8 25435 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/15/23 15:19:47.656
  Dec 15 15:19:47.662: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8487  2faf85a9-9ab4-4c31-8256-7b6b7b47c2d8 25436 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:19:47.662: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8487  2faf85a9-9ab4-4c31-8256-7b6b7b47c2d8 25436 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/15/23 15:19:47.662
  Dec 15 15:19:47.668: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8487  2faf85a9-9ab4-4c31-8256-7b6b7b47c2d8 25437 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:19:47.668: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8487  2faf85a9-9ab4-4c31-8256-7b6b7b47c2d8 25437 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/15/23 15:19:47.668
  Dec 15 15:19:47.673: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8487  2faf85a9-9ab4-4c31-8256-7b6b7b47c2d8 25438 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:19:47.673: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8487  2faf85a9-9ab4-4c31-8256-7b6b7b47c2d8 25438 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/15/23 15:19:47.673
  Dec 15 15:19:47.676: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8487  6d98e89a-355f-4bbf-be6f-cd08f026a208 25439 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:19:47.676: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8487  6d98e89a-355f-4bbf-be6f-cd08f026a208 25439 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1215 15:19:48.105590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:49.106396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:50.106576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:51.107073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:52.107155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:53.107509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:54.108532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:55.108670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:56.108955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:57.109165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/15/23 15:19:57.678
  Dec 15 15:19:57.684: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8487  6d98e89a-355f-4bbf-be6f-cd08f026a208 25490 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:19:57.684: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8487  6d98e89a-355f-4bbf-be6f-cd08f026a208 25490 0 2023-12-15 15:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-15 15:19:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1215 15:19:58.109375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:19:59.109540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:00.109651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:01.110579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:02.110816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:03.111760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:04.112747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:05.112990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:06.113219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:07.113726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:20:07.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8487" for this suite. @ 12/15/23 15:20:07.689
• [20.061 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/15/23 15:20:07.694
  Dec 15 15:20:07.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 15:20:07.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:20:07.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:20:07.708
  STEP: Creating configMap with name cm-test-opt-del-3b9820a8-8492-42f4-ba12-32bd05972c04 @ 12/15/23 15:20:07.713
  STEP: Creating configMap with name cm-test-opt-upd-7f75fe22-3805-485c-89b7-085cff18382b @ 12/15/23 15:20:07.717
  STEP: Creating the pod @ 12/15/23 15:20:07.72
  E1215 15:20:08.114662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:09.115422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-3b9820a8-8492-42f4-ba12-32bd05972c04 @ 12/15/23 15:20:09.747
  STEP: Updating configmap cm-test-opt-upd-7f75fe22-3805-485c-89b7-085cff18382b @ 12/15/23 15:20:09.752
  STEP: Creating configMap with name cm-test-opt-create-d46ff614-f4bc-4eaa-8ee4-d925169028ba @ 12/15/23 15:20:09.755
  STEP: waiting to observe update in volume @ 12/15/23 15:20:09.757
  E1215 15:20:10.116178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:11.116574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:12.117556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:13.118183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:14.118477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:15.118986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:16.119860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:17.120132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:18.121017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:19.121145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:20.121366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:21.121438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:22.121566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:23.121972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:24.122052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:25.122207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:26.122868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:27.123091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:28.123826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:29.124307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:30.124593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:31.124809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:32.125240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:33.125421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:34.125565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:35.125726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:36.126669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:37.126715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:38.127197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:39.127568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:40.128694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:41.128959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:42.129708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:43.129818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:44.130364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:45.130728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:46.131270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:47.131473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:48.131713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:49.131734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:50.131892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:51.132122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:52.133259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:53.134315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:54.134453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:55.134587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:56.135218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:57.135363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:58.135916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:20:59.137056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:00.137911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:01.138014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:02.138374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:03.138768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:04.139422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:05.139687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:06.140702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:07.140932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:08.141304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:09.141571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:10.142226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:11.142940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:12.143483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:13.143850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:14.143926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:15.144171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:16.145024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:17.145262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:18.145666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:19.146070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:20.146185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:21.146416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:22.146520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:23.147180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:24.147692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:25.147877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:26.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2489" for this suite. @ 12/15/23 15:21:26.031
• [78.342 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 12/15/23 15:21:26.036
  Dec 15 15:21:26.036: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:21:26.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:21:26.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:21:26.05
  STEP: creating all guestbook components @ 12/15/23 15:21:26.052
  Dec 15 15:21:26.052: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Dec 15 15:21:26.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 create -f -'
  E1215 15:21:26.148336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:26.164: INFO: stderr: ""
  Dec 15 15:21:26.164: INFO: stdout: "service/agnhost-replica created\n"
  Dec 15 15:21:26.164: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Dec 15 15:21:26.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 create -f -'
  Dec 15 15:21:26.246: INFO: stderr: ""
  Dec 15 15:21:26.246: INFO: stdout: "service/agnhost-primary created\n"
  Dec 15 15:21:26.246: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Dec 15 15:21:26.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 create -f -'
  Dec 15 15:21:26.332: INFO: stderr: ""
  Dec 15 15:21:26.332: INFO: stdout: "service/frontend created\n"
  Dec 15 15:21:26.332: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Dec 15 15:21:26.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 create -f -'
  Dec 15 15:21:26.382: INFO: stderr: ""
  Dec 15 15:21:26.382: INFO: stdout: "deployment.apps/frontend created\n"
  Dec 15 15:21:26.382: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 15 15:21:26.382: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 create -f -'
  Dec 15 15:21:26.434: INFO: stderr: ""
  Dec 15 15:21:26.434: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Dec 15 15:21:26.434: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 15 15:21:26.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 create -f -'
  Dec 15 15:21:26.480: INFO: stderr: ""
  Dec 15 15:21:26.480: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/15/23 15:21:26.48
  Dec 15 15:21:26.480: INFO: Waiting for all frontend pods to be Running.
  E1215 15:21:27.149068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:28.149337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:29.149717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:30.149944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:31.150104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:31.531: INFO: Waiting for frontend to serve content.
  Dec 15 15:21:31.537: INFO: Trying to add a new entry to the guestbook.
  Dec 15 15:21:31.542: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/15/23 15:21:31.546
  Dec 15 15:21:31.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 delete --grace-period=0 --force -f -'
  Dec 15 15:21:31.599: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 15 15:21:31.599: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/23 15:21:31.599
  Dec 15 15:21:31.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 delete --grace-period=0 --force -f -'
  Dec 15 15:21:31.640: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 15 15:21:31.640: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/23 15:21:31.64
  Dec 15 15:21:31.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 delete --grace-period=0 --force -f -'
  Dec 15 15:21:31.683: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 15 15:21:31.683: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/23 15:21:31.683
  Dec 15 15:21:31.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 delete --grace-period=0 --force -f -'
  Dec 15 15:21:31.718: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 15 15:21:31.718: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/23 15:21:31.718
  Dec 15 15:21:31.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 delete --grace-period=0 --force -f -'
  Dec 15 15:21:31.763: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 15 15:21:31.763: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/23 15:21:31.763
  Dec 15 15:21:31.763: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-571 delete --grace-period=0 --force -f -'
  Dec 15 15:21:31.803: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 15 15:21:31.803: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Dec 15 15:21:31.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-571" for this suite. @ 12/15/23 15:21:31.807
• [5.774 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 12/15/23 15:21:31.811
  Dec 15 15:21:31.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:21:31.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:21:31.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:21:31.82
  STEP: creating Agnhost RC @ 12/15/23 15:21:31.821
  Dec 15 15:21:31.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-1355 create -f -'
  Dec 15 15:21:31.907: INFO: stderr: ""
  Dec 15 15:21:31.907: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/15/23 15:21:31.907
  E1215 15:21:32.150207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:32.910: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 15 15:21:32.910: INFO: Found 0 / 1
  E1215 15:21:33.150680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:33.910: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 15 15:21:33.910: INFO: Found 1 / 1
  Dec 15 15:21:33.910: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/15/23 15:21:33.91
  Dec 15 15:21:33.913: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 15 15:21:33.913: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 15 15:21:33.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-1355 patch pod agnhost-primary-w45g2 -p {"metadata":{"annotations":{"x":"y"}}}'
  Dec 15 15:21:33.981: INFO: stderr: ""
  Dec 15 15:21:33.981: INFO: stdout: "pod/agnhost-primary-w45g2 patched\n"
  STEP: checking annotations @ 12/15/23 15:21:33.982
  Dec 15 15:21:33.985: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 15 15:21:33.986: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 15 15:21:33.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1355" for this suite. @ 12/15/23 15:21:33.99
• [2.184 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 12/15/23 15:21:33.995
  Dec 15 15:21:33.995: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename daemonsets @ 12/15/23 15:21:33.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:21:34.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:21:34.009
  STEP: Creating simple DaemonSet "daemon-set" @ 12/15/23 15:21:34.028
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/23 15:21:34.032
  Dec 15 15:21:34.035: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:21:34.036: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:21:34.036: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:21:34.038: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:21:34.038: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:21:34.150882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:35.037: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:21:35.037: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:21:35.037: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:21:35.040: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:21:35.040: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:21:35.150867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:36.035: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:21:36.035: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:21:36.035: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:21:36.037: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 15 15:21:36.037: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 12/15/23 15:21:36.039
  Dec 15 15:21:36.041: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/15/23 15:21:36.041
  Dec 15 15:21:36.046: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/15/23 15:21:36.046
  Dec 15 15:21:36.048: INFO: Observed &DaemonSet event: ADDED
  Dec 15 15:21:36.048: INFO: Observed &DaemonSet event: MODIFIED
  Dec 15 15:21:36.048: INFO: Observed &DaemonSet event: MODIFIED
  Dec 15 15:21:36.048: INFO: Observed &DaemonSet event: MODIFIED
  Dec 15 15:21:36.048: INFO: Observed &DaemonSet event: MODIFIED
  Dec 15 15:21:36.048: INFO: Found daemon set daemon-set in namespace daemonsets-7587 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 15 15:21:36.048: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/15/23 15:21:36.048
  STEP: watching for the daemon set status to be patched @ 12/15/23 15:21:36.053
  Dec 15 15:21:36.054: INFO: Observed &DaemonSet event: ADDED
  Dec 15 15:21:36.054: INFO: Observed &DaemonSet event: MODIFIED
  Dec 15 15:21:36.055: INFO: Observed &DaemonSet event: MODIFIED
  Dec 15 15:21:36.055: INFO: Observed &DaemonSet event: MODIFIED
  Dec 15 15:21:36.055: INFO: Observed &DaemonSet event: MODIFIED
  Dec 15 15:21:36.055: INFO: Observed daemon set daemon-set in namespace daemonsets-7587 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 15 15:21:36.055: INFO: Observed &DaemonSet event: MODIFIED
  Dec 15 15:21:36.055: INFO: Found daemon set daemon-set in namespace daemonsets-7587 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Dec 15 15:21:36.055: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/23 15:21:36.057
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7587, will wait for the garbage collector to delete the pods @ 12/15/23 15:21:36.057
  Dec 15 15:21:36.114: INFO: Deleting DaemonSet.extensions daemon-set took: 4.675018ms
  E1215 15:21:36.151396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:36.215: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.750062ms
  E1215 15:21:37.152003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:37.318: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:21:37.318: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 15 15:21:37.321: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26022"},"items":null}

  Dec 15 15:21:37.324: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26022"},"items":null}

  Dec 15 15:21:37.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7587" for this suite. @ 12/15/23 15:21:37.338
• [3.348 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/15/23 15:21:37.343
  Dec 15 15:21:37.343: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename events @ 12/15/23 15:21:37.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:21:37.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:21:37.357
  STEP: creating a test event @ 12/15/23 15:21:37.36
  STEP: listing events in all namespaces @ 12/15/23 15:21:37.366
  STEP: listing events in test namespace @ 12/15/23 15:21:37.369
  STEP: listing events with field selection filtering on source @ 12/15/23 15:21:37.372
  STEP: listing events with field selection filtering on reportingController @ 12/15/23 15:21:37.375
  STEP: getting the test event @ 12/15/23 15:21:37.378
  STEP: patching the test event @ 12/15/23 15:21:37.381
  STEP: getting the test event @ 12/15/23 15:21:37.388
  STEP: updating the test event @ 12/15/23 15:21:37.391
  STEP: getting the test event @ 12/15/23 15:21:37.397
  STEP: deleting the test event @ 12/15/23 15:21:37.399
  STEP: listing events in all namespaces @ 12/15/23 15:21:37.405
  STEP: listing events in test namespace @ 12/15/23 15:21:37.409
  Dec 15 15:21:37.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6588" for this suite. @ 12/15/23 15:21:37.416
• [0.077 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/15/23 15:21:37.421
  Dec 15 15:21:37.421: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/23 15:21:37.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:21:37.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:21:37.434
  Dec 15 15:21:37.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:21:38.152688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:39.152779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:40.153606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:40.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3042" for this suite. @ 12/15/23 15:21:40.48
• [3.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/15/23 15:21:40.489
  Dec 15 15:21:40.489: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:21:40.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:21:40.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:21:40.504
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/15/23 15:21:40.507
  E1215 15:21:41.153653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:42.153882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:21:42.519
  Dec 15 15:21:42.520: INFO: Trying to get logs from node talos-default-worker-1 pod pod-e75617f2-86b6-4b68-9d1e-66141687a415 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:21:42.524
  Dec 15 15:21:42.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7874" for this suite. @ 12/15/23 15:21:42.531
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 12/15/23 15:21:42.534
  Dec 15 15:21:42.534: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:21:42.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:21:42.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:21:42.541
  STEP: starting the proxy server @ 12/15/23 15:21:42.542
  Dec 15 15:21:42.542: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-1599 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/15/23 15:21:42.567
  Dec 15 15:21:42.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1599" for this suite. @ 12/15/23 15:21:42.572
• [0.041 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 12/15/23 15:21:42.575
  Dec 15 15:21:42.575: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename statefulset @ 12/15/23 15:21:42.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:21:42.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:21:42.582
  STEP: Creating service test in namespace statefulset-4663 @ 12/15/23 15:21:42.584
  Dec 15 15:21:42.590: INFO: Found 0 stateful pods, waiting for 1
  E1215 15:21:43.153961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:44.154359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:45.154588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:46.154787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:47.154968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:48.155364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:49.155540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:50.155673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:51.155820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:52.156013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:21:52.592: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/15/23 15:21:52.596
  W1215 15:21:52.602027      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Dec 15 15:21:52.606: INFO: Found 1 stateful pods, waiting for 2
  E1215 15:21:53.156259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:54.156572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:55.156667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:56.156884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:57.157814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:58.158241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:21:59.158523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:00.158843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:01.159590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:02.159731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:22:02.609: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 15:22:02.609: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/15/23 15:22:02.615
  STEP: Delete all of the StatefulSets @ 12/15/23 15:22:02.618
  STEP: Verify that StatefulSets have been deleted @ 12/15/23 15:22:02.625
  Dec 15 15:22:02.628: INFO: Deleting all statefulset in ns statefulset-4663
  Dec 15 15:22:02.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4663" for this suite. @ 12/15/23 15:22:02.643
• [20.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/15/23 15:22:02.649
  Dec 15 15:22:02.649: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 15:22:02.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:22:02.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:22:02.664
  STEP: creating the pod @ 12/15/23 15:22:02.666
  STEP: submitting the pod to kubernetes @ 12/15/23 15:22:02.667
  E1215 15:22:03.160500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:04.160839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 12/15/23 15:22:04.68
  STEP: updating the pod @ 12/15/23 15:22:04.682
  E1215 15:22:05.161474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:22:05.189: INFO: Successfully updated pod "pod-update-e2119c43-6b5f-4ff6-9b49-420d19a426fc"
  STEP: verifying the updated pod is in kubernetes @ 12/15/23 15:22:05.19
  Dec 15 15:22:05.192: INFO: Pod update OK
  Dec 15 15:22:05.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4874" for this suite. @ 12/15/23 15:22:05.194
• [2.547 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 12/15/23 15:22:05.197
  Dec 15 15:22:05.197: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:22:05.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:22:05.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:22:05.204
  STEP: creating a replication controller @ 12/15/23 15:22:05.205
  Dec 15 15:22:05.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 create -f -'
  Dec 15 15:22:05.284: INFO: stderr: ""
  Dec 15 15:22:05.284: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/15/23 15:22:05.284
  Dec 15 15:22:05.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 15 15:22:05.323: INFO: stderr: ""
  Dec 15 15:22:05.323: INFO: stdout: "update-demo-nautilus-6p87m update-demo-nautilus-wfc84 "
  Dec 15 15:22:05.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 get pods update-demo-nautilus-6p87m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 15 15:22:05.355: INFO: stderr: ""
  Dec 15 15:22:05.355: INFO: stdout: ""
  Dec 15 15:22:05.355: INFO: update-demo-nautilus-6p87m is created but not running
  E1215 15:22:06.161903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:07.162155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:08.163145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:09.164131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:10.164220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:22:10.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 15 15:22:10.397: INFO: stderr: ""
  Dec 15 15:22:10.397: INFO: stdout: "update-demo-nautilus-6p87m update-demo-nautilus-wfc84 "
  Dec 15 15:22:10.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 get pods update-demo-nautilus-6p87m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 15 15:22:10.436: INFO: stderr: ""
  Dec 15 15:22:10.436: INFO: stdout: "true"
  Dec 15 15:22:10.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 get pods update-demo-nautilus-6p87m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 15 15:22:10.469: INFO: stderr: ""
  Dec 15 15:22:10.469: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 15 15:22:10.469: INFO: validating pod update-demo-nautilus-6p87m
  Dec 15 15:22:10.473: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 15 15:22:10.473: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 15 15:22:10.473: INFO: update-demo-nautilus-6p87m is verified up and running
  Dec 15 15:22:10.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 get pods update-demo-nautilus-wfc84 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 15 15:22:10.504: INFO: stderr: ""
  Dec 15 15:22:10.504: INFO: stdout: "true"
  Dec 15 15:22:10.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 get pods update-demo-nautilus-wfc84 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 15 15:22:10.537: INFO: stderr: ""
  Dec 15 15:22:10.537: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 15 15:22:10.537: INFO: validating pod update-demo-nautilus-wfc84
  Dec 15 15:22:10.541: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 15 15:22:10.541: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 15 15:22:10.541: INFO: update-demo-nautilus-wfc84 is verified up and running
  STEP: using delete to clean up resources @ 12/15/23 15:22:10.541
  Dec 15 15:22:10.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 delete --grace-period=0 --force -f -'
  Dec 15 15:22:10.577: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 15 15:22:10.577: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 15 15:22:10.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 get rc,svc -l name=update-demo --no-headers'
  Dec 15 15:22:10.619: INFO: stderr: "No resources found in kubectl-8336 namespace.\n"
  Dec 15 15:22:10.619: INFO: stdout: ""
  Dec 15 15:22:10.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-8336 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 15 15:22:10.656: INFO: stderr: ""
  Dec 15 15:22:10.656: INFO: stdout: ""
  Dec 15 15:22:10.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8336" for this suite. @ 12/15/23 15:22:10.659
• [5.466 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/15/23 15:22:10.663
  Dec 15 15:22:10.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename subpath @ 12/15/23 15:22:10.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:22:10.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:22:10.671
  STEP: Setting up data @ 12/15/23 15:22:10.672
  STEP: Creating pod pod-subpath-test-secret-xfxk @ 12/15/23 15:22:10.676
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/23 15:22:10.676
  E1215 15:22:11.164340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:12.164701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:13.164989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:14.165085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:15.165722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:16.165814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:17.166122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:18.166502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:19.167454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:20.168119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:21.168529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:22.169317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:23.169474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:24.169530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:25.169895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:26.170091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:27.170664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:28.171106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:29.172092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:30.172207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:31.172624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:32.172827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:22:32.717
  Dec 15 15:22:32.718: INFO: Trying to get logs from node talos-default-worker-1 pod pod-subpath-test-secret-xfxk container test-container-subpath-secret-xfxk: <nil>
  STEP: delete the pod @ 12/15/23 15:22:32.722
  STEP: Deleting pod pod-subpath-test-secret-xfxk @ 12/15/23 15:22:32.734
  Dec 15 15:22:32.734: INFO: Deleting pod "pod-subpath-test-secret-xfxk" in namespace "subpath-1149"
  Dec 15 15:22:32.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1149" for this suite. @ 12/15/23 15:22:32.738
• [22.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 12/15/23 15:22:32.741
  Dec 15 15:22:32.741: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-preemption @ 12/15/23 15:22:32.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:22:32.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:22:32.749
  Dec 15 15:22:32.757: INFO: Waiting up to 1m0s for all nodes to be ready
  E1215 15:22:33.173632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:34.173969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:35.174912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:36.175652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:37.176388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:38.177188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:39.177519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:40.177819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:41.178694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:42.178947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:43.179976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:44.180190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:45.180283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:46.180594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:47.181186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:48.182017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:49.182674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:50.183132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:51.183945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:52.185003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:53.185721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:54.186079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:55.186965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:56.187197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:57.188233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:58.188500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:22:59.189442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:00.190227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:01.190265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:02.190384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:03.190772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:04.190855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:05.191017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:06.191652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:07.192107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:08.193218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:09.194116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:10.194299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:11.194322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:12.195369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:13.196054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:14.196433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:15.196562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:16.197437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:17.197865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:18.198175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:19.198527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:20.199460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:21.200068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:22.200204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:23.201050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:24.201775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:25.202021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:26.202194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:27.203040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:28.203426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:29.203787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:30.204643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:31.205240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:32.205422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:23:32.762: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/15/23 15:23:32.765
  Dec 15 15:23:32.766: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/15/23 15:23:32.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:23:32.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:23:32.78
  Dec 15 15:23:32.794: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Dec 15 15:23:32.798: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Dec 15 15:23:32.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7557" for this suite. @ 12/15/23 15:23:32.853
  Dec 15 15:23:32.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9756" for this suite. @ 12/15/23 15:23:32.862
• [60.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/15/23 15:23:32.868
  Dec 15 15:23:32.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename proxy @ 12/15/23 15:23:32.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:23:32.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:23:32.881
  Dec 15 15:23:32.883: INFO: Creating pod...
  E1215 15:23:33.206123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:34.206605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:23:34.896: INFO: Creating service...
  Dec 15 15:23:34.907: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/pods/agnhost/proxy?method=DELETE
  Dec 15 15:23:34.912: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 15 15:23:34.912: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/pods/agnhost/proxy?method=OPTIONS
  Dec 15 15:23:34.916: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 15 15:23:34.916: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/pods/agnhost/proxy?method=PATCH
  Dec 15 15:23:34.919: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 15 15:23:34.919: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/pods/agnhost/proxy?method=POST
  Dec 15 15:23:34.922: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 15 15:23:34.922: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/pods/agnhost/proxy?method=PUT
  Dec 15 15:23:34.925: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 15 15:23:34.925: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/services/e2e-proxy-test-service/proxy?method=DELETE
  Dec 15 15:23:34.930: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 15 15:23:34.930: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Dec 15 15:23:34.936: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 15 15:23:34.936: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/services/e2e-proxy-test-service/proxy?method=PATCH
  Dec 15 15:23:34.940: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 15 15:23:34.940: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/services/e2e-proxy-test-service/proxy?method=POST
  Dec 15 15:23:34.943: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 15 15:23:34.943: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/services/e2e-proxy-test-service/proxy?method=PUT
  Dec 15 15:23:34.946: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 15 15:23:34.946: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/pods/agnhost/proxy?method=GET
  Dec 15 15:23:34.948: INFO: http.Client request:GET StatusCode:301
  Dec 15 15:23:34.948: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/services/e2e-proxy-test-service/proxy?method=GET
  Dec 15 15:23:34.950: INFO: http.Client request:GET StatusCode:301
  Dec 15 15:23:34.950: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/pods/agnhost/proxy?method=HEAD
  Dec 15 15:23:34.951: INFO: http.Client request:HEAD StatusCode:301
  Dec 15 15:23:34.951: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6004/services/e2e-proxy-test-service/proxy?method=HEAD
  Dec 15 15:23:34.953: INFO: http.Client request:HEAD StatusCode:301
  Dec 15 15:23:34.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6004" for this suite. @ 12/15/23 15:23:34.956
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 12/15/23 15:23:34.959
  Dec 15 15:23:34.959: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename statefulset @ 12/15/23 15:23:34.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:23:34.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:23:34.967
  STEP: Creating service test in namespace statefulset-1975 @ 12/15/23 15:23:34.968
  STEP: Creating a new StatefulSet @ 12/15/23 15:23:34.97
  Dec 15 15:23:34.975: INFO: Found 0 stateful pods, waiting for 3
  E1215 15:23:35.206672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:36.206956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:37.207383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:38.208007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:39.208407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:40.208939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:41.209087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:42.209163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:43.209315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:44.209606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:23:44.976: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 15:23:44.976: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 15:23:44.976: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/15/23 15:23:44.982
  Dec 15 15:23:44.997: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/15/23 15:23:44.997
  E1215 15:23:45.209745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:46.209852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:47.210815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:48.211151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:49.211957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:50.212018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:51.212201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:52.212410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:53.212623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:54.212924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/15/23 15:23:55.002
  STEP: Performing a canary update @ 12/15/23 15:23:55.002
  Dec 15 15:23:55.017: INFO: Updating stateful set ss2
  Dec 15 15:23:55.020: INFO: Waiting for Pod statefulset-1975/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1215 15:23:55.213929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:56.214207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:57.214401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:58.214669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:23:59.215027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:00.215805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:01.215867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:02.216036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:03.217029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:04.217384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/15/23 15:24:05.026
  Dec 15 15:24:05.053: INFO: Found 2 stateful pods, waiting for 3
  E1215 15:24:05.217494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:06.217755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:07.218585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:08.218901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:09.219292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:10.220147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:11.220329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:12.220592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:13.220725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:14.221422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:24:15.054: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 15:24:15.054: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 15:24:15.054: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/15/23 15:24:15.06
  Dec 15 15:24:15.077: INFO: Updating stateful set ss2
  Dec 15 15:24:15.083: INFO: Waiting for Pod statefulset-1975/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1215 15:24:15.222014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:16.222278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:17.222472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:18.222742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:19.223054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:20.224141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:21.224246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:22.224462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:23.224634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:24.225014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:24:25.109: INFO: Updating stateful set ss2
  Dec 15 15:24:25.116: INFO: Waiting for StatefulSet statefulset-1975/ss2 to complete update
  Dec 15 15:24:25.116: INFO: Waiting for Pod statefulset-1975/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1215 15:24:25.225081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:26.225330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:27.225607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:28.226019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:29.226394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:30.226652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:31.226864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:32.226977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:33.227743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:34.227871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:24:35.115: INFO: Deleting all statefulset in ns statefulset-1975
  Dec 15 15:24:35.117: INFO: Scaling statefulset ss2 to 0
  E1215 15:24:35.228473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:36.228648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:37.228825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:38.229510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:39.229569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:40.229706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:41.229928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:42.230230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:43.230578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:44.231058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:24:45.126: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 15 15:24:45.129: INFO: Deleting statefulset ss2
  Dec 15 15:24:45.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1975" for this suite. @ 12/15/23 15:24:45.143
• [70.190 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 12/15/23 15:24:45.15
  Dec 15 15:24:45.150: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 15:24:45.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:24:45.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:24:45.163
  STEP: Creating a ResourceQuota with best effort scope @ 12/15/23 15:24:45.166
  STEP: Ensuring ResourceQuota status is calculated @ 12/15/23 15:24:45.17
  E1215 15:24:45.231134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:46.231426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 12/15/23 15:24:47.173
  STEP: Ensuring ResourceQuota status is calculated @ 12/15/23 15:24:47.177
  E1215 15:24:47.232442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:48.232739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 12/15/23 15:24:49.181
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/15/23 15:24:49.191
  E1215 15:24:49.233779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:50.234042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/15/23 15:24:51.195
  E1215 15:24:51.234868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:52.234990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/15/23 15:24:53.199
  STEP: Ensuring resource quota status released the pod usage @ 12/15/23 15:24:53.209
  E1215 15:24:53.235070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:54.235511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 12/15/23 15:24:55.212
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/15/23 15:24:55.217
  E1215 15:24:55.235928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:56.236172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/15/23 15:24:57.221
  E1215 15:24:57.236876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:24:58.237285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/15/23 15:24:59.225
  STEP: Ensuring resource quota status released the pod usage @ 12/15/23 15:24:59.232
  E1215 15:24:59.237532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:00.237731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:01.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1215 15:25:01.238409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "resourcequota-7828" for this suite. @ 12/15/23 15:25:01.24
• [16.096 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/15/23 15:25:01.245
  Dec 15 15:25:01.246: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename proxy @ 12/15/23 15:25:01.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:25:01.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:25:01.259
  STEP: starting an echo server on multiple ports @ 12/15/23 15:25:01.272
  STEP: creating replication controller proxy-service-tqcl6 in namespace proxy-8190 @ 12/15/23 15:25:01.272
  I1215 15:25:01.277921      22 runners.go:197] Created replication controller with name: proxy-service-tqcl6, namespace: proxy-8190, replica count: 1
  E1215 15:25:02.239389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:25:02.329850      22 runners.go:197] proxy-service-tqcl6 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1215 15:25:03.240191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:25:03.330518      22 runners.go:197] proxy-service-tqcl6 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 15 15:25:03.333: INFO: setup took 2.072201426s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/15/23 15:25:03.333
  Dec 15 15:25:03.340: INFO: (0) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 6.470039ms)
  Dec 15 15:25:03.340: INFO: (0) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 6.387984ms)
  Dec 15 15:25:03.340: INFO: (0) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 6.190142ms)
  Dec 15 15:25:03.341: INFO: (0) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 7.296656ms)
  Dec 15 15:25:03.341: INFO: (0) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 7.368622ms)
  Dec 15 15:25:03.341: INFO: (0) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 7.515228ms)
  Dec 15 15:25:03.341: INFO: (0) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 7.541397ms)
  Dec 15 15:25:03.344: INFO: (0) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 10.304683ms)
  Dec 15 15:25:03.344: INFO: (0) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 10.030325ms)
  Dec 15 15:25:03.344: INFO: (0) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 10.120766ms)
  Dec 15 15:25:03.344: INFO: (0) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 10.091672ms)
  Dec 15 15:25:03.345: INFO: (0) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 11.574344ms)
  Dec 15 15:25:03.346: INFO: (0) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 12.050211ms)
  Dec 15 15:25:03.346: INFO: (0) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 12.542257ms)
  Dec 15 15:25:03.348: INFO: (0) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 14.059606ms)
  Dec 15 15:25:03.348: INFO: (0) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 14.08825ms)
  Dec 15 15:25:03.353: INFO: (1) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 5.142478ms)
  Dec 15 15:25:03.353: INFO: (1) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 5.058801ms)
  Dec 15 15:25:03.355: INFO: (1) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 6.204148ms)
  Dec 15 15:25:03.355: INFO: (1) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 6.179211ms)
  Dec 15 15:25:03.355: INFO: (1) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 6.409755ms)
  Dec 15 15:25:03.355: INFO: (1) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 6.860224ms)
  Dec 15 15:25:03.356: INFO: (1) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 7.297098ms)
  Dec 15 15:25:03.355: INFO: (1) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 6.881023ms)
  Dec 15 15:25:03.356: INFO: (1) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 7.247414ms)
  Dec 15 15:25:03.356: INFO: (1) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 7.203962ms)
  Dec 15 15:25:03.356: INFO: (1) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 7.507244ms)
  Dec 15 15:25:03.356: INFO: (1) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 7.556897ms)
  Dec 15 15:25:03.357: INFO: (1) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 8.391248ms)
  Dec 15 15:25:03.357: INFO: (1) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 8.654364ms)
  Dec 15 15:25:03.357: INFO: (1) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 8.702976ms)
  Dec 15 15:25:03.357: INFO: (1) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 8.870923ms)
  Dec 15 15:25:03.361: INFO: (2) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.439839ms)
  Dec 15 15:25:03.362: INFO: (2) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 4.520948ms)
  Dec 15 15:25:03.362: INFO: (2) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 4.667002ms)
  Dec 15 15:25:03.363: INFO: (2) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 5.259398ms)
  Dec 15 15:25:03.363: INFO: (2) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 5.243979ms)
  Dec 15 15:25:03.363: INFO: (2) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 5.293832ms)
  Dec 15 15:25:03.363: INFO: (2) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 5.808713ms)
  Dec 15 15:25:03.364: INFO: (2) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 6.593231ms)
  Dec 15 15:25:03.364: INFO: (2) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 6.307863ms)
  Dec 15 15:25:03.364: INFO: (2) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 6.566089ms)
  Dec 15 15:25:03.366: INFO: (2) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 8.227809ms)
  Dec 15 15:25:03.366: INFO: (2) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 8.871724ms)
  Dec 15 15:25:03.366: INFO: (2) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 8.561289ms)
  Dec 15 15:25:03.367: INFO: (2) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 9.255776ms)
  Dec 15 15:25:03.367: INFO: (2) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 9.707748ms)
  Dec 15 15:25:03.367: INFO: (2) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 9.407362ms)
  Dec 15 15:25:03.372: INFO: (3) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 5.303541ms)
  Dec 15 15:25:03.373: INFO: (3) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 5.569582ms)
  Dec 15 15:25:03.373: INFO: (3) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 5.515962ms)
  Dec 15 15:25:03.373: INFO: (3) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 5.635808ms)
  Dec 15 15:25:03.373: INFO: (3) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 6.084723ms)
  Dec 15 15:25:03.373: INFO: (3) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 5.983512ms)
  Dec 15 15:25:03.374: INFO: (3) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 6.085865ms)
  Dec 15 15:25:03.374: INFO: (3) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 6.023558ms)
  Dec 15 15:25:03.374: INFO: (3) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 6.505736ms)
  Dec 15 15:25:03.374: INFO: (3) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 6.483424ms)
  Dec 15 15:25:03.374: INFO: (3) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 7.196257ms)
  Dec 15 15:25:03.376: INFO: (3) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 8.092646ms)
  Dec 15 15:25:03.376: INFO: (3) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 8.981241ms)
  Dec 15 15:25:03.376: INFO: (3) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 9.200253ms)
  Dec 15 15:25:03.377: INFO: (3) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 9.139889ms)
  Dec 15 15:25:03.377: INFO: (3) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 9.434714ms)
  Dec 15 15:25:03.381: INFO: (4) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.932619ms)
  Dec 15 15:25:03.381: INFO: (4) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 4.597972ms)
  Dec 15 15:25:03.381: INFO: (4) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 4.784625ms)
  Dec 15 15:25:03.383: INFO: (4) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 5.698655ms)
  Dec 15 15:25:03.383: INFO: (4) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 6.131731ms)
  Dec 15 15:25:03.384: INFO: (4) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 7.353734ms)
  Dec 15 15:25:03.384: INFO: (4) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 7.491313ms)
  Dec 15 15:25:03.384: INFO: (4) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 7.902207ms)
  Dec 15 15:25:03.385: INFO: (4) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 7.918057ms)
  Dec 15 15:25:03.385: INFO: (4) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 7.928767ms)
  Dec 15 15:25:03.385: INFO: (4) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 7.971278ms)
  Dec 15 15:25:03.385: INFO: (4) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 8.045356ms)
  Dec 15 15:25:03.386: INFO: (4) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 8.876302ms)
  Dec 15 15:25:03.386: INFO: (4) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 8.833471ms)
  Dec 15 15:25:03.386: INFO: (4) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 8.740295ms)
  Dec 15 15:25:03.386: INFO: (4) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 9.251669ms)
  Dec 15 15:25:03.389: INFO: (5) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.349479ms)
  Dec 15 15:25:03.391: INFO: (5) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 4.506749ms)
  Dec 15 15:25:03.391: INFO: (5) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 5.118943ms)
  Dec 15 15:25:03.391: INFO: (5) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 5.122581ms)
  Dec 15 15:25:03.392: INFO: (5) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 5.231014ms)
  Dec 15 15:25:03.392: INFO: (5) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 5.507104ms)
  Dec 15 15:25:03.393: INFO: (5) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 6.397802ms)
  Dec 15 15:25:03.393: INFO: (5) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 6.605614ms)
  Dec 15 15:25:03.393: INFO: (5) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 6.796694ms)
  Dec 15 15:25:03.393: INFO: (5) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 6.496929ms)
  Dec 15 15:25:03.393: INFO: (5) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 7.37324ms)
  Dec 15 15:25:03.394: INFO: (5) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 7.546747ms)
  Dec 15 15:25:03.394: INFO: (5) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 7.413967ms)
  Dec 15 15:25:03.394: INFO: (5) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 7.650433ms)
  Dec 15 15:25:03.394: INFO: (5) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 7.775538ms)
  Dec 15 15:25:03.394: INFO: (5) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 7.872651ms)
  Dec 15 15:25:03.397: INFO: (6) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 2.529526ms)
  Dec 15 15:25:03.398: INFO: (6) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.184007ms)
  Dec 15 15:25:03.398: INFO: (6) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 3.1904ms)
  Dec 15 15:25:03.398: INFO: (6) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.136799ms)
  Dec 15 15:25:03.398: INFO: (6) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.533747ms)
  Dec 15 15:25:03.399: INFO: (6) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.767818ms)
  Dec 15 15:25:03.399: INFO: (6) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.888475ms)
  Dec 15 15:25:03.399: INFO: (6) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.942317ms)
  Dec 15 15:25:03.399: INFO: (6) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 4.562836ms)
  Dec 15 15:25:03.400: INFO: (6) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 5.101141ms)
  Dec 15 15:25:03.400: INFO: (6) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 5.363655ms)
  Dec 15 15:25:03.400: INFO: (6) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 5.45664ms)
  Dec 15 15:25:03.400: INFO: (6) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 5.497176ms)
  Dec 15 15:25:03.400: INFO: (6) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 5.561348ms)
  Dec 15 15:25:03.401: INFO: (6) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 5.886459ms)
  Dec 15 15:25:03.401: INFO: (6) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 5.91328ms)
  Dec 15 15:25:03.403: INFO: (7) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 2.441349ms)
  Dec 15 15:25:03.403: INFO: (7) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 2.41552ms)
  Dec 15 15:25:03.404: INFO: (7) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 2.568549ms)
  Dec 15 15:25:03.405: INFO: (7) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.693428ms)
  Dec 15 15:25:03.405: INFO: (7) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.732522ms)
  Dec 15 15:25:03.405: INFO: (7) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.806722ms)
  Dec 15 15:25:03.405: INFO: (7) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.961895ms)
  Dec 15 15:25:03.405: INFO: (7) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 4.132505ms)
  Dec 15 15:25:03.405: INFO: (7) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 4.045892ms)
  Dec 15 15:25:03.405: INFO: (7) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 4.115472ms)
  Dec 15 15:25:03.405: INFO: (7) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 4.250938ms)
  Dec 15 15:25:03.406: INFO: (7) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 5.018294ms)
  Dec 15 15:25:03.406: INFO: (7) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.935468ms)
  Dec 15 15:25:03.407: INFO: (7) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 5.613656ms)
  Dec 15 15:25:03.407: INFO: (7) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 5.618085ms)
  Dec 15 15:25:03.407: INFO: (7) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 5.709706ms)
  Dec 15 15:25:03.409: INFO: (8) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 1.987485ms)
  Dec 15 15:25:03.410: INFO: (8) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 2.964705ms)
  Dec 15 15:25:03.410: INFO: (8) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 3.199879ms)
  Dec 15 15:25:03.410: INFO: (8) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.167497ms)
  Dec 15 15:25:03.410: INFO: (8) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.332108ms)
  Dec 15 15:25:03.411: INFO: (8) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.514551ms)
  Dec 15 15:25:03.411: INFO: (8) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.624488ms)
  Dec 15 15:25:03.411: INFO: (8) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.769551ms)
  Dec 15 15:25:03.411: INFO: (8) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 4.01839ms)
  Dec 15 15:25:03.411: INFO: (8) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.083502ms)
  Dec 15 15:25:03.411: INFO: (8) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.801662ms)
  Dec 15 15:25:03.411: INFO: (8) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 3.73725ms)
  Dec 15 15:25:03.412: INFO: (8) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 4.647706ms)
  Dec 15 15:25:03.413: INFO: (8) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 5.553743ms)
  Dec 15 15:25:03.413: INFO: (8) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 5.378022ms)
  Dec 15 15:25:03.413: INFO: (8) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 5.357814ms)
  Dec 15 15:25:03.415: INFO: (9) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 2.48436ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.57251ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.433739ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.334672ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 3.341916ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.606694ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.474014ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 3.368096ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 3.757549ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.595814ms)
  Dec 15 15:25:03.417: INFO: (9) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.769652ms)
  Dec 15 15:25:03.418: INFO: (9) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 4.759376ms)
  Dec 15 15:25:03.418: INFO: (9) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.701557ms)
  Dec 15 15:25:03.418: INFO: (9) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 4.631906ms)
  Dec 15 15:25:03.418: INFO: (9) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.718279ms)
  Dec 15 15:25:03.418: INFO: (9) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 5.222007ms)
  Dec 15 15:25:03.421: INFO: (10) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 2.403348ms)
  Dec 15 15:25:03.422: INFO: (10) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 2.957572ms)
  Dec 15 15:25:03.422: INFO: (10) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 3.124145ms)
  Dec 15 15:25:03.422: INFO: (10) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 3.217661ms)
  Dec 15 15:25:03.422: INFO: (10) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.331116ms)
  Dec 15 15:25:03.422: INFO: (10) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.469016ms)
  Dec 15 15:25:03.422: INFO: (10) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.442675ms)
  Dec 15 15:25:03.422: INFO: (10) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.367554ms)
  Dec 15 15:25:03.422: INFO: (10) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.721641ms)
  Dec 15 15:25:03.423: INFO: (10) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 4.206275ms)
  Dec 15 15:25:03.423: INFO: (10) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.827024ms)
  Dec 15 15:25:03.424: INFO: (10) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 5.612133ms)
  Dec 15 15:25:03.424: INFO: (10) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 5.494221ms)
  Dec 15 15:25:03.424: INFO: (10) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 5.67453ms)
  Dec 15 15:25:03.424: INFO: (10) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 5.717282ms)
  Dec 15 15:25:03.424: INFO: (10) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 5.713524ms)
  Dec 15 15:25:03.427: INFO: (11) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 2.813431ms)
  Dec 15 15:25:03.428: INFO: (11) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 2.90909ms)
  Dec 15 15:25:03.428: INFO: (11) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 2.887129ms)
  Dec 15 15:25:03.428: INFO: (11) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.2167ms)
  Dec 15 15:25:03.428: INFO: (11) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.572921ms)
  Dec 15 15:25:03.428: INFO: (11) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.584874ms)
  Dec 15 15:25:03.428: INFO: (11) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 3.852178ms)
  Dec 15 15:25:03.428: INFO: (11) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 3.712483ms)
  Dec 15 15:25:03.428: INFO: (11) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.706103ms)
  Dec 15 15:25:03.429: INFO: (11) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 3.801523ms)
  Dec 15 15:25:03.429: INFO: (11) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.758511ms)
  Dec 15 15:25:03.429: INFO: (11) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 4.27295ms)
  Dec 15 15:25:03.430: INFO: (11) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.873312ms)
  Dec 15 15:25:03.430: INFO: (11) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 5.485453ms)
  Dec 15 15:25:03.430: INFO: (11) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 5.407556ms)
  Dec 15 15:25:03.430: INFO: (11) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 5.468753ms)
  Dec 15 15:25:03.432: INFO: (12) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 1.909959ms)
  Dec 15 15:25:03.433: INFO: (12) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 2.426552ms)
  Dec 15 15:25:03.433: INFO: (12) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 2.376317ms)
  Dec 15 15:25:03.433: INFO: (12) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 2.422483ms)
  Dec 15 15:25:03.433: INFO: (12) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 2.461116ms)
  Dec 15 15:25:03.434: INFO: (12) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.441293ms)
  Dec 15 15:25:03.434: INFO: (12) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.458696ms)
  Dec 15 15:25:03.434: INFO: (12) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.732842ms)
  Dec 15 15:25:03.434: INFO: (12) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 3.591887ms)
  Dec 15 15:25:03.434: INFO: (12) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.675815ms)
  Dec 15 15:25:03.435: INFO: (12) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 3.893755ms)
  Dec 15 15:25:03.435: INFO: (12) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 4.169696ms)
  Dec 15 15:25:03.435: INFO: (12) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 4.282058ms)
  Dec 15 15:25:03.435: INFO: (12) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 4.256298ms)
  Dec 15 15:25:03.435: INFO: (12) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.319478ms)
  Dec 15 15:25:03.435: INFO: (12) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 4.370594ms)
  Dec 15 15:25:03.438: INFO: (13) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 2.636728ms)
  Dec 15 15:25:03.438: INFO: (13) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 2.360567ms)
  Dec 15 15:25:03.438: INFO: (13) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 2.211797ms)
  Dec 15 15:25:03.438: INFO: (13) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 2.803842ms)
  Dec 15 15:25:03.438: INFO: (13) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.098767ms)
  Dec 15 15:25:03.439: INFO: (13) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.198275ms)
  Dec 15 15:25:03.439: INFO: (13) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.003668ms)
  Dec 15 15:25:03.439: INFO: (13) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.085913ms)
  Dec 15 15:25:03.439: INFO: (13) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 3.535781ms)
  Dec 15 15:25:03.439: INFO: (13) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.199628ms)
  Dec 15 15:25:03.439: INFO: (13) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.21688ms)
  Dec 15 15:25:03.439: INFO: (13) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 3.657611ms)
  Dec 15 15:25:03.440: INFO: (13) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.300732ms)
  Dec 15 15:25:03.440: INFO: (13) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 4.26808ms)
  Dec 15 15:25:03.440: INFO: (13) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 4.383198ms)
  Dec 15 15:25:03.440: INFO: (13) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 4.371775ms)
  Dec 15 15:25:03.442: INFO: (14) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 1.977495ms)
  Dec 15 15:25:03.443: INFO: (14) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 2.790557ms)
  Dec 15 15:25:03.443: INFO: (14) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 2.788163ms)
  Dec 15 15:25:03.443: INFO: (14) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 2.788733ms)
  Dec 15 15:25:03.444: INFO: (14) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 3.205669ms)
  Dec 15 15:25:03.444: INFO: (14) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.468715ms)
  Dec 15 15:25:03.444: INFO: (14) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 3.510944ms)
  Dec 15 15:25:03.444: INFO: (14) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.478453ms)
  Dec 15 15:25:03.444: INFO: (14) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.613087ms)
  Dec 15 15:25:03.444: INFO: (14) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.582189ms)
  Dec 15 15:25:03.444: INFO: (14) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 4.018661ms)
  Dec 15 15:25:03.445: INFO: (14) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.62848ms)
  Dec 15 15:25:03.445: INFO: (14) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 4.728839ms)
  Dec 15 15:25:03.445: INFO: (14) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.590679ms)
  Dec 15 15:25:03.445: INFO: (14) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 4.60717ms)
  Dec 15 15:25:03.445: INFO: (14) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 4.752644ms)
  Dec 15 15:25:03.447: INFO: (15) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 1.716213ms)
  Dec 15 15:25:03.447: INFO: (15) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 2.254648ms)
  Dec 15 15:25:03.448: INFO: (15) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 2.349255ms)
  Dec 15 15:25:03.448: INFO: (15) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.003269ms)
  Dec 15 15:25:03.448: INFO: (15) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.253109ms)
  Dec 15 15:25:03.448: INFO: (15) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.068562ms)
  Dec 15 15:25:03.448: INFO: (15) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.098327ms)
  Dec 15 15:25:03.448: INFO: (15) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 3.192204ms)
  Dec 15 15:25:03.448: INFO: (15) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.208755ms)
  Dec 15 15:25:03.449: INFO: (15) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.332258ms)
  Dec 15 15:25:03.449: INFO: (15) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 3.582398ms)
  Dec 15 15:25:03.449: INFO: (15) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 3.693798ms)
  Dec 15 15:25:03.449: INFO: (15) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 3.66758ms)
  Dec 15 15:25:03.449: INFO: (15) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.100684ms)
  Dec 15 15:25:03.450: INFO: (15) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.504075ms)
  Dec 15 15:25:03.450: INFO: (15) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 4.78786ms)
  Dec 15 15:25:03.452: INFO: (16) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 1.919767ms)
  Dec 15 15:25:03.452: INFO: (16) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 1.879931ms)
  Dec 15 15:25:03.453: INFO: (16) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 2.53177ms)
  Dec 15 15:25:03.453: INFO: (16) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 2.863504ms)
  Dec 15 15:25:03.453: INFO: (16) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 2.914681ms)
  Dec 15 15:25:03.454: INFO: (16) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.205469ms)
  Dec 15 15:25:03.454: INFO: (16) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.410906ms)
  Dec 15 15:25:03.454: INFO: (16) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.564586ms)
  Dec 15 15:25:03.454: INFO: (16) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.617205ms)
  Dec 15 15:25:03.454: INFO: (16) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 3.722493ms)
  Dec 15 15:25:03.454: INFO: (16) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.741919ms)
  Dec 15 15:25:03.455: INFO: (16) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 4.611437ms)
  Dec 15 15:25:03.455: INFO: (16) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 4.658285ms)
  Dec 15 15:25:03.455: INFO: (16) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.65505ms)
  Dec 15 15:25:03.455: INFO: (16) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.658697ms)
  Dec 15 15:25:03.455: INFO: (16) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 5.078356ms)
  Dec 15 15:25:03.457: INFO: (17) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 1.782428ms)
  Dec 15 15:25:03.458: INFO: (17) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 2.82408ms)
  Dec 15 15:25:03.459: INFO: (17) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.128323ms)
  Dec 15 15:25:03.459: INFO: (17) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 3.234733ms)
  Dec 15 15:25:03.459: INFO: (17) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.136019ms)
  Dec 15 15:25:03.459: INFO: (17) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.185532ms)
  Dec 15 15:25:03.459: INFO: (17) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 3.14197ms)
  Dec 15 15:25:03.459: INFO: (17) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 3.265211ms)
  Dec 15 15:25:03.459: INFO: (17) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.184129ms)
  Dec 15 15:25:03.459: INFO: (17) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.411246ms)
  Dec 15 15:25:03.460: INFO: (17) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 4.125171ms)
  Dec 15 15:25:03.460: INFO: (17) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.795655ms)
  Dec 15 15:25:03.460: INFO: (17) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 4.876767ms)
  Dec 15 15:25:03.460: INFO: (17) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 4.997165ms)
  Dec 15 15:25:03.460: INFO: (17) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.977127ms)
  Dec 15 15:25:03.460: INFO: (17) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 4.813418ms)
  Dec 15 15:25:03.462: INFO: (18) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 1.966284ms)
  Dec 15 15:25:03.463: INFO: (18) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 2.46301ms)
  Dec 15 15:25:03.463: INFO: (18) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 2.633902ms)
  Dec 15 15:25:03.463: INFO: (18) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 2.571605ms)
  Dec 15 15:25:03.463: INFO: (18) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 2.657467ms)
  Dec 15 15:25:03.463: INFO: (18) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 2.729942ms)
  Dec 15 15:25:03.464: INFO: (18) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.320806ms)
  Dec 15 15:25:03.464: INFO: (18) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.310436ms)
  Dec 15 15:25:03.464: INFO: (18) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 3.483351ms)
  Dec 15 15:25:03.464: INFO: (18) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.509621ms)
  Dec 15 15:25:03.465: INFO: (18) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 4.478356ms)
  Dec 15 15:25:03.465: INFO: (18) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.397174ms)
  Dec 15 15:25:03.465: INFO: (18) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 4.287407ms)
  Dec 15 15:25:03.466: INFO: (18) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.759126ms)
  Dec 15 15:25:03.466: INFO: (18) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 4.741022ms)
  Dec 15 15:25:03.466: INFO: (18) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 4.928034ms)
  Dec 15 15:25:03.467: INFO: (19) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:460/proxy/: tls baz (200; 1.596188ms)
  Dec 15 15:25:03.468: INFO: (19) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 2.262242ms)
  Dec 15 15:25:03.468: INFO: (19) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:160/proxy/: foo (200; 2.298831ms)
  Dec 15 15:25:03.468: INFO: (19) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">... (200; 2.323417ms)
  Dec 15 15:25:03.468: INFO: (19) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:1080/proxy/rewriteme">test<... (200; 2.226205ms)
  Dec 15 15:25:03.469: INFO: (19) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:462/proxy/: tls qux (200; 3.017045ms)
  Dec 15 15:25:03.469: INFO: (19) /api/v1/namespaces/proxy-8190/pods/http:proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.018597ms)
  Dec 15 15:25:03.469: INFO: (19) /api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/https:proxy-service-tqcl6-5cc6n:443/proxy/tlsrewritem... (200; 3.040788ms)
  Dec 15 15:25:03.469: INFO: (19) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n:162/proxy/: bar (200; 3.087076ms)
  Dec 15 15:25:03.469: INFO: (19) /api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/: <a href="/api/v1/namespaces/proxy-8190/pods/proxy-service-tqcl6-5cc6n/proxy/rewriteme">test</a> (200; 3.218764ms)
  Dec 15 15:25:03.469: INFO: (19) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname1/proxy/: tls baz (200; 3.650867ms)
  Dec 15 15:25:03.469: INFO: (19) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname1/proxy/: foo (200; 3.515002ms)
  Dec 15 15:25:03.470: INFO: (19) /api/v1/namespaces/proxy-8190/services/https:proxy-service-tqcl6:tlsportname2/proxy/: tls qux (200; 3.704078ms)
  Dec 15 15:25:03.470: INFO: (19) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname1/proxy/: foo (200; 3.969118ms)
  Dec 15 15:25:03.470: INFO: (19) /api/v1/namespaces/proxy-8190/services/http:proxy-service-tqcl6:portname2/proxy/: bar (200; 4.032637ms)
  Dec 15 15:25:03.470: INFO: (19) /api/v1/namespaces/proxy-8190/services/proxy-service-tqcl6:portname2/proxy/: bar (200; 4.403877ms)
  STEP: deleting ReplicationController proxy-service-tqcl6 in namespace proxy-8190, will wait for the garbage collector to delete the pods @ 12/15/23 15:25:03.47
  Dec 15 15:25:03.525: INFO: Deleting ReplicationController proxy-service-tqcl6 took: 2.70192ms
  Dec 15 15:25:03.625: INFO: Terminating ReplicationController proxy-service-tqcl6 pods took: 100.385996ms
  E1215 15:25:04.240463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:05.241345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:05.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8190" for this suite. @ 12/15/23 15:25:05.733
• [4.493 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/15/23 15:25:05.738
  Dec 15 15:25:05.738: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename limitrange @ 12/15/23 15:25:05.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:25:05.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:25:05.752
  STEP: Creating a LimitRange @ 12/15/23 15:25:05.754
  STEP: Setting up watch @ 12/15/23 15:25:05.754
  STEP: Submitting a LimitRange @ 12/15/23 15:25:05.858
  STEP: Verifying LimitRange creation was observed @ 12/15/23 15:25:05.862
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/15/23 15:25:05.862
  Dec 15 15:25:05.864: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 15 15:25:05.864: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/15/23 15:25:05.864
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/15/23 15:25:05.868
  Dec 15 15:25:05.870: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 15 15:25:05.870: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/15/23 15:25:05.87
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/15/23 15:25:05.874
  Dec 15 15:25:05.876: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Dec 15 15:25:05.876: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/15/23 15:25:05.876
  STEP: Failing to create a Pod with more than max resources @ 12/15/23 15:25:05.878
  STEP: Updating a LimitRange @ 12/15/23 15:25:05.879
  STEP: Verifying LimitRange updating is effective @ 12/15/23 15:25:05.883
  E1215 15:25:06.241946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:07.242723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 12/15/23 15:25:07.885
  STEP: Failing to create a Pod with more than max resources @ 12/15/23 15:25:07.888
  STEP: Deleting a LimitRange @ 12/15/23 15:25:07.889
  STEP: Verifying the LimitRange was deleted @ 12/15/23 15:25:07.893
  E1215 15:25:08.242774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:09.243170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:10.243225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:11.243336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:12.243572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:12.895: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/15/23 15:25:12.895
  Dec 15 15:25:12.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9845" for this suite. @ 12/15/23 15:25:12.901
• [7.165 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/15/23 15:25:12.904
  Dec 15 15:25:12.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/15/23 15:25:12.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:25:12.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:25:12.911
  E1215 15:25:13.244626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:14.244699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 12/15/23 15:25:14.925
  STEP: Cleaning up the configmap @ 12/15/23 15:25:14.928
  STEP: Cleaning up the pod @ 12/15/23 15:25:14.931
  Dec 15 15:25:14.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9085" for this suite. @ 12/15/23 15:25:14.938
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 12/15/23 15:25:14.941
  Dec 15 15:25:14.941: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:25:14.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:25:14.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:25:14.949
  STEP: creating a replication controller @ 12/15/23 15:25:14.951
  Dec 15 15:25:14.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 create -f -'
  Dec 15 15:25:15.024: INFO: stderr: ""
  Dec 15 15:25:15.024: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/15/23 15:25:15.024
  Dec 15 15:25:15.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 15 15:25:15.063: INFO: stderr: ""
  Dec 15 15:25:15.063: INFO: stdout: "update-demo-nautilus-4hftp update-demo-nautilus-fbvcn "
  Dec 15 15:25:15.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-4hftp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 15 15:25:15.096: INFO: stderr: ""
  Dec 15 15:25:15.097: INFO: stdout: ""
  Dec 15 15:25:15.097: INFO: update-demo-nautilus-4hftp is created but not running
  E1215 15:25:15.245335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:16.246207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:17.246333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:18.246538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:19.246776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:20.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 15 15:25:20.133: INFO: stderr: ""
  Dec 15 15:25:20.133: INFO: stdout: "update-demo-nautilus-4hftp update-demo-nautilus-fbvcn "
  Dec 15 15:25:20.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-4hftp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 15 15:25:20.168: INFO: stderr: ""
  Dec 15 15:25:20.168: INFO: stdout: "true"
  Dec 15 15:25:20.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-4hftp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 15 15:25:20.198: INFO: stderr: ""
  Dec 15 15:25:20.198: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 15 15:25:20.198: INFO: validating pod update-demo-nautilus-4hftp
  Dec 15 15:25:20.201: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 15 15:25:20.201: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 15 15:25:20.201: INFO: update-demo-nautilus-4hftp is verified up and running
  Dec 15 15:25:20.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-fbvcn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 15 15:25:20.232: INFO: stderr: ""
  Dec 15 15:25:20.232: INFO: stdout: "true"
  Dec 15 15:25:20.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-fbvcn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1215 15:25:20.247038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:20.265: INFO: stderr: ""
  Dec 15 15:25:20.265: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 15 15:25:20.265: INFO: validating pod update-demo-nautilus-fbvcn
  Dec 15 15:25:20.268: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 15 15:25:20.268: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 15 15:25:20.268: INFO: update-demo-nautilus-fbvcn is verified up and running
  STEP: scaling down the replication controller @ 12/15/23 15:25:20.268
  Dec 15 15:25:20.269: INFO: scanned /root for discovery docs: <nil>
  Dec 15 15:25:20.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1215 15:25:21.247736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:21.312: INFO: stderr: ""
  Dec 15 15:25:21.312: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/15/23 15:25:21.312
  Dec 15 15:25:21.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 15 15:25:21.344: INFO: stderr: ""
  Dec 15 15:25:21.344: INFO: stdout: "update-demo-nautilus-4hftp "
  Dec 15 15:25:21.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-4hftp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 15 15:25:21.375: INFO: stderr: ""
  Dec 15 15:25:21.375: INFO: stdout: "true"
  Dec 15 15:25:21.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-4hftp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 15 15:25:21.408: INFO: stderr: ""
  Dec 15 15:25:21.408: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 15 15:25:21.408: INFO: validating pod update-demo-nautilus-4hftp
  Dec 15 15:25:21.411: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 15 15:25:21.411: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 15 15:25:21.411: INFO: update-demo-nautilus-4hftp is verified up and running
  STEP: scaling up the replication controller @ 12/15/23 15:25:21.411
  Dec 15 15:25:21.412: INFO: scanned /root for discovery docs: <nil>
  Dec 15 15:25:21.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1215 15:25:22.247974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:22.461: INFO: stderr: ""
  Dec 15 15:25:22.461: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/15/23 15:25:22.461
  Dec 15 15:25:22.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 15 15:25:22.529: INFO: stderr: ""
  Dec 15 15:25:22.529: INFO: stdout: "update-demo-nautilus-4hftp update-demo-nautilus-sq7v9 "
  Dec 15 15:25:22.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-4hftp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 15 15:25:22.575: INFO: stderr: ""
  Dec 15 15:25:22.575: INFO: stdout: "true"
  Dec 15 15:25:22.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-4hftp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 15 15:25:22.614: INFO: stderr: ""
  Dec 15 15:25:22.614: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 15 15:25:22.614: INFO: validating pod update-demo-nautilus-4hftp
  Dec 15 15:25:22.616: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 15 15:25:22.616: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 15 15:25:22.616: INFO: update-demo-nautilus-4hftp is verified up and running
  Dec 15 15:25:22.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-sq7v9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 15 15:25:22.655: INFO: stderr: ""
  Dec 15 15:25:22.655: INFO: stdout: "true"
  Dec 15 15:25:22.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods update-demo-nautilus-sq7v9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 15 15:25:22.695: INFO: stderr: ""
  Dec 15 15:25:22.695: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 15 15:25:22.695: INFO: validating pod update-demo-nautilus-sq7v9
  Dec 15 15:25:22.699: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 15 15:25:22.699: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 15 15:25:22.699: INFO: update-demo-nautilus-sq7v9 is verified up and running
  STEP: using delete to clean up resources @ 12/15/23 15:25:22.699
  Dec 15 15:25:22.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 delete --grace-period=0 --force -f -'
  Dec 15 15:25:22.739: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 15 15:25:22.739: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 15 15:25:22.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get rc,svc -l name=update-demo --no-headers'
  Dec 15 15:25:22.777: INFO: stderr: "No resources found in kubectl-5814 namespace.\n"
  Dec 15 15:25:22.777: INFO: stdout: ""
  Dec 15 15:25:22.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-5814 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 15 15:25:22.813: INFO: stderr: ""
  Dec 15 15:25:22.813: INFO: stdout: ""
  Dec 15 15:25:22.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5814" for this suite. @ 12/15/23 15:25:22.816
• [7.878 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 12/15/23 15:25:22.82
  Dec 15 15:25:22.820: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:25:22.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:25:22.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:25:22.827
  STEP: creating service in namespace services-868 @ 12/15/23 15:25:22.829
  STEP: creating service affinity-clusterip-transition in namespace services-868 @ 12/15/23 15:25:22.829
  STEP: creating replication controller affinity-clusterip-transition in namespace services-868 @ 12/15/23 15:25:22.834
  I1215 15:25:22.838445      22 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-868, replica count: 3
  E1215 15:25:23.248904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:24.249930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:25.250871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:25:25.889545      22 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 15 15:25:25.893: INFO: Creating new exec pod
  E1215 15:25:26.251504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:27.251698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:28.252551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:28.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-868 exec execpod-affinitycb5xq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Dec 15 15:25:29.057: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Dec 15 15:25:29.057: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:25:29.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-868 exec execpod-affinitycb5xq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.72.4 80'
  Dec 15 15:25:29.208: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.72.4 80\nConnection to 10.99.72.4 80 port [tcp/http] succeeded!\n"
  Dec 15 15:25:29.208: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:25:29.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-868 exec execpod-affinitycb5xq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.99.72.4:80/ ; done'
  E1215 15:25:29.252826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:29.370: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n"
  Dec 15 15:25:29.370: INFO: stdout: "\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-d7qsb\naffinity-clusterip-transition-d7qsb\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rd5g7\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-d7qsb\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rd5g7\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-d7qsb\naffinity-clusterip-transition-d7qsb\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-d7qsb"
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-d7qsb
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-d7qsb
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rd5g7
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-d7qsb
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rd5g7
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-d7qsb
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-d7qsb
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.370: INFO: Received response from host: affinity-clusterip-transition-d7qsb
  Dec 15 15:25:29.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-868 exec execpod-affinitycb5xq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.99.72.4:80/ ; done'
  Dec 15 15:25:29.549: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.72.4:80/\n"
  Dec 15 15:25:29.549: INFO: stdout: "\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn\naffinity-clusterip-transition-rsjgn"
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Received response from host: affinity-clusterip-transition-rsjgn
  Dec 15 15:25:29.549: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-868, will wait for the garbage collector to delete the pods @ 12/15/23 15:25:29.554
  Dec 15 15:25:29.611: INFO: Deleting ReplicationController affinity-clusterip-transition took: 4.174595ms
  Dec 15 15:25:29.712: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.567995ms
  E1215 15:25:30.253648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:31.254051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:32.254185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:25:32.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-868" for this suite. @ 12/15/23 15:25:32.73
• [9.914 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 12/15/23 15:25:32.734
  Dec 15 15:25:32.734: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename cronjob @ 12/15/23 15:25:32.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:25:32.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:25:32.744
  STEP: Creating a ReplaceConcurrent cronjob @ 12/15/23 15:25:32.745
  STEP: Ensuring a job is scheduled @ 12/15/23 15:25:32.748
  E1215 15:25:33.254388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:34.254724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:35.254960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:36.255139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:37.255479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:38.255982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:39.256395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:40.257130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:41.258032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:42.258270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:43.258517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:44.258579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:45.259616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:46.259821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:47.260388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:48.260435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:49.261507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:50.261605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:51.262068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:52.262298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:53.263313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:54.263666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:55.263956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:56.264803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:57.264846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:58.265165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:25:59.265896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:00.266474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 12/15/23 15:26:00.751
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/15/23 15:26:00.754
  STEP: Ensuring the job is replaced with a new one @ 12/15/23 15:26:00.755
  E1215 15:26:01.267305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:02.267573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:03.268256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:04.268366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:05.269276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:06.269533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:07.270181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:08.271163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:09.271351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:10.271451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:11.271628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:12.271839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:13.272546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:14.272644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:15.273011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:16.273209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:17.273528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:18.273851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:19.274182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:20.274382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:21.275130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:22.276116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:23.276744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:24.277057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:25.277797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:26.277962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:27.278550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:28.279047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:29.279446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:30.279654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:31.280585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:32.280790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:33.281218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:34.281578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:35.282623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:36.282787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:37.283277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:38.283282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:39.283389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:40.283577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:41.284570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:42.284707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:43.284728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:44.285045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:45.286127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:46.286343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:47.286526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:48.286666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:49.287734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:50.288681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:51.289736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:52.289850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:53.289963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:54.290074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:55.290773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:56.290947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:57.291231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:58.291515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:26:59.291889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:00.296765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 12/15/23 15:27:00.759
  Dec 15 15:27:00.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-857" for this suite. @ 12/15/23 15:27:00.766
• [88.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 12/15/23 15:27:00.77
  Dec 15 15:27:00.770: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename disruption @ 12/15/23 15:27:00.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:00.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:00.781
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/15/23 15:27:00.783
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:27:00.786
  E1215 15:27:01.297176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:02.297284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/15/23 15:27:02.791
  STEP: Waiting for all pods to be running @ 12/15/23 15:27:02.791
  Dec 15 15:27:02.793: INFO: pods: 0 < 3
  E1215 15:27:03.298249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:04.298564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 12/15/23 15:27:04.794
  STEP: Updating the pdb to allow a pod to be evicted @ 12/15/23 15:27:04.799
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:27:04.802
  E1215 15:27:05.299320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:06.299973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/15/23 15:27:06.807
  STEP: Waiting for all pods to be running @ 12/15/23 15:27:06.807
  STEP: Waiting for the pdb to observed all healthy pods @ 12/15/23 15:27:06.81
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/15/23 15:27:06.83
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:27:06.841
  E1215 15:27:07.300164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:08.301246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 12/15/23 15:27:08.845
  STEP: locating a running pod @ 12/15/23 15:27:08.848
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/15/23 15:27:08.855
  STEP: Waiting for the pdb to be deleted @ 12/15/23 15:27:08.86
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/15/23 15:27:08.863
  STEP: Waiting for all pods to be running @ 12/15/23 15:27:08.863
  Dec 15 15:27:08.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-428" for this suite. @ 12/15/23 15:27:08.881
• [8.118 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 12/15/23 15:27:08.889
  Dec 15 15:27:08.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename dns @ 12/15/23 15:27:08.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:08.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:08.902
  STEP: Creating a test headless service @ 12/15/23 15:27:08.905
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9557.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9557.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9557.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9557.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9557.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9557.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 135.247.97.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.97.247.135_udp@PTR;check="$$(dig +tcp +noall +answer +search 135.247.97.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.97.247.135_tcp@PTR;sleep 1; done
   @ 12/15/23 15:27:08.918
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9557.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9557.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9557.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9557.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9557.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9557.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 135.247.97.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.97.247.135_udp@PTR;check="$$(dig +tcp +noall +answer +search 135.247.97.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.97.247.135_tcp@PTR;sleep 1; done
   @ 12/15/23 15:27:08.918
  STEP: creating a pod to probe DNS @ 12/15/23 15:27:08.918
  STEP: submitting the pod to kubernetes @ 12/15/23 15:27:08.918
  E1215 15:27:09.301817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:10.302030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:11.302423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:12.302496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/15/23 15:27:12.934
  STEP: looking for the results for each expected name from probers @ 12/15/23 15:27:12.937
  Dec 15 15:27:12.939: INFO: Unable to read wheezy_udp@dns-test-service.dns-9557.svc.cluster.local from pod dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e: the server could not find the requested resource (get pods dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e)
  Dec 15 15:27:12.942: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9557.svc.cluster.local from pod dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e: the server could not find the requested resource (get pods dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e)
  Dec 15 15:27:12.944: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local from pod dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e: the server could not find the requested resource (get pods dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e)
  Dec 15 15:27:12.946: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local from pod dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e: the server could not find the requested resource (get pods dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e)
  Dec 15 15:27:12.956: INFO: Unable to read jessie_udp@dns-test-service.dns-9557.svc.cluster.local from pod dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e: the server could not find the requested resource (get pods dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e)
  Dec 15 15:27:12.958: INFO: Unable to read jessie_tcp@dns-test-service.dns-9557.svc.cluster.local from pod dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e: the server could not find the requested resource (get pods dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e)
  Dec 15 15:27:12.960: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local from pod dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e: the server could not find the requested resource (get pods dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e)
  Dec 15 15:27:12.962: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local from pod dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e: the server could not find the requested resource (get pods dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e)
  Dec 15 15:27:12.969: INFO: Lookups using dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e failed for: [wheezy_udp@dns-test-service.dns-9557.svc.cluster.local wheezy_tcp@dns-test-service.dns-9557.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local jessie_udp@dns-test-service.dns-9557.svc.cluster.local jessie_tcp@dns-test-service.dns-9557.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9557.svc.cluster.local]

  Dec 15 15:27:12.973: INFO: Pod client logs for webserver: 
  Dec 15 15:27:12.976: INFO: Pod client logs for querier: 
  Dec 15 15:27:12.979: INFO: Pod client logs for jessie-querier: 
  E1215 15:27:13.303218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:14.303616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:15.303711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:16.303898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:17.304071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:17.990: INFO: DNS probes using dns-9557/dns-test-2425e014-6f33-4c4b-a349-712cd9a2db7e succeeded

  STEP: deleting the pod @ 12/15/23 15:27:17.99
  STEP: deleting the test service @ 12/15/23 15:27:18.002
  STEP: deleting the test headless service @ 12/15/23 15:27:18.022
  Dec 15 15:27:18.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9557" for this suite. @ 12/15/23 15:27:18.035
• [9.151 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/15/23 15:27:18.039
  Dec 15 15:27:18.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 15:27:18.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:18.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:18.051
  STEP: Creating configMap with name configmap-test-volume-map-daf18706-869f-4e0a-8571-655550daccd7 @ 12/15/23 15:27:18.053
  STEP: Creating a pod to test consume configMaps @ 12/15/23 15:27:18.056
  E1215 15:27:18.304775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:19.304837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:27:20.064
  Dec 15 15:27:20.066: INFO: Trying to get logs from node talos-default-worker-2 pod pod-configmaps-833a7b87-c3a6-4c20-84b3-fc62b178fe09 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:27:20.069
  Dec 15 15:27:20.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2349" for this suite. @ 12/15/23 15:27:20.077
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/15/23 15:27:20.08
  Dec 15 15:27:20.080: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:27:20.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:20.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:20.087
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:27:20.089
  E1215 15:27:20.305278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:21.305505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:27:22.097
  Dec 15 15:27:22.099: INFO: Trying to get logs from node talos-default-worker-2 pod downwardapi-volume-c4e1a9de-1378-43f0-b744-f53d8b85d7e1 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:27:22.103
  Dec 15 15:27:22.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5455" for this suite. @ 12/15/23 15:27:22.113
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/15/23 15:27:22.118
  Dec 15 15:27:22.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 15:27:22.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:22.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:22.128
  Dec 15 15:27:22.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9974" for this suite. @ 12/15/23 15:27:22.151
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/15/23 15:27:22.155
  Dec 15 15:27:22.155: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sysctl @ 12/15/23 15:27:22.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:22.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:22.164
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/15/23 15:27:22.166
  Dec 15 15:27:22.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5652" for this suite. @ 12/15/23 15:27:22.171
• [0.020 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/15/23 15:27:22.175
  Dec 15 15:27:22.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename init-container @ 12/15/23 15:27:22.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:22.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:22.183
  STEP: creating the pod @ 12/15/23 15:27:22.185
  Dec 15 15:27:22.185: INFO: PodSpec: initContainers in spec.initContainers
  E1215 15:27:22.305944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:23.306339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:24.306422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:25.307344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:25.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3500" for this suite. @ 12/15/23 15:27:25.81
• [3.638 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 12/15/23 15:27:25.814
  Dec 15 15:27:25.814: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename disruption @ 12/15/23 15:27:25.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:25.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:25.822
  STEP: Creating a kubernetes client @ 12/15/23 15:27:25.823
  Dec 15 15:27:25.823: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename disruption-2 @ 12/15/23 15:27:25.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:25.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:25.83
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:27:25.834
  E1215 15:27:26.307750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:27.308591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:27:27.84
  E1215 15:27:28.308879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:29.309207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:27:29.846
  E1215 15:27:30.309603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:31.309825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 12/15/23 15:27:31.85
  STEP: listing a collection of PDBs in namespace disruption-5291 @ 12/15/23 15:27:31.853
  STEP: deleting a collection of PDBs @ 12/15/23 15:27:31.855
  STEP: Waiting for the PDB collection to be deleted @ 12/15/23 15:27:31.863
  Dec 15 15:27:31.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6257" for this suite. @ 12/15/23 15:27:31.869
  Dec 15 15:27:31.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5291" for this suite. @ 12/15/23 15:27:31.876
• [6.066 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 12/15/23 15:27:31.88
  Dec 15 15:27:31.880: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:27:31.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:31.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:31.891
  Dec 15 15:27:31.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8495" for this suite. @ 12/15/23 15:27:31.898
• [0.022 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/15/23 15:27:31.903
  Dec 15 15:27:31.903: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename events @ 12/15/23 15:27:31.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:31.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:31.913
  STEP: Create set of events @ 12/15/23 15:27:31.915
  STEP: get a list of Events with a label in the current namespace @ 12/15/23 15:27:31.924
  STEP: delete a list of events @ 12/15/23 15:27:31.925
  Dec 15 15:27:31.925: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/15/23 15:27:31.935
  Dec 15 15:27:31.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3564" for this suite. @ 12/15/23 15:27:31.939
• [0.039 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 12/15/23 15:27:31.942
  Dec 15 15:27:31.942: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:27:31.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:31.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:31.951
  STEP: Setting up server cert @ 12/15/23 15:27:31.961
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:27:32.043
  STEP: Deploying the webhook pod @ 12/15/23 15:27:32.047
  STEP: Wait for the deployment to be ready @ 12/15/23 15:27:32.053
  Dec 15 15:27:32.056: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1215 15:27:32.310054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:33.310378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:27:34.063
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:27:34.068
  E1215 15:27:34.311252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:35.069: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/15/23 15:27:35.075
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/15/23 15:27:35.089
  STEP: Creating a dummy validating-webhook-configuration object @ 12/15/23 15:27:35.101
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/15/23 15:27:35.108
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/15/23 15:27:35.113
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/15/23 15:27:35.12
  Dec 15 15:27:35.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1666" for this suite. @ 12/15/23 15:27:35.172
  STEP: Destroying namespace "webhook-markers-4309" for this suite. @ 12/15/23 15:27:35.175
• [3.236 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 12/15/23 15:27:35.179
  Dec 15 15:27:35.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:27:35.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:27:35.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:27:35.188
  STEP: creating service multiprotocol-test in namespace services-7908 @ 12/15/23 15:27:35.19
  STEP: creating pod pod1 in namespace services-7908 @ 12/15/23 15:27:35.196
  STEP: Creating pod pod1 in namespace services-7908 @ 12/15/23 15:27:35.196
  E1215 15:27:35.311832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:36.312094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7908 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/15/23 15:27:37.207
  Dec 15 15:27:37.214: INFO: successfully validated that service multiprotocol-test in namespace services-7908 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/15/23 15:27:37.214
  Dec 15 15:27:37.214: INFO: Creating new exec pod
  E1215 15:27:37.312896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:38.313216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:39.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.58.165 80'
  E1215 15:27:39.313598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:39.338: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.58.165 80\nConnection to 10.108.58.165 80 port [tcp/http] succeeded!\n"
  Dec 15 15:27:39.338: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:27:39.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.108.58.165 80'
  E1215 15:27:40.314027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:41.314367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:42.320953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:43.323038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:43.482: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.108.58.165 80\nConnection to 10.108.58.165 80 port [udp/*] succeeded!\n"
  Dec 15 15:27:43.482: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/15/23 15:27:43.482
  Dec 15 15:27:43.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.58.165 80'
  Dec 15 15:27:44.016: INFO: stderr: "+ + nc -v -t -w 2 10.108.58.165 80\necho hostName\nConnection to 10.108.58.165 80 port [tcp/http] succeeded!\n"
  Dec 15 15:27:44.016: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:27:44.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.108.58.165 80'
  E1215 15:27:44.323580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:45.324235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:46.324451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:47.333030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:48.252: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.108.58.165 80\nConnection to 10.108.58.165 80 port [udp/*] succeeded!\n"
  Dec 15 15:27:48.252: INFO: stdout: ""
  Dec 15 15:27:48.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.108.58.165 80'
  E1215 15:27:48.345016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:49.345118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:50.345359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:51.345615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:52.345765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:52.546: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.108.58.165 80\nConnection to 10.108.58.165 80 port [udp/*] succeeded!\n"
  Dec 15 15:27:52.546: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/15/23 15:27:52.546
  Dec 15 15:27:52.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.108.58.165 80'
  E1215 15:27:53.346641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:54.347377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:55.348213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:56.348679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:56.702: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.108.58.165 80\nConnection to 10.108.58.165 80 port [udp/*] succeeded!\n"
  Dec 15 15:27:56.702: INFO: stdout: "pod1"
  Dec 15 15:27:56.702: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.58.165 80'
  E1215 15:27:57.349780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:27:58.350393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:27:58.990: INFO: rc: 1
  Dec 15 15:27:58.990: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.58.165 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.108.58.165 80
  nc: connect to 10.108.58.165 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 15 15:27:58.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.58.165 80'
  E1215 15:27:59.351399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:00.351607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:28:01.121: INFO: rc: 1
  Dec 15 15:28:01.121: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.58.165 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.108.58.165 80
  nc: connect to 10.108.58.165 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 15 15:28:01.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.58.165 80'
  E1215 15:28:01.352824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:02.352929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:28:03.301: INFO: rc: 1
  Dec 15 15:28:03.301: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-7908 exec execpodcp4wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.58.165 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.108.58.165 80
  nc: connect to 10.108.58.165 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 15 15:28:03.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7908" for this suite. @ 12/15/23 15:28:03.304
• [28.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/15/23 15:28:03.308
  Dec 15 15:28:03.308: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename containers @ 12/15/23 15:28:03.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:03.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:03.316
  E1215 15:28:03.353922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:04.354313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:05.361106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:28:05.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9169" for this suite. @ 12/15/23 15:28:05.437
• [2.217 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 12/15/23 15:28:05.525
  Dec 15 15:28:05.525: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 15:28:05.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:05.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:05.655
  E1215 15:28:06.361353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:07.362275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:08.362401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:09.367364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:10.367725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:11.369549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:12.369691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:13.370362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:14.371506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:15.376046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:16.375966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:17.376437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:18.377422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:19.378400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:20.378870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:21.379465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:22.380289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/15/23 15:28:22.67
  E1215 15:28:23.380592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:24.381121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:25.381328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:26.381893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:27.382315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/15/23 15:28:27.676
  STEP: Ensuring resource quota status is calculated @ 12/15/23 15:28:27.68
  E1215 15:28:28.382885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:29.383292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 12/15/23 15:28:29.687
  STEP: Ensuring resource quota status captures configMap creation @ 12/15/23 15:28:29.702
  E1215 15:28:30.384283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:31.384513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 12/15/23 15:28:31.708
  STEP: Ensuring resource quota status released usage @ 12/15/23 15:28:31.719
  E1215 15:28:32.384665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:33.384739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:28:33.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7020" for this suite. @ 12/15/23 15:28:33.727
• [28.206 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/15/23 15:28:33.732
  Dec 15 15:28:33.732: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-runtime @ 12/15/23 15:28:33.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:33.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:33.742
  STEP: create the container @ 12/15/23 15:28:33.743
  W1215 15:28:33.747415      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/15/23 15:28:33.747
  E1215 15:28:34.385187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:35.386338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:36.393222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/15/23 15:28:36.783
  STEP: the container should be terminated @ 12/15/23 15:28:36.796
  STEP: the termination message should be set @ 12/15/23 15:28:36.796
  Dec 15 15:28:36.796: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/15/23 15:28:36.796
  Dec 15 15:28:36.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2942" for this suite. @ 12/15/23 15:28:36.849
• [3.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 12/15/23 15:28:36.863
  Dec 15 15:28:36.863: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:28:36.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:36.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:36.884
  STEP: creating the pod @ 12/15/23 15:28:36.887
  Dec 15 15:28:36.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-827 create -f -'
  Dec 15 15:28:36.987: INFO: stderr: ""
  Dec 15 15:28:36.987: INFO: stdout: "pod/pause created\n"
  E1215 15:28:37.398583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:38.398646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/15/23 15:28:38.996
  Dec 15 15:28:38.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-827 label pods pause testing-label=testing-label-value'
  Dec 15 15:28:39.038: INFO: stderr: ""
  Dec 15 15:28:39.038: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/15/23 15:28:39.038
  Dec 15 15:28:39.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-827 get pod pause -L testing-label'
  Dec 15 15:28:39.073: INFO: stderr: ""
  Dec 15 15:28:39.073: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/15/23 15:28:39.073
  Dec 15 15:28:39.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-827 label pods pause testing-label-'
  Dec 15 15:28:39.110: INFO: stderr: ""
  Dec 15 15:28:39.110: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/15/23 15:28:39.11
  Dec 15 15:28:39.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-827 get pod pause -L testing-label'
  Dec 15 15:28:39.143: INFO: stderr: ""
  Dec 15 15:28:39.143: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 12/15/23 15:28:39.143
  Dec 15 15:28:39.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-827 delete --grace-period=0 --force -f -'
  Dec 15 15:28:39.197: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 15 15:28:39.197: INFO: stdout: "pod \"pause\" force deleted\n"
  Dec 15 15:28:39.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-827 get rc,svc -l name=pause --no-headers'
  Dec 15 15:28:39.255: INFO: stderr: "No resources found in kubectl-827 namespace.\n"
  Dec 15 15:28:39.255: INFO: stdout: ""
  Dec 15 15:28:39.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-827 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 15 15:28:39.303: INFO: stderr: ""
  Dec 15 15:28:39.303: INFO: stdout: ""
  Dec 15 15:28:39.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-827" for this suite. @ 12/15/23 15:28:39.308
• [2.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/15/23 15:28:39.313
  Dec 15 15:28:39.313: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename watch @ 12/15/23 15:28:39.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:39.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:39.327
  STEP: creating a watch on configmaps @ 12/15/23 15:28:39.329
  STEP: creating a new configmap @ 12/15/23 15:28:39.33
  STEP: modifying the configmap once @ 12/15/23 15:28:39.334
  STEP: closing the watch once it receives two notifications @ 12/15/23 15:28:39.34
  Dec 15 15:28:39.340: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9478  06f55b6b-f9d8-4098-bc8a-ffcb42ddd888 28608 0 2023-12-15 15:28:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-15 15:28:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:28:39.341: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9478  06f55b6b-f9d8-4098-bc8a-ffcb42ddd888 28609 0 2023-12-15 15:28:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-15 15:28:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/15/23 15:28:39.341
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/15/23 15:28:39.348
  STEP: deleting the configmap @ 12/15/23 15:28:39.351
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/15/23 15:28:39.358
  Dec 15 15:28:39.358: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9478  06f55b6b-f9d8-4098-bc8a-ffcb42ddd888 28610 0 2023-12-15 15:28:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-15 15:28:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:28:39.358: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9478  06f55b6b-f9d8-4098-bc8a-ffcb42ddd888 28611 0 2023-12-15 15:28:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-15 15:28:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:28:39.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9478" for this suite. @ 12/15/23 15:28:39.364
• [0.057 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/15/23 15:28:39.37
  Dec 15 15:28:39.370: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:28:39.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:39.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:39.385
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:28:39.387
  E1215 15:28:39.398771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:40.399514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:41.399741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:42.399834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:43.400257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:28:43.427
  Dec 15 15:28:43.440: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-e95e6efc-4138-4efb-a2ef-550d85e10c2d container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:28:43.465
  Dec 15 15:28:43.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3619" for this suite. @ 12/15/23 15:28:43.543
• [4.231 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 12/15/23 15:28:43.602
  Dec 15 15:28:43.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename disruption @ 12/15/23 15:28:43.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:43.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:43.714
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:28:43.744
  E1215 15:28:44.400699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:45.401052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 12/15/23 15:28:45.752
  STEP: Waiting for all pods to be running @ 12/15/23 15:28:45.767
  Dec 15 15:28:45.771: INFO: running pods: 0 < 1
  E1215 15:28:46.401550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:47.401812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 12/15/23 15:28:47.775
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:28:47.825
  STEP: Patching PodDisruptionBudget status @ 12/15/23 15:28:47.862
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:28:47.92
  Dec 15 15:28:47.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3211" for this suite. @ 12/15/23 15:28:47.991
• [4.480 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/15/23 15:28:48.086
  Dec 15 15:28:48.086: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:28:48.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:48.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:48.151
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/15/23 15:28:48.155
  E1215 15:28:48.402623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:49.402824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:28:50.18
  Dec 15 15:28:50.183: INFO: Trying to get logs from node talos-default-worker-2 pod pod-1b562f8f-e29b-4162-8a07-c532b9e34775 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:28:50.188
  Dec 15 15:28:50.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8117" for this suite. @ 12/15/23 15:28:50.201
• [2.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 12/15/23 15:28:50.206
  Dec 15 15:28:50.206: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:28:50.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:50.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:50.232
  STEP: Setting up server cert @ 12/15/23 15:28:50.25
  E1215 15:28:50.403183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:28:50.414
  STEP: Deploying the webhook pod @ 12/15/23 15:28:50.421
  STEP: Wait for the deployment to be ready @ 12/15/23 15:28:50.429
  Dec 15 15:28:50.434: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1215 15:28:51.403658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:52.404287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:28:52.466
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:28:52.503
  E1215 15:28:53.404484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:28:53.503: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/15/23 15:28:53.512
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/23 15:28:53.524
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/15/23 15:28:53.532
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/23 15:28:53.542
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/15/23 15:28:53.55
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/23 15:28:53.555
  Dec 15 15:28:53.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1734" for this suite. @ 12/15/23 15:28:53.599
  STEP: Destroying namespace "webhook-markers-8628" for this suite. @ 12/15/23 15:28:53.603
• [3.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 12/15/23 15:28:53.61
  Dec 15 15:28:53.610: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:28:53.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:28:53.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:28:53.622
  STEP: Setting up server cert @ 12/15/23 15:28:53.639
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:28:53.869
  STEP: Deploying the webhook pod @ 12/15/23 15:28:53.875
  STEP: Wait for the deployment to be ready @ 12/15/23 15:28:53.889
  Dec 15 15:28:53.900: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1215 15:28:54.404558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:55.404840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:28:55.907
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:28:55.914
  E1215 15:28:56.404996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:28:56.915: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/15/23 15:28:56.919
  E1215 15:28:57.405706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:58.406533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:28:59.406646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:00.406935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:01.407196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:02.407258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:03.408551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:04.408976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:05.409381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:06.409321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:06.930: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/15/23 15:29:07.036
  Dec 15 15:29:07.037: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:29:07.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5734" for this suite. @ 12/15/23 15:29:07.072
  STEP: Destroying namespace "webhook-markers-2748" for this suite. @ 12/15/23 15:29:07.076
• [13.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/15/23 15:29:07.081
  Dec 15 15:29:07.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 15:29:07.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:07.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:07.09
  Dec 15 15:29:07.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-846" for this suite. @ 12/15/23 15:29:07.11
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/15/23 15:29:07.114
  Dec 15 15:29:07.114: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/15/23 15:29:07.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:07.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:07.121
  STEP: getting /apis @ 12/15/23 15:29:07.123
  STEP: getting /apis/storage.k8s.io @ 12/15/23 15:29:07.125
  STEP: getting /apis/storage.k8s.io/v1 @ 12/15/23 15:29:07.125
  STEP: creating @ 12/15/23 15:29:07.126
  STEP: watching @ 12/15/23 15:29:07.133
  Dec 15 15:29:07.133: INFO: starting watch
  STEP: getting @ 12/15/23 15:29:07.136
  STEP: listing in namespace @ 12/15/23 15:29:07.138
  STEP: listing across namespaces @ 12/15/23 15:29:07.14
  STEP: patching @ 12/15/23 15:29:07.141
  STEP: updating @ 12/15/23 15:29:07.144
  Dec 15 15:29:07.147: INFO: waiting for watch events with expected annotations in namespace
  Dec 15 15:29:07.147: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/15/23 15:29:07.147
  STEP: deleting a collection @ 12/15/23 15:29:07.153
  Dec 15 15:29:07.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8624" for this suite. @ 12/15/23 15:29:07.164
• [0.053 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 12/15/23 15:29:07.167
  Dec 15 15:29:07.167: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:29:07.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:07.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:07.176
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4351 @ 12/15/23 15:29:07.177
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/15/23 15:29:07.187
  STEP: creating service externalsvc in namespace services-4351 @ 12/15/23 15:29:07.187
  STEP: creating replication controller externalsvc in namespace services-4351 @ 12/15/23 15:29:07.194
  I1215 15:29:07.198517      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4351, replica count: 2
  E1215 15:29:07.409690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:08.410528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:09.410786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:29:10.249739      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/15/23 15:29:10.252
  Dec 15 15:29:10.265: INFO: Creating new exec pod
  E1215 15:29:10.411119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:11.411230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:12.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-4351 exec execpod8wx7r -- /bin/sh -x -c nslookup nodeport-service.services-4351.svc.cluster.local'
  E1215 15:29:12.411429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:12.419: INFO: stderr: "+ nslookup nodeport-service.services-4351.svc.cluster.local\n"
  Dec 15 15:29:12.419: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-4351.svc.cluster.local\tcanonical name = externalsvc.services-4351.svc.cluster.local.\nName:\texternalsvc.services-4351.svc.cluster.local\nAddress: 10.108.51.117\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4351, will wait for the garbage collector to delete the pods @ 12/15/23 15:29:12.419
  Dec 15 15:29:12.477: INFO: Deleting ReplicationController externalsvc took: 4.698563ms
  Dec 15 15:29:12.577: INFO: Terminating ReplicationController externalsvc pods took: 100.39636ms
  E1215 15:29:13.412101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:14.412321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:15.351: INFO: Cleaning up the NodePort to ExternalName test service
  Dec 15 15:29:15.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4351" for this suite. @ 12/15/23 15:29:15.393
• [8.242 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/15/23 15:29:15.409
  Dec 15 15:29:15.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename deployment @ 12/15/23 15:29:15.41
  E1215 15:29:15.413108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:15.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:15.457
  Dec 15 15:29:15.464: INFO: Creating deployment "test-recreate-deployment"
  Dec 15 15:29:15.485: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Dec 15 15:29:15.503: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E1215 15:29:16.413682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:17.413719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:17.510: INFO: Waiting deployment "test-recreate-deployment" to complete
  Dec 15 15:29:17.512: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Dec 15 15:29:17.516: INFO: Updating deployment test-recreate-deployment
  Dec 15 15:29:17.516: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Dec 15 15:29:17.574: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1065",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "768c9cda-3019-4e8d-8f28-65cf2e109bf0",
      ResourceVersion: (string) (len=5) "29075",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838250955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 15 15:29:17.577: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1065",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0bd93f4b-44d3-4044-ae12-6dde6f623939",
      ResourceVersion: (string) (len=5) "29072",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838250957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "768c9cda-3019-4e8d-8f28-65cf2e109bf0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 36 38 63 39 63  64 61 2d 33 30 31 39 2d  |\"768c9cda-3019-|
              00000120  34 65 38 64 2d 38 66 32  38 2d 36 35 63 66 32 65  |4e8d-8f28-65cf2e|
              00000130  31 30 39 62 66 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |109bf0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 15:29:17.579: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Dec 15 15:29:17.579: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1065",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "113cdae2-2b0d-4076-befa-7d90c8bcdbee",
      ResourceVersion: (string) (len=5) "29063",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838250955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "768c9cda-3019-4e8d-8f28-65cf2e109bf0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 36 38 63 39 63  64 61 2d 33 30 31 39 2d  |\"768c9cda-3019-|
              00000120  34 65 38 64 2d 38 66 32  38 2d 36 35 63 66 32 65  |4e8d-8f28-65cf2e|
              00000130  31 30 39 62 66 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |109bf0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 15:29:17.582: INFO: Pod "test-recreate-deployment-76fb77d45-6nm7x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-6nm7x",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-1065",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95bd82fb-e93d-4330-8cf1-4cf28d654d1b",
      ResourceVersion: (string) (len=5) "29074",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838250957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "0bd93f4b-44d3-4044-ae12-6dde6f623939",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 62  64 39 33 66 34 62 2d 34  |d\":\"0bd93f4b-4|
              00000090  34 64 33 2d 34 30 34 34  2d 61 65 31 32 2d 36 64  |4d3-4044-ae12-6d|
              000000a0  64 65 36 66 36 32 33 39  33 39 5c 22 7d 22 3a 7b  |de6f623939\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6zldx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6zldx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838250957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838250957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 15:29:17.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1065" for this suite. @ 12/15/23 15:29:17.587
• [2.183 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/15/23 15:29:17.592
  Dec 15 15:29:17.592: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/23 15:29:17.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:17.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:17.602
  Dec 15 15:29:17.603: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:29:18.414305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:19.414989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:20.415520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:21.415983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:22.416693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:23.417400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:23.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9076" for this suite. @ 12/15/23 15:29:23.722
• [6.135 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 12/15/23 15:29:23.727
  Dec 15 15:29:23.727: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename var-expansion @ 12/15/23 15:29:23.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:23.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:23.738
  STEP: Creating a pod to test env composition @ 12/15/23 15:29:23.74
  E1215 15:29:24.417537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:25.418214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:26.418314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:27.419382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:29:27.756
  Dec 15 15:29:27.758: INFO: Trying to get logs from node talos-default-worker-1 pod var-expansion-c6ba3ff8-b7bc-4765-96d9-c8cb9aca4719 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/23 15:29:27.762
  Dec 15 15:29:27.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5990" for this suite. @ 12/15/23 15:29:27.773
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 12/15/23 15:29:27.778
  Dec 15 15:29:27.778: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:29:27.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:27.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:27.786
  STEP: creating service in namespace services-566 @ 12/15/23 15:29:27.788
  STEP: creating service affinity-nodeport-transition in namespace services-566 @ 12/15/23 15:29:27.788
  STEP: creating replication controller affinity-nodeport-transition in namespace services-566 @ 12/15/23 15:29:27.796
  I1215 15:29:27.802581      22 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-566, replica count: 3
  E1215 15:29:28.419458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:29.420328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:30.420524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:29:30.854196      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 15 15:29:30.861: INFO: Creating new exec pod
  E1215 15:29:31.420550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:32.420726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:33.421116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:33.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-566 exec execpod-affinity4ptkp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Dec 15 15:29:34.022: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Dec 15 15:29:34.022: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:29:34.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-566 exec execpod-affinity4ptkp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.25.121 80'
  Dec 15 15:29:34.126: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.25.121 80\nConnection to 10.109.25.121 80 port [tcp/http] succeeded!\n"
  Dec 15 15:29:34.126: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:29:34.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-566 exec execpod-affinity4ptkp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.5 30807'
  Dec 15 15:29:34.228: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.5 30807\nConnection to 172.20.0.5 30807 port [tcp/*] succeeded!\n"
  Dec 15 15:29:34.228: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:29:34.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-566 exec execpod-affinity4ptkp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.6 30807'
  Dec 15 15:29:34.323: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.6 30807\nConnection to 172.20.0.6 30807 port [tcp/*] succeeded!\n"
  Dec 15 15:29:34.323: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:29:34.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-566 exec execpod-affinity4ptkp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.5:30807/ ; done'
  E1215 15:29:34.421714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:34.457: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n"
  Dec 15 15:29:34.457: INFO: stdout: "\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-gbw9x\naffinity-nodeport-transition-bt24r\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-bt24r\naffinity-nodeport-transition-gbw9x\naffinity-nodeport-transition-bt24r\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-bt24r\naffinity-nodeport-transition-bt24r\naffinity-nodeport-transition-gbw9x\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-gbw9x\naffinity-nodeport-transition-gbw9x\naffinity-nodeport-transition-bt24r\naffinity-nodeport-transition-bt24r"
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-gbw9x
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-bt24r
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-bt24r
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-gbw9x
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-bt24r
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-bt24r
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-bt24r
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-gbw9x
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-gbw9x
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-gbw9x
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-bt24r
  Dec 15 15:29:34.457: INFO: Received response from host: affinity-nodeport-transition-bt24r
  Dec 15 15:29:34.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-566 exec execpod-affinity4ptkp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.5:30807/ ; done'
  Dec 15 15:29:34.600: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30807/\n"
  Dec 15 15:29:34.600: INFO: stdout: "\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq\naffinity-nodeport-transition-wb7zq"
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Received response from host: affinity-nodeport-transition-wb7zq
  Dec 15 15:29:34.600: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-566, will wait for the garbage collector to delete the pods @ 12/15/23 15:29:34.608
  Dec 15 15:29:34.665: INFO: Deleting ReplicationController affinity-nodeport-transition took: 4.775027ms
  Dec 15 15:29:34.766: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.761355ms
  E1215 15:29:35.421916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:36.422663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:37.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-566" for this suite. @ 12/15/23 15:29:37.279
• [9.504 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/15/23 15:29:37.282
  Dec 15 15:29:37.282: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename daemonsets @ 12/15/23 15:29:37.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:37.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:37.29
  Dec 15 15:29:37.300: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/23 15:29:37.303
  Dec 15 15:29:37.305: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:37.305: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:37.305: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:37.307: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:29:37.307: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:29:37.423178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:38.307: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:38.307: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:38.307: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:38.310: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 15 15:29:38.310: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/15/23 15:29:38.321
  STEP: Check that daemon pods images are updated. @ 12/15/23 15:29:38.332
  Dec 15 15:29:38.335: INFO: Wrong image for pod: daemon-set-dfwd7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 15 15:29:38.335: INFO: Wrong image for pod: daemon-set-tlfdn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 15 15:29:38.338: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:38.338: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:38.338: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1215 15:29:38.423958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:39.336: INFO: Wrong image for pod: daemon-set-tlfdn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 15 15:29:39.338: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:39.338: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:39.338: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1215 15:29:39.424825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:40.338: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:40.338: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:40.338: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1215 15:29:40.425369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:41.337: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:41.337: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:41.337: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/15/23 15:29:41.337
  Dec 15 15:29:41.339: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:41.339: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:41.339: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:29:41.341: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 15 15:29:41.341: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/23 15:29:41.349
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6290, will wait for the garbage collector to delete the pods @ 12/15/23 15:29:41.349
  Dec 15 15:29:41.404: INFO: Deleting DaemonSet.extensions daemon-set took: 2.946145ms
  E1215 15:29:41.425907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:41.505: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.496482ms
  E1215 15:29:42.426434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:29:43.109: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:29:43.109: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 15 15:29:43.112: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29452"},"items":null}

  Dec 15 15:29:43.115: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29452"},"items":null}

  Dec 15 15:29:43.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6290" for this suite. @ 12/15/23 15:29:43.129
• [5.852 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/15/23 15:29:43.135
  Dec 15 15:29:43.135: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename limitrange @ 12/15/23 15:29:43.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:43.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:43.149
  STEP: Creating LimitRange "e2e-limitrange-sbk9n" in namespace "limitrange-1682" @ 12/15/23 15:29:43.152
  STEP: Creating another limitRange in another namespace @ 12/15/23 15:29:43.155
  Dec 15 15:29:43.165: INFO: Namespace "e2e-limitrange-sbk9n-4289" created
  Dec 15 15:29:43.165: INFO: Creating LimitRange "e2e-limitrange-sbk9n" in namespace "e2e-limitrange-sbk9n-4289"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-sbk9n" @ 12/15/23 15:29:43.169
  Dec 15 15:29:43.171: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-sbk9n" in "limitrange-1682" namespace @ 12/15/23 15:29:43.171
  Dec 15 15:29:43.176: INFO: LimitRange "e2e-limitrange-sbk9n" has been patched
  STEP: Delete LimitRange "e2e-limitrange-sbk9n" by Collection with labelSelector: "e2e-limitrange-sbk9n=patched" @ 12/15/23 15:29:43.176
  STEP: Confirm that the limitRange "e2e-limitrange-sbk9n" has been deleted @ 12/15/23 15:29:43.181
  Dec 15 15:29:43.181: INFO: Requesting list of LimitRange to confirm quantity
  Dec 15 15:29:43.184: INFO: Found 0 LimitRange with label "e2e-limitrange-sbk9n=patched"
  Dec 15 15:29:43.184: INFO: LimitRange "e2e-limitrange-sbk9n" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-sbk9n" @ 12/15/23 15:29:43.184
  Dec 15 15:29:43.187: INFO: Found 1 limitRange
  Dec 15 15:29:43.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1682" for this suite. @ 12/15/23 15:29:43.189
  STEP: Destroying namespace "e2e-limitrange-sbk9n-4289" for this suite. @ 12/15/23 15:29:43.193
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/15/23 15:29:43.196
  Dec 15 15:29:43.196: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename csi-storageclass @ 12/15/23 15:29:43.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:43.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:43.204
  STEP: Creating a StorageClass @ 12/15/23 15:29:43.205
  STEP: Get StorageClass "e2e-gzs6g" @ 12/15/23 15:29:43.208
  STEP: Patching the StorageClass "e2e-gzs6g" @ 12/15/23 15:29:43.209
  STEP: Delete StorageClass "e2e-gzs6g" @ 12/15/23 15:29:43.212
  STEP: Confirm deletion of StorageClass "e2e-gzs6g" @ 12/15/23 15:29:43.215
  STEP: Create a replacement StorageClass @ 12/15/23 15:29:43.217
  STEP: Updating StorageClass "e2e-v2-gfzbv" @ 12/15/23 15:29:43.219
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-gfzbv=updated" @ 12/15/23 15:29:43.223
  STEP: Deleting StorageClass "e2e-v2-gfzbv" via DeleteCollection @ 12/15/23 15:29:43.225
  STEP: Confirm deletion of StorageClass "e2e-v2-gfzbv" @ 12/15/23 15:29:43.229
  Dec 15 15:29:43.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7016" for this suite. @ 12/15/23 15:29:43.233
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/15/23 15:29:43.236
  Dec 15 15:29:43.236: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename cronjob @ 12/15/23 15:29:43.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:29:43.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:29:43.245
  STEP: Creating a cronjob @ 12/15/23 15:29:43.246
  STEP: Ensuring more than one job is running at a time @ 12/15/23 15:29:43.249
  E1215 15:29:43.426949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:44.427308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:45.428264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:46.428466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:47.429415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:48.429684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:49.429725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:50.429948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:51.430881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:52.431666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:53.432373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:54.432448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:55.432948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:56.433140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:57.433748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:58.434218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:29:59.434487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:00.434701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:01.434820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:02.435018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:03.435865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:04.436220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:05.436642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:06.436792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:07.437609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:08.437949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:09.438019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:10.438239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:11.439131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:12.440169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:13.441244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:14.441692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:15.441805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:16.442037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:17.442554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:18.442980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:19.443028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:20.444049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:21.444066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:22.444152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:23.444600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:24.444981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:25.446070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:26.446426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:27.446924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:28.447241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:29.448271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:30.448516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:31.449361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:32.449586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:33.450435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:34.451237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:35.451637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:36.451828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:37.452706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:38.452993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:39.453595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:40.453683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:41.454606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:42.454798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:43.454954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:44.455247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:45.456131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:46.456180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:47.457150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:48.457414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:49.458417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:50.458656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:51.458697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:52.458928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:53.459084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:54.459856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:55.460695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:56.460806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:57.461682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:58.461789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:30:59.461855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:00.462091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/15/23 15:31:01.252
  STEP: Removing cronjob @ 12/15/23 15:31:01.256
  Dec 15 15:31:01.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8430" for this suite. @ 12/15/23 15:31:01.265
• [78.035 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/15/23 15:31:01.271
  Dec 15 15:31:01.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename ingressclass @ 12/15/23 15:31:01.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:01.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:01.288
  STEP: getting /apis @ 12/15/23 15:31:01.291
  STEP: getting /apis/networking.k8s.io @ 12/15/23 15:31:01.293
  STEP: getting /apis/networking.k8s.iov1 @ 12/15/23 15:31:01.294
  STEP: creating @ 12/15/23 15:31:01.295
  STEP: getting @ 12/15/23 15:31:01.3
  STEP: listing @ 12/15/23 15:31:01.302
  STEP: watching @ 12/15/23 15:31:01.303
  Dec 15 15:31:01.303: INFO: starting watch
  STEP: patching @ 12/15/23 15:31:01.304
  STEP: updating @ 12/15/23 15:31:01.306
  Dec 15 15:31:01.308: INFO: waiting for watch events with expected annotations
  Dec 15 15:31:01.308: INFO: saw patched and updated annotations
  STEP: deleting @ 12/15/23 15:31:01.308
  STEP: deleting a collection @ 12/15/23 15:31:01.313
  Dec 15 15:31:01.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6419" for this suite. @ 12/15/23 15:31:01.321
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/15/23 15:31:01.324
  Dec 15 15:31:01.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:31:01.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:01.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:01.331
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:31:01.332
  E1215 15:31:01.462367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:02.463264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:31:03.341
  Dec 15 15:31:03.343: INFO: Trying to get logs from node talos-default-worker-2 pod downwardapi-volume-b7cad0f8-d86a-4f9d-b92a-b6e986735c14 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:31:03.347
  Dec 15 15:31:03.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7532" for this suite. @ 12/15/23 15:31:03.358
• [2.038 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/15/23 15:31:03.361
  Dec 15 15:31:03.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/15/23 15:31:03.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:03.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:03.372
  STEP: Setting up the test @ 12/15/23 15:31:03.374
  STEP: Creating hostNetwork=false pod @ 12/15/23 15:31:03.374
  E1215 15:31:03.463971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:04.464437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 12/15/23 15:31:05.388
  E1215 15:31:05.464682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:06.465164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 12/15/23 15:31:07.402
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/15/23 15:31:07.402
  Dec 15 15:31:07.402: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:07.402: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:07.403: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:07.403: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E1215 15:31:07.465663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:31:07.506: INFO: Exec stderr: ""
  Dec 15 15:31:07.506: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:07.506: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:07.506: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:07.506: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 15 15:31:07.589: INFO: Exec stderr: ""
  Dec 15 15:31:07.589: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:07.589: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:07.590: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:07.590: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 15 15:31:07.647: INFO: Exec stderr: ""
  Dec 15 15:31:07.647: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:07.647: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:07.647: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:07.647: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 15 15:31:07.699: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/15/23 15:31:07.699
  Dec 15 15:31:07.699: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:07.699: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:07.699: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:07.700: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Dec 15 15:31:07.776: INFO: Exec stderr: ""
  Dec 15 15:31:07.776: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:07.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:07.776: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:07.776: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Dec 15 15:31:07.831: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/15/23 15:31:07.831
  Dec 15 15:31:07.831: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:07.831: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:07.831: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:07.831: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 15 15:31:07.910: INFO: Exec stderr: ""
  Dec 15 15:31:07.910: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:07.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:07.910: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:07.910: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 15 15:31:08.004: INFO: Exec stderr: ""
  Dec 15 15:31:08.004: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:08.004: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:08.004: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:08.004: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 15 15:31:08.100: INFO: Exec stderr: ""
  Dec 15 15:31:08.100: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7232 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:08.100: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:08.101: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:08.101: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 15 15:31:08.171: INFO: Exec stderr: ""
  Dec 15 15:31:08.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7232" for this suite. @ 12/15/23 15:31:08.174
• [4.816 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 12/15/23 15:31:08.177
  Dec 15 15:31:08.177: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:31:08.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:08.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:08.186
  STEP: validating cluster-info @ 12/15/23 15:31:08.187
  Dec 15 15:31:08.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-1174 cluster-info'
  Dec 15 15:31:08.226: INFO: stderr: ""
  Dec 15 15:31:08.226: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Dec 15 15:31:08.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1174" for this suite. @ 12/15/23 15:31:08.229
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/15/23 15:31:08.233
  Dec 15 15:31:08.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:31:08.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:08.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:08.241
  STEP: Creating Pod @ 12/15/23 15:31:08.243
  E1215 15:31:08.466674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:09.466854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 12/15/23 15:31:10.252
  Dec 15 15:31:10.252: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7611 PodName:pod-sharedvolume-fb0b3c70-23fe-4c5e-8d4f-40c5b68bade1 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:31:10.252: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:31:10.252: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:31:10.253: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-7611/pods/pod-sharedvolume-fb0b3c70-23fe-4c5e-8d4f-40c5b68bade1/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Dec 15 15:31:10.319: INFO: Exec stderr: ""
  Dec 15 15:31:10.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7611" for this suite. @ 12/15/23 15:31:10.322
• [2.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/15/23 15:31:10.326
  Dec 15 15:31:10.326: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 15:31:10.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:10.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:10.334
  STEP: Creating secret with name secret-test-map-71dfce45-222b-4387-b756-107c759a4e55 @ 12/15/23 15:31:10.335
  STEP: Creating a pod to test consume secrets @ 12/15/23 15:31:10.337
  E1215 15:31:10.467235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:11.467578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:12.468071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:13.468153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:31:14.35
  Dec 15 15:31:14.352: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-4af07ec0-560c-4683-ab02-4f856787af6e container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 15:31:14.36
  Dec 15 15:31:14.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4976" for this suite. @ 12/15/23 15:31:14.372
• [4.049 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/15/23 15:31:14.375
  Dec 15 15:31:14.375: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:31:14.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:14.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:14.386
  STEP: Creating a pod to test downward api env vars @ 12/15/23 15:31:14.387
  E1215 15:31:14.468604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:15.469618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:16.469656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:17.470137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:31:18.4
  Dec 15 15:31:18.402: INFO: Trying to get logs from node talos-default-worker-1 pod downward-api-fc1ca997-da0b-4eae-96c9-5223f53ec070 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/23 15:31:18.407
  Dec 15 15:31:18.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6629" for this suite. @ 12/15/23 15:31:18.419
• [4.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 12/15/23 15:31:18.423
  Dec 15 15:31:18.423: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:31:18.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:18.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:18.433
  STEP: creating an Endpoint @ 12/15/23 15:31:18.436
  STEP: waiting for available Endpoint @ 12/15/23 15:31:18.438
  STEP: listing all Endpoints @ 12/15/23 15:31:18.439
  STEP: updating the Endpoint @ 12/15/23 15:31:18.441
  STEP: fetching the Endpoint @ 12/15/23 15:31:18.444
  STEP: patching the Endpoint @ 12/15/23 15:31:18.446
  STEP: fetching the Endpoint @ 12/15/23 15:31:18.45
  STEP: deleting the Endpoint by Collection @ 12/15/23 15:31:18.452
  STEP: waiting for Endpoint deletion @ 12/15/23 15:31:18.455
  STEP: fetching the Endpoint @ 12/15/23 15:31:18.456
  Dec 15 15:31:18.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6687" for this suite. @ 12/15/23 15:31:18.46
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/15/23 15:31:18.464
  Dec 15 15:31:18.464: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename subpath @ 12/15/23 15:31:18.464
  E1215 15:31:18.470800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:18.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:18.472
  STEP: Setting up data @ 12/15/23 15:31:18.473
  STEP: Creating pod pod-subpath-test-configmap-q9xb @ 12/15/23 15:31:18.478
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/23 15:31:18.478
  E1215 15:31:19.471783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:20.471855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:21.472599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:22.472797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:23.472883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:24.473510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:25.473625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:26.473750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:27.473995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:28.474322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:29.475033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:30.475173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:31.475654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:32.476154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:33.476327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:34.477084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:35.478200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:36.478324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:37.479229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:38.479737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:39.479956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:40.480162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:31:40.525
  Dec 15 15:31:40.528: INFO: Trying to get logs from node talos-default-worker-2 pod pod-subpath-test-configmap-q9xb container test-container-subpath-configmap-q9xb: <nil>
  STEP: delete the pod @ 12/15/23 15:31:40.534
  STEP: Deleting pod pod-subpath-test-configmap-q9xb @ 12/15/23 15:31:40.547
  Dec 15 15:31:40.547: INFO: Deleting pod "pod-subpath-test-configmap-q9xb" in namespace "subpath-4027"
  Dec 15 15:31:40.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4027" for this suite. @ 12/15/23 15:31:40.555
• [22.096 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/15/23 15:31:40.56
  Dec 15 15:31:40.560: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/23 15:31:40.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:40.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:40.574
  E1215 15:31:41.480240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:42.480524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 12/15/23 15:31:42.594
  Dec 15 15:31:42.594: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8089 pod-service-account-30d10c6c-4801-4ada-8e0b-09bf5b146726 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/15/23 15:31:42.718
  Dec 15 15:31:42.718: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8089 pod-service-account-30d10c6c-4801-4ada-8e0b-09bf5b146726 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/15/23 15:31:42.826
  Dec 15 15:31:42.826: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8089 pod-service-account-30d10c6c-4801-4ada-8e0b-09bf5b146726 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Dec 15 15:31:42.973: INFO: Got root ca configmap in namespace "svcaccounts-8089"
  Dec 15 15:31:42.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8089" for this suite. @ 12/15/23 15:31:42.979
• [2.424 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/15/23 15:31:42.985
  Dec 15 15:31:42.985: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:31:42.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:42.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:42.998
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/15/23 15:31:43
  E1215 15:31:43.480641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:44.481137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:45.481798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:46.482053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:31:47.018
  Dec 15 15:31:47.021: INFO: Trying to get logs from node talos-default-worker-2 pod pod-96809f1c-4e49-44b2-8356-916f93353cb9 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:31:47.027
  Dec 15 15:31:47.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8761" for this suite. @ 12/15/23 15:31:47.041
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 12/15/23 15:31:47.052
  Dec 15 15:31:47.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename dns @ 12/15/23 15:31:47.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:47.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:47.065
  STEP: Creating a test headless service @ 12/15/23 15:31:47.068
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7142.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-7142.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7142.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-7142.svc.cluster.local;sleep 1; done
   @ 12/15/23 15:31:47.072
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7142.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7142.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7142.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7142.svc.cluster.local;sleep 1; done
   @ 12/15/23 15:31:47.072
  STEP: creating a pod to probe DNS @ 12/15/23 15:31:47.072
  STEP: submitting the pod to kubernetes @ 12/15/23 15:31:47.072
  E1215 15:31:47.482678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:48.483028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/15/23 15:31:49.088
  STEP: looking for the results for each expected name from probers @ 12/15/23 15:31:49.09
  Dec 15 15:31:49.094: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local from pod dns-7142/dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92: the server could not find the requested resource (get pods dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92)
  Dec 15 15:31:49.097: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local from pod dns-7142/dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92: the server could not find the requested resource (get pods dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92)
  Dec 15 15:31:49.099: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7142.svc.cluster.local from pod dns-7142/dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92: the server could not find the requested resource (get pods dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92)
  Dec 15 15:31:49.102: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7142.svc.cluster.local from pod dns-7142/dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92: the server could not find the requested resource (get pods dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92)
  Dec 15 15:31:49.104: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local from pod dns-7142/dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92: the server could not find the requested resource (get pods dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92)
  Dec 15 15:31:49.106: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local from pod dns-7142/dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92: the server could not find the requested resource (get pods dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92)
  Dec 15 15:31:49.109: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7142.svc.cluster.local from pod dns-7142/dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92: the server could not find the requested resource (get pods dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92)
  Dec 15 15:31:49.111: INFO: Lookups using dns-7142/dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7142.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7142.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7142.svc.cluster.local jessie_udp@dns-test-service-2.dns-7142.svc.cluster.local]

  Dec 15 15:31:49.115: INFO: Pod client logs for webserver: 
  Dec 15 15:31:49.120: INFO: Pod client logs for querier: 
  Dec 15 15:31:49.124: INFO: Pod client logs for jessie-querier: 
  E1215 15:31:49.483898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:50.484188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:51.484418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:52.484690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:53.484942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:31:54.105: INFO: DNS probes using dns-7142/dns-test-657f5370-ef1b-4a74-9b5f-6cd733d20c92 succeeded

  STEP: deleting the pod @ 12/15/23 15:31:54.105
  STEP: deleting the test headless service @ 12/15/23 15:31:54.113
  Dec 15 15:31:54.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7142" for this suite. @ 12/15/23 15:31:54.122
• [7.073 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 12/15/23 15:31:54.125
  Dec 15 15:31:54.125: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename disruption @ 12/15/23 15:31:54.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:31:54.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:31:54.134
  STEP: creating the pdb @ 12/15/23 15:31:54.136
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:31:54.138
  E1215 15:31:54.485153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:55.485335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 12/15/23 15:31:56.143
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:31:56.15
  E1215 15:31:56.485840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:57.486060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 12/15/23 15:31:58.154
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:31:58.161
  E1215 15:31:58.486712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:31:59.487067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 12/15/23 15:32:00.171
  Dec 15 15:32:00.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1378" for this suite. @ 12/15/23 15:32:00.179
• [6.059 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/15/23 15:32:00.184
  Dec 15 15:32:00.184: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename secrets @ 12/15/23 15:32:00.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:32:00.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:32:00.198
  STEP: Creating secret with name secret-test-88078fca-4904-4550-a69b-c3d6c5e10179 @ 12/15/23 15:32:00.201
  STEP: Creating a pod to test consume secrets @ 12/15/23 15:32:00.205
  E1215 15:32:00.487622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:01.487778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:02.488768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:03.488867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:32:04.223
  Dec 15 15:32:04.226: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-c60f737b-5b2f-4206-a666-c39c5b97cc28 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 15:32:04.233
  Dec 15 15:32:04.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8760" for this suite. @ 12/15/23 15:32:04.247
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 12/15/23 15:32:04.253
  Dec 15 15:32:04.253: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl-logs @ 12/15/23 15:32:04.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:32:04.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:32:04.267
  STEP: creating an pod @ 12/15/23 15:32:04.269
  Dec 15 15:32:04.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-logs-3432 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Dec 15 15:32:04.336: INFO: stderr: ""
  Dec 15 15:32:04.336: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/15/23 15:32:04.336
  Dec 15 15:32:04.336: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1215 15:32:04.489537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:05.490514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:32:06.343: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/15/23 15:32:06.343
  Dec 15 15:32:06.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-logs-3432 logs logs-generator logs-generator'
  Dec 15 15:32:06.408: INFO: stderr: ""
  Dec 15 15:32:06.408: INFO: stdout: "I1215 15:32:04.785326       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/9d7 206\nI1215 15:32:04.985694       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/z7t 585\nI1215 15:32:05.186013       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/phxs 421\nI1215 15:32:05.386377       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/vsf 412\nI1215 15:32:05.585699       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/rdl 452\nI1215 15:32:05.786055       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/gpp 462\nI1215 15:32:05.986406       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/4vfb 328\nI1215 15:32:06.185735       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/fjnn 347\nI1215 15:32:06.386080       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/wj4 399\n"
  STEP: limiting log lines @ 12/15/23 15:32:06.408
  Dec 15 15:32:06.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-logs-3432 logs logs-generator logs-generator --tail=1'
  Dec 15 15:32:06.472: INFO: stderr: ""
  Dec 15 15:32:06.472: INFO: stdout: "I1215 15:32:06.386080       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/wj4 399\n"
  Dec 15 15:32:06.472: INFO: got output "I1215 15:32:06.386080       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/wj4 399\n"
  STEP: limiting log bytes @ 12/15/23 15:32:06.472
  Dec 15 15:32:06.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-logs-3432 logs logs-generator logs-generator --limit-bytes=1'
  E1215 15:32:06.491069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:32:06.536: INFO: stderr: ""
  Dec 15 15:32:06.536: INFO: stdout: "I"
  Dec 15 15:32:06.536: INFO: got output "I"
  STEP: exposing timestamps @ 12/15/23 15:32:06.536
  Dec 15 15:32:06.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-logs-3432 logs logs-generator logs-generator --tail=1 --timestamps'
  Dec 15 15:32:06.600: INFO: stderr: ""
  Dec 15 15:32:06.601: INFO: stdout: "2023-12-15T15:32:06.585557383Z I1215 15:32:06.585405       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/pr7 496\n"
  Dec 15 15:32:06.601: INFO: got output "2023-12-15T15:32:06.585557383Z I1215 15:32:06.585405       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/pr7 496\n"
  STEP: restricting to a time range @ 12/15/23 15:32:06.601
  E1215 15:32:07.492141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:08.493192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:32:09.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-logs-3432 logs logs-generator logs-generator --since=1s'
  Dec 15 15:32:09.142: INFO: stderr: ""
  Dec 15 15:32:09.142: INFO: stdout: "I1215 15:32:08.186103       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/56nl 228\nI1215 15:32:08.385368       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/7jt5 239\nI1215 15:32:08.585717       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/z9w8 347\nI1215 15:32:08.786016       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/5szx 226\nI1215 15:32:08.986339       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/qxz 384\n"
  Dec 15 15:32:09.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-logs-3432 logs logs-generator logs-generator --since=24h'
  Dec 15 15:32:09.184: INFO: stderr: ""
  Dec 15 15:32:09.184: INFO: stdout: "I1215 15:32:04.785326       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/9d7 206\nI1215 15:32:04.985694       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/z7t 585\nI1215 15:32:05.186013       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/phxs 421\nI1215 15:32:05.386377       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/vsf 412\nI1215 15:32:05.585699       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/rdl 452\nI1215 15:32:05.786055       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/gpp 462\nI1215 15:32:05.986406       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/4vfb 328\nI1215 15:32:06.185735       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/fjnn 347\nI1215 15:32:06.386080       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/wj4 399\nI1215 15:32:06.585405       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/pr7 496\nI1215 15:32:06.785726       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/g8qn 463\nI1215 15:32:06.986039       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/q9hq 282\nI1215 15:32:07.186385       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/jh4f 523\nI1215 15:32:07.385704       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/xhn 495\nI1215 15:32:07.586118       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/r8n 223\nI1215 15:32:07.785395       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/mbkh 486\nI1215 15:32:07.985733       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/rwl 304\nI1215 15:32:08.186103       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/56nl 228\nI1215 15:32:08.385368       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/7jt5 239\nI1215 15:32:08.585717       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/z9w8 347\nI1215 15:32:08.786016       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/5szx 226\nI1215 15:32:08.986339       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/qxz 384\nI1215 15:32:09.185669       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/d4m9 358\n"
  Dec 15 15:32:09.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-logs-3432 delete pod logs-generator'
  Dec 15 15:32:09.489: INFO: stderr: ""
  Dec 15 15:32:09.489: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Dec 15 15:32:09.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3432" for this suite. @ 12/15/23 15:32:09.491
  E1215 15:32:09.493781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.242 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/15/23 15:32:09.495
  Dec 15 15:32:09.495: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 15:32:09.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:32:09.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:32:09.503
  E1215 15:32:10.494116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:11.494689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:12.495572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:13.496650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:14.497176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:15.497645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:32:15.55
  Dec 15 15:32:15.552: INFO: Trying to get logs from node talos-default-worker-1 pod client-envvars-e3e00404-8237-42fb-bb47-2b0c269f688b container env3cont: <nil>
  STEP: delete the pod @ 12/15/23 15:32:15.559
  Dec 15 15:32:15.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7333" for this suite. @ 12/15/23 15:32:15.575
• [6.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/15/23 15:32:15.58
  Dec 15 15:32:15.580: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/23 15:32:15.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:32:15.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:32:15.593
  STEP: getting /apis @ 12/15/23 15:32:15.596
  STEP: getting /apis/node.k8s.io @ 12/15/23 15:32:15.599
  STEP: getting /apis/node.k8s.io/v1 @ 12/15/23 15:32:15.6
  STEP: creating @ 12/15/23 15:32:15.601
  STEP: watching @ 12/15/23 15:32:15.614
  Dec 15 15:32:15.614: INFO: starting watch
  STEP: getting @ 12/15/23 15:32:15.619
  STEP: listing @ 12/15/23 15:32:15.621
  STEP: patching @ 12/15/23 15:32:15.624
  STEP: updating @ 12/15/23 15:32:15.628
  Dec 15 15:32:15.633: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 12/15/23 15:32:15.633
  STEP: deleting a collection @ 12/15/23 15:32:15.642
  Dec 15 15:32:15.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8283" for this suite. @ 12/15/23 15:32:15.658
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 12/15/23 15:32:15.663
  Dec 15 15:32:15.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename dns @ 12/15/23 15:32:15.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:32:15.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:32:15.676
  STEP: Creating a test externalName service @ 12/15/23 15:32:15.678
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7275.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7275.svc.cluster.local; sleep 1; done
   @ 12/15/23 15:32:15.682
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7275.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7275.svc.cluster.local; sleep 1; done
   @ 12/15/23 15:32:15.682
  STEP: creating a pod to probe DNS @ 12/15/23 15:32:15.682
  STEP: submitting the pod to kubernetes @ 12/15/23 15:32:15.682
  E1215 15:32:16.497815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:17.498090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/15/23 15:32:17.695
  STEP: looking for the results for each expected name from probers @ 12/15/23 15:32:17.698
  Dec 15 15:32:17.706: INFO: DNS probes using dns-test-09029182-2b2a-4233-b9de-0f1c4a4fa88b succeeded

  STEP: changing the externalName to bar.example.com @ 12/15/23 15:32:17.706
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7275.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7275.svc.cluster.local; sleep 1; done
   @ 12/15/23 15:32:17.712
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7275.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7275.svc.cluster.local; sleep 1; done
   @ 12/15/23 15:32:17.712
  STEP: creating a second pod to probe DNS @ 12/15/23 15:32:17.712
  STEP: submitting the pod to kubernetes @ 12/15/23 15:32:17.712
  E1215 15:32:18.498448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:19.498780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/15/23 15:32:19.724
  STEP: looking for the results for each expected name from probers @ 12/15/23 15:32:19.726
  Dec 15 15:32:19.730: INFO: File wheezy_udp@dns-test-service-3.dns-7275.svc.cluster.local from pod  dns-7275/dns-test-c2f6e04c-0a00-4ec9-b4ce-a344292aa2d9 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 15 15:32:19.733: INFO: File jessie_udp@dns-test-service-3.dns-7275.svc.cluster.local from pod  dns-7275/dns-test-c2f6e04c-0a00-4ec9-b4ce-a344292aa2d9 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 15 15:32:19.733: INFO: Lookups using dns-7275/dns-test-c2f6e04c-0a00-4ec9-b4ce-a344292aa2d9 failed for: [wheezy_udp@dns-test-service-3.dns-7275.svc.cluster.local jessie_udp@dns-test-service-3.dns-7275.svc.cluster.local]

  Dec 15 15:32:19.739: INFO: Pod client logs for webserver: 
  Dec 15 15:32:19.745: INFO: Pod client logs for querier: 
  Dec 15 15:32:19.750: INFO: Pod client logs for jessie-querier: 
  E1215 15:32:20.498923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:21.499197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:22.499742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:23.500674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:24.500968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:32:24.734: INFO: DNS probes using dns-test-c2f6e04c-0a00-4ec9-b4ce-a344292aa2d9 succeeded

  STEP: changing the service to type=ClusterIP @ 12/15/23 15:32:24.734
  W1215 15:32:24.748473      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7275.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7275.svc.cluster.local; sleep 1; done
   @ 12/15/23 15:32:24.748
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7275.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7275.svc.cluster.local; sleep 1; done
   @ 12/15/23 15:32:24.748
  STEP: creating a third pod to probe DNS @ 12/15/23 15:32:24.748
  STEP: submitting the pod to kubernetes @ 12/15/23 15:32:24.752
  E1215 15:32:25.501084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:26.501276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/15/23 15:32:26.763
  STEP: looking for the results for each expected name from probers @ 12/15/23 15:32:26.766
  Dec 15 15:32:26.773: INFO: DNS probes using dns-test-7c5bed49-483e-4925-ac3b-edc078bdc264 succeeded

  STEP: deleting the pod @ 12/15/23 15:32:26.773
  STEP: deleting the pod @ 12/15/23 15:32:26.783
  STEP: deleting the pod @ 12/15/23 15:32:26.792
  STEP: deleting the test externalName service @ 12/15/23 15:32:26.8
  Dec 15 15:32:26.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7275" for this suite. @ 12/15/23 15:32:26.82
• [11.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 12/15/23 15:32:26.827
  Dec 15 15:32:26.827: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename security-context-test @ 12/15/23 15:32:26.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:32:26.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:32:26.839
  E1215 15:32:27.501426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:28.501861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:32:28.858: INFO: Got logs for pod "busybox-privileged-false-50844af1-3e6c-47fc-8550-d98f80c1b055": "ip: RTNETLINK answers: Operation not permitted\n"
  Dec 15 15:32:28.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4010" for this suite. @ 12/15/23 15:32:28.862
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/15/23 15:32:28.868
  Dec 15 15:32:28.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename tables @ 12/15/23 15:32:28.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:32:28.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:32:28.881
  Dec 15 15:32:28.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2149" for this suite. @ 12/15/23 15:32:28.886
• [0.022 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 12/15/23 15:32:28.89
  Dec 15 15:32:28.890: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename var-expansion @ 12/15/23 15:32:28.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:32:28.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:32:28.898
  STEP: creating the pod with failed condition @ 12/15/23 15:32:28.9
  E1215 15:32:29.502072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:30.502427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:31.503173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:32.503422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:33.503645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:34.503977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:35.504254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:36.504271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:37.505160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:38.505417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:39.505689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:40.506279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:41.506710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:42.506870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:43.507278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:44.507425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:45.508005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:46.508579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:47.509261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:48.509508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:49.510494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:50.510750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:51.511738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:52.511961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:53.512068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:54.512229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:55.512646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:56.513299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:57.513709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:58.513828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:32:59.514486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:00.515063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:01.515468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:02.515567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:03.516680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:04.517002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:05.517914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:06.517991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:07.518189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:08.518431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:09.519301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:10.519532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:11.519674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:12.519912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:13.520716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:14.521056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:15.522207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:16.522479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:17.523434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:18.523550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:19.523710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:20.523885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:21.524263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:22.524502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:23.524929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:24.525009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:25.525176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:26.525335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:27.526003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:28.526376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:29.527465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:30.527530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:31.528241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:32.528455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:33.528675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:34.529089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:35.529178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:36.529404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:37.530056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:38.530206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:39.530578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:40.530774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:41.530905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:42.531894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:43.532437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:44.532655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:45.532880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:46.533052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:47.534077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:48.534536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:49.535558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:50.535941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:51.537008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:52.537257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:53.537441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:54.537819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:55.538938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:56.539236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:57.539807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:58.539895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:33:59.540364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:00.540943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:01.541064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:02.541268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:03.541501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:04.541943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:05.542133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:06.542391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:07.543062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:08.543414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:09.544402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:10.544712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:11.544784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:12.545636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:13.546262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:14.546861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:15.547843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:16.548052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:17.548138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:18.548204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:19.548999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:20.549136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:21.549389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:22.550109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:23.550907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:24.551514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:25.552565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:26.552803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:27.553059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:28.553379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 12/15/23 15:34:28.906
  Dec 15 15:34:29.416: INFO: Successfully updated pod "var-expansion-c09ce6cd-d995-411a-98c3-d004a4436648"
  STEP: waiting for pod running @ 12/15/23 15:34:29.416
  E1215 15:34:29.554096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:30.554276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 12/15/23 15:34:31.423
  Dec 15 15:34:31.423: INFO: Deleting pod "var-expansion-c09ce6cd-d995-411a-98c3-d004a4436648" in namespace "var-expansion-9681"
  Dec 15 15:34:31.427: INFO: Wait up to 5m0s for pod "var-expansion-c09ce6cd-d995-411a-98c3-d004a4436648" to be fully deleted
  E1215 15:34:31.554628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:32.554806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:33.555291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:34.555467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:35.556056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:36.556156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:37.556999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:38.557183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:39.557957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:40.558367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:41.559027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:42.559225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:43.559625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:44.559840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:45.560624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:46.560876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:47.561248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:48.561774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:49.562028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:50.562256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:51.562677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:52.562855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:53.563530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:54.563746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:55.564358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:56.564588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:57.565396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:58.565879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:34:59.566502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:00.566676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:01.566946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:02.567874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:35:03.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9681" for this suite. @ 12/15/23 15:35:03.487
• [154.601 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/15/23 15:35:03.49
  Dec 15 15:35:03.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:35:03.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:03.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:03.498
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:35:03.5
  E1215 15:35:03.567917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:04.568900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:05.569031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:06.569202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:35:07.512
  Dec 15 15:35:07.515: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-7ba040e1-7c34-468e-aedc-04e6d56b1501 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:35:07.524
  Dec 15 15:35:07.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6214" for this suite. @ 12/15/23 15:35:07.536
• [4.050 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 12/15/23 15:35:07.541
  Dec 15 15:35:07.541: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:35:07.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:07.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:07.552
  STEP: creating service nodeport-test with type=NodePort in namespace services-4634 @ 12/15/23 15:35:07.554
  STEP: creating replication controller nodeport-test in namespace services-4634 @ 12/15/23 15:35:07.565
  E1215 15:35:07.570192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:35:07.570800      22 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-4634, replica count: 2
  E1215 15:35:08.571084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:09.571210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:10.571404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 15:35:10.621652      22 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 15 15:35:10.621: INFO: Creating new exec pod
  E1215 15:35:11.571696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:12.571921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:13.572487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:35:13.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-4634 exec execpodvn84m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Dec 15 15:35:13.791: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Dec 15 15:35:13.791: INFO: stdout: "nodeport-test-hhc2z"
  Dec 15 15:35:13.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-4634 exec execpodvn84m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.116.232 80'
  Dec 15 15:35:13.945: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.116.232 80\nConnection to 10.102.116.232 80 port [tcp/http] succeeded!\n"
  Dec 15 15:35:13.945: INFO: stdout: ""
  E1215 15:35:14.572718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:35:14.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-4634 exec execpodvn84m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.116.232 80'
  Dec 15 15:35:14.917: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.116.232 80\nConnection to 10.102.116.232 80 port [tcp/http] succeeded!\n"
  Dec 15 15:35:14.917: INFO: stdout: "nodeport-test-hhc2z"
  Dec 15 15:35:14.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-4634 exec execpodvn84m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.5 31145'
  Dec 15 15:35:15.056: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.5 31145\nConnection to 172.20.0.5 31145 port [tcp/*] succeeded!\n"
  Dec 15 15:35:15.056: INFO: stdout: "nodeport-test-hhc2z"
  Dec 15 15:35:15.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-4634 exec execpodvn84m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.6 31145'
  Dec 15 15:35:15.206: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.6 31145\nConnection to 172.20.0.6 31145 port [tcp/*] succeeded!\n"
  Dec 15 15:35:15.206: INFO: stdout: "nodeport-test-hhc2z"
  Dec 15 15:35:15.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4634" for this suite. @ 12/15/23 15:35:15.211
• [7.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/15/23 15:35:15.218
  Dec 15 15:35:15.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/15/23 15:35:15.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:15.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:15.233
  STEP: creating a target pod @ 12/15/23 15:35:15.235
  E1215 15:35:15.573032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:16.573226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/15/23 15:35:17.253
  E1215 15:35:17.573915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:18.574442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/15/23 15:35:19.269
  Dec 15 15:35:19.269: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7332 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:35:19.269: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:35:19.269: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:35:19.269: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-7332/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 15 15:35:19.337: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/15/23 15:35:19.343
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/15/23 15:35:19.346
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/15/23 15:35:19.352
  Dec 15 15:35:19.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7332" for this suite. @ 12/15/23 15:35:19.358
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/15/23 15:35:19.363
  Dec 15 15:35:19.363: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename sysctl @ 12/15/23 15:35:19.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:19.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:19.373
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/15/23 15:35:19.375
  STEP: Watching for error events or started pod @ 12/15/23 15:35:19.382
  E1215 15:35:19.574871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:20.575062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 12/15/23 15:35:21.386
  E1215 15:35:21.575857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:22.576048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 12/15/23 15:35:23.394
  STEP: Getting logs from the pod @ 12/15/23 15:35:23.394
  STEP: Checking that the sysctl is actually updated @ 12/15/23 15:35:23.398
  Dec 15 15:35:23.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7146" for this suite. @ 12/15/23 15:35:23.401
• [4.042 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/15/23 15:35:23.405
  Dec 15 15:35:23.405: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replicaset @ 12/15/23 15:35:23.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:23.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:23.416
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/15/23 15:35:23.418
  Dec 15 15:35:23.425: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1215 15:35:23.576877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:24.576932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:25.577131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:26.577361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:27.577650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:35:28.428: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/23 15:35:28.428
  STEP: getting scale subresource @ 12/15/23 15:35:28.428
  STEP: updating a scale subresource @ 12/15/23 15:35:28.429
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/15/23 15:35:28.432
  STEP: Patch a scale subresource @ 12/15/23 15:35:28.433
  Dec 15 15:35:28.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7126" for this suite. @ 12/15/23 15:35:28.441
• [5.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/15/23 15:35:28.445
  Dec 15 15:35:28.445: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:35:28.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:28.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:28.453
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/15/23 15:35:28.454
  E1215 15:35:28.577920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:29.578040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:30.578277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:31.578377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:35:32.466
  Dec 15 15:35:32.468: INFO: Trying to get logs from node talos-default-worker-1 pod pod-df70cc36-460b-4d55-8941-fdf4caa20f85 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:35:32.472
  Dec 15 15:35:32.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1915" for this suite. @ 12/15/23 15:35:32.484
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/15/23 15:35:32.489
  Dec 15 15:35:32.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename endpointslice @ 12/15/23 15:35:32.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:32.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:32.5
  STEP: getting /apis @ 12/15/23 15:35:32.503
  STEP: getting /apis/discovery.k8s.io @ 12/15/23 15:35:32.506
  STEP: getting /apis/discovery.k8s.iov1 @ 12/15/23 15:35:32.507
  STEP: creating @ 12/15/23 15:35:32.508
  STEP: getting @ 12/15/23 15:35:32.517
  STEP: listing @ 12/15/23 15:35:32.519
  STEP: watching @ 12/15/23 15:35:32.521
  Dec 15 15:35:32.521: INFO: starting watch
  STEP: cluster-wide listing @ 12/15/23 15:35:32.522
  STEP: cluster-wide watching @ 12/15/23 15:35:32.525
  Dec 15 15:35:32.525: INFO: starting watch
  STEP: patching @ 12/15/23 15:35:32.526
  STEP: updating @ 12/15/23 15:35:32.529
  Dec 15 15:35:32.534: INFO: waiting for watch events with expected annotations
  Dec 15 15:35:32.534: INFO: saw patched and updated annotations
  STEP: deleting @ 12/15/23 15:35:32.534
  STEP: deleting a collection @ 12/15/23 15:35:32.541
  Dec 15 15:35:32.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-613" for this suite. @ 12/15/23 15:35:32.552
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 12/15/23 15:35:32.556
  Dec 15 15:35:32.556: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/23 15:35:32.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:32.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:32.565
  E1215 15:35:32.578753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:33.579180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:34.579221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:35:34.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7970" for this suite. @ 12/15/23 15:35:34.588
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/15/23 15:35:34.593
  Dec 15 15:35:34.593: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:35:34.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:34.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:34.606
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:35:34.608
  E1215 15:35:35.579721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:36.580006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:37.580689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:38.581213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:35:38.625
  Dec 15 15:35:38.628: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-a086c4f9-2110-404e-9864-29bcd263d515 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:35:38.632
  Dec 15 15:35:38.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5606" for this suite. @ 12/15/23 15:35:38.642
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/15/23 15:35:38.646
  Dec 15 15:35:38.646: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename gc @ 12/15/23 15:35:38.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:38.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:38.655
  Dec 15 15:35:38.670: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"f7142e64-085d-431a-b3cc-e379e98c7b99", Controller:(*bool)(0xc002a28c66), BlockOwnerDeletion:(*bool)(0xc002a28c67)}}
  Dec 15 15:35:38.674: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"d9e70664-6d69-4d72-a5f3-dc29f26d45cb", Controller:(*bool)(0xc002a28e6a), BlockOwnerDeletion:(*bool)(0xc002a28e6b)}}
  Dec 15 15:35:38.678: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"b7dc86e1-6142-4584-810e-cdb4de5d08be", Controller:(*bool)(0xc002a2907e), BlockOwnerDeletion:(*bool)(0xc002a2907f)}}
  E1215 15:35:39.582226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:40.582712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:41.582935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:42.583135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:43.583525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:35:43.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3014" for this suite. @ 12/15/23 15:35:43.69
• [5.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 12/15/23 15:35:43.696
  Dec 15 15:35:43.696: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/23 15:35:43.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:43.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:43.71
  STEP: Waiting for pod completion @ 12/15/23 15:35:43.719
  E1215 15:35:44.584278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:45.584649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:46.585122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:47.585327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:35:47.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8001" for this suite. @ 12/15/23 15:35:47.742
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 12/15/23 15:35:47.748
  Dec 15 15:35:47.748: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 15:35:47.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:35:47.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:35:47.762
  E1215 15:35:48.586038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:49.586411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:50.587307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:51.588292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:52.588640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:53.589087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:54.590011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:55.590137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:56.590592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:57.590723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:58.591587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:35:59.591649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:00.592080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:01.592152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:02.592988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:03.593591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:04.594456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:05.595015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:06.595986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:07.596288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:08.597307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:09.597405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:09.822: INFO: Container started at 2023-12-15 15:35:48 +0000 UTC, pod became ready at 2023-12-15 15:36:08 +0000 UTC
  Dec 15 15:36:09.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7833" for this suite. @ 12/15/23 15:36:09.825
• [22.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/15/23 15:36:09.829
  Dec 15 15:36:09.829: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename gc @ 12/15/23 15:36:09.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:36:09.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:36:09.84
  STEP: create the rc @ 12/15/23 15:36:09.844
  W1215 15:36:09.847397      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1215 15:36:10.598045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:11.601156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:12.601563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:13.602257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:14.602275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:15.603340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/15/23 15:36:15.849
  STEP: wait for the rc to be deleted @ 12/15/23 15:36:15.853
  E1215 15:36:16.603983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:16.859: INFO: 80 pods remaining
  Dec 15 15:36:16.859: INFO: 80 pods has nil DeletionTimestamp
  Dec 15 15:36:16.859: INFO: 
  E1215 15:36:17.604719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:17.861: INFO: 71 pods remaining
  Dec 15 15:36:17.862: INFO: 71 pods has nil DeletionTimestamp
  Dec 15 15:36:17.862: INFO: 
  E1215 15:36:18.605232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:18.860: INFO: 60 pods remaining
  Dec 15 15:36:18.860: INFO: 60 pods has nil DeletionTimestamp
  Dec 15 15:36:18.860: INFO: 
  E1215 15:36:19.605434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:19.860: INFO: 40 pods remaining
  Dec 15 15:36:19.860: INFO: 40 pods has nil DeletionTimestamp
  Dec 15 15:36:19.860: INFO: 
  E1215 15:36:20.605534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:20.860: INFO: 31 pods remaining
  Dec 15 15:36:20.860: INFO: 31 pods has nil DeletionTimestamp
  Dec 15 15:36:20.860: INFO: 
  E1215 15:36:21.606579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:21.861: INFO: 20 pods remaining
  Dec 15 15:36:21.861: INFO: 20 pods has nil DeletionTimestamp
  Dec 15 15:36:21.861: INFO: 
  E1215 15:36:22.607111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/15/23 15:36:22.857
  Dec 15 15:36:22.890: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 15 15:36:22.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1035" for this suite. @ 12/15/23 15:36:22.893
• [13.067 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 12/15/23 15:36:22.896
  Dec 15 15:36:22.896: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:36:22.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:36:22.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:36:22.905
  STEP: Setting up server cert @ 12/15/23 15:36:22.917
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:36:23.062
  STEP: Deploying the webhook pod @ 12/15/23 15:36:23.067
  STEP: Wait for the deployment to be ready @ 12/15/23 15:36:23.072
  Dec 15 15:36:23.076: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1215 15:36:23.607986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:24.608156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:36:25.083
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:36:25.09
  E1215 15:36:25.608355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:26.090: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/15/23 15:36:26.094
  STEP: create a pod that should be updated by the webhook @ 12/15/23 15:36:26.101
  Dec 15 15:36:26.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8449" for this suite. @ 12/15/23 15:36:26.133
  STEP: Destroying namespace "webhook-markers-2825" for this suite. @ 12/15/23 15:36:26.135
• [3.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 12/15/23 15:36:26.138
  Dec 15 15:36:26.139: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:36:26.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:36:26.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:36:26.145
  STEP: Setting up server cert @ 12/15/23 15:36:26.154
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:36:26.411
  STEP: Deploying the webhook pod @ 12/15/23 15:36:26.414
  STEP: Wait for the deployment to be ready @ 12/15/23 15:36:26.419
  Dec 15 15:36:26.423: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1215 15:36:26.609352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:27.609540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:36:28.431
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:36:28.453
  E1215 15:36:28.609593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:29.453: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/15/23 15:36:29.459
  Dec 15 15:36:29.471: INFO: Waiting for webhook configuration to be ready...
  STEP: create a namespace for the webhook @ 12/15/23 15:36:29.578
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/15/23 15:36:29.588
  E1215 15:36:29.610619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:29.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3264" for this suite. @ 12/15/23 15:36:29.64
  STEP: Destroying namespace "webhook-markers-2" for this suite. @ 12/15/23 15:36:29.644
  STEP: Destroying namespace "fail-closed-namespace-8566" for this suite. @ 12/15/23 15:36:29.649
• [3.514 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/15/23 15:36:29.653
  Dec 15 15:36:29.653: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/23 15:36:29.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:36:29.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:36:29.663
  E1215 15:36:30.610776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:31.610995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:31.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1290" for this suite. @ 12/15/23 15:36:31.689
• [2.042 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/15/23 15:36:31.695
  Dec 15 15:36:31.695: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replicaset @ 12/15/23 15:36:31.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:36:31.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:36:31.713
  STEP: Create a Replicaset @ 12/15/23 15:36:31.719
  STEP: Verify that the required pods have come up. @ 12/15/23 15:36:31.725
  Dec 15 15:36:31.728: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1215 15:36:32.611874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:33.612159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:34.612552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:35.612830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:36.612898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:36.732: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/23 15:36:36.732
  STEP: Getting /status @ 12/15/23 15:36:36.732
  Dec 15 15:36:36.741: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/15/23 15:36:36.742
  Dec 15 15:36:36.748: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/15/23 15:36:36.749
  Dec 15 15:36:36.750: INFO: Observed &ReplicaSet event: ADDED
  Dec 15 15:36:36.750: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 15 15:36:36.751: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 15 15:36:36.751: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 15 15:36:36.751: INFO: Found replicaset test-rs in namespace replicaset-414 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 15 15:36:36.751: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/15/23 15:36:36.751
  Dec 15 15:36:36.751: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 15 15:36:36.756: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/15/23 15:36:36.756
  Dec 15 15:36:36.758: INFO: Observed &ReplicaSet event: ADDED
  Dec 15 15:36:36.758: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 15 15:36:36.758: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 15 15:36:36.759: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 15 15:36:36.759: INFO: Observed replicaset test-rs in namespace replicaset-414 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 15 15:36:36.759: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 15 15:36:36.759: INFO: Found replicaset test-rs in namespace replicaset-414 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Dec 15 15:36:36.759: INFO: Replicaset test-rs has a patched status
  Dec 15 15:36:36.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-414" for this suite. @ 12/15/23 15:36:36.763
• [5.073 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 12/15/23 15:36:36.768
  Dec 15 15:36:36.768: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 15:36:36.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:36:36.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:36:36.777
  STEP: Creating pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428 @ 12/15/23 15:36:36.779
  E1215 15:36:37.613394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:38.614086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/23 15:36:38.787
  Dec 15 15:36:38.789: INFO: Initial restart count of pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 is 0
  Dec 15 15:36:38.792: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:39.615139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:40.615478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:40.796: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:41.615902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:42.615976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:42.800: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:43.617051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:44.617765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:44.804: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:45.618050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:46.618620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:46.808: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:47.619620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:48.620608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:48.812: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:49.621281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:50.621503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:50.816: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:51.621557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:52.622619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:52.820: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:53.622675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:54.623470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:54.825: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:55.624530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:56.624695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:56.829: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  E1215 15:36:57.624735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:36:58.624937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:36:58.833: INFO: Get pod liveness-70cb116e-8122-4356-9db3-c26723ffc415 in namespace container-probe-6428
  Dec 15 15:36:58.833: INFO: Restart count of pod container-probe-6428/liveness-70cb116e-8122-4356-9db3-c26723ffc415 is now 1 (20.043239762s elapsed)
  STEP: deleting the pod @ 12/15/23 15:36:58.833
  Dec 15 15:36:58.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6428" for this suite. @ 12/15/23 15:36:58.841
• [22.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/15/23 15:36:58.844
  Dec 15 15:36:58.844: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:36:58.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:36:58.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:36:58.852
  STEP: Creating secret with name s-test-opt-del-de7f3d1a-6294-4d2e-a90d-a04a1f4f6d3b @ 12/15/23 15:36:58.855
  STEP: Creating secret with name s-test-opt-upd-7ac8b4e7-ff37-4a61-a2f8-18154245e174 @ 12/15/23 15:36:58.858
  STEP: Creating the pod @ 12/15/23 15:36:58.86
  E1215 15:36:59.625265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:00.625609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-de7f3d1a-6294-4d2e-a90d-a04a1f4f6d3b @ 12/15/23 15:37:00.885
  STEP: Updating secret s-test-opt-upd-7ac8b4e7-ff37-4a61-a2f8-18154245e174 @ 12/15/23 15:37:00.889
  STEP: Creating secret with name s-test-opt-create-a5cae969-768b-4557-b2d3-335132d79f68 @ 12/15/23 15:37:00.891
  STEP: waiting to observe update in volume @ 12/15/23 15:37:00.894
  E1215 15:37:01.625833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:02.625988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:03.626757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:04.627047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:05.627420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:06.627417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:07.627614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:08.628368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:09.629260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:10.629463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:11.630131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:12.630236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:13.631238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:14.631477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:15.631749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:16.632014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:17.632421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:18.633059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:19.633254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:20.633486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:21.633941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:22.634090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:23.635016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:24.636052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:25.636585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:26.637096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:27.637168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:28.637645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:29.637804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:30.638744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:31.638735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:32.638924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:33.639702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:34.639906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:35.640468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:36.640695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:37.641701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:38.642243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:39.642492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:40.642606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:41.643372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:42.643669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:43.644371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:44.644577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:45.644833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:46.645569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:47.646255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:48.646899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:49.647922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:50.648287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:51.649038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:52.649766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:53.650690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:54.650905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:55.650980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:56.651502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:57.652020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:58.652549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:37:59.652742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:00.653002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:01.654042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:02.654267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:03.655122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:04.655524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:05.655715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:06.655994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:07.656523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:08.657168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:09.657536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:10.657743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:11.658755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:12.658926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:13.659056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:14.659279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:15.659982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:16.660210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:17.660203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:18.660733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:19.660814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:20.661047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:21.661916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:22.662509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:23.663201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:24.663272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:38:25.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8292" for this suite. @ 12/15/23 15:38:25.184
• [86.343 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 12/15/23 15:38:25.187
  Dec 15 15:38:25.187: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:38:25.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:38:25.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:38:25.194
  STEP: creating service multi-endpoint-test in namespace services-3481 @ 12/15/23 15:38:25.195
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3481 to expose endpoints map[] @ 12/15/23 15:38:25.2
  Dec 15 15:38:25.202: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1215 15:38:25.664075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:38:26.210: INFO: successfully validated that service multi-endpoint-test in namespace services-3481 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3481 @ 12/15/23 15:38:26.21
  E1215 15:38:26.664660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:27.664738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3481 to expose endpoints map[pod1:[100]] @ 12/15/23 15:38:28.224
  Dec 15 15:38:28.230: INFO: successfully validated that service multi-endpoint-test in namespace services-3481 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3481 @ 12/15/23 15:38:28.23
  E1215 15:38:28.665104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:29.665244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3481 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/15/23 15:38:30.242
  Dec 15 15:38:30.255: INFO: successfully validated that service multi-endpoint-test in namespace services-3481 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/15/23 15:38:30.255
  Dec 15 15:38:30.255: INFO: Creating new exec pod
  E1215 15:38:30.665448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:31.665584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:32.666365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:38:33.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-3481 exec execpodlm2mc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Dec 15 15:38:33.430: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Dec 15 15:38:33.430: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:38:33.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-3481 exec execpodlm2mc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.195.42 80'
  Dec 15 15:38:33.589: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.195.42 80\nConnection to 10.105.195.42 80 port [tcp/http] succeeded!\n"
  Dec 15 15:38:33.589: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:38:33.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-3481 exec execpodlm2mc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  E1215 15:38:33.666880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:38:33.732: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Dec 15 15:38:33.732: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 15 15:38:33.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=services-3481 exec execpodlm2mc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.195.42 81'
  Dec 15 15:38:33.898: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.195.42 81\nConnection to 10.105.195.42 81 port [tcp/*] succeeded!\n"
  Dec 15 15:38:33.898: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3481 @ 12/15/23 15:38:33.898
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3481 to expose endpoints map[pod2:[101]] @ 12/15/23 15:38:33.909
  Dec 15 15:38:33.922: INFO: successfully validated that service multi-endpoint-test in namespace services-3481 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3481 @ 12/15/23 15:38:33.922
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3481 to expose endpoints map[] @ 12/15/23 15:38:33.934
  Dec 15 15:38:33.940: INFO: successfully validated that service multi-endpoint-test in namespace services-3481 exposes endpoints map[]
  Dec 15 15:38:33.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3481" for this suite. @ 12/15/23 15:38:33.953
• [8.769 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/15/23 15:38:33.956
  Dec 15 15:38:33.956: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename podtemplate @ 12/15/23 15:38:33.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:38:33.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:38:33.964
  STEP: Create set of pod templates @ 12/15/23 15:38:33.966
  Dec 15 15:38:33.969: INFO: created test-podtemplate-1
  Dec 15 15:38:33.971: INFO: created test-podtemplate-2
  Dec 15 15:38:33.973: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/15/23 15:38:33.973
  STEP: delete collection of pod templates @ 12/15/23 15:38:33.974
  Dec 15 15:38:33.974: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/15/23 15:38:33.981
  Dec 15 15:38:33.981: INFO: requesting list of pod templates to confirm quantity
  Dec 15 15:38:33.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2933" for this suite. @ 12/15/23 15:38:33.984
• [0.031 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/15/23 15:38:33.987
  Dec 15 15:38:33.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename containers @ 12/15/23 15:38:33.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:38:33.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:38:33.995
  STEP: Creating a pod to test override all @ 12/15/23 15:38:33.997
  E1215 15:38:34.666934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:35.667849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:36.668443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:37.668762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:38:38.009
  Dec 15 15:38:38.011: INFO: Trying to get logs from node talos-default-worker-1 pod client-containers-ffce527b-edcc-4983-a6d2-7dc8587db886 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:38:38.014
  Dec 15 15:38:38.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-829" for this suite. @ 12/15/23 15:38:38.025
• [4.041 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/15/23 15:38:38.029
  Dec 15 15:38:38.029: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 15:38:38.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:38:38.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:38:38.039
  STEP: Create set of pods @ 12/15/23 15:38:38.041
  Dec 15 15:38:38.046: INFO: created test-pod-1
  Dec 15 15:38:38.049: INFO: created test-pod-2
  Dec 15 15:38:38.051: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/15/23 15:38:38.051
  E1215 15:38:38.669651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:39.669908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 12/15/23 15:38:40.083
  Dec 15 15:38:40.087: INFO: Pod quantity 3 is different from expected quantity 0
  E1215 15:38:40.670832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:38:41.086: INFO: Pod quantity 3 is different from expected quantity 0
  E1215 15:38:41.671678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:38:42.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2897" for this suite. @ 12/15/23 15:38:42.089
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/15/23 15:38:42.094
  Dec 15 15:38:42.094: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pod-network-test @ 12/15/23 15:38:42.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:38:42.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:38:42.104
  STEP: Performing setup for networking test in namespace pod-network-test-8053 @ 12/15/23 15:38:42.106
  STEP: creating a selector @ 12/15/23 15:38:42.106
  STEP: Creating the service pods in kubernetes @ 12/15/23 15:38:42.106
  Dec 15 15:38:42.106: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1215 15:38:42.671881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:43.672418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:44.673400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:45.673757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:46.674921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:47.675128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:48.676158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:49.676313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:50.676575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:51.676672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:52.677483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:53.677918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/15/23 15:38:54.153
  E1215 15:38:54.678640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:55.678734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:38:56.170: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Dec 15 15:38:56.170: INFO: Going to poll 10.244.1.161 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Dec 15 15:38:56.172: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.161:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8053 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:38:56.172: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:38:56.173: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:38:56.173: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8053/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.161%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 15 15:38:56.256: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 15 15:38:56.256: INFO: Going to poll 10.244.4.33 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Dec 15 15:38:56.259: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.4.33:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8053 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:38:56.259: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:38:56.259: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:38:56.259: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8053/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.4.33%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 15 15:38:56.354: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 15 15:38:56.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8053" for this suite. @ 12/15/23 15:38:56.358
• [14.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/15/23 15:38:56.364
  Dec 15 15:38:56.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 15:38:56.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:38:56.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:38:56.377
  STEP: Creating configMap with name configmap-test-volume-map-7a143a9e-6720-4f87-bed1-cb192d3e6ab8 @ 12/15/23 15:38:56.38
  STEP: Creating a pod to test consume configMaps @ 12/15/23 15:38:56.383
  E1215 15:38:56.678936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:57.679461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:38:58.396
  Dec 15 15:38:58.399: INFO: Trying to get logs from node talos-default-worker-2 pod pod-configmaps-da67473e-19fd-4bf8-8545-0b6cef6f4e1c container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:38:58.403
  Dec 15 15:38:58.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4222" for this suite. @ 12/15/23 15:38:58.417
• [2.058 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 12/15/23 15:38:58.422
  Dec 15 15:38:58.422: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename statefulset @ 12/15/23 15:38:58.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:38:58.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:38:58.434
  STEP: Creating service test in namespace statefulset-7466 @ 12/15/23 15:38:58.436
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/15/23 15:38:58.439
  STEP: Creating stateful set ss in namespace statefulset-7466 @ 12/15/23 15:38:58.442
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7466 @ 12/15/23 15:38:58.446
  Dec 15 15:38:58.449: INFO: Found 0 stateful pods, waiting for 1
  E1215 15:38:58.679904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:38:59.680689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:00.680822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:01.681009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:02.681162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:03.681440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:04.681634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:05.681791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:06.681972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:07.682074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:08.450: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/15/23 15:39:08.45
  Dec 15 15:39:08.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7466 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 15:39:08.595: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 15:39:08.595: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 15:39:08.595: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 15 15:39:08.598: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1215 15:39:08.682128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:09.682563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:10.682724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:11.682947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:12.683061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:13.683285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:14.684138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:15.684377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:16.684505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:17.684647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:18.599: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 15 15:39:18.599: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 15 15:39:18.613: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999978s
  E1215 15:39:18.685376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:19.616: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996819833s
  E1215 15:39:19.685945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:20.621: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.993179993s
  E1215 15:39:20.686351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:21.624: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.98882366s
  E1215 15:39:21.687368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:22.627: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.985761892s
  E1215 15:39:22.687435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:23.630: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.981989009s
  E1215 15:39:23.687940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:24.634: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.979228612s
  E1215 15:39:24.688763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:25.638: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.974965409s
  E1215 15:39:25.689333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:26.642: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.9713992s
  E1215 15:39:26.689659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:27.644: INFO: Verifying statefulset ss doesn't scale past 1 for another 967.487662ms
  E1215 15:39:27.689944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7466 @ 12/15/23 15:39:28.645
  Dec 15 15:39:28.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7466 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1215 15:39:28.690595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:28.761: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 15 15:39:28.761: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 15 15:39:28.761: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 15 15:39:28.764: INFO: Found 1 stateful pods, waiting for 3
  E1215 15:39:29.691293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:30.691490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:31.691903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:32.692837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:33.693299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:34.693447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:35.693633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:36.693943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:37.694183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:38.694519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:38.765: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 15:39:38.765: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 15 15:39:38.765: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/15/23 15:39:38.765
  STEP: Scale down will halt with unhealthy stateful pod @ 12/15/23 15:39:38.765
  Dec 15 15:39:38.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7466 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 15:39:38.871: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 15:39:38.871: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 15:39:38.871: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 15 15:39:38.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7466 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 15:39:38.999: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 15:39:38.999: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 15:39:38.999: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 15 15:39:38.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7466 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 15 15:39:39.153: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 15 15:39:39.153: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 15 15:39:39.153: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 15 15:39:39.153: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 15 15:39:39.156: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E1215 15:39:39.694633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:40.695409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:41.695460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:42.695561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:43.695911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:44.695989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:45.696151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:46.696235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:47.696341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:39:48.696857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:49.159: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 15 15:39:49.159: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 15 15:39:49.159: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 15 15:39:49.167: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.9999999s
  E1215 15:39:49.697716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:50.171: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997281822s
  E1215 15:39:50.698725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:51.173: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993188962s
  E1215 15:39:51.699582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:52.177: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.99051457s
  E1215 15:39:52.699767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:53.180: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.987183542s
  E1215 15:39:53.700785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:54.184: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.984157333s
  E1215 15:39:54.701642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:55.186: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.980302324s
  E1215 15:39:55.702441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:56.191: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.977445135s
  E1215 15:39:56.702635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:57.193: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.973347564s
  E1215 15:39:57.702726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:39:58.197: INFO: Verifying statefulset ss doesn't scale past 3 for another 971.031754ms
  E1215 15:39:58.703112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7466 @ 12/15/23 15:39:59.197
  Dec 15 15:39:59.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7466 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 15 15:39:59.297: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 15 15:39:59.297: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 15 15:39:59.297: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 15 15:39:59.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7466 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 15 15:39:59.382: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 15 15:39:59.382: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 15 15:39:59.382: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 15 15:39:59.382: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=statefulset-7466 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 15 15:39:59.484: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 15 15:39:59.484: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 15 15:39:59.484: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 15 15:39:59.484: INFO: Scaling statefulset ss to 0
  E1215 15:39:59.703437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:00.704223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:01.705043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:02.706116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:03.706515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:04.707419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:05.707533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:06.707712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:07.707908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:08.708369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/15/23 15:40:09.493
  Dec 15 15:40:09.493: INFO: Deleting all statefulset in ns statefulset-7466
  Dec 15 15:40:09.496: INFO: Scaling statefulset ss to 0
  Dec 15 15:40:09.506: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 15 15:40:09.509: INFO: Deleting statefulset ss
  Dec 15 15:40:09.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7466" for this suite. @ 12/15/23 15:40:09.524
• [71.108 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 12/15/23 15:40:09.531
  Dec 15 15:40:09.531: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-probe @ 12/15/23 15:40:09.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:40:09.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:40:09.544
  STEP: Creating pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338 @ 12/15/23 15:40:09.547
  E1215 15:40:09.709303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:10.709585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/23 15:40:11.56
  Dec 15 15:40:11.562: INFO: Initial restart count of pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd is 0
  Dec 15 15:40:11.563: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:11.710085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:12.710222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:13.567: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:13.710825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:14.711080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:15.571: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:15.711064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:16.711255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:17.574: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:17.711880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:18.712415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:19.578: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:19.713083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:20.713212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:21.583: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:21.713564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:22.713773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:23.586: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:23.713851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:24.714036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:25.589: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:25.714113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:26.714636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:27.593: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:27.714701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:28.715374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:29.597: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:29.715700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:30.715837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:31.601: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:31.716457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:32.717237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:33.605: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:33.717569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:34.718103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:35.609: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:35.718942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:36.719255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:37.613: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:37.719882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:38.720367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:39.616: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:39.720780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:40.720916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:41.619: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:41.721598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:42.721702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:43.622: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:43.722614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:44.723609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:45.625: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:45.724546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:46.725442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:47.629: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:47.725463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:48.726565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:49.632: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:49.726646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:50.726816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:51.635: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:51.727088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:52.727295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:53.639: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:53.727945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:54.728610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:55.642: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:55.729223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:56.729435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:57.647: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:57.729949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:40:58.730119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:40:59.652: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  E1215 15:40:59.730516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:00.730729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:41:01.656: INFO: Get pod busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd in namespace container-probe-3338
  Dec 15 15:41:01.656: INFO: Restart count of pod container-probe-3338/busybox-d5095e03-4a32-4d67-abb9-79a97c7c60bd is now 1 (50.093704662s elapsed)
  STEP: deleting the pod @ 12/15/23 15:41:01.656
  Dec 15 15:41:01.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3338" for this suite. @ 12/15/23 15:41:01.666
• [52.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/15/23 15:41:01.67
  Dec 15 15:41:01.670: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replication-controller @ 12/15/23 15:41:01.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:01.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:01.68
  STEP: Given a ReplicationController is created @ 12/15/23 15:41:01.682
  STEP: When the matched label of one of its pods change @ 12/15/23 15:41:01.687
  Dec 15 15:41:01.689: INFO: Pod name pod-release: Found 0 pods out of 1
  E1215 15:41:01.731243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:02.731585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:03.732111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:04.732198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:05.732535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:41:06.691: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/15/23 15:41:06.696
  E1215 15:41:06.733103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:41:07.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4306" for this suite. @ 12/15/23 15:41:07.705
• [6.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/15/23 15:41:07.71
  Dec 15 15:41:07.710: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/23 15:41:07.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:07.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:07.723
  E1215 15:41:07.733519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:08.733591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:09.733690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:41:09.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8386" for this suite. @ 12/15/23 15:41:09.747
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/15/23 15:41:09.75
  Dec 15 15:41:09.750: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:41:09.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:09.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:09.757
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:41:09.759
  E1215 15:41:10.734788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:11.734907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:41:11.767
  Dec 15 15:41:11.770: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-b29eadbc-598f-4512-8c70-df3c72bef208 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:41:11.777
  Dec 15 15:41:11.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5227" for this suite. @ 12/15/23 15:41:11.79
• [2.043 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 12/15/23 15:41:11.793
  Dec 15 15:41:11.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename field-validation @ 12/15/23 15:41:11.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:11.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:11.803
  Dec 15 15:41:11.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:41:12.735897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:13.736211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:14.736932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:41:14.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9468" for this suite. @ 12/15/23 15:41:14.862
• [3.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 12/15/23 15:41:14.865
  Dec 15 15:41:14.865: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:41:14.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:14.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:14.871
  STEP: Setting up server cert @ 12/15/23 15:41:14.88
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:41:15.086
  STEP: Deploying the webhook pod @ 12/15/23 15:41:15.09
  STEP: Wait for the deployment to be ready @ 12/15/23 15:41:15.095
  Dec 15 15:41:15.098: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1215 15:41:15.737777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:16.738084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:41:17.107
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:41:17.117
  E1215 15:41:17.739094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:41:18.118: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/15/23 15:41:18.124
  STEP: create a pod that should be denied by the webhook @ 12/15/23 15:41:18.135
  STEP: create a pod that causes the webhook to hang @ 12/15/23 15:41:18.141
  E1215 15:41:18.740080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:19.740345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:20.740537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:21.740704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:22.740898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:23.741343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:24.741549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:25.741623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:26.742088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:27.742982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 12/15/23 15:41:28.146
  STEP: create a configmap that should be admitted by the webhook @ 12/15/23 15:41:28.154
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/15/23 15:41:28.161
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/15/23 15:41:28.167
  STEP: create a namespace that bypass the webhook @ 12/15/23 15:41:28.172
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/15/23 15:41:28.181
  Dec 15 15:41:28.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3089" for this suite. @ 12/15/23 15:41:28.225
  STEP: Destroying namespace "webhook-markers-795" for this suite. @ 12/15/23 15:41:28.23
  STEP: Destroying namespace "exempted-namespace-5610" for this suite. @ 12/15/23 15:41:28.233
• [13.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 12/15/23 15:41:28.236
  Dec 15 15:41:28.236: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 15:41:28.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:28.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:28.243
  STEP: creating a ConfigMap @ 12/15/23 15:41:28.244
  STEP: fetching the ConfigMap @ 12/15/23 15:41:28.246
  STEP: patching the ConfigMap @ 12/15/23 15:41:28.248
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/15/23 15:41:28.25
  STEP: deleting the ConfigMap by collection with a label selector @ 12/15/23 15:41:28.251
  STEP: listing all ConfigMaps in test namespace @ 12/15/23 15:41:28.254
  Dec 15 15:41:28.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1165" for this suite. @ 12/15/23 15:41:28.258
• [0.024 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/15/23 15:41:28.26
  Dec 15 15:41:28.260: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename container-runtime @ 12/15/23 15:41:28.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:28.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:28.268
  STEP: create the container @ 12/15/23 15:41:28.27
  W1215 15:41:28.273850      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/15/23 15:41:28.273
  E1215 15:41:28.743388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:29.744227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:30.745202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/15/23 15:41:31.286
  STEP: the container should be terminated @ 12/15/23 15:41:31.289
  STEP: the termination message should be set @ 12/15/23 15:41:31.289
  Dec 15 15:41:31.289: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/15/23 15:41:31.289
  Dec 15 15:41:31.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3787" for this suite. @ 12/15/23 15:41:31.301
• [3.044 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/15/23 15:41:31.304
  Dec 15 15:41:31.304: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:41:31.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:31.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:31.315
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:41:31.318
  E1215 15:41:31.745314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:32.745609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:33.746609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:34.747165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:41:35.332
  Dec 15 15:41:35.335: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-87e2e4d8-0db8-4223-b614-ffe13db8c2d5 container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:41:35.339
  Dec 15 15:41:35.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6532" for this suite. @ 12/15/23 15:41:35.349
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 12/15/23 15:41:35.353
  Dec 15 15:41:35.353: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename job @ 12/15/23 15:41:35.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:35.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:35.363
  STEP: Creating a job @ 12/15/23 15:41:35.365
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/15/23 15:41:35.367
  E1215 15:41:35.747251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:36.747468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/15/23 15:41:37.371
  STEP: updating /status @ 12/15/23 15:41:37.375
  STEP: get /status @ 12/15/23 15:41:37.38
  Dec 15 15:41:37.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-448" for this suite. @ 12/15/23 15:41:37.387
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/15/23 15:41:37.393
  Dec 15 15:41:37.393: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pod-network-test @ 12/15/23 15:41:37.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:37.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:37.406
  STEP: Performing setup for networking test in namespace pod-network-test-5945 @ 12/15/23 15:41:37.408
  STEP: creating a selector @ 12/15/23 15:41:37.408
  STEP: Creating the service pods in kubernetes @ 12/15/23 15:41:37.408
  Dec 15 15:41:37.408: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1215 15:41:37.749151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:38.749637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:39.750134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:40.750329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:41.750901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:42.751215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:43.751726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:44.752576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:45.753619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:46.753815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:47.754082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:48.754595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/15/23 15:41:49.46
  E1215 15:41:49.755066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:50.755419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:41:51.483: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Dec 15 15:41:51.483: INFO: Going to poll 10.244.1.174 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Dec 15 15:41:51.485: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.174 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5945 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:41:51.485: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:41:51.486: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:41:51.486: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5945/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.174+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1215 15:41:51.755970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:41:52.568: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 15 15:41:52.568: INFO: Going to poll 10.244.4.36 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Dec 15 15:41:52.571: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.4.36 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5945 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:41:52.571: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:41:52.571: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:41:52.571: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5945/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.4.36+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1215 15:41:52.756700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:41:53.656: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 15 15:41:53.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5945" for this suite. @ 12/15/23 15:41:53.66
• [16.272 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 12/15/23 15:41:53.665
  Dec 15 15:41:53.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename kubectl @ 12/15/23 15:41:53.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:53.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:53.684
  STEP: Starting the proxy @ 12/15/23 15:41:53.687
  Dec 15 15:41:53.687: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1479595787 --namespace=kubectl-7987 proxy --unix-socket=/tmp/kubectl-proxy-unix1052829069/test'
  STEP: retrieving proxy /api/ output @ 12/15/23 15:41:53.736
  Dec 15 15:41:53.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7987" for this suite. @ 12/15/23 15:41:53.741
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/15/23 15:41:53.747
  Dec 15 15:41:53.747: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:41:53.748
  E1215 15:41:53.756870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:53.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:53.761
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/15/23 15:41:53.764
  E1215 15:41:54.757174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:55.757753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:41:55.778
  Dec 15 15:41:55.780: INFO: Trying to get logs from node talos-default-worker-2 pod pod-35ffaed9-05c2-4c16-9135-70c656cd92f8 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:41:55.787
  Dec 15 15:41:55.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5131" for this suite. @ 12/15/23 15:41:55.802
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/15/23 15:41:55.807
  Dec 15 15:41:55.807: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:41:55.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:55.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:55.818
  STEP: Creating projection with secret that has name projected-secret-test-be80f8ae-0171-4cef-b3f2-1fa659e7cb69 @ 12/15/23 15:41:55.82
  STEP: Creating a pod to test consume secrets @ 12/15/23 15:41:55.824
  E1215 15:41:56.757935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:57.758053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:41:57.835
  Dec 15 15:41:57.838: INFO: Trying to get logs from node talos-default-worker-2 pod pod-projected-secrets-b9d2b291-8561-442f-9374-e1ff53d40dd2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 15:41:57.844
  Dec 15 15:41:57.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5514" for this suite. @ 12/15/23 15:41:57.86
• [2.059 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/15/23 15:41:57.866
  Dec 15 15:41:57.866: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename discovery @ 12/15/23 15:41:57.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:57.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:57.88
  STEP: Setting up server cert @ 12/15/23 15:41:57.883
  Dec 15 15:41:58.060: INFO: Checking APIGroup: apiregistration.k8s.io
  Dec 15 15:41:58.061: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Dec 15 15:41:58.061: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Dec 15 15:41:58.061: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Dec 15 15:41:58.061: INFO: Checking APIGroup: apps
  Dec 15 15:41:58.062: INFO: PreferredVersion.GroupVersion: apps/v1
  Dec 15 15:41:58.062: INFO: Versions found [{apps/v1 v1}]
  Dec 15 15:41:58.062: INFO: apps/v1 matches apps/v1
  Dec 15 15:41:58.062: INFO: Checking APIGroup: events.k8s.io
  Dec 15 15:41:58.063: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Dec 15 15:41:58.063: INFO: Versions found [{events.k8s.io/v1 v1}]
  Dec 15 15:41:58.063: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Dec 15 15:41:58.063: INFO: Checking APIGroup: authentication.k8s.io
  Dec 15 15:41:58.064: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Dec 15 15:41:58.064: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Dec 15 15:41:58.064: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Dec 15 15:41:58.064: INFO: Checking APIGroup: authorization.k8s.io
  Dec 15 15:41:58.065: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Dec 15 15:41:58.065: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Dec 15 15:41:58.065: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Dec 15 15:41:58.065: INFO: Checking APIGroup: autoscaling
  Dec 15 15:41:58.066: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Dec 15 15:41:58.066: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Dec 15 15:41:58.066: INFO: autoscaling/v2 matches autoscaling/v2
  Dec 15 15:41:58.066: INFO: Checking APIGroup: batch
  Dec 15 15:41:58.067: INFO: PreferredVersion.GroupVersion: batch/v1
  Dec 15 15:41:58.067: INFO: Versions found [{batch/v1 v1}]
  Dec 15 15:41:58.067: INFO: batch/v1 matches batch/v1
  Dec 15 15:41:58.067: INFO: Checking APIGroup: certificates.k8s.io
  Dec 15 15:41:58.068: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Dec 15 15:41:58.068: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Dec 15 15:41:58.068: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Dec 15 15:41:58.068: INFO: Checking APIGroup: networking.k8s.io
  Dec 15 15:41:58.068: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Dec 15 15:41:58.068: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Dec 15 15:41:58.068: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Dec 15 15:41:58.068: INFO: Checking APIGroup: policy
  Dec 15 15:41:58.069: INFO: PreferredVersion.GroupVersion: policy/v1
  Dec 15 15:41:58.069: INFO: Versions found [{policy/v1 v1}]
  Dec 15 15:41:58.069: INFO: policy/v1 matches policy/v1
  Dec 15 15:41:58.069: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Dec 15 15:41:58.070: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Dec 15 15:41:58.070: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Dec 15 15:41:58.070: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Dec 15 15:41:58.070: INFO: Checking APIGroup: storage.k8s.io
  Dec 15 15:41:58.071: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Dec 15 15:41:58.071: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Dec 15 15:41:58.071: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Dec 15 15:41:58.071: INFO: Checking APIGroup: admissionregistration.k8s.io
  Dec 15 15:41:58.072: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Dec 15 15:41:58.072: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Dec 15 15:41:58.072: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Dec 15 15:41:58.072: INFO: Checking APIGroup: apiextensions.k8s.io
  Dec 15 15:41:58.073: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Dec 15 15:41:58.073: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Dec 15 15:41:58.073: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Dec 15 15:41:58.073: INFO: Checking APIGroup: scheduling.k8s.io
  Dec 15 15:41:58.073: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Dec 15 15:41:58.073: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Dec 15 15:41:58.073: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Dec 15 15:41:58.073: INFO: Checking APIGroup: coordination.k8s.io
  Dec 15 15:41:58.074: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Dec 15 15:41:58.074: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Dec 15 15:41:58.074: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Dec 15 15:41:58.074: INFO: Checking APIGroup: node.k8s.io
  Dec 15 15:41:58.075: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Dec 15 15:41:58.075: INFO: Versions found [{node.k8s.io/v1 v1}]
  Dec 15 15:41:58.075: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Dec 15 15:41:58.075: INFO: Checking APIGroup: discovery.k8s.io
  Dec 15 15:41:58.076: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Dec 15 15:41:58.076: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Dec 15 15:41:58.076: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Dec 15 15:41:58.076: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Dec 15 15:41:58.077: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Dec 15 15:41:58.077: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Dec 15 15:41:58.077: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Dec 15 15:41:58.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4430" for this suite. @ 12/15/23 15:41:58.08
• [0.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/15/23 15:41:58.086
  Dec 15 15:41:58.086: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename configmap @ 12/15/23 15:41:58.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:41:58.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:41:58.098
  STEP: Creating configMap with name configmap-test-volume-feb967b8-35ed-4dbe-a393-94e16a1999da @ 12/15/23 15:41:58.1
  STEP: Creating a pod to test consume configMaps @ 12/15/23 15:41:58.103
  E1215 15:41:58.758139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:41:59.758447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:00.758514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:01.759305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:42:02.12
  Dec 15 15:42:02.123: INFO: Trying to get logs from node talos-default-worker-2 pod pod-configmaps-6d6b37cb-d680-4e6f-933d-0c4afd3bf4bb container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/23 15:42:02.127
  Dec 15 15:42:02.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2973" for this suite. @ 12/15/23 15:42:02.141
• [4.060 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/15/23 15:42:02.146
  Dec 15 15:42:02.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename daemonsets @ 12/15/23 15:42:02.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:42:02.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:42:02.159
  STEP: Creating simple DaemonSet "daemon-set" @ 12/15/23 15:42:02.175
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/23 15:42:02.18
  Dec 15 15:42:02.183: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:02.183: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:02.183: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:02.186: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:42:02.186: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:42:02.759392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:03.184: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:03.184: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:03.184: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:03.186: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 15 15:42:03.186: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E1215 15:42:03.759922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:04.183: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:04.183: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:04.183: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:04.186: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 15 15:42:04.186: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/15/23 15:42:04.188
  Dec 15 15:42:04.196: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:04.196: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:04.196: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:04.198: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 15 15:42:04.198: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E1215 15:42:04.760007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:05.197: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:05.197: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:05.197: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:05.199: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 15 15:42:05.199: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E1215 15:42:05.760316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:06.199: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:06.199: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:06.199: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Dec 15 15:42:06.203: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 15 15:42:06.203: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/23 15:42:06.206
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3175, will wait for the garbage collector to delete the pods @ 12/15/23 15:42:06.206
  Dec 15 15:42:06.265: INFO: Deleting DaemonSet.extensions daemon-set took: 5.407577ms
  Dec 15 15:42:06.366: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.499193ms
  E1215 15:42:06.761340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:07.569: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:42:07.569: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 15 15:42:07.571: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35288"},"items":null}

  Dec 15 15:42:07.574: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35288"},"items":null}

  Dec 15 15:42:07.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3175" for this suite. @ 12/15/23 15:42:07.587
• [5.446 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 12/15/23 15:42:07.592
  Dec 15 15:42:07.592: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename dns @ 12/15/23 15:42:07.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:42:07.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:42:07.605
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/15/23 15:42:07.608
  Dec 15 15:42:07.614: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9318  ec896114-2e32-49f8-8c87-2900cc75ecdd 35293 0 2023-12-15 15:42:07 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-12-15 15:42:07 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-klbzr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-klbzr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1215 15:42:07.762281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:08.762801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/15/23 15:42:09.622
  Dec 15 15:42:09.622: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9318 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:42:09.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:42:09.623: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:42:09.623: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9318/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/15/23 15:42:09.729
  Dec 15 15:42:09.729: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9318 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:42:09.729: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:42:09.729: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:42:09.729: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9318/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1215 15:42:09.763342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:09.843: INFO: Deleting pod test-dns-nameservers...
  Dec 15 15:42:09.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9318" for this suite. @ 12/15/23 15:42:09.86
• [2.272 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 12/15/23 15:42:09.863
  Dec 15 15:42:09.863: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 15:42:09.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:42:09.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:42:09.872
  STEP: Creating a ResourceQuota @ 12/15/23 15:42:09.873
  STEP: Getting a ResourceQuota @ 12/15/23 15:42:09.875
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/15/23 15:42:09.877
  STEP: Patching the ResourceQuota @ 12/15/23 15:42:09.878
  STEP: Deleting a Collection of ResourceQuotas @ 12/15/23 15:42:09.881
  STEP: Verifying the deleted ResourceQuota @ 12/15/23 15:42:09.885
  Dec 15 15:42:09.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2509" for this suite. @ 12/15/23 15:42:09.889
• [0.029 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 12/15/23 15:42:09.892
  Dec 15 15:42:09.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename statefulset @ 12/15/23 15:42:09.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:42:09.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:42:09.9
  STEP: Creating service test in namespace statefulset-7160 @ 12/15/23 15:42:09.901
  STEP: Creating statefulset ss in namespace statefulset-7160 @ 12/15/23 15:42:09.904
  Dec 15 15:42:09.909: INFO: Found 0 stateful pods, waiting for 1
  E1215 15:42:10.763380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:11.764265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:12.764359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:13.764613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:14.764785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:15.765285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:16.765531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:17.765806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:18.766120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:19.766966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:19.910: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/15/23 15:42:19.916
  STEP: updating a scale subresource @ 12/15/23 15:42:19.919
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/15/23 15:42:19.923
  STEP: Patch a scale subresource @ 12/15/23 15:42:19.925
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/15/23 15:42:19.93
  Dec 15 15:42:19.934: INFO: Deleting all statefulset in ns statefulset-7160
  Dec 15 15:42:19.936: INFO: Scaling statefulset ss to 0
  E1215 15:42:20.767220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:21.767613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:22.767669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:23.768006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:24.768108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:25.768508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:26.768678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:27.769020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:28.769650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:29.769837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:29.948: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 15 15:42:29.952: INFO: Deleting statefulset ss
  Dec 15 15:42:29.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7160" for this suite. @ 12/15/23 15:42:29.964
• [20.075 seconds]
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/15/23 15:42:29.967
  Dec 15 15:42:29.967: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 15:42:29.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:42:29.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:42:29.976
  Dec 15 15:42:29.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: creating the pod @ 12/15/23 15:42:29.978
  STEP: submitting the pod to kubernetes @ 12/15/23 15:42:29.978
  E1215 15:42:30.770416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:31.770659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:32.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6111" for this suite. @ 12/15/23 15:42:32.071
• [2.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/15/23 15:42:32.076
  Dec 15 15:42:32.076: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename chunking @ 12/15/23 15:42:32.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:42:32.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:42:32.088
  STEP: creating a large number of resources @ 12/15/23 15:42:32.09
  E1215 15:42:32.771337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:33.772206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:34.772739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:35.772794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:36.773063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:37.773471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:38.774066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:39.774886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:40.775175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:41.775677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:42.776016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:43.776185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:44.776984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:45.778021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:46.778212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:47.778923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:48.779852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:49.780210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 12/15/23 15:42:49.781
  Dec 15 15:42:49.831: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 15 15:42:49.880: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 15 15:42:49.930: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 15 15:42:49.980: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 15 15:42:50.030: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 15 15:42:50.080: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 15 15:42:50.130: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 15 15:42:50.181: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 15 15:42:50.231: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 15 15:42:50.281: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 15 15:42:50.332: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 15 15:42:50.380: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 15 15:42:50.431: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 15 15:42:50.480: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 15 15:42:50.531: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 15 15:42:50.580: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 15 15:42:50.630: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 15 15:42:50.685: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 15 15:42:50.731: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  E1215 15:42:50.780775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:50.780: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 15 15:42:50.830: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 15 15:42:50.881: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 15 15:42:50.930: INFO: Retrieved 17/17 results with rv 35933 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 15 15:42:50.981: INFO: Retrieved 9/17 results with rv 35933 and continue 
  Dec 15 15:42:51.031: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 15 15:42:51.081: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 15 15:42:51.130: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 15 15:42:51.181: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 15 15:42:51.231: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 15 15:42:51.279: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 15 15:42:51.331: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 15 15:42:51.381: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 15 15:42:51.431: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 15 15:42:51.481: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 15 15:42:51.530: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 15 15:42:51.581: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 15 15:42:51.631: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 15 15:42:51.681: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 15 15:42:51.731: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  E1215 15:42:51.780810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:51.780: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 15 15:42:51.831: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 15 15:42:51.881: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 15 15:42:51.931: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 15 15:42:51.980: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 15 15:42:52.030: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 15 15:42:52.080: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 15 15:42:52.130: INFO: Retrieved 17/17 results with rv 35934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 15 15:42:52.179: INFO: Retrieved 9/17 results with rv 35934 and continue 
  Dec 15 15:42:52.230: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 15 15:42:52.280: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 15 15:42:52.330: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 15 15:42:52.381: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 15 15:42:52.431: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 15 15:42:52.480: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 15 15:42:52.531: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 15 15:42:52.580: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 15 15:42:52.631: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 15 15:42:52.681: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 15 15:42:52.731: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  E1215 15:42:52.781117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:52.781: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 15 15:42:52.830: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 15 15:42:52.881: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 15 15:42:52.931: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 15 15:42:52.980: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 15 15:42:53.031: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 15 15:42:53.080: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 15 15:42:53.130: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 15 15:42:53.181: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 15 15:42:53.231: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 15 15:42:53.281: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 15 15:42:53.330: INFO: Retrieved 17/17 results with rv 35938 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU5MzgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 15 15:42:53.381: INFO: Retrieved 9/17 results with rv 35938 and continue 
  STEP: retrieving those results all at once @ 12/15/23 15:42:53.381
  Dec 15 15:42:53.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3567" for this suite. @ 12/15/23 15:42:53.481
• [21.457 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/15/23 15:42:53.533
  Dec 15 15:42:53.533: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/23 15:42:53.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:42:53.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:42:53.547
  Dec 15 15:42:53.563: INFO: created pod pod-service-account-defaultsa
  Dec 15 15:42:53.563: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Dec 15 15:42:53.567: INFO: created pod pod-service-account-mountsa
  Dec 15 15:42:53.567: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Dec 15 15:42:53.572: INFO: created pod pod-service-account-nomountsa
  Dec 15 15:42:53.572: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Dec 15 15:42:53.578: INFO: created pod pod-service-account-defaultsa-mountspec
  Dec 15 15:42:53.578: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Dec 15 15:42:53.584: INFO: created pod pod-service-account-mountsa-mountspec
  Dec 15 15:42:53.584: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Dec 15 15:42:53.589: INFO: created pod pod-service-account-nomountsa-mountspec
  Dec 15 15:42:53.589: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Dec 15 15:42:53.593: INFO: created pod pod-service-account-defaultsa-nomountspec
  Dec 15 15:42:53.593: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Dec 15 15:42:53.598: INFO: created pod pod-service-account-mountsa-nomountspec
  Dec 15 15:42:53.598: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Dec 15 15:42:53.604: INFO: created pod pod-service-account-nomountsa-nomountspec
  Dec 15 15:42:53.604: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Dec 15 15:42:53.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3784" for this suite. @ 12/15/23 15:42:53.608
• [0.080 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 12/15/23 15:42:53.614
  Dec 15 15:42:53.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 15:42:53.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:42:53.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:42:53.624
  STEP: Creating a ResourceQuota @ 12/15/23 15:42:53.626
  STEP: Getting a ResourceQuota @ 12/15/23 15:42:53.628
  STEP: Updating a ResourceQuota @ 12/15/23 15:42:53.63
  STEP: Verifying a ResourceQuota was modified @ 12/15/23 15:42:53.635
  STEP: Deleting a ResourceQuota @ 12/15/23 15:42:53.64
  STEP: Verifying the deleted ResourceQuota @ 12/15/23 15:42:53.645
  Dec 15 15:42:53.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8249" for this suite. @ 12/15/23 15:42:53.65
• [0.040 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 12/15/23 15:42:53.654
  Dec 15 15:42:53.654: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/23 15:42:53.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:42:53.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:42:53.664
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/15/23 15:42:53.666
  Dec 15 15:42:53.666: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:42:53.781496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:54.781919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:55.782895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:56.783824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:57.784318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/15/23 15:42:58.692
  Dec 15 15:42:58.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:42:58.785229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:42:59.785657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:42:59.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:43:00.786525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:01.786800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:02.787102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:03.787157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:04.787986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:43:04.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5650" for this suite. @ 12/15/23 15:43:04.952
• [11.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/15/23 15:43:04.956
  Dec 15 15:43:04.956: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename subjectreview @ 12/15/23 15:43:04.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:04.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:04.971
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7629" @ 12/15/23 15:43:04.973
  Dec 15 15:43:04.976: INFO: saUsername: "system:serviceaccount:subjectreview-7629:e2e"
  Dec 15 15:43:04.976: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7629"}
  Dec 15 15:43:04.976: INFO: saUID: "4348395a-e38b-4907-aeef-79a467a30a87"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7629:e2e" @ 12/15/23 15:43:04.976
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7629:e2e" @ 12/15/23 15:43:04.976
  Dec 15 15:43:04.978: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7629:e2e" api 'list' configmaps in "subjectreview-7629" namespace @ 12/15/23 15:43:04.978
  Dec 15 15:43:04.979: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7629:e2e" @ 12/15/23 15:43:04.979
  Dec 15 15:43:04.981: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Dec 15 15:43:04.981: INFO: LocalSubjectAccessReview has been verified
  Dec 15 15:43:04.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7629" for this suite. @ 12/15/23 15:43:04.984
• [0.032 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/15/23 15:43:04.988
  Dec 15 15:43:04.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename namespaces @ 12/15/23 15:43:04.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:04.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:05
  STEP: creating a Namespace @ 12/15/23 15:43:05.002
  STEP: patching the Namespace @ 12/15/23 15:43:05.009
  STEP: get the Namespace and ensuring it has the label @ 12/15/23 15:43:05.012
  Dec 15 15:43:05.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3410" for this suite. @ 12/15/23 15:43:05.015
  STEP: Destroying namespace "nspatchtest-fc5e6d40-b98a-4aa3-9f1e-168b02736c89-7341" for this suite. @ 12/15/23 15:43:05.017
• [0.032 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 12/15/23 15:43:05.02
  Dec 15 15:43:05.020: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename webhook @ 12/15/23 15:43:05.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:05.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:05.03
  STEP: Setting up server cert @ 12/15/23 15:43:05.041
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/23 15:43:05.261
  STEP: Deploying the webhook pod @ 12/15/23 15:43:05.266
  STEP: Wait for the deployment to be ready @ 12/15/23 15:43:05.271
  Dec 15 15:43:05.275: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1215 15:43:05.788650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:06.789618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/23 15:43:07.283
  STEP: Verifying the service has paired with the endpoint @ 12/15/23 15:43:07.294
  E1215 15:43:07.790073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:43:08.294: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 15 15:43:08.300: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  E1215 15:43:08.790886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9005-crds.webhook.example.com via the AdmissionRegistration API @ 12/15/23 15:43:08.808
  STEP: Creating a custom resource while v1 is storage version @ 12/15/23 15:43:08.816
  E1215 15:43:09.790983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:10.791203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/15/23 15:43:10.835
  STEP: Patching the custom resource while v2 is storage version @ 12/15/23 15:43:10.849
  Dec 15 15:43:11.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8185" for this suite. @ 12/15/23 15:43:11.414
  STEP: Destroying namespace "webhook-markers-3180" for this suite. @ 12/15/23 15:43:11.417
• [6.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/15/23 15:43:11.42
  Dec 15 15:43:11.420: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename deployment @ 12/15/23 15:43:11.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:11.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:11.435
  STEP: creating a Deployment @ 12/15/23 15:43:11.44
  Dec 15 15:43:11.440: INFO: Creating simple deployment test-deployment-vndvc
  Dec 15 15:43:11.449: INFO: deployment "test-deployment-vndvc" doesn't have the required revision set
  E1215 15:43:11.791874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:12.792091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 12/15/23 15:43:13.458
  Dec 15 15:43:13.460: INFO: Deployment test-deployment-vndvc has Conditions: [{Available True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:12 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vndvc-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/15/23 15:43:13.46
  Dec 15 15:43:13.465: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 43, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 43, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 43, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 43, 11, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-vndvc-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/15/23 15:43:13.466
  Dec 15 15:43:13.467: INFO: Observed &Deployment event: ADDED
  Dec 15 15:43:13.467: INFO: Observed Deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vndvc-5d576bd769"}
  Dec 15 15:43:13.467: INFO: Observed &Deployment event: MODIFIED
  Dec 15 15:43:13.467: INFO: Observed Deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vndvc-5d576bd769"}
  Dec 15 15:43:13.467: INFO: Observed Deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 15 15:43:13.467: INFO: Observed &Deployment event: MODIFIED
  Dec 15 15:43:13.467: INFO: Observed Deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 15 15:43:13.467: INFO: Observed Deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vndvc-5d576bd769" is progressing.}
  Dec 15 15:43:13.467: INFO: Observed &Deployment event: MODIFIED
  Dec 15 15:43:13.467: INFO: Observed Deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:12 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 15 15:43:13.467: INFO: Observed Deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vndvc-5d576bd769" has successfully progressed.}
  Dec 15 15:43:13.467: INFO: Observed &Deployment event: MODIFIED
  Dec 15 15:43:13.467: INFO: Observed Deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:12 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 15 15:43:13.467: INFO: Observed Deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vndvc-5d576bd769" has successfully progressed.}
  Dec 15 15:43:13.467: INFO: Found Deployment test-deployment-vndvc in namespace deployment-2340 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 15 15:43:13.467: INFO: Deployment test-deployment-vndvc has an updated status
  STEP: patching the Statefulset Status @ 12/15/23 15:43:13.467
  Dec 15 15:43:13.467: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 15 15:43:13.471: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/15/23 15:43:13.471
  Dec 15 15:43:13.473: INFO: Observed &Deployment event: ADDED
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vndvc-5d576bd769"}
  Dec 15 15:43:13.473: INFO: Observed &Deployment event: MODIFIED
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vndvc-5d576bd769"}
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 15 15:43:13.473: INFO: Observed &Deployment event: MODIFIED
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:11 +0000 UTC 2023-12-15 15:43:11 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vndvc-5d576bd769" is progressing.}
  Dec 15 15:43:13.473: INFO: Observed &Deployment event: MODIFIED
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:12 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vndvc-5d576bd769" has successfully progressed.}
  Dec 15 15:43:13.473: INFO: Observed &Deployment event: MODIFIED
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:12 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-15 15:43:12 +0000 UTC 2023-12-15 15:43:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vndvc-5d576bd769" has successfully progressed.}
  Dec 15 15:43:13.473: INFO: Observed deployment test-deployment-vndvc in namespace deployment-2340 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 15 15:43:13.473: INFO: Observed &Deployment event: MODIFIED
  Dec 15 15:43:13.473: INFO: Found deployment test-deployment-vndvc in namespace deployment-2340 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Dec 15 15:43:13.473: INFO: Deployment test-deployment-vndvc has a patched status
  Dec 15 15:43:13.475: INFO: Deployment "test-deployment-vndvc":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-vndvc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2340",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50815f73-8e7d-42d5-8bf3-99bd56d804a1",
      ResourceVersion: (string) (len=5) "36652",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838251791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 15 15:43:13.479: INFO: New ReplicaSet "test-deployment-vndvc-5d576bd769" of Deployment "test-deployment-vndvc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-vndvc-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2340",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a5e00e0-404f-4b9a-a12a-3d9d1332be47",
      ResourceVersion: (string) (len=5) "36648",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838251791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-vndvc",
          UID: (types.UID) (len=36) "50815f73-8e7d-42d5-8bf3-99bd56d804a1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 30 38  |k:{\"uid\":\"508|
              00000120  31 35 66 37 33 2d 38 65  37 64 2d 34 32 64 35 2d  |15f73-8e7d-42d5-|
              00000130  38 62 66 33 2d 39 39 62  64 35 36 64 38 30 34 61  |8bf3-99bd56d804a|
              00000140  31 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |1\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 15:43:13.484: INFO: Pod "test-deployment-vndvc-5d576bd769-qt6tq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-vndvc-5d576bd769-qt6tq",
      GenerateName: (string) (len=33) "test-deployment-vndvc-5d576bd769-",
      Namespace: (string) (len=15) "deployment-2340",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "feeebf1e-c43b-452e-9d70-69c7e97dce11",
      ResourceVersion: (string) (len=5) "36647",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838251791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-vndvc-5d576bd769",
          UID: (types.UID) (len=36) "9a5e00e0-404f-4b9a-a12a-3d9d1332be47",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 39 61 35 65 30 30 65  30 2d 34 30 34 66 2d 34  |"9a5e00e0-404f-4|
              000000a0  62 39 61 2d 61 31 32 61  2d 33 64 39 64 31 33 33  |b9a-a12a-3d9d133|
              000000b0  32 62 65 34 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |2be47\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  38 32 5c 22 7d 22 3a 7b  |.244.1.182\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xw77k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xw77k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838251791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=12) "10.244.1.182",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.182"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838251791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838251791,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://590e8a1b794845ce97368da7c92eb972aeac0d31ecae4996b6a4a8eff8aa6280",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 15:43:13.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2340" for this suite. @ 12/15/23 15:43:13.488
• [2.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/15/23 15:43:13.492
  Dec 15 15:43:13.492: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename pods @ 12/15/23 15:43:13.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:13.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:13.503
  STEP: creating pod @ 12/15/23 15:43:13.505
  E1215 15:43:13.792861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:14.793296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:43:15.518: INFO: Pod pod-hostip-8db30107-115a-44f3-a0f0-7459b1362eed has hostIP: 172.20.0.6
  Dec 15 15:43:15.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4737" for this suite. @ 12/15/23 15:43:15.52
• [2.031 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 12/15/23 15:43:15.523
  Dec 15 15:43:15.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename job @ 12/15/23 15:43:15.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:15.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:15.533
  STEP: Creating a job @ 12/15/23 15:43:15.535
  STEP: Ensuring active pods == parallelism @ 12/15/23 15:43:15.537
  E1215 15:43:15.794270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:16.795297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 12/15/23 15:43:17.54
  STEP: deleting Job.batch foo in namespace job-7655, will wait for the garbage collector to delete the pods @ 12/15/23 15:43:17.54
  Dec 15 15:43:17.597: INFO: Deleting Job.batch foo took: 4.02634ms
  Dec 15 15:43:17.697: INFO: Terminating Job.batch foo pods took: 100.086649ms
  E1215 15:43:17.795361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:18.796445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 12/15/23 15:43:18.898
  Dec 15 15:43:18.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7655" for this suite. @ 12/15/23 15:43:18.904
• [3.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/15/23 15:43:18.908
  Dec 15 15:43:18.908: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/23 15:43:18.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:18.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:18.922
  STEP: Deleting RuntimeClass runtimeclass-975-delete-me @ 12/15/23 15:43:18.928
  STEP: Waiting for the RuntimeClass to disappear @ 12/15/23 15:43:18.931
  Dec 15 15:43:18.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-975" for this suite. @ 12/15/23 15:43:18.941
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/15/23 15:43:18.945
  Dec 15 15:43:18.945: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename podtemplate @ 12/15/23 15:43:18.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:18.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:18.957
  Dec 15 15:43:18.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9861" for this suite. @ 12/15/23 15:43:18.979
• [0.036 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 12/15/23 15:43:18.981
  Dec 15 15:43:18.981: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename resourcequota @ 12/15/23 15:43:18.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:18.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:18.991
  STEP: Counting existing ResourceQuota @ 12/15/23 15:43:18.993
  E1215 15:43:19.797207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:20.797604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:21.797881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:22.798110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:23.798841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/15/23 15:43:23.997
  STEP: Ensuring resource quota status is calculated @ 12/15/23 15:43:24.001
  E1215 15:43:24.799063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:25.799224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 12/15/23 15:43:26.005
  STEP: Ensuring resource quota status captures replicaset creation @ 12/15/23 15:43:26.014
  E1215 15:43:26.800104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:27.800246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 12/15/23 15:43:28.017
  STEP: Ensuring resource quota status released usage @ 12/15/23 15:43:28.019
  E1215 15:43:28.801134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:29.801636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:43:30.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3589" for this suite. @ 12/15/23 15:43:30.023
• [11.045 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/15/23 15:43:30.026
  Dec 15 15:43:30.026: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename replicaset @ 12/15/23 15:43:30.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:30.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:30.035
  STEP: Create a ReplicaSet @ 12/15/23 15:43:30.036
  STEP: Verify that the required pods have come up @ 12/15/23 15:43:30.038
  Dec 15 15:43:30.039: INFO: Pod name sample-pod: Found 0 pods out of 3
  E1215 15:43:30.802541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:31.802660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:32.802890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:33.803205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:34.803540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:43:35.043: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/15/23 15:43:35.043
  Dec 15 15:43:35.046: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/15/23 15:43:35.046
  STEP: DeleteCollection of the ReplicaSets @ 12/15/23 15:43:35.049
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/15/23 15:43:35.054
  Dec 15 15:43:35.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2315" for this suite. @ 12/15/23 15:43:35.06
• [5.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/15/23 15:43:35.066
  Dec 15 15:43:35.066: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:43:35.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:35.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:35.08
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:43:35.082
  E1215 15:43:35.803604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:36.803703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:43:37.092
  Dec 15 15:43:37.094: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-383e11a5-2556-479a-a0f2-3bb3f58c8b7a container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:43:37.101
  Dec 15 15:43:37.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1134" for this suite. @ 12/15/23 15:43:37.113
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/15/23 15:43:37.118
  Dec 15 15:43:37.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename downward-api @ 12/15/23 15:43:37.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:37.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:37.132
  STEP: Creating a pod to test downward API volume plugin @ 12/15/23 15:43:37.134
  E1215 15:43:37.804670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:38.805463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:43:39.146
  Dec 15 15:43:39.148: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-f1410616-dbc3-439e-86c4-5f867c90cf5a container client-container: <nil>
  STEP: delete the pod @ 12/15/23 15:43:39.152
  Dec 15 15:43:39.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8514" for this suite. @ 12/15/23 15:43:39.164
• [2.050 seconds]
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 12/15/23 15:43:39.168
  Dec 15 15:43:39.168: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename services @ 12/15/23 15:43:39.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:39.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:39.182
  STEP: creating a collection of services @ 12/15/23 15:43:39.185
  Dec 15 15:43:39.185: INFO: Creating e2e-svc-a-cc4js
  Dec 15 15:43:39.193: INFO: Creating e2e-svc-b-wqgrc
  Dec 15 15:43:39.202: INFO: Creating e2e-svc-c-9bmgm
  STEP: deleting service collection @ 12/15/23 15:43:39.211
  Dec 15 15:43:39.225: INFO: Collection of services has been deleted
  Dec 15 15:43:39.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3926" for this suite. @ 12/15/23 15:43:39.227
• [0.062 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 12/15/23 15:43:39.23
  Dec 15 15:43:39.230: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename disruption @ 12/15/23 15:43:39.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:39.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:39.24
  STEP: Waiting for the pdb to be processed @ 12/15/23 15:43:39.243
  E1215 15:43:39.806297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:40.806802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 12/15/23 15:43:41.26
  Dec 15 15:43:41.264: INFO: running pods: 0 < 3
  E1215 15:43:41.807200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:42.808020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:43:43.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-946" for this suite. @ 12/15/23 15:43:43.267
• [4.040 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/15/23 15:43:43.27
  Dec 15 15:43:43.270: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename chunking @ 12/15/23 15:43:43.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:43:43.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:43:43.282
  STEP: creating a large number of resources @ 12/15/23 15:43:43.284
  E1215 15:43:43.808705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:44.809550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:45.809778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:46.810798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:47.810876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:48.811309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:49.812420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:50.812451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:51.813102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:52.813960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:53.814253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:54.814538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:55.814998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:56.815204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:57.815474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:58.816288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:43:59.817265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:00.817771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 12/15/23 15:44:00.974
  Dec 15 15:44:01.025: INFO: Retrieved 40/40 results with rv 37515 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 12/15/23 15:44:01.025
  E1215 15:44:01.818370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:02.818578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:03.819000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:04.819075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:05.819223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:06.819376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:07.819488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:08.820081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:09.820386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:10.820476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:11.821400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:12.822058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:13.822191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:14.822386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:15.822528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:16.823501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:17.823681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:18.824206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:19.824286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:20.825227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:44:21.030: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:44:21.826275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:22.826869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:23.827200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:24.827590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:25.827740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:26.828524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:27.828709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:28.829179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:29.829609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:30.829791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:31.829853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:32.829930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:33.830259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:34.830484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:35.830570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:36.830795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:37.831023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:38.831344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:39.832154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:40.832252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:44:41.031: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:44:41.833079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:42.833291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:43.833575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:44.834699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:45.834766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:46.834949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:47.835095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:48.835582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:49.836371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:50.836979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:51.837176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:52.837366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:53.838254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:54.838275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:55.838583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:56.838799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:57.838967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:58.839367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:44:59.839497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:00.840168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:45:01.031: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:45:01.840298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:02.840348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:03.840681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:04.840868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:05.841222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:06.841193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:07.841287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:08.842097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:09.842296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:10.843387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:11.843698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:12.843892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:13.844126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:14.844332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:15.844553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:16.844664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:17.844861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:18.845246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:19.845407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:20.845499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:45:21.029: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:45:21.845515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:22.845630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:23.846072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:24.846257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:25.846377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:26.846550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:27.846682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:28.847244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:29.847439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:30.848535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:31.848750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:32.848990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:33.849066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:34.849213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:35.849397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:36.850234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:37.851322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:38.851771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:39.851918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:40.852801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:45:41.029: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:45:41.852916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:42.853001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:43.853213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:44.854109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:45.854319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:46.854406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:47.855343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:48.856049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:49.856326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:50.856412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:51.856663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:52.856869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:53.857186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:54.858256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:55.858469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:56.858714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:57.858892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:58.859231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:45:59.859367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:00.859552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:46:01.028: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:46:01.860398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:02.861317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:03.861537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:04.861715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:05.861927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:06.861940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:07.862097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:08.862581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:09.862827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:10.863685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:11.863798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:12.864868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:13.865304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:14.865496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:15.865679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:16.865789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:17.865930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:18.866444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:19.866625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:20.866708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:46:21.030: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:46:21.867176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:22.867349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:23.867441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:24.867627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:25.867801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:26.868312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:27.868415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:28.869012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:29.869226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:30.869387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:31.869688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:32.869882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:33.870220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:34.870368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:35.870494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:36.871367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:37.872325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:38.873328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:39.873587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:40.873738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:46:41.030: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:46:41.873763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:42.873898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:43.874170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:44.874878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:45.875095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:46.875311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:47.875597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:48.876196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:49.877250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:50.877385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:51.877697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:52.878265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:53.878705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:54.878895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:55.879213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:56.879373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:57.879560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:58.880163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:46:59.881200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:00.881363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:47:01.029: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:47:01.882179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:02.883125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:03.883383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:04.883428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:05.883753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:06.884132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:07.884565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:08.885159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:09.885649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:10.885753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:11.885943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:12.886159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:13.886400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:14.886623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:15.886793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:16.887104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:17.887499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:18.888052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:19.888218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:20.888410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:47:21.029: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:47:21.889205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:22.889393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:23.890102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:24.890753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:25.890951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:26.891864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:27.892050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:28.892353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:29.892436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:30.892586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:31.893241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:32.894311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:33.895417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:34.895603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:35.896244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:36.896898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:37.897087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:38.897217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:39.897423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:40.898393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:47:41.028: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:47:41.898483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:42.898652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:43.899461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:44.899543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:45.899778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:46.899970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:47.900098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:48.900461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:49.900691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:50.900769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:51.901026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:52.901131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:53.901206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:54.901996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:55.902518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:56.902716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:57.902842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:58.903216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:47:59.903294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:00.903445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:48:01.030: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:48:01.903841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:02.903995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:03.904225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:04.904364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:05.904510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:06.904681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:07.904852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:08.905302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:09.905498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:10.905615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:11.905849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:12.905959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:13.906269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:14.906389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:15.907158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:16.907329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:17.907522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:18.907764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:19.907852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:20.908140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:48:21.029: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:48:21.908355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:22.908410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:23.909390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:24.909996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:25.910256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:26.910341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:27.910590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:28.911162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:29.911887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:30.912358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:31.912581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:32.912736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:33.912886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:34.913057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:35.913141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:36.913331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:37.914230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:38.914563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:39.915130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:40.915243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:48:41.030: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:48:41.915521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:42.915717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:43.915877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:44.915884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:45.916067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:46.916170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:47.916343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:48.917275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:49.917413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:50.917608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:51.917686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:52.917801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:53.918120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:54.918268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:55.918988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:56.919151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:57.919363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:58.919722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:48:59.920387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:00.920487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:49:01.028: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:49:01.921364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:02.921492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:03.922579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:04.922765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:05.923157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:06.923204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:07.923888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:08.924216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:09.924367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:10.924480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:11.924706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:12.924855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:13.925361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:14.925509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:15.925800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:16.926000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:17.926066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:18.926424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:19.926553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:20.926644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:49:21.029: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:49:21.926736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:22.926843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:23.926926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:24.927106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:25.927250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:26.927490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:27.927563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:28.928431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:29.928559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:30.928730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:31.929464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:32.929607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:33.929723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:34.930758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:35.930877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:36.930943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:37.931581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:38.932105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:39.932202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:40.932311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:49:41.031: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:49:41.932330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:42.933037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:43.934129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:44.934268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:45.935119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:46.935184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:47.935350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:48.935796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:49.935931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:50.936032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:51.936137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:52.936246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:53.937311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:54.937572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:55.937657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:56.937781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:57.937934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:58.938284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:49:59.938603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:00.938756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:01.029: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:50:01.939341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:02.939460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:03.939712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:04.939855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:05.940340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:06.940492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:07.940641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:08.940732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:09.940883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:10.940969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:11.941058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:12.941187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:13.941295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:14.941476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:15.941571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:16.941649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:17.941779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:18.942223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:19.942275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:20.942816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:21.030: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc1MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1215 15:50:21.942960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:22.943119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:23.943996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:24.944174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:25.944369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:26.944449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:27.944955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:28.945018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:29.945610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:30.945716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:31.945856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:32.946031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:33.946282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:34.946423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:35.946563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:36.946663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:37.947300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:38.947363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:39.948238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:40.949311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:41.029: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Dec 15 15:50:41.029: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/15/23 15:50:41.029
  STEP: retrieving all remaining pages @ 12/15/23 15:50:41.031
  Dec 15 15:50:41.034: INFO: Retrieved 40/40 results with rv 38354 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgzNTQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Dec 15 15:50:41.036: INFO: Retrieved 40/40 results with rv 38354 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgzNTQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Dec 15 15:50:41.038: INFO: Retrieved 40/40 results with rv 38354 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgzNTQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Dec 15 15:50:41.040: INFO: Retrieved 40/40 results with rv 38354 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgzNTQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Dec 15 15:50:41.042: INFO: Retrieved 40/40 results with rv 38354 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgzNTQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Dec 15 15:50:41.045: INFO: Retrieved 40/40 results with rv 38354 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgzNTQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Dec 15 15:50:41.047: INFO: Retrieved 40/40 results with rv 38354 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgzNTQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Dec 15 15:50:41.049: INFO: Retrieved 40/40 results with rv 38354 and continue 
  Dec 15 15:50:41.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3469" for this suite. @ 12/15/23 15:50:41.051
• [417.784 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/15/23 15:50:41.054
  Dec 15 15:50:41.054: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename deployment @ 12/15/23 15:50:41.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:50:41.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:50:41.066
  Dec 15 15:50:41.072: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E1215 15:50:41.950006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:42.950237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:43.950481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:44.950655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:45.950805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:46.076: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/23 15:50:46.076
  Dec 15 15:50:46.076: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1215 15:50:46.950863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:47.951314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:48.078: INFO: Creating deployment "test-rollover-deployment"
  Dec 15 15:50:48.084: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E1215 15:50:48.952330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:49.952437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:50.088: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Dec 15 15:50:50.091: INFO: Ensure that both replica sets have 1 created replica
  Dec 15 15:50:50.094: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Dec 15 15:50:50.098: INFO: Updating deployment test-rollover-deployment
  Dec 15 15:50:50.098: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1215 15:50:50.953378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:51.953470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:52.103: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Dec 15 15:50:52.108: INFO: Make sure deployment "test-rollover-deployment" is complete
  Dec 15 15:50:52.112: INFO: all replica sets need to contain the pod-template-hash label
  Dec 15 15:50:52.112: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:50:52.954232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:53.954438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:54.118: INFO: all replica sets need to contain the pod-template-hash label
  Dec 15 15:50:54.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:50:54.955346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:55.955503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:56.117: INFO: all replica sets need to contain the pod-template-hash label
  Dec 15 15:50:56.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:50:56.956368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:57.956913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:50:58.117: INFO: all replica sets need to contain the pod-template-hash label
  Dec 15 15:50:58.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:50:58.957063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:50:59.957231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:51:00.117: INFO: all replica sets need to contain the pod-template-hash label
  Dec 15 15:51:00.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 15, 15, 50, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 15, 15, 50, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1215 15:51:00.957312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:01.957520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:51:02.119: INFO: 
  Dec 15 15:51:02.119: INFO: Ensure that both old replica sets have no replicas
  Dec 15 15:51:02.127: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7826",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "198158fc-299b-4c52-9e77-961b8222139e",
      ResourceVersion: (string) (len=5) "38873",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252248,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252250,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252248,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252248,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252248,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 15 15:51:02.132: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7826",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9aa9cf6-1e50-4808-a919-4ffa26b019e4",
      ResourceVersion: (string) (len=5) "38863",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252250,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "198158fc-299b-4c52-9e77-961b8222139e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252250,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 39 38 31 35 38  66 63 2d 32 39 39 62 2d  |\"198158fc-299b-|
              00000120  34 63 35 32 2d 39 65 37  37 2d 39 36 31 62 38 32  |4c52-9e77-961b82|
              00000130  32 32 31 33 39 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |22139e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 15:51:02.134: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Dec 15 15:51:02.134: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7826",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa1b19b8-3628-4042-bd3b-72d737bdd2a5",
      ResourceVersion: (string) (len=5) "38872",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "198158fc-299b-4c52-9e77-961b8222139e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  31 39 38 31 35 38 66 63  2d 32 39 39 62 2d 34 63  |198158fc-299b-4c|
              000000c0  35 32 2d 39 65 37 37 2d  39 36 31 62 38 32 32 32  |52-9e77-961b8222|
              000000d0  31 33 39 65 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |139e\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 15:51:02.136: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7826",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01731d67-db87-4a1a-85ca-c615b5973088",
      ResourceVersion: (string) (len=5) "38827",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252248,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "198158fc-299b-4c52-9e77-961b8222139e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252250,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 39 38 31 35 38  66 63 2d 32 39 39 62 2d  |\"198158fc-299b-|
              00000120  34 63 35 32 2d 39 65 37  37 2d 39 36 31 62 38 32  |4c52-9e77-961b82|
              00000130  32 32 31 33 39 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |22139e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252250,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 15:51:02.140: INFO: Pod "test-rollover-deployment-5d484bf7f9-z4pzh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-z4pzh",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-7826",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70cf8beb-a81c-4b9b-a87a-69b5e6420f62",
      ResourceVersion: (string) (len=5) "38840",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252250,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "d9aa9cf6-1e50-4808-a919-4ffa26b019e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252250,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 61 39 63 66 36 2d 31  |d\":\"d9aa9cf6-1|
              00000090  65 35 30 2d 34 38 30 38  2d 61 39 31 39 2d 34 66  |e50-4808-a919-4f|
              000000a0  66 61 32 36 62 30 31 39  65 34 5c 22 7d 22 3a 7b  |fa26b019e4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252251,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 35  30 5c 22 7d 22 3a 7b 22  |.244.4.50\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7gb7j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7gb7j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252251,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252250,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252251,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252251,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252250,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.6"
        }
      },
      PodIP: (string) (len=11) "10.244.4.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252250,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838252250,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://b784a8191d04a1d8f07f0cc8cdabb5358844eae79a052cea1ce39165403755ff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 15:51:02.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7826" for this suite. @ 12/15/23 15:51:02.148
• [21.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/15/23 15:51:02.154
  Dec 15 15:51:02.154: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename projected @ 12/15/23 15:51:02.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:51:02.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:51:02.171
  STEP: Creating secret with name projected-secret-test-aa1c523c-711d-4f25-8432-2058816c6475 @ 12/15/23 15:51:02.174
  STEP: Creating a pod to test consume secrets @ 12/15/23 15:51:02.178
  E1215 15:51:02.957952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:03.958278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:04.958430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:05.958899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:51:06.19
  Dec 15 15:51:06.192: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-secrets-f0186dd3-9248-4b59-9038-6f1881f53924 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/23 15:51:06.199
  Dec 15 15:51:06.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4051" for this suite. @ 12/15/23 15:51:06.208
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/15/23 15:51:06.217
  Dec 15 15:51:06.217: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename daemonsets @ 12/15/23 15:51:06.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:51:06.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:51:06.227
  Dec 15 15:51:06.236: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/15/23 15:51:06.239
  Dec 15 15:51:06.240: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:51:06.240: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/15/23 15:51:06.24
  Dec 15 15:51:06.249: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:51:06.249: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:51:06.959484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:51:07.250: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:51:07.250: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:51:07.959792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:51:08.250: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 15 15:51:08.250: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/15/23 15:51:08.252
  Dec 15 15:51:08.259: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 15 15:51:08.259: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1215 15:51:08.960471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:51:09.260: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:51:09.260: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/15/23 15:51:09.26
  Dec 15 15:51:09.268: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:51:09.268: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:51:09.961513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:51:10.268: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:51:10.268: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E1215 15:51:10.961926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:51:11.269: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 15 15:51:11.269: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/23 15:51:11.273
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4025, will wait for the garbage collector to delete the pods @ 12/15/23 15:51:11.273
  Dec 15 15:51:11.329: INFO: Deleting DaemonSet.extensions daemon-set took: 3.562836ms
  Dec 15 15:51:11.429: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.920931ms
  E1215 15:51:11.962932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:51:12.633: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 15 15:51:12.633: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 15 15:51:12.635: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39009"},"items":null}

  Dec 15 15:51:12.637: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39009"},"items":null}

  Dec 15 15:51:12.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4025" for this suite. @ 12/15/23 15:51:12.648
• [6.434 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/15/23 15:51:12.652
  Dec 15 15:51:12.652: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename deployment @ 12/15/23 15:51:12.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:51:12.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:51:12.663
  Dec 15 15:51:12.665: INFO: Creating simple deployment test-new-deployment
  Dec 15 15:51:12.671: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E1215 15:51:12.963691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:13.963783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 12/15/23 15:51:14.679
  STEP: updating a scale subresource @ 12/15/23 15:51:14.68
  STEP: verifying the deployment Spec.Replicas was modified @ 12/15/23 15:51:14.683
  STEP: Patch a scale subresource @ 12/15/23 15:51:14.684
  Dec 15 15:51:14.693: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7449",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9feec4c2-633a-47a6-b4b9-41997847fd34",
      ResourceVersion: (string) (len=5) "39040",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 15 15:51:14.696: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7449",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d801daee-fa37-4b54-9f26-d30ef7d8c4e5",
      ResourceVersion: (string) (len=5) "39039",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "9feec4c2-633a-47a6-b4b9-41997847fd34",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 66 65 65 63 34  63 32 2d 36 33 33 61 2d  |\"9feec4c2-633a-|
              00000120  34 37 61 36 2d 62 34 62  39 2d 34 31 39 39 37 38  |47a6-b4b9-419978|
              00000130  34 37 66 64 33 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |47fd34\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 15 15:51:14.700: INFO: Pod "test-new-deployment-557759b7c7-7dmkc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-7dmkc",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7449",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cf15491-283d-43f8-b1df-86c0d6e3501e",
      ResourceVersion: (string) (len=5) "39043",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252274,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d801daee-fa37-4b54-9f26-d30ef7d8c4e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 38  30 31 64 61 65 65 2d 66  |d\":\"d801daee-f|
              00000090  61 33 37 2d 34 62 35 34  2d 39 66 32 36 2d 64 33  |a37-4b54-9f26-d3|
              000000a0  30 65 66 37 64 38 63 34  65 35 5c 22 7d 22 3a 7b  |0ef7d8c4e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wmcc2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wmcc2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 15:51:14.701: INFO: Pod "test-new-deployment-557759b7c7-9vljn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-9vljn",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7449",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e85c8a3-653b-4871-9270-4f2168bbed78",
      ResourceVersion: (string) (len=5) "39033",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d801daee-fa37-4b54-9f26-d30ef7d8c4e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 38  30 31 64 61 65 65 2d 66  |d\":\"d801daee-f|
              00000090  61 33 37 2d 34 62 35 34  2d 39 66 32 36 2d 64 33  |a37-4b54-9f26-d3|
              000000a0  30 65 66 37 64 38 63 34  65 35 5c 22 7d 22 3a 7b  |0ef7d8c4e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  39 34 5c 22 7d 22 3a 7b  |.244.1.194\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p9fmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p9fmd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838252272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.20.0.5"
        }
      },
      PodIP: (string) (len=12) "10.244.1.194",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.194"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838252272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838252273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f017d268c17093d7565b160d64fbd0851fc838e1b675eb032793bf6d229c3ceb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 15 15:51:14.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7449" for this suite. @ 12/15/23 15:51:14.706
• [2.057 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/15/23 15:51:14.71
  Dec 15 15:51:14.710: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename gc @ 12/15/23 15:51:14.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:51:14.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:51:14.724
  STEP: create the rc @ 12/15/23 15:51:14.726
  W1215 15:51:14.729116      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1215 15:51:14.964489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:15.964679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:16.964840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:17.965121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:18.965249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/15/23 15:51:19.733
  STEP: wait for all pods to be garbage collected @ 12/15/23 15:51:19.739
  E1215 15:51:19.965390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:20.965503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:21.965700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:22.966688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:23.966968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/15/23 15:51:24.744
  Dec 15 15:51:24.790: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 15 15:51:24.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8943" for this suite. @ 12/15/23 15:51:24.792
• [10.086 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 12/15/23 15:51:24.796
  Dec 15 15:51:24.796: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename var-expansion @ 12/15/23 15:51:24.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:51:24.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:51:24.809
  STEP: creating the pod @ 12/15/23 15:51:24.811
  STEP: waiting for pod running @ 12/15/23 15:51:24.815
  E1215 15:51:24.967297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:25.967361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 12/15/23 15:51:26.819
  Dec 15 15:51:26.820: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2975 PodName:var-expansion-b49e82fe-339b-4b87-8175-82df2453aa27 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:51:26.820: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:51:26.821: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:51:26.821: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2975/pods/var-expansion-b49e82fe-339b-4b87-8175-82df2453aa27/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/15/23 15:51:26.899
  Dec 15 15:51:26.902: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2975 PodName:var-expansion-b49e82fe-339b-4b87-8175-82df2453aa27 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 15 15:51:26.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  Dec 15 15:51:26.903: INFO: ExecWithOptions: Clientset creation
  Dec 15 15:51:26.903: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2975/pods/var-expansion-b49e82fe-339b-4b87-8175-82df2453aa27/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  E1215 15:51:26.968160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the annotation value @ 12/15/23 15:51:27.005
  Dec 15 15:51:27.512: INFO: Successfully updated pod "var-expansion-b49e82fe-339b-4b87-8175-82df2453aa27"
  STEP: waiting for annotated pod running @ 12/15/23 15:51:27.512
  STEP: deleting the pod gracefully @ 12/15/23 15:51:27.514
  Dec 15 15:51:27.514: INFO: Deleting pod "var-expansion-b49e82fe-339b-4b87-8175-82df2453aa27" in namespace "var-expansion-2975"
  Dec 15 15:51:27.518: INFO: Wait up to 5m0s for pod "var-expansion-b49e82fe-339b-4b87-8175-82df2453aa27" to be fully deleted
  E1215 15:51:27.968527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:28.968744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:29.969801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:30.970802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:31.971261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:32.971429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:33.972318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:34.973101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:35.973279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:36.973354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:37.973833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:38.974094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:39.974638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:40.974794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:41.975196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:42.976220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:43.976772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:44.977201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:45.977316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:46.978255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:47.978620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:48.979615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:49.980635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:50.981168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:51.981390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:52.982246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:53.982917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:54.983274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:55.984259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:56.984292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:57.985150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:51:58.985373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:51:59.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2975" for this suite. @ 12/15/23 15:51:59.565
• [34.771 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/15/23 15:51:59.567
  Dec 15 15:51:59.567: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename namespaces @ 12/15/23 15:51:59.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:51:59.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:51:59.577
  STEP: Creating a test namespace @ 12/15/23 15:51:59.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:51:59.584
  STEP: Creating a service in the namespace @ 12/15/23 15:51:59.586
  STEP: Deleting the namespace @ 12/15/23 15:51:59.592
  STEP: Waiting for the namespace to be removed. @ 12/15/23 15:51:59.596
  E1215 15:51:59.986157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:00.986721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:01.987008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:02.987403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:03.988200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:04.988843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/15/23 15:52:05.598
  STEP: Verifying there is no service in the namespace @ 12/15/23 15:52:05.606
  Dec 15 15:52:05.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5440" for this suite. @ 12/15/23 15:52:05.61
  STEP: Destroying namespace "nsdeletetest-2437" for this suite. @ 12/15/23 15:52:05.613
  Dec 15 15:52:05.614: INFO: Namespace nsdeletetest-2437 was already deleted
  STEP: Destroying namespace "nsdeletetest-2881" for this suite. @ 12/15/23 15:52:05.614
• [6.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/15/23 15:52:05.616
  Dec 15 15:52:05.616: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename emptydir @ 12/15/23 15:52:05.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:52:05.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:52:05.625
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/15/23 15:52:05.626
  E1215 15:52:05.989325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:06.989791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:07.990839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:08.991078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:52:09.638
  Dec 15 15:52:09.639: INFO: Trying to get logs from node talos-default-worker-1 pod pod-a954b242-8881-46bf-b55a-7ed81826b3c1 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:52:09.642
  Dec 15 15:52:09.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4966" for this suite. @ 12/15/23 15:52:09.649
• [4.035 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 12/15/23 15:52:09.651
  Dec 15 15:52:09.651: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename security-context @ 12/15/23 15:52:09.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:52:09.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:52:09.661
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/15/23 15:52:09.662
  E1215 15:52:09.992131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:10.992255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:11.992480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:12.992524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/23 15:52:13.671
  Dec 15 15:52:13.673: INFO: Trying to get logs from node talos-default-worker-1 pod security-context-edf05c57-5df6-4840-accb-05bf751553d9 container test-container: <nil>
  STEP: delete the pod @ 12/15/23 15:52:13.676
  Dec 15 15:52:13.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3463" for this suite. @ 12/15/23 15:52:13.683
• [4.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/15/23 15:52:13.686
  Dec 15 15:52:13.686: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename watch @ 12/15/23 15:52:13.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:52:13.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:52:13.695
  STEP: creating a new configmap @ 12/15/23 15:52:13.697
  STEP: modifying the configmap once @ 12/15/23 15:52:13.699
  STEP: modifying the configmap a second time @ 12/15/23 15:52:13.702
  STEP: deleting the configmap @ 12/15/23 15:52:13.705
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/15/23 15:52:13.707
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/15/23 15:52:13.708
  Dec 15 15:52:13.708: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6021  8235454b-d064-46cf-8755-930993ca0c73 39364 0 2023-12-15 15:52:13 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-15 15:52:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:52:13.708: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6021  8235454b-d064-46cf-8755-930993ca0c73 39365 0 2023-12-15 15:52:13 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-15 15:52:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 15 15:52:13.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6021" for this suite. @ 12/15/23 15:52:13.71
• [0.026 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 12/15/23 15:52:13.712
  Dec 15 15:52:13.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1479595787
  STEP: Building a namespace api object, basename job @ 12/15/23 15:52:13.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/23 15:52:13.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/23 15:52:13.72
  STEP: Creating a job @ 12/15/23 15:52:13.722
  STEP: Ensuring active pods == parallelism @ 12/15/23 15:52:13.724
  E1215 15:52:13.993107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:14.994086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 12/15/23 15:52:15.727
  E1215 15:52:15.994651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:52:16.236: INFO: Successfully updated pod "adopt-release-7js6z"
  STEP: Checking that the Job readopts the Pod @ 12/15/23 15:52:16.236
  E1215 15:52:16.995334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:17.995593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 12/15/23 15:52:18.241
  Dec 15 15:52:18.748: INFO: Successfully updated pod "adopt-release-7js6z"
  STEP: Checking that the Job releases the Pod @ 12/15/23 15:52:18.748
  E1215 15:52:18.995709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 15:52:19.996285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 15 15:52:20.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8051" for this suite. @ 12/15/23 15:52:20.755
• [7.046 seconds]
------------------------------
SSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Dec 15 15:52:20.759: INFO: Running AfterSuite actions on node 1
  Dec 15 15:52:20.759: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.059 seconds]
------------------------------

Ran 388 of 7407 Specs in 6222.099 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h43m42.901783451s
Test Suite Passed
