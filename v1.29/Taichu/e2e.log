  I0428 09:13:14.939443      21 e2e.go:117] Starting e2e run "86c34a04-4490-4ced-8eb9-b845c034fb7b" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1714295594 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Apr 28 09:13:15.045: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:13:15.046: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Apr 28 09:13:15.068: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Apr 28 09:13:15.072: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Apr 28 09:13:15.072: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  Apr 28 09:13:15.072: INFO: e2e test version: v1.29.0
  Apr 28 09:13:15.073: INFO: kube-apiserver version: v1.29.0
  Apr 28 09:13:15.073: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:13:15.076: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.031 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/28/24 09:13:15.154
  Apr 28 09:13:15.154: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename runtimeclass @ 04/28/24 09:13:15.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:13:15.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:13:15.167
  STEP: Deleting RuntimeClass runtimeclass-4548-delete-me @ 04/28/24 09:13:15.172
  STEP: Waiting for the RuntimeClass to disappear @ 04/28/24 09:13:15.177
  Apr 28 09:13:15.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4548" for this suite. @ 04/28/24 09:13:15.189
• [0.041 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/28/24 09:13:15.195
  Apr 28 09:13:15.195: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename cronjob @ 04/28/24 09:13:15.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:13:15.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:13:15.207
  STEP: Creating a suspended cronjob @ 04/28/24 09:13:15.209
  STEP: Ensuring no jobs are scheduled @ 04/28/24 09:13:15.214
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/28/24 09:18:15.221
  STEP: Removing cronjob @ 04/28/24 09:18:15.224
  Apr 28 09:18:15.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-181" for this suite. @ 04/28/24 09:18:15.231
• [300.042 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 04/28/24 09:18:15.237
  Apr 28 09:18:15.237: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 09:18:15.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:18:15.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:18:15.254
  STEP: Discovering how many secrets are in namespace by default @ 04/28/24 09:18:15.256
  STEP: Counting existing ResourceQuota @ 04/28/24 09:18:20.259
  STEP: Creating a ResourceQuota @ 04/28/24 09:18:25.263
  STEP: Ensuring resource quota status is calculated @ 04/28/24 09:18:25.268
  STEP: Creating a Secret @ 04/28/24 09:18:27.272
  STEP: Ensuring resource quota status captures secret creation @ 04/28/24 09:18:27.281
  STEP: Deleting a secret @ 04/28/24 09:18:29.284
  STEP: Ensuring resource quota status released usage @ 04/28/24 09:18:29.289
  Apr 28 09:18:31.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9320" for this suite. @ 04/28/24 09:18:31.299
• [16.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/28/24 09:18:31.304
  Apr 28 09:18:31.304: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename discovery @ 04/28/24 09:18:31.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:18:31.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:18:31.32
  STEP: Setting up server cert @ 04/28/24 09:18:31.322
  STEP: Requesting APIResourceList from "/api/v1" @ 04/28/24 09:18:31.526
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/28/24 09:18:31.527
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/28/24 09:18:31.527
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/28/24 09:18:31.528
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/28/24 09:18:31.529
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/28/24 09:18:31.53
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/28/24 09:18:31.53
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/28/24 09:18:31.531
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/28/24 09:18:31.532
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/28/24 09:18:31.533
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/28/24 09:18:31.534
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/28/24 09:18:31.534
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/28/24 09:18:31.535
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/28/24 09:18:31.536
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/28/24 09:18:31.536
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/28/24 09:18:31.537
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/28/24 09:18:31.537
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/28/24 09:18:31.538
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/28/24 09:18:31.539
  Apr 28 09:18:31.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8350" for this suite. @ 04/28/24 09:18:31.543
• [0.245 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/28/24 09:18:31.549
  Apr 28 09:18:31.549: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 09:18:31.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:18:31.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:18:31.565
  STEP: Creating configMap with name configmap-test-volume-38f6c361-741b-4837-a5c1-72557ea79f4c @ 04/28/24 09:18:31.569
  STEP: Creating a pod to test consume configMaps @ 04/28/24 09:18:31.575
  STEP: Saw pod success @ 04/28/24 09:18:35.593
  Apr 28 09:18:35.595: INFO: Trying to get logs from node worker2 pod pod-configmaps-65aa3b8a-5e09-4452-9604-b616a066ed22 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 09:18:35.604
  Apr 28 09:18:35.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8395" for this suite. @ 04/28/24 09:18:35.622
• [4.078 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 04/28/24 09:18:35.628
  Apr 28 09:18:35.628: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/28/24 09:18:35.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:18:35.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:18:35.645
  Apr 28 09:18:35.647: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/28/24 09:18:36.855
  Apr 28 09:18:36.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 --namespace=crd-publish-openapi-4928 create -f -'
  Apr 28 09:18:38.908: INFO: stderr: ""
  Apr 28 09:18:38.908: INFO: stdout: "e2e-test-crd-publish-openapi-9630-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 28 09:18:38.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 --namespace=crd-publish-openapi-4928 delete e2e-test-crd-publish-openapi-9630-crds test-foo'
  Apr 28 09:18:38.956: INFO: stderr: ""
  Apr 28 09:18:38.956: INFO: stdout: "e2e-test-crd-publish-openapi-9630-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Apr 28 09:18:38.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 --namespace=crd-publish-openapi-4928 apply -f -'
  Apr 28 09:18:39.006: INFO: stderr: ""
  Apr 28 09:18:39.006: INFO: stdout: "e2e-test-crd-publish-openapi-9630-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 28 09:18:39.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 --namespace=crd-publish-openapi-4928 delete e2e-test-crd-publish-openapi-9630-crds test-foo'
  Apr 28 09:18:39.049: INFO: stderr: ""
  Apr 28 09:18:39.049: INFO: stdout: "e2e-test-crd-publish-openapi-9630-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/28/24 09:18:39.049
  Apr 28 09:18:39.049: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 --namespace=crd-publish-openapi-4928 create -f -'
  Apr 28 09:18:39.087: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/28/24 09:18:39.087
  Apr 28 09:18:39.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 --namespace=crd-publish-openapi-4928 create -f -'
  Apr 28 09:18:39.125: INFO: rc: 1
  Apr 28 09:18:39.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 --namespace=crd-publish-openapi-4928 apply -f -'
  Apr 28 09:18:39.166: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/28/24 09:18:39.166
  Apr 28 09:18:39.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 --namespace=crd-publish-openapi-4928 create -f -'
  Apr 28 09:18:39.205: INFO: rc: 1
  Apr 28 09:18:39.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 --namespace=crd-publish-openapi-4928 apply -f -'
  Apr 28 09:18:39.253: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/28/24 09:18:39.253
  Apr 28 09:18:39.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 explain e2e-test-crd-publish-openapi-9630-crds'
  Apr 28 09:18:39.292: INFO: stderr: ""
  Apr 28 09:18:39.292: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9630-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/28/24 09:18:39.292
  Apr 28 09:18:39.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 explain e2e-test-crd-publish-openapi-9630-crds.metadata'
  Apr 28 09:18:39.332: INFO: stderr: ""
  Apr 28 09:18:39.332: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9630-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Apr 28 09:18:39.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 explain e2e-test-crd-publish-openapi-9630-crds.spec'
  Apr 28 09:18:39.370: INFO: stderr: ""
  Apr 28 09:18:39.370: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9630-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Apr 28 09:18:39.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 explain e2e-test-crd-publish-openapi-9630-crds.spec.bars'
  Apr 28 09:18:39.406: INFO: stderr: ""
  Apr 28 09:18:39.406: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9630-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/28/24 09:18:39.406
  Apr 28 09:18:39.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4928 explain e2e-test-crd-publish-openapi-9630-crds.spec.bars2'
  Apr 28 09:18:39.444: INFO: rc: 1
  Apr 28 09:18:40.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4928" for this suite. @ 04/28/24 09:18:40.581
• [4.959 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 04/28/24 09:18:40.587
  Apr 28 09:18:40.587: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 09:18:40.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:18:40.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:18:40.603
  STEP: Creating secret with name secret-test-66b9b097-5639-4e9e-bc3d-00e5b2f189cd @ 04/28/24 09:18:40.606
  STEP: Creating a pod to test consume secrets @ 04/28/24 09:18:40.611
  STEP: Saw pod success @ 04/28/24 09:18:44.628
  Apr 28 09:18:44.631: INFO: Trying to get logs from node worker2 pod pod-secrets-0cb76d07-b2fa-4e90-97e8-9287c0b58031 container secret-env-test: <nil>
  STEP: delete the pod @ 04/28/24 09:18:44.644
  Apr 28 09:18:44.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8589" for this suite. @ 04/28/24 09:18:44.661
• [4.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/28/24 09:18:44.667
  Apr 28 09:18:44.667: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename deployment @ 04/28/24 09:18:44.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:18:44.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:18:44.685
  STEP: creating a Deployment @ 04/28/24 09:18:44.692
  Apr 28 09:18:44.692: INFO: Creating simple deployment test-deployment-4jbhm
  Apr 28 09:18:44.705: INFO: deployment "test-deployment-4jbhm" doesn't have the required revision set
  Apr 28 09:18:46.713: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 18, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 18, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 18, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 18, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-4jbhm-66f8d95d9d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 04/28/24 09:18:48.719
  Apr 28 09:18:48.724: INFO: Deployment test-deployment-4jbhm has Conditions: [{Available True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4jbhm-66f8d95d9d" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/28/24 09:18:48.724
  Apr 28 09:18:48.731: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 18, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 18, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 18, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 18, 44, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-4jbhm-66f8d95d9d\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/28/24 09:18:48.731
  Apr 28 09:18:48.732: INFO: Observed &Deployment event: ADDED
  Apr 28 09:18:48.732: INFO: Observed Deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4jbhm-66f8d95d9d"}
  Apr 28 09:18:48.732: INFO: Observed &Deployment event: MODIFIED
  Apr 28 09:18:48.732: INFO: Observed Deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4jbhm-66f8d95d9d"}
  Apr 28 09:18:48.732: INFO: Observed Deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 28 09:18:48.732: INFO: Observed &Deployment event: MODIFIED
  Apr 28 09:18:48.733: INFO: Observed Deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 28 09:18:48.733: INFO: Observed Deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4jbhm-66f8d95d9d" is progressing.}
  Apr 28 09:18:48.733: INFO: Observed &Deployment event: MODIFIED
  Apr 28 09:18:48.733: INFO: Observed Deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 28 09:18:48.733: INFO: Observed Deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4jbhm-66f8d95d9d" has successfully progressed.}
  Apr 28 09:18:48.733: INFO: Observed &Deployment event: MODIFIED
  Apr 28 09:18:48.733: INFO: Observed Deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 28 09:18:48.733: INFO: Observed Deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4jbhm-66f8d95d9d" has successfully progressed.}
  Apr 28 09:18:48.733: INFO: Found Deployment test-deployment-4jbhm in namespace deployment-6009 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 28 09:18:48.733: INFO: Deployment test-deployment-4jbhm has an updated status
  STEP: patching the Statefulset Status @ 04/28/24 09:18:48.733
  Apr 28 09:18:48.733: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 28 09:18:48.739: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/28/24 09:18:48.739
  Apr 28 09:18:48.740: INFO: Observed &Deployment event: ADDED
  Apr 28 09:18:48.740: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4jbhm-66f8d95d9d"}
  Apr 28 09:18:48.740: INFO: Observed &Deployment event: MODIFIED
  Apr 28 09:18:48.740: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4jbhm-66f8d95d9d"}
  Apr 28 09:18:48.740: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 28 09:18:48.740: INFO: Observed &Deployment event: MODIFIED
  Apr 28 09:18:48.740: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 28 09:18:48.740: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:44 +0000 UTC 2024-04-28 09:18:44 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4jbhm-66f8d95d9d" is progressing.}
  Apr 28 09:18:48.740: INFO: Observed &Deployment event: MODIFIED
  Apr 28 09:18:48.740: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 28 09:18:48.740: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4jbhm-66f8d95d9d" has successfully progressed.}
  Apr 28 09:18:48.740: INFO: Observed &Deployment event: MODIFIED
  Apr 28 09:18:48.741: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 28 09:18:48.741: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-28 09:18:48 +0000 UTC 2024-04-28 09:18:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4jbhm-66f8d95d9d" has successfully progressed.}
  Apr 28 09:18:48.741: INFO: Observed deployment test-deployment-4jbhm in namespace deployment-6009 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 28 09:18:48.741: INFO: Observed &Deployment event: MODIFIED
  Apr 28 09:18:48.741: INFO: Found deployment test-deployment-4jbhm in namespace deployment-6009 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Apr 28 09:18:48.741: INFO: Deployment test-deployment-4jbhm has a patched status
  Apr 28 09:18:48.745: INFO: Deployment "test-deployment-4jbhm":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-4jbhm",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6009",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "565e7aa6-491e-4046-b3ec-38db4b018aee",
      ResourceVersion: (string) (len=5) "16543",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849892724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 28 09:18:48.749: INFO: New ReplicaSet "test-deployment-4jbhm-66f8d95d9d" of Deployment "test-deployment-4jbhm":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-4jbhm-66f8d95d9d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6009",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24b9e7b0-bafd-4adb-87d8-ccb0777764d8",
      ResourceVersion: (string) (len=5) "16537",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849892724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66f8d95d9d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-4jbhm",
          UID: (types.UID) (len=36) "565e7aa6-491e-4046-b3ec-38db4b018aee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 36 35  |k:{\"uid\":\"565|
              00000120  65 37 61 61 36 2d 34 39  31 65 2d 34 30 34 36 2d  |e7aa6-491e-4046-|
              00000130  62 33 65 63 2d 33 38 64  62 34 62 30 31 38 61 65  |b3ec-38db4b018ae|
              00000140  65 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |e\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "66f8d95d9d",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66f8d95d9d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 09:18:48.754: INFO: Pod "test-deployment-4jbhm-66f8d95d9d-l74mq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-4jbhm-66f8d95d9d-l74mq",
      GenerateName: (string) (len=33) "test-deployment-4jbhm-66f8d95d9d-",
      Namespace: (string) (len=15) "deployment-6009",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c63ef37-d9d3-4c48-b873-293c392840e0",
      ResourceVersion: (string) (len=5) "16536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849892724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66f8d95d9d",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-4jbhm-66f8d95d9d",
          UID: (types.UID) (len=36) "24b9e7b0-bafd-4adb-87d8-ccb0777764d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 32 34 62 39 65 37 62  30 2d 62 61 66 64 2d 34  |"24b9e7b0-bafd-4|
              000000a0  61 64 62 2d 38 37 64 38  2d 63 63 62 30 37 37 37  |adb-87d8-ccb0777|
              000000b0  37 36 34 64 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |764d8\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 38 39  2e 37 32 5c 22 7d 22 3a  |2.20.189.72\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pq7nr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pq7nr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849892724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) (len=13) "172.20.189.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.189.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849892724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849892727,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://4d54df883111fc577a050dae9eae0a40e894158381195862cc2c845ebf744f6a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:18:48.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6009" for this suite. @ 04/28/24 09:18:48.764
• [4.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/28/24 09:18:48.773
  Apr 28 09:18:48.773: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replication-controller @ 04/28/24 09:18:48.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:18:48.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:18:48.791
  Apr 28 09:18:48.793: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/28/24 09:18:49.806
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/28/24 09:18:49.811
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/28/24 09:18:50.816
  Apr 28 09:18:50.825: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/28/24 09:18:50.825
  Apr 28 09:18:51.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7834" for this suite. @ 04/28/24 09:18:51.834
• [3.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 04/28/24 09:18:51.841
  Apr 28 09:18:51.841: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename namespaces @ 04/28/24 09:18:51.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:18:51.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:18:51.855
  STEP: creating a Namespace @ 04/28/24 09:18:51.857
  STEP: patching the Namespace @ 04/28/24 09:18:51.867
  STEP: get the Namespace and ensuring it has the label @ 04/28/24 09:18:51.873
  Apr 28 09:18:51.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8532" for this suite. @ 04/28/24 09:18:51.886
  STEP: Destroying namespace "nspatchtest-dae2aaa0-4c3a-42b7-a0ff-a7ee52096b02-6338" for this suite. @ 04/28/24 09:18:51.898
• [0.064 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 04/28/24 09:18:51.905
  Apr 28 09:18:51.905: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 09:18:51.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:18:51.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:18:51.924
  STEP: creating service in namespace services-8631 @ 04/28/24 09:18:51.926
  STEP: creating service affinity-clusterip-transition in namespace services-8631 @ 04/28/24 09:18:51.926
  STEP: creating replication controller affinity-clusterip-transition in namespace services-8631 @ 04/28/24 09:18:51.939
  I0428 09:18:51.947599      21 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-8631, replica count: 3
  I0428 09:18:54.999237      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0428 09:18:58.001115      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 28 09:18:58.011: INFO: Creating new exec pod
  Apr 28 09:19:01.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-8631 exec execpod-affinitytdgqr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Apr 28 09:19:01.109: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Apr 28 09:19:01.109: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 09:19:01.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-8631 exec execpod-affinitytdgqr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.242.192 80'
  Apr 28 09:19:01.183: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.242.192 80\nConnection to 10.68.242.192 80 port [tcp/http] succeeded!\n"
  Apr 28 09:19:01.183: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 09:19:01.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-8631 exec execpod-affinitytdgqr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.242.192:80/ ; done'
  Apr 28 09:19:01.319: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n"
  Apr 28 09:19:01.319: INFO: stdout: "\naffinity-clusterip-transition-sk76n\naffinity-clusterip-transition-j9rww\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-sk76n\naffinity-clusterip-transition-j9rww\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-sk76n\naffinity-clusterip-transition-j9rww\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-sk76n\naffinity-clusterip-transition-j9rww\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-sk76n\naffinity-clusterip-transition-j9rww\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-sk76n"
  Apr 28 09:19:01.319: INFO: Received response from host: affinity-clusterip-transition-sk76n
  Apr 28 09:19:01.319: INFO: Received response from host: affinity-clusterip-transition-j9rww
  Apr 28 09:19:01.319: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.319: INFO: Received response from host: affinity-clusterip-transition-sk76n
  Apr 28 09:19:01.319: INFO: Received response from host: affinity-clusterip-transition-j9rww
  Apr 28 09:19:01.319: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.319: INFO: Received response from host: affinity-clusterip-transition-sk76n
  Apr 28 09:19:01.320: INFO: Received response from host: affinity-clusterip-transition-j9rww
  Apr 28 09:19:01.320: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.320: INFO: Received response from host: affinity-clusterip-transition-sk76n
  Apr 28 09:19:01.320: INFO: Received response from host: affinity-clusterip-transition-j9rww
  Apr 28 09:19:01.320: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.320: INFO: Received response from host: affinity-clusterip-transition-sk76n
  Apr 28 09:19:01.320: INFO: Received response from host: affinity-clusterip-transition-j9rww
  Apr 28 09:19:01.320: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.320: INFO: Received response from host: affinity-clusterip-transition-sk76n
  Apr 28 09:19:01.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-8631 exec execpod-affinitytdgqr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.242.192:80/ ; done'
  Apr 28 09:19:01.462: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.242.192:80/\n"
  Apr 28 09:19:01.462: INFO: stdout: "\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp\naffinity-clusterip-transition-5lvgp"
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Received response from host: affinity-clusterip-transition-5lvgp
  Apr 28 09:19:01.462: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-8631, will wait for the garbage collector to delete the pods @ 04/28/24 09:19:01.478
  Apr 28 09:19:01.536: INFO: Deleting ReplicationController affinity-clusterip-transition took: 4.978585ms
  Apr 28 09:19:01.637: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.146874ms
  Apr 28 09:19:04.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8631" for this suite. @ 04/28/24 09:19:04.263
• [12.365 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/28/24 09:19:04.271
  Apr 28 09:19:04.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/28/24 09:19:04.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:19:04.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:19:04.29
  Apr 28 09:19:04.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:19:05.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5591" for this suite. @ 04/28/24 09:19:05.313
• [1.048 seconds]
------------------------------
S
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 04/28/24 09:19:05.318
  Apr 28 09:19:05.319: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 09:19:05.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:19:05.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:19:05.335
  Apr 28 09:19:05.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5275" for this suite. @ 04/28/24 09:19:05.343
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 04/28/24 09:19:05.352
  Apr 28 09:19:05.352: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 09:19:05.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:19:05.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:19:05.367
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1705 @ 04/28/24 09:19:05.369
  STEP: changing the ExternalName service to type=NodePort @ 04/28/24 09:19:05.374
  STEP: creating replication controller externalname-service in namespace services-1705 @ 04/28/24 09:19:05.39
  I0428 09:19:05.398030      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-1705, replica count: 2
  I0428 09:19:08.449334      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 28 09:19:08.449: INFO: Creating new exec pod
  Apr 28 09:19:11.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1705 exec execpodzfttm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 28 09:19:11.548: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 28 09:19:11.548: INFO: stdout: "externalname-service-b5rcc"
  Apr 28 09:19:11.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1705 exec execpodzfttm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.59.57 80'
  Apr 28 09:19:11.630: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.59.57 80\nConnection to 10.68.59.57 80 port [tcp/http] succeeded!\n"
  Apr 28 09:19:11.630: INFO: stdout: "externalname-service-qwtd5"
  Apr 28 09:19:11.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1705 exec execpodzfttm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.138 32485'
  Apr 28 09:19:11.712: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.138 32485\nConnection to 192.168.227.138 32485 port [tcp/*] succeeded!\n"
  Apr 28 09:19:11.712: INFO: stdout: ""
  Apr 28 09:19:12.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1705 exec execpodzfttm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.138 32485'
  Apr 28 09:19:12.708: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.138 32485\nConnection to 192.168.227.138 32485 port [tcp/*] succeeded!\n"
  Apr 28 09:19:12.708: INFO: stdout: "externalname-service-qwtd5"
  Apr 28 09:19:12.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1705 exec execpodzfttm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.136 32485'
  Apr 28 09:19:12.785: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.136 32485\nConnection to 192.168.227.136 32485 port [tcp/*] succeeded!\n"
  Apr 28 09:19:12.785: INFO: stdout: ""
  Apr 28 09:19:13.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1705 exec execpodzfttm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.136 32485'
  Apr 28 09:19:13.791: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.136 32485\nConnection to 192.168.227.136 32485 port [tcp/*] succeeded!\n"
  Apr 28 09:19:13.791: INFO: stdout: "externalname-service-qwtd5"
  Apr 28 09:19:13.791: INFO: Cleaning up the ExternalName to NodePort test service
  Apr 28 09:19:13.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1705" for this suite. @ 04/28/24 09:19:13.822
• [8.478 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 04/28/24 09:19:13.829
  Apr 28 09:19:13.829: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename svcaccounts @ 04/28/24 09:19:13.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:19:13.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:19:13.844
  Apr 28 09:19:13.851: INFO: Got root ca configmap in namespace "svcaccounts-2290"
  Apr 28 09:19:13.857: INFO: Deleted root ca configmap in namespace "svcaccounts-2290"
  STEP: waiting for a new root ca configmap created @ 04/28/24 09:19:14.358
  Apr 28 09:19:14.360: INFO: Recreated root ca configmap in namespace "svcaccounts-2290"
  Apr 28 09:19:14.364: INFO: Updated root ca configmap in namespace "svcaccounts-2290"
  STEP: waiting for the root ca configmap reconciled @ 04/28/24 09:19:14.865
  Apr 28 09:19:14.869: INFO: Reconciled root ca configmap in namespace "svcaccounts-2290"
  Apr 28 09:19:14.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2290" for this suite. @ 04/28/24 09:19:14.872
• [1.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/28/24 09:19:14.878
  Apr 28 09:19:14.878: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 09:19:14.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:19:14.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:19:14.894
  STEP: Saw pod success @ 04/28/24 09:19:20.946
  Apr 28 09:19:20.950: INFO: Trying to get logs from node worker2 pod client-envvars-51c19de4-75ba-485c-837e-1ef0d1386302 container env3cont: <nil>
  STEP: delete the pod @ 04/28/24 09:19:20.958
  Apr 28 09:19:20.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9390" for this suite. @ 04/28/24 09:19:20.98
• [6.108 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/28/24 09:19:20.986
  Apr 28 09:19:20.986: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 09:19:20.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:19:20.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:19:21.001
  STEP: Create set of pods @ 04/28/24 09:19:21.003
  Apr 28 09:19:21.011: INFO: created test-pod-1
  Apr 28 09:19:21.018: INFO: created test-pod-2
  Apr 28 09:19:21.026: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/28/24 09:19:21.026
  STEP: waiting for all pods to be deleted @ 04/28/24 09:19:23.079
  Apr 28 09:19:23.087: INFO: Pod quantity 3 is different from expected quantity 0
  Apr 28 09:19:24.087: INFO: Pod quantity 3 is different from expected quantity 0
  Apr 28 09:19:25.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7474" for this suite. @ 04/28/24 09:19:25.087
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/28/24 09:19:25.093
  Apr 28 09:19:25.093: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 09:19:25.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:19:25.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:19:25.109
  STEP: Creating configMap with name projected-configmap-test-volume-1fb181cd-9263-4aa9-8f62-08691e5a4c2a @ 04/28/24 09:19:25.111
  STEP: Creating a pod to test consume configMaps @ 04/28/24 09:19:25.118
  STEP: Saw pod success @ 04/28/24 09:19:29.136
  Apr 28 09:19:29.138: INFO: Trying to get logs from node worker1 pod pod-projected-configmaps-f89eb3e0-f343-4597-ae08-a565fb763359 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 09:19:29.145
  Apr 28 09:19:29.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1375" for this suite. @ 04/28/24 09:19:29.165
• [4.077 seconds]
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/28/24 09:19:29.171
  Apr 28 09:19:29.171: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 09:19:29.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:19:29.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:19:29.188
  Apr 28 09:20:29.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1304" for this suite. @ 04/28/24 09:20:29.21
• [60.046 seconds]
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/28/24 09:20:29.217
  Apr 28 09:20:29.217: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 09:20:29.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:29.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:29.28
  STEP: Creating Pod @ 04/28/24 09:20:29.282
  STEP: Reading file content from the nginx-container @ 04/28/24 09:20:31.301
  Apr 28 09:20:31.301: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4040 PodName:pod-sharedvolume-f86f4dee-8357-49f0-8b97-aaee3d9514f0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 09:20:31.301: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:20:31.301: INFO: ExecWithOptions: Clientset creation
  Apr 28 09:20:31.301: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/emptydir-4040/pods/pod-sharedvolume-f86f4dee-8357-49f0-8b97-aaee3d9514f0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Apr 28 09:20:31.338: INFO: Exec stderr: ""
  Apr 28 09:20:31.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4040" for this suite. @ 04/28/24 09:20:31.342
• [2.131 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/28/24 09:20:31.348
  Apr 28 09:20:31.348: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename svcaccounts @ 04/28/24 09:20:31.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:31.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:31.362
  STEP: reading a file in the container @ 04/28/24 09:20:33.382
  Apr 28 09:20:33.382: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8159 pod-service-account-59c518ce-3aa0-41b5-bb76-cb21b47c1f51 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/28/24 09:20:33.46
  Apr 28 09:20:33.460: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8159 pod-service-account-59c518ce-3aa0-41b5-bb76-cb21b47c1f51 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/28/24 09:20:33.537
  Apr 28 09:20:33.537: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8159 pod-service-account-59c518ce-3aa0-41b5-bb76-cb21b47c1f51 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Apr 28 09:20:33.622: INFO: Got root ca configmap in namespace "svcaccounts-8159"
  Apr 28 09:20:33.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8159" for this suite. @ 04/28/24 09:20:33.626
• [2.284 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/28/24 09:20:33.632
  Apr 28 09:20:33.632: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/28/24 09:20:33.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:33.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:33.646
  STEP: fetching the /apis discovery document @ 04/28/24 09:20:33.649
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/28/24 09:20:33.651
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/28/24 09:20:33.651
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/28/24 09:20:33.651
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/28/24 09:20:33.651
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/28/24 09:20:33.651
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/28/24 09:20:33.652
  Apr 28 09:20:33.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8208" for this suite. @ 04/28/24 09:20:33.658
• [0.032 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 04/28/24 09:20:33.664
  Apr 28 09:20:33.664: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 09:20:33.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:33.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:33.679
  STEP: creating secret secrets-5389/secret-test-4fd8e486-acba-49f3-bc88-dd0e299ab236 @ 04/28/24 09:20:33.683
  STEP: Creating a pod to test consume secrets @ 04/28/24 09:20:33.687
  STEP: Saw pod success @ 04/28/24 09:20:37.708
  Apr 28 09:20:37.710: INFO: Trying to get logs from node master1 pod pod-configmaps-26e98898-2f15-448a-a6c2-335dcfd6339e container env-test: <nil>
  STEP: delete the pod @ 04/28/24 09:20:37.717
  Apr 28 09:20:37.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5389" for this suite. @ 04/28/24 09:20:37.736
• [4.077 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/28/24 09:20:37.741
  Apr 28 09:20:37.741: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename subjectreview @ 04/28/24 09:20:37.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:37.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:37.806
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3647" @ 04/28/24 09:20:37.808
  Apr 28 09:20:37.812: INFO: saUsername: "system:serviceaccount:subjectreview-3647:e2e"
  Apr 28 09:20:37.812: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3647"}
  Apr 28 09:20:37.812: INFO: saUID: "dddfb923-cf04-4b97-a94a-39a127b23b60"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3647:e2e" @ 04/28/24 09:20:37.812
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3647:e2e" @ 04/28/24 09:20:37.813
  Apr 28 09:20:37.814: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3647:e2e" api 'list' configmaps in "subjectreview-3647" namespace @ 04/28/24 09:20:37.814
  Apr 28 09:20:37.816: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3647:e2e" @ 04/28/24 09:20:37.816
  Apr 28 09:20:37.818: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Apr 28 09:20:37.818: INFO: LocalSubjectAccessReview has been verified
  Apr 28 09:20:37.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3647" for this suite. @ 04/28/24 09:20:37.821
• [0.084 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/28/24 09:20:37.826
  Apr 28 09:20:37.826: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename events @ 04/28/24 09:20:37.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:37.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:37.839
  STEP: Create set of events @ 04/28/24 09:20:37.841
  STEP: get a list of Events with a label in the current namespace @ 04/28/24 09:20:37.856
  STEP: delete a list of events @ 04/28/24 09:20:37.858
  Apr 28 09:20:37.858: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/28/24 09:20:37.889
  Apr 28 09:20:37.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2465" for this suite. @ 04/28/24 09:20:37.895
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/28/24 09:20:37.904
  Apr 28 09:20:37.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename init-container @ 04/28/24 09:20:37.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:37.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:37.921
  STEP: creating the pod @ 04/28/24 09:20:37.923
  Apr 28 09:20:37.923: INFO: PodSpec: initContainers in spec.initContainers
  Apr 28 09:20:41.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8380" for this suite. @ 04/28/24 09:20:41.243
• [3.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/28/24 09:20:41.25
  Apr 28 09:20:41.250: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 09:20:41.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:41.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:41.267
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/28/24 09:20:41.27
  STEP: Saw pod success @ 04/28/24 09:20:45.291
  Apr 28 09:20:45.293: INFO: Trying to get logs from node worker2 pod pod-584ef152-8fb5-44c6-bcf1-1b37989497e2 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 09:20:45.3
  Apr 28 09:20:45.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5587" for this suite. @ 04/28/24 09:20:45.317
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/28/24 09:20:45.324
  Apr 28 09:20:45.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 09:20:45.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:45.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:45.34
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 09:20:45.341
  STEP: Saw pod success @ 04/28/24 09:20:49.363
  Apr 28 09:20:49.366: INFO: Trying to get logs from node worker2 pod downwardapi-volume-35d9c881-4f3a-4e0a-8c02-4b4d224853d4 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 09:20:49.373
  Apr 28 09:20:49.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9251" for this suite. @ 04/28/24 09:20:49.389
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/28/24 09:20:49.395
  Apr 28 09:20:49.395: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename subpath @ 04/28/24 09:20:49.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:20:49.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:20:49.409
  STEP: Setting up data @ 04/28/24 09:20:49.411
  STEP: Creating pod pod-subpath-test-configmap-k6kv @ 04/28/24 09:20:49.418
  STEP: Creating a pod to test atomic-volume-subpath @ 04/28/24 09:20:49.418
  STEP: Saw pod success @ 04/28/24 09:21:13.481
  Apr 28 09:21:13.485: INFO: Trying to get logs from node worker2 pod pod-subpath-test-configmap-k6kv container test-container-subpath-configmap-k6kv: <nil>
  STEP: delete the pod @ 04/28/24 09:21:13.494
  STEP: Deleting pod pod-subpath-test-configmap-k6kv @ 04/28/24 09:21:13.506
  Apr 28 09:21:13.506: INFO: Deleting pod "pod-subpath-test-configmap-k6kv" in namespace "subpath-8415"
  Apr 28 09:21:13.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8415" for this suite. @ 04/28/24 09:21:13.513
• [24.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 04/28/24 09:21:13.518
  Apr 28 09:21:13.518: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/28/24 09:21:13.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:21:13.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:21:13.536
  Apr 28 09:21:13.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/28/24 09:21:14.689
  Apr 28 09:21:14.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-1491 --namespace=crd-publish-openapi-1491 create -f -'
  Apr 28 09:21:16.754: INFO: stderr: ""
  Apr 28 09:21:16.754: INFO: stdout: "e2e-test-crd-publish-openapi-4075-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 28 09:21:16.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-1491 --namespace=crd-publish-openapi-1491 delete e2e-test-crd-publish-openapi-4075-crds test-cr'
  Apr 28 09:21:16.800: INFO: stderr: ""
  Apr 28 09:21:16.800: INFO: stdout: "e2e-test-crd-publish-openapi-4075-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Apr 28 09:21:16.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-1491 --namespace=crd-publish-openapi-1491 apply -f -'
  Apr 28 09:21:16.851: INFO: stderr: ""
  Apr 28 09:21:16.851: INFO: stdout: "e2e-test-crd-publish-openapi-4075-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 28 09:21:16.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-1491 --namespace=crd-publish-openapi-1491 delete e2e-test-crd-publish-openapi-4075-crds test-cr'
  Apr 28 09:21:16.896: INFO: stderr: ""
  Apr 28 09:21:16.896: INFO: stdout: "e2e-test-crd-publish-openapi-4075-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/28/24 09:21:16.896
  Apr 28 09:21:16.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-1491 explain e2e-test-crd-publish-openapi-4075-crds'
  Apr 28 09:21:16.937: INFO: stderr: ""
  Apr 28 09:21:16.937: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4075-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 28 09:21:18.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1491" for this suite. @ 04/28/24 09:21:18.053
• [4.539 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/28/24 09:21:18.058
  Apr 28 09:21:18.058: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 09:21:18.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:21:18.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:21:18.071
  STEP: Creating configMap with name configmap-test-upd-e3bc8154-f0d4-4e82-bc48-aa7efa365309 @ 04/28/24 09:21:18.077
  STEP: Creating the pod @ 04/28/24 09:21:18.082
  STEP: Waiting for pod with text data @ 04/28/24 09:21:20.097
  STEP: Waiting for pod with binary data @ 04/28/24 09:21:20.105
  Apr 28 09:21:20.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3669" for this suite. @ 04/28/24 09:21:20.115
• [2.063 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/28/24 09:21:20.121
  Apr 28 09:21:20.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-preemption @ 04/28/24 09:21:20.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:21:20.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:21:20.135
  Apr 28 09:21:20.147: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 28 09:22:20.151: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/28/24 09:22:20.155
  Apr 28 09:22:20.155: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/28/24 09:22:20.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:22:20.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:22:20.171
  STEP: Finding an available node @ 04/28/24 09:22:20.173
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/28/24 09:22:20.173
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/28/24 09:22:22.189
  Apr 28 09:22:22.205: INFO: found a healthy node: worker2
  Apr 28 09:22:28.265: INFO: pods created so far: [1 1 1]
  Apr 28 09:22:28.265: INFO: length of pods created so far: 3
  Apr 28 09:22:30.276: INFO: pods created so far: [2 2 1]
  Apr 28 09:22:37.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6697" for this suite. @ 04/28/24 09:22:37.337
  Apr 28 09:22:37.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-951" for this suite. @ 04/28/24 09:22:37.347
• [77.233 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 04/28/24 09:22:37.354
  Apr 28 09:22:37.354: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 09:22:37.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:22:37.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:22:37.371
  STEP: create deployment with httpd image @ 04/28/24 09:22:37.373
  Apr 28 09:22:37.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-5045 create -f -'
  Apr 28 09:22:37.436: INFO: stderr: ""
  Apr 28 09:22:37.436: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/28/24 09:22:37.436
  Apr 28 09:22:37.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-5045 diff -f -'
  Apr 28 09:22:37.538: INFO: rc: 1
  Apr 28 09:22:37.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-5045 delete -f -'
  Apr 28 09:22:37.584: INFO: stderr: ""
  Apr 28 09:22:37.585: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Apr 28 09:22:37.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5045" for this suite. @ 04/28/24 09:22:37.589
• [0.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/28/24 09:22:37.596
  Apr 28 09:22:37.596: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename events @ 04/28/24 09:22:37.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:22:37.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:22:37.612
  STEP: creating a test event @ 04/28/24 09:22:37.613
  STEP: listing all events in all namespaces @ 04/28/24 09:22:37.617
  STEP: patching the test event @ 04/28/24 09:22:37.626
  STEP: fetching the test event @ 04/28/24 09:22:37.634
  STEP: updating the test event @ 04/28/24 09:22:37.64
  STEP: getting the test event @ 04/28/24 09:22:37.654
  STEP: deleting the test event @ 04/28/24 09:22:37.659
  STEP: listing all events in all namespaces @ 04/28/24 09:22:37.67
  Apr 28 09:22:37.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4407" for this suite. @ 04/28/24 09:22:37.677
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 04/28/24 09:22:37.681
  Apr 28 09:22:37.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename cronjob @ 04/28/24 09:22:37.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:22:37.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:22:37.7
  STEP: Creating a cronjob @ 04/28/24 09:22:37.702
  STEP: creating @ 04/28/24 09:22:37.702
  STEP: getting @ 04/28/24 09:22:37.706
  STEP: listing @ 04/28/24 09:22:37.712
  STEP: watching @ 04/28/24 09:22:37.715
  Apr 28 09:22:37.715: INFO: starting watch
  STEP: cluster-wide listing @ 04/28/24 09:22:37.716
  STEP: cluster-wide watching @ 04/28/24 09:22:37.718
  Apr 28 09:22:37.718: INFO: starting watch
  STEP: patching @ 04/28/24 09:22:37.718
  STEP: updating @ 04/28/24 09:22:37.725
  Apr 28 09:22:37.734: INFO: waiting for watch events with expected annotations
  Apr 28 09:22:37.734: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/28/24 09:22:37.735
  STEP: updating /status @ 04/28/24 09:22:37.741
  STEP: get /status @ 04/28/24 09:22:37.747
  STEP: deleting @ 04/28/24 09:22:37.751
  STEP: deleting a collection @ 04/28/24 09:22:37.765
  Apr 28 09:22:37.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5797" for this suite. @ 04/28/24 09:22:37.779
• [0.104 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/28/24 09:22:37.786
  Apr 28 09:22:37.786: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replicaset @ 04/28/24 09:22:37.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:22:37.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:22:37.802
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/28/24 09:22:37.807
  STEP: When a replicaset with a matching selector is created @ 04/28/24 09:22:39.824
  STEP: Then the orphan pod is adopted @ 04/28/24 09:22:39.829
  STEP: When the matched label of one of its pods change @ 04/28/24 09:22:40.835
  Apr 28 09:22:40.837: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/28/24 09:22:40.846
  Apr 28 09:22:41.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9719" for this suite. @ 04/28/24 09:22:41.858
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 04/28/24 09:22:41.864
  Apr 28 09:22:41.864: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 09:22:41.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:22:41.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:22:41.879
  STEP: creating service in namespace services-4803 @ 04/28/24 09:22:41.882
  STEP: creating service affinity-nodeport-transition in namespace services-4803 @ 04/28/24 09:22:41.882
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4803 @ 04/28/24 09:22:41.898
  I0428 09:22:41.905900      21 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-4803, replica count: 3
  I0428 09:22:44.956395      21 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 28 09:22:44.967: INFO: Creating new exec pod
  Apr 28 09:22:47.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4803 exec execpod-affinity8jz98 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Apr 28 09:22:48.063: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Apr 28 09:22:48.063: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 09:22:48.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4803 exec execpod-affinity8jz98 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.101.20 80'
  Apr 28 09:22:48.141: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.101.20 80\nConnection to 10.68.101.20 80 port [tcp/http] succeeded!\n"
  Apr 28 09:22:48.141: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 09:22:48.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4803 exec execpod-affinity8jz98 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.137 32193'
  Apr 28 09:22:48.219: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.137 32193\nConnection to 192.168.227.137 32193 port [tcp/*] succeeded!\n"
  Apr 28 09:22:48.219: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 09:22:48.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4803 exec execpod-affinity8jz98 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.138 32193'
  Apr 28 09:22:48.295: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.138 32193\nConnection to 192.168.227.138 32193 port [tcp/*] succeeded!\n"
  Apr 28 09:22:48.295: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 09:22:48.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4803 exec execpod-affinity8jz98 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.227.136:32193/ ; done'
  Apr 28 09:22:48.468: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n"
  Apr 28 09:22:48.468: INFO: stdout: "\naffinity-nodeport-transition-szkwk\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-qsqzz\naffinity-nodeport-transition-szkwk\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-qsqzz\naffinity-nodeport-transition-szkwk\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-qsqzz\naffinity-nodeport-transition-szkwk\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-qsqzz\naffinity-nodeport-transition-szkwk\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-qsqzz\naffinity-nodeport-transition-szkwk"
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-szkwk
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-qsqzz
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-szkwk
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-qsqzz
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-szkwk
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-qsqzz
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-szkwk
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-qsqzz
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-szkwk
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-qsqzz
  Apr 28 09:22:48.468: INFO: Received response from host: affinity-nodeport-transition-szkwk
  Apr 28 09:22:48.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4803 exec execpod-affinity8jz98 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.227.136:32193/ ; done'
  Apr 28 09:22:48.637: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:32193/\n"
  Apr 28 09:22:48.637: INFO: stdout: "\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78\naffinity-nodeport-transition-n8g78"
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Received response from host: affinity-nodeport-transition-n8g78
  Apr 28 09:22:48.637: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4803, will wait for the garbage collector to delete the pods @ 04/28/24 09:22:48.653
  Apr 28 09:22:48.715: INFO: Deleting ReplicationController affinity-nodeport-transition took: 5.944607ms
  Apr 28 09:22:48.816: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.847878ms
  Apr 28 09:22:51.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4803" for this suite. @ 04/28/24 09:22:51.741
• [9.888 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 04/28/24 09:22:51.752
  Apr 28 09:22:51.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename disruption @ 04/28/24 09:22:51.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:22:51.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:22:51.77
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/28/24 09:22:51.816
  STEP: Waiting for the pdb to be processed @ 04/28/24 09:22:51.82
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/28/24 09:22:53.827
  STEP: Waiting for all pods to be running @ 04/28/24 09:22:53.827
  Apr 28 09:22:53.830: INFO: pods: 0 < 3
  STEP: locating a running pod @ 04/28/24 09:22:55.832
  STEP: Updating the pdb to allow a pod to be evicted @ 04/28/24 09:22:55.839
  STEP: Waiting for the pdb to be processed @ 04/28/24 09:22:55.845
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/28/24 09:22:57.848
  STEP: Waiting for all pods to be running @ 04/28/24 09:22:57.848
  STEP: Waiting for the pdb to observed all healthy pods @ 04/28/24 09:22:57.852
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/28/24 09:22:57.872
  STEP: Waiting for the pdb to be processed @ 04/28/24 09:22:57.891
  STEP: Waiting for all pods to be running @ 04/28/24 09:22:59.896
  STEP: locating a running pod @ 04/28/24 09:22:59.899
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/28/24 09:22:59.908
  STEP: Waiting for the pdb to be deleted @ 04/28/24 09:22:59.913
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/28/24 09:22:59.916
  STEP: Waiting for all pods to be running @ 04/28/24 09:22:59.916
  Apr 28 09:22:59.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5586" for this suite. @ 04/28/24 09:22:59.942
• [8.204 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 04/28/24 09:22:59.957
  Apr 28 09:22:59.957: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 09:22:59.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:22:59.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:22:59.983
  STEP: creating the pod @ 04/28/24 09:22:59.985
  Apr 28 09:22:59.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2922 create -f -'
  Apr 28 09:23:00.102: INFO: stderr: ""
  Apr 28 09:23:00.102: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/28/24 09:23:02.11
  Apr 28 09:23:02.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2922 label pods pause testing-label=testing-label-value'
  Apr 28 09:23:02.159: INFO: stderr: ""
  Apr 28 09:23:02.159: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/28/24 09:23:02.159
  Apr 28 09:23:02.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2922 get pod pause -L testing-label'
  Apr 28 09:23:02.203: INFO: stderr: ""
  Apr 28 09:23:02.203: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/28/24 09:23:02.203
  Apr 28 09:23:02.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2922 label pods pause testing-label-'
  Apr 28 09:23:02.251: INFO: stderr: ""
  Apr 28 09:23:02.251: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/28/24 09:23:02.251
  Apr 28 09:23:02.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2922 get pod pause -L testing-label'
  Apr 28 09:23:02.295: INFO: stderr: ""
  Apr 28 09:23:02.295: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 04/28/24 09:23:02.295
  Apr 28 09:23:02.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2922 delete --grace-period=0 --force -f -'
  Apr 28 09:23:02.347: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 28 09:23:02.347: INFO: stdout: "pod \"pause\" force deleted\n"
  Apr 28 09:23:02.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2922 get rc,svc -l name=pause --no-headers'
  Apr 28 09:23:02.394: INFO: stderr: "No resources found in kubectl-2922 namespace.\n"
  Apr 28 09:23:02.394: INFO: stdout: ""
  Apr 28 09:23:02.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2922 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 28 09:23:02.439: INFO: stderr: ""
  Apr 28 09:23:02.439: INFO: stdout: ""
  Apr 28 09:23:02.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2922" for this suite. @ 04/28/24 09:23:02.443
• [2.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 04/28/24 09:23:02.45
  Apr 28 09:23:02.450: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename job @ 04/28/24 09:23:02.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:02.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:02.467
  STEP: Creating a job @ 04/28/24 09:23:02.47
  STEP: Ensuring active pods == parallelism @ 04/28/24 09:23:02.475
  STEP: delete a job @ 04/28/24 09:23:04.478
  STEP: deleting Job.batch foo in namespace job-4340, will wait for the garbage collector to delete the pods @ 04/28/24 09:23:04.478
  Apr 28 09:23:04.538: INFO: Deleting Job.batch foo took: 5.428367ms
  Apr 28 09:23:04.638: INFO: Terminating Job.batch foo pods took: 100.822254ms
  STEP: Ensuring job was deleted @ 04/28/24 09:23:05.739
  Apr 28 09:23:05.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4340" for this suite. @ 04/28/24 09:23:05.745
• [3.300 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/28/24 09:23:05.75
  Apr 28 09:23:05.750: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename certificates @ 04/28/24 09:23:05.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:05.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:05.764
  STEP: getting /apis @ 04/28/24 09:23:05.965
  STEP: getting /apis/certificates.k8s.io @ 04/28/24 09:23:05.968
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/28/24 09:23:05.968
  STEP: creating @ 04/28/24 09:23:05.969
  STEP: getting @ 04/28/24 09:23:05.981
  STEP: listing @ 04/28/24 09:23:05.984
  STEP: watching @ 04/28/24 09:23:05.987
  Apr 28 09:23:05.987: INFO: starting watch
  STEP: patching @ 04/28/24 09:23:05.987
  STEP: updating @ 04/28/24 09:23:05.992
  Apr 28 09:23:05.996: INFO: waiting for watch events with expected annotations
  Apr 28 09:23:05.996: INFO: saw patched and updated annotations
  STEP: getting /approval @ 04/28/24 09:23:05.996
  STEP: patching /approval @ 04/28/24 09:23:05.999
  STEP: updating /approval @ 04/28/24 09:23:06.003
  STEP: getting /status @ 04/28/24 09:23:06.007
  STEP: patching /status @ 04/28/24 09:23:06.012
  STEP: updating /status @ 04/28/24 09:23:06.016
  STEP: deleting @ 04/28/24 09:23:06.022
  STEP: deleting a collection @ 04/28/24 09:23:06.037
  Apr 28 09:23:06.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2695" for this suite. @ 04/28/24 09:23:06.06
• [0.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 04/28/24 09:23:06.067
  Apr 28 09:23:06.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename svcaccounts @ 04/28/24 09:23:06.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:06.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:06.083
  Apr 28 09:23:06.101: INFO: created pod pod-service-account-defaultsa
  Apr 28 09:23:06.101: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Apr 28 09:23:06.110: INFO: created pod pod-service-account-mountsa
  Apr 28 09:23:06.110: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Apr 28 09:23:06.117: INFO: created pod pod-service-account-nomountsa
  Apr 28 09:23:06.117: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Apr 28 09:23:06.129: INFO: created pod pod-service-account-defaultsa-mountspec
  Apr 28 09:23:06.129: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Apr 28 09:23:06.139: INFO: created pod pod-service-account-mountsa-mountspec
  Apr 28 09:23:06.139: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Apr 28 09:23:06.145: INFO: created pod pod-service-account-nomountsa-mountspec
  Apr 28 09:23:06.145: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Apr 28 09:23:06.156: INFO: created pod pod-service-account-defaultsa-nomountspec
  Apr 28 09:23:06.156: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Apr 28 09:23:06.168: INFO: created pod pod-service-account-mountsa-nomountspec
  Apr 28 09:23:06.168: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Apr 28 09:23:06.178: INFO: created pod pod-service-account-nomountsa-nomountspec
  Apr 28 09:23:06.178: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Apr 28 09:23:06.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6483" for this suite. @ 04/28/24 09:23:06.193
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/28/24 09:23:06.202
  Apr 28 09:23:06.202: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 09:23:06.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:06.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:06.233
  STEP: Setting up server cert @ 04/28/24 09:23:06.271
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 09:23:06.51
  STEP: Deploying the webhook pod @ 04/28/24 09:23:06.521
  STEP: Wait for the deployment to be ready @ 04/28/24 09:23:06.538
  Apr 28 09:23:06.553: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/28/24 09:23:08.563
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:23:08.572
  Apr 28 09:23:09.573: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/28/24 09:23:09.58
  STEP: create a pod that should be denied by the webhook @ 04/28/24 09:23:09.591
  STEP: create a pod that causes the webhook to hang @ 04/28/24 09:23:09.598
  STEP: create a configmap that should be denied by the webhook @ 04/28/24 09:23:19.603
  STEP: create a configmap that should be admitted by the webhook @ 04/28/24 09:23:19.615
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/28/24 09:23:19.621
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/28/24 09:23:19.627
  STEP: create a namespace that bypass the webhook @ 04/28/24 09:23:19.631
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/28/24 09:23:19.646
  Apr 28 09:23:19.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8479" for this suite. @ 04/28/24 09:23:19.717
  STEP: Destroying namespace "webhook-markers-7638" for this suite. @ 04/28/24 09:23:19.728
  STEP: Destroying namespace "exempted-namespace-6349" for this suite. @ 04/28/24 09:23:19.741
• [13.548 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/28/24 09:23:19.75
  Apr 28 09:23:19.750: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename gc @ 04/28/24 09:23:19.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:19.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:19.772
  STEP: create the deployment @ 04/28/24 09:23:19.773
  W0428 09:23:19.778342      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/28/24 09:23:19.778
  STEP: delete the deployment @ 04/28/24 09:23:20.286
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/28/24 09:23:20.291
  STEP: Gathering metrics @ 04/28/24 09:23:20.805
  W0428 09:23:20.810179      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 28 09:23:20.810: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 28 09:23:20.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8970" for this suite. @ 04/28/24 09:23:20.813
• [1.071 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/28/24 09:23:20.821
  Apr 28 09:23:20.821: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename podtemplate @ 04/28/24 09:23:20.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:20.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:20.836
  STEP: Create a pod template @ 04/28/24 09:23:20.838
  STEP: Replace a pod template @ 04/28/24 09:23:20.843
  Apr 28 09:23:20.851: INFO: Found updated podtemplate annotation: "true"

  Apr 28 09:23:20.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7479" for this suite. @ 04/28/24 09:23:20.854
• [0.041 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/28/24 09:23:20.861
  Apr 28 09:23:20.861: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 09:23:20.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:20.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:20.876
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 09:23:20.878
  STEP: Saw pod success @ 04/28/24 09:23:22.9
  Apr 28 09:23:22.903: INFO: Trying to get logs from node worker2 pod downwardapi-volume-2343693e-c6c9-4958-b07e-c4ac08f2113f container client-container: <nil>
  STEP: delete the pod @ 04/28/24 09:23:22.909
  Apr 28 09:23:22.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8012" for this suite. @ 04/28/24 09:23:22.926
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/28/24 09:23:22.932
  Apr 28 09:23:22.932: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename chunking @ 04/28/24 09:23:22.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:22.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:22.949
  STEP: creating a large number of resources @ 04/28/24 09:23:22.954
  STEP: retrieving those results in paged fashion several times @ 04/28/24 09:23:40.636
  Apr 28 09:23:40.686: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Apr 28 09:23:40.738: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Apr 28 09:23:40.787: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Apr 28 09:23:40.836: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Apr 28 09:23:40.887: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Apr 28 09:23:40.937: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Apr 28 09:23:40.985: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Apr 28 09:23:41.038: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Apr 28 09:23:41.086: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Apr 28 09:23:41.135: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Apr 28 09:23:41.187: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Apr 28 09:23:41.237: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Apr 28 09:23:41.286: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Apr 28 09:23:41.337: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Apr 28 09:23:41.387: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Apr 28 09:23:41.436: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Apr 28 09:23:41.487: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Apr 28 09:23:41.536: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Apr 28 09:23:41.586: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Apr 28 09:23:41.636: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Apr 28 09:23:41.686: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Apr 28 09:23:41.736: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Apr 28 09:23:41.786: INFO: Retrieved 17/17 results with rv 19626 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Apr 28 09:23:41.837: INFO: Retrieved 9/17 results with rv 19626 and continue 
  Apr 28 09:23:41.885: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Apr 28 09:23:41.937: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Apr 28 09:23:41.986: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Apr 28 09:23:42.036: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Apr 28 09:23:42.087: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Apr 28 09:23:42.137: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Apr 28 09:23:42.186: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Apr 28 09:23:42.237: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Apr 28 09:23:42.287: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Apr 28 09:23:42.336: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Apr 28 09:23:42.387: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Apr 28 09:23:42.437: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Apr 28 09:23:42.486: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Apr 28 09:23:42.537: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Apr 28 09:23:42.587: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Apr 28 09:23:42.636: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Apr 28 09:23:42.687: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Apr 28 09:23:42.736: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Apr 28 09:23:42.785: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Apr 28 09:23:42.837: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Apr 28 09:23:42.886: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Apr 28 09:23:42.936: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Apr 28 09:23:42.987: INFO: Retrieved 17/17 results with rv 19629 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MjksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Apr 28 09:23:43.037: INFO: Retrieved 9/17 results with rv 19629 and continue 
  Apr 28 09:23:43.087: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Apr 28 09:23:43.136: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Apr 28 09:23:43.186: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Apr 28 09:23:43.236: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Apr 28 09:23:43.287: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Apr 28 09:23:43.337: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Apr 28 09:23:43.386: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Apr 28 09:23:43.437: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Apr 28 09:23:43.487: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Apr 28 09:23:43.536: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Apr 28 09:23:43.587: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Apr 28 09:23:43.637: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Apr 28 09:23:43.686: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Apr 28 09:23:43.737: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Apr 28 09:23:43.786: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Apr 28 09:23:43.835: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Apr 28 09:23:43.886: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Apr 28 09:23:43.937: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Apr 28 09:23:43.986: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Apr 28 09:23:44.037: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Apr 28 09:23:44.086: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Apr 28 09:23:44.135: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Apr 28 09:23:44.188: INFO: Retrieved 17/17 results with rv 19630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk2MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Apr 28 09:23:44.237: INFO: Retrieved 9/17 results with rv 19630 and continue 
  STEP: retrieving those results all at once @ 04/28/24 09:23:44.237
  Apr 28 09:23:44.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8847" for this suite. @ 04/28/24 09:23:44.336
• [21.458 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/28/24 09:23:44.39
  Apr 28 09:23:44.390: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 09:23:44.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:44.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:44.404
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 09:23:44.408
  STEP: Saw pod success @ 04/28/24 09:23:48.424
  Apr 28 09:23:48.428: INFO: Trying to get logs from node worker2 pod downwardapi-volume-c2da6753-cc94-4efe-afe6-793e2149b07c container client-container: <nil>
  STEP: delete the pod @ 04/28/24 09:23:48.436
  Apr 28 09:23:48.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7774" for this suite. @ 04/28/24 09:23:48.452
• [4.067 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 04/28/24 09:23:48.457
  Apr 28 09:23:48.457: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubelet-test @ 04/28/24 09:23:48.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:48.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:48.476
  STEP: Waiting for pod completion @ 04/28/24 09:23:48.489
  Apr 28 09:23:52.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6279" for this suite. @ 04/28/24 09:23:52.514
• [4.062 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/28/24 09:23:52.52
  Apr 28 09:23:52.520: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 09:23:52.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:23:52.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:23:52.536
  STEP: Creating configMap with name cm-test-opt-del-c51240b3-7adf-4473-8d8f-2f5016d8d481 @ 04/28/24 09:23:52.543
  STEP: Creating configMap with name cm-test-opt-upd-2bfa5aea-b7d3-41df-8cad-2402387e4b2a @ 04/28/24 09:23:52.55
  STEP: Creating the pod @ 04/28/24 09:23:52.554
  STEP: Deleting configmap cm-test-opt-del-c51240b3-7adf-4473-8d8f-2f5016d8d481 @ 04/28/24 09:23:54.6
  STEP: Updating configmap cm-test-opt-upd-2bfa5aea-b7d3-41df-8cad-2402387e4b2a @ 04/28/24 09:23:54.609
  STEP: Creating configMap with name cm-test-opt-create-5ff3a145-3cdb-4b71-8d2e-59135b1a3e2f @ 04/28/24 09:23:54.617
  STEP: waiting to observe update in volume @ 04/28/24 09:23:54.624
  Apr 28 09:25:23.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4046" for this suite. @ 04/28/24 09:25:23.098
• [90.585 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/28/24 09:25:23.105
  Apr 28 09:25:23.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename runtimeclass @ 04/28/24 09:25:23.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:25:23.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:25:23.119
  STEP: getting /apis @ 04/28/24 09:25:23.121
  STEP: getting /apis/node.k8s.io @ 04/28/24 09:25:23.123
  STEP: getting /apis/node.k8s.io/v1 @ 04/28/24 09:25:23.124
  STEP: creating @ 04/28/24 09:25:23.124
  STEP: watching @ 04/28/24 09:25:23.145
  Apr 28 09:25:23.145: INFO: starting watch
  STEP: getting @ 04/28/24 09:25:23.148
  STEP: listing @ 04/28/24 09:25:23.151
  STEP: patching @ 04/28/24 09:25:23.154
  STEP: updating @ 04/28/24 09:25:23.157
  Apr 28 09:25:23.161: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 04/28/24 09:25:23.161
  STEP: deleting a collection @ 04/28/24 09:25:23.175
  Apr 28 09:25:23.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4820" for this suite. @ 04/28/24 09:25:23.194
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 04/28/24 09:25:23.201
  Apr 28 09:25:23.201: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubelet-test @ 04/28/24 09:25:23.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:25:23.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:25:23.218
  Apr 28 09:25:25.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7221" for this suite. @ 04/28/24 09:25:25.247
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/28/24 09:25:25.251
  Apr 28 09:25:25.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 09:25:25.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:25:25.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:25:25.265
  STEP: Setting up server cert @ 04/28/24 09:25:25.282
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 09:25:25.424
  STEP: Deploying the webhook pod @ 04/28/24 09:25:25.431
  STEP: Wait for the deployment to be ready @ 04/28/24 09:25:25.439
  Apr 28 09:25:25.444: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/28/24 09:25:27.454
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:25:27.462
  Apr 28 09:25:28.462: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/28/24 09:25:28.472
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/28/24 09:25:28.472
  Apr 28 09:25:28.505: INFO: Waiting for webhook configuration to be ready...
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/28/24 09:25:28.611
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/28/24 09:25:29.618
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/28/24 09:25:29.618
  STEP: Having no error when timeout is longer than webhook latency @ 04/28/24 09:25:30.64
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/28/24 09:25:30.64
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/28/24 09:25:35.665
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/28/24 09:25:35.665
  Apr 28 09:25:40.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8711" for this suite. @ 04/28/24 09:25:40.772
  STEP: Destroying namespace "webhook-markers-7199" for this suite. @ 04/28/24 09:25:40.785
• [15.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/28/24 09:25:40.795
  Apr 28 09:25:40.795: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl-logs @ 04/28/24 09:25:40.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:25:40.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:25:40.816
  STEP: creating an pod @ 04/28/24 09:25:40.817
  Apr 28 09:25:40.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-logs-3021 run logs-generator --image=registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Apr 28 09:25:40.867: INFO: stderr: ""
  Apr 28 09:25:40.867: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/28/24 09:25:40.867
  Apr 28 09:25:40.867: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Apr 28 09:25:42.875: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/28/24 09:25:42.875
  Apr 28 09:25:42.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-logs-3021 logs logs-generator logs-generator'
  Apr 28 09:25:42.924: INFO: stderr: ""
  Apr 28 09:25:42.924: INFO: stdout: "I0428 09:25:41.404929       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/spg 332\nI0428 09:25:41.605053       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/5hft 308\nI0428 09:25:41.805618       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/dh9p 304\nI0428 09:25:42.005963       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/rsl 439\nI0428 09:25:42.205445       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/d9b 418\nI0428 09:25:42.405908       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/2bjt 366\nI0428 09:25:42.605192       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/v5h9 357\nI0428 09:25:42.805578       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/jj7q 599\n"
  STEP: limiting log lines @ 04/28/24 09:25:42.925
  Apr 28 09:25:42.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-logs-3021 logs logs-generator logs-generator --tail=1'
  Apr 28 09:25:42.972: INFO: stderr: ""
  Apr 28 09:25:42.972: INFO: stdout: "I0428 09:25:42.805578       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/jj7q 599\n"
  Apr 28 09:25:42.972: INFO: got output "I0428 09:25:42.805578       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/jj7q 599\n"
  STEP: limiting log bytes @ 04/28/24 09:25:42.972
  Apr 28 09:25:42.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-logs-3021 logs logs-generator logs-generator --limit-bytes=1'
  Apr 28 09:25:43.020: INFO: stderr: ""
  Apr 28 09:25:43.020: INFO: stdout: "I"
  Apr 28 09:25:43.020: INFO: got output "I"
  STEP: exposing timestamps @ 04/28/24 09:25:43.02
  Apr 28 09:25:43.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-logs-3021 logs logs-generator logs-generator --tail=1 --timestamps'
  Apr 28 09:25:43.069: INFO: stderr: ""
  Apr 28 09:25:43.069: INFO: stdout: "2024-04-28T09:25:43.005974449Z I0428 09:25:43.005847       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/jxh 359\n"
  Apr 28 09:25:43.069: INFO: got output "2024-04-28T09:25:43.005974449Z I0428 09:25:43.005847       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/jxh 359\n"
  STEP: restricting to a time range @ 04/28/24 09:25:43.069
  Apr 28 09:25:45.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-logs-3021 logs logs-generator logs-generator --since=1s'
  Apr 28 09:25:45.620: INFO: stderr: ""
  Apr 28 09:25:45.620: INFO: stdout: "I0428 09:25:44.805635       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/9ps 544\nI0428 09:25:45.005883       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/qfw 239\nI0428 09:25:45.205044       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/99qb 359\nI0428 09:25:45.405459       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/qv6s 211\nI0428 09:25:45.605992       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/mhgn 587\n"
  Apr 28 09:25:45.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-logs-3021 logs logs-generator logs-generator --since=24h'
  Apr 28 09:25:45.667: INFO: stderr: ""
  Apr 28 09:25:45.667: INFO: stdout: "I0428 09:25:41.404929       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/spg 332\nI0428 09:25:41.605053       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/5hft 308\nI0428 09:25:41.805618       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/dh9p 304\nI0428 09:25:42.005963       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/rsl 439\nI0428 09:25:42.205445       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/d9b 418\nI0428 09:25:42.405908       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/2bjt 366\nI0428 09:25:42.605192       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/v5h9 357\nI0428 09:25:42.805578       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/jj7q 599\nI0428 09:25:43.005847       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/jxh 359\nI0428 09:25:43.205128       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/5kwp 258\nI0428 09:25:43.405542       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/dcls 543\nI0428 09:25:43.605824       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/xx7 370\nI0428 09:25:43.805088       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/4dm7 312\nI0428 09:25:44.005487       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/dz8 322\nI0428 09:25:44.205732       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/sdvb 302\nI0428 09:25:44.404982       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/m9sh 497\nI0428 09:25:44.605322       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/spl 516\nI0428 09:25:44.805635       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/9ps 544\nI0428 09:25:45.005883       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/qfw 239\nI0428 09:25:45.205044       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/99qb 359\nI0428 09:25:45.405459       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/qv6s 211\nI0428 09:25:45.605992       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/mhgn 587\n"
  Apr 28 09:25:45.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-logs-3021 delete pod logs-generator'
  Apr 28 09:25:46.276: INFO: stderr: ""
  Apr 28 09:25:46.276: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Apr 28 09:25:46.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3021" for this suite. @ 04/28/24 09:25:46.279
• [5.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/28/24 09:25:46.286
  Apr 28 09:25:46.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename apf @ 04/28/24 09:25:46.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:25:46.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:25:46.301
  STEP: getting /apis @ 04/28/24 09:25:46.303
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/28/24 09:25:46.306
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/28/24 09:25:46.307
  STEP: creating @ 04/28/24 09:25:46.307
  STEP: getting @ 04/28/24 09:25:46.322
  STEP: listing @ 04/28/24 09:25:46.326
  STEP: watching @ 04/28/24 09:25:46.328
  Apr 28 09:25:46.328: INFO: starting watch
  STEP: patching @ 04/28/24 09:25:46.33
  STEP: updating @ 04/28/24 09:25:46.337
  Apr 28 09:25:46.351: INFO: waiting for watch events with expected annotations
  Apr 28 09:25:46.351: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/28/24 09:25:46.351
  STEP: patching /status @ 04/28/24 09:25:46.355
  STEP: updating /status @ 04/28/24 09:25:46.36
  STEP: deleting @ 04/28/24 09:25:46.367
  STEP: deleting a collection @ 04/28/24 09:25:46.377
  Apr 28 09:25:46.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1132" for this suite. @ 04/28/24 09:25:46.399
• [0.119 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/28/24 09:25:46.405
  Apr 28 09:25:46.405: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 09:25:46.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:25:46.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:25:46.42
  STEP: Setting up server cert @ 04/28/24 09:25:46.438
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 09:25:46.565
  STEP: Deploying the webhook pod @ 04/28/24 09:25:46.57
  STEP: Wait for the deployment to be ready @ 04/28/24 09:25:46.579
  Apr 28 09:25:46.586: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/28/24 09:25:48.595
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:25:48.604
  Apr 28 09:25:49.604: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/28/24 09:25:49.608
  STEP: create a configmap that should be updated by the webhook @ 04/28/24 09:25:49.624
  Apr 28 09:25:49.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5659" for this suite. @ 04/28/24 09:25:49.688
  STEP: Destroying namespace "webhook-markers-6458" for this suite. @ 04/28/24 09:25:49.7
• [3.306 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/28/24 09:25:49.712
  Apr 28 09:25:49.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename cronjob @ 04/28/24 09:25:49.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:25:49.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:25:49.729
  STEP: Creating a ForbidConcurrent cronjob @ 04/28/24 09:25:49.731
  STEP: Ensuring a job is scheduled @ 04/28/24 09:25:49.737
  STEP: Ensuring exactly one is scheduled @ 04/28/24 09:26:01.741
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/28/24 09:26:01.744
  STEP: Ensuring no more jobs are scheduled @ 04/28/24 09:26:01.747
  STEP: Removing cronjob @ 04/28/24 09:31:01.755
  Apr 28 09:31:01.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6779" for this suite. @ 04/28/24 09:31:01.765
• [312.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 04/28/24 09:31:01.769
  Apr 28 09:31:01.769: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename var-expansion @ 04/28/24 09:31:01.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:01.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:01.79
  STEP: Creating a pod to test substitution in container's command @ 04/28/24 09:31:01.792
  STEP: Saw pod success @ 04/28/24 09:31:05.817
  Apr 28 09:31:05.821: INFO: Trying to get logs from node worker1 pod var-expansion-3fcff3d5-9c2a-467e-b80b-25af4ff3dfee container dapi-container: <nil>
  STEP: delete the pod @ 04/28/24 09:31:05.829
  Apr 28 09:31:05.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1173" for this suite. @ 04/28/24 09:31:05.847
• [4.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 04/28/24 09:31:05.855
  Apr 28 09:31:05.855: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-pred @ 04/28/24 09:31:05.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:05.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:05.868
  Apr 28 09:31:05.872: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 28 09:31:05.880: INFO: Waiting for terminating namespaces to be deleted...
  Apr 28 09:31:05.884: INFO: 
  Logging pods the apiserver thinks is on node master1 before test
  Apr 28 09:31:05.890: INFO: calico-kube-controllers-5994f46b69-6wms6 from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.890: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Apr 28 09:31:05.890: INFO: calico-node-zq7zm from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.890: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 09:31:05.890: INFO: dashboard-metrics-scraper-77b667b99d-pd58z from kube-system started at 2024-04-28 06:45:30 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.890: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Apr 28 09:31:05.890: INFO: node-local-dns-x5gk2 from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.890: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 09:31:05.890: INFO: sonobuoy-e2e-job-a7cb2e98a5034b0c from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 09:31:05.890: INFO: 	Container e2e ready: true, restart count 0
  Apr 28 09:31:05.890: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 09:31:05.890: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-gfv6z from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 09:31:05.890: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 09:31:05.890: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 28 09:31:05.890: INFO: 
  Logging pods the apiserver thinks is on node worker1 before test
  Apr 28 09:31:05.893: INFO: calico-node-t2nbk from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.893: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 09:31:05.893: INFO: coredns-6db9bd4cd7-zcglr from kube-system started at 2024-04-28 06:45:25 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.893: INFO: 	Container coredns ready: true, restart count 0
  Apr 28 09:31:05.893: INFO: node-local-dns-k6xsh from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.893: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 09:31:05.893: INFO: sonobuoy from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.893: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 28 09:31:05.893: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xsb9b from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 09:31:05.893: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 09:31:05.893: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 28 09:31:05.893: INFO: 
  Logging pods the apiserver thinks is on node worker2 before test
  Apr 28 09:31:05.901: INFO: calico-node-8wjpm from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.901: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 09:31:05.901: INFO: kubernetes-dashboard-74fb9f77fb-59wgv from kube-system started at 2024-04-28 06:45:30 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.901: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Apr 28 09:31:05.901: INFO: metrics-server-dfb478476-vvlcv from kube-system started at 2024-04-28 06:45:27 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.901: INFO: 	Container metrics-server ready: true, restart count 0
  Apr 28 09:31:05.901: INFO: node-local-dns-wggzj from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 09:31:05.901: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 09:31:05.901: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xkwx4 from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 09:31:05.901: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 09:31:05.901: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/28/24 09:31:05.901
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17ca67bc23fa15c6], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 04/28/24 09:31:05.93
  Apr 28 09:31:06.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7317" for this suite. @ 04/28/24 09:31:06.93
• [1.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/28/24 09:31:06.94
  Apr 28 09:31:06.940: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 09:31:06.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:06.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:06.962
  STEP: Setting up server cert @ 04/28/24 09:31:06.985
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 09:31:07.269
  STEP: Deploying the webhook pod @ 04/28/24 09:31:07.277
  STEP: Wait for the deployment to be ready @ 04/28/24 09:31:07.286
  Apr 28 09:31:07.294: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/28/24 09:31:09.304
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:31:09.313
  Apr 28 09:31:10.314: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/28/24 09:31:10.321
  STEP: create a pod that should be updated by the webhook @ 04/28/24 09:31:10.332
  Apr 28 09:31:10.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1312" for this suite. @ 04/28/24 09:31:10.405
  STEP: Destroying namespace "webhook-markers-8748" for this suite. @ 04/28/24 09:31:10.414
• [3.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/28/24 09:31:10.431
  Apr 28 09:31:10.431: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename subpath @ 04/28/24 09:31:10.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:10.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:10.497
  STEP: Setting up data @ 04/28/24 09:31:10.501
  STEP: Creating pod pod-subpath-test-downwardapi-kd9l @ 04/28/24 09:31:10.508
  STEP: Creating a pod to test atomic-volume-subpath @ 04/28/24 09:31:10.508
  STEP: Saw pod success @ 04/28/24 09:31:36.581
  Apr 28 09:31:36.584: INFO: Trying to get logs from node worker2 pod pod-subpath-test-downwardapi-kd9l container test-container-subpath-downwardapi-kd9l: <nil>
  STEP: delete the pod @ 04/28/24 09:31:36.595
  STEP: Deleting pod pod-subpath-test-downwardapi-kd9l @ 04/28/24 09:31:36.611
  Apr 28 09:31:36.611: INFO: Deleting pod "pod-subpath-test-downwardapi-kd9l" in namespace "subpath-3232"
  Apr 28 09:31:36.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3232" for this suite. @ 04/28/24 09:31:36.616
• [26.191 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 04/28/24 09:31:36.622
  Apr 28 09:31:36.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename var-expansion @ 04/28/24 09:31:36.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:36.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:36.641
  Apr 28 09:31:38.664: INFO: Deleting pod "var-expansion-e3a4327a-0816-45a3-be45-3e7ed4d202ca" in namespace "var-expansion-7428"
  Apr 28 09:31:38.672: INFO: Wait up to 5m0s for pod "var-expansion-e3a4327a-0816-45a3-be45-3e7ed4d202ca" to be fully deleted
  Apr 28 09:31:40.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7428" for this suite. @ 04/28/24 09:31:40.688
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/28/24 09:31:40.694
  Apr 28 09:31:40.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 09:31:40.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:40.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:40.709
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/28/24 09:31:40.711
  STEP: Saw pod success @ 04/28/24 09:31:44.73
  Apr 28 09:31:44.732: INFO: Trying to get logs from node worker2 pod pod-e4ba2190-55ce-449d-97c2-890c45a50da6 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 09:31:44.738
  Apr 28 09:31:44.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6017" for this suite. @ 04/28/24 09:31:44.76
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/28/24 09:31:44.767
  Apr 28 09:31:44.767: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 09:31:44.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:44.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:44.785
  STEP: Creating a pod to test downward api env vars @ 04/28/24 09:31:44.788
  STEP: Saw pod success @ 04/28/24 09:31:46.807
  Apr 28 09:31:46.811: INFO: Trying to get logs from node worker1 pod downward-api-e5a3780f-e921-48bd-b0b5-f4b1c76cd546 container dapi-container: <nil>
  STEP: delete the pod @ 04/28/24 09:31:46.818
  Apr 28 09:31:46.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3449" for this suite. @ 04/28/24 09:31:46.837
• [2.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/28/24 09:31:46.843
  Apr 28 09:31:46.843: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename dns @ 04/28/24 09:31:46.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:46.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:46.858
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6538.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6538.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/28/24 09:31:46.861
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6538.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6538.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/28/24 09:31:46.861
  STEP: creating a pod to probe /etc/hosts @ 04/28/24 09:31:46.861
  STEP: submitting the pod to kubernetes @ 04/28/24 09:31:46.861
  STEP: retrieving the pod @ 04/28/24 09:31:54.897
  STEP: looking for the results for each expected name from probers @ 04/28/24 09:31:54.9
  Apr 28 09:31:54.914: INFO: DNS probes using dns-6538/dns-test-7762553c-b509-4c4f-80cb-fd1d4d2210ff succeeded

  STEP: deleting the pod @ 04/28/24 09:31:54.914
  Apr 28 09:31:54.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6538" for this suite. @ 04/28/24 09:31:54.934
• [8.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 04/28/24 09:31:54.941
  Apr 28 09:31:54.941: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 09:31:54.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:54.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:54.958
  STEP: Creating a ResourceQuota @ 04/28/24 09:31:54.961
  STEP: Getting a ResourceQuota @ 04/28/24 09:31:54.965
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/28/24 09:31:54.969
  STEP: Patching the ResourceQuota @ 04/28/24 09:31:54.971
  STEP: Deleting a Collection of ResourceQuotas @ 04/28/24 09:31:54.978
  STEP: Verifying the deleted ResourceQuota @ 04/28/24 09:31:54.992
  Apr 28 09:31:54.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8289" for this suite. @ 04/28/24 09:31:55
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 04/28/24 09:31:55.006
  Apr 28 09:31:55.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubelet-test @ 04/28/24 09:31:55.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:55.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:55.023
  Apr 28 09:31:57.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5868" for this suite. @ 04/28/24 09:31:57.051
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 04/28/24 09:31:57.057
  Apr 28 09:31:57.057: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 09:31:57.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:31:57.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:31:57.072
  STEP: Counting existing ResourceQuota @ 04/28/24 09:31:57.074
  STEP: Creating a ResourceQuota @ 04/28/24 09:32:02.078
  STEP: Ensuring resource quota status is calculated @ 04/28/24 09:32:02.081
  STEP: Creating a ReplicaSet @ 04/28/24 09:32:04.087
  STEP: Ensuring resource quota status captures replicaset creation @ 04/28/24 09:32:04.096
  STEP: Deleting a ReplicaSet @ 04/28/24 09:32:06.1
  STEP: Ensuring resource quota status released usage @ 04/28/24 09:32:06.106
  Apr 28 09:32:08.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3723" for this suite. @ 04/28/24 09:32:08.115
• [11.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 04/28/24 09:32:08.123
  Apr 28 09:32:08.123: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 09:32:08.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:32:08.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:32:08.138
  Apr 28 09:32:08.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-5096 version'
  Apr 28 09:32:08.179: INFO: stderr: ""
  Apr 28 09:32:08.179: INFO: stdout: "Client Version: v1.29.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.0\n"
  Apr 28 09:32:08.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5096" for this suite. @ 04/28/24 09:32:08.182
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/28/24 09:32:08.189
  Apr 28 09:32:08.189: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 09:32:08.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:32:08.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:32:08.202
  STEP: Creating secret with name s-test-opt-del-9c215c11-a74a-4b01-8684-8dc4c7a57bb0 @ 04/28/24 09:32:08.207
  STEP: Creating secret with name s-test-opt-upd-5698326b-810f-4ce5-9198-18b5130ba110 @ 04/28/24 09:32:08.21
  STEP: Creating the pod @ 04/28/24 09:32:08.214
  STEP: Deleting secret s-test-opt-del-9c215c11-a74a-4b01-8684-8dc4c7a57bb0 @ 04/28/24 09:32:10.259
  STEP: Updating secret s-test-opt-upd-5698326b-810f-4ce5-9198-18b5130ba110 @ 04/28/24 09:32:10.264
  STEP: Creating secret with name s-test-opt-create-696561c3-87a0-4c13-9635-2a6c62e20076 @ 04/28/24 09:32:10.268
  STEP: waiting to observe update in volume @ 04/28/24 09:32:10.272
  Apr 28 09:33:16.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2382" for this suite. @ 04/28/24 09:33:16.56
• [68.377 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/28/24 09:33:16.565
  Apr 28 09:33:16.565: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 09:33:16.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:33:16.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:33:16.579
  STEP: Creating pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146 @ 04/28/24 09:33:16.581
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/28/24 09:33:18.599
  Apr 28 09:33:18.602: INFO: Initial restart count of pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c is 0
  Apr 28 09:33:18.604: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:20.608: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:22.613: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:24.617: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:26.622: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:28.626: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:30.630: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:32.633: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:34.637: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:36.642: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:38.645: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:40.650: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:42.654: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:44.659: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:46.662: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:48.666: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:50.669: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:52.673: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:54.678: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:56.682: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:33:58.686: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:00.689: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:02.692: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:04.696: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:06.701: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:08.706: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:10.708: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:12.712: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:14.716: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:16.720: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:18.724: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:20.726: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:22.730: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:24.735: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:26.739: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:28.743: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:30.747: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:32.751: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:34.755: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:36.759: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:38.763: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:40.766: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:42.771: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:44.776: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:46.780: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:48.783: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:50.787: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:52.791: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:54.796: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:56.802: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:34:58.805: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:00.809: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:02.812: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:04.816: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:06.819: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:08.824: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:10.827: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:12.831: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:14.835: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:16.838: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:18.842: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:20.845: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:22.850: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:24.853: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:26.858: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:28.862: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:30.867: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:32.870: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:34.872: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:36.876: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:38.880: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:40.884: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:42.888: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:44.892: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:46.900: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:48.904: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:50.908: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:52.912: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:54.917: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:56.922: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:35:58.926: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:00.930: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:02.934: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:04.941: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:06.945: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:08.950: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:10.953: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:12.958: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:14.962: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:16.965: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:18.970: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:20.974: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:22.978: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:24.983: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:26.988: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:28.992: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:30.995: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:33.001: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:35.007: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:37.011: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:39.016: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:41.020: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:43.024: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:45.028: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:47.033: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:49.038: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:51.043: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:53.048: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:55.053: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:57.058: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:36:59.062: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:37:01.067: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:37:03.072: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:37:05.077: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:37:07.082: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:37:09.084: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:37:11.089: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:37:13.092: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:37:15.097: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  Apr 28 09:37:17.101: INFO: Get pod liveness-26f6ea0e-0489-477c-bcf3-147832d3df5c in namespace container-probe-8146
  STEP: deleting the pod @ 04/28/24 09:37:19.102
  Apr 28 09:37:19.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8146" for this suite. @ 04/28/24 09:37:19.12
• [242.562 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/28/24 09:37:19.128
  Apr 28 09:37:19.128: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 09:37:19.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:37:19.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:37:19.154
  STEP: Create a pod @ 04/28/24 09:37:19.156
  STEP: patching /status @ 04/28/24 09:37:21.172
  Apr 28 09:37:21.178: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Apr 28 09:37:21.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9626" for this suite. @ 04/28/24 09:37:21.184
• [2.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/28/24 09:37:21.191
  Apr 28 09:37:21.191: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename daemonsets @ 04/28/24 09:37:21.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:37:21.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:37:21.206
  Apr 28 09:37:21.230: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/28/24 09:37:21.234
  Apr 28 09:37:21.239: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 09:37:21.239: INFO: Node master1 is running 0 daemon pod, expected 1
  Apr 28 09:37:22.242: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 28 09:37:22.242: INFO: Node master1 is running 0 daemon pod, expected 1
  Apr 28 09:37:23.241: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 28 09:37:23.241: INFO: Node master1 is running 0 daemon pod, expected 1
  Apr 28 09:37:24.240: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 28 09:37:24.240: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/28/24 09:37:24.253
  STEP: Check that daemon pods images are updated. @ 04/28/24 09:37:24.268
  Apr 28 09:37:24.275: INFO: Wrong image for pod: daemon-set-xc7m9. Expected: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45, got: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4.
  Apr 28 09:37:24.275: INFO: Wrong image for pod: daemon-set-zbjfp. Expected: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45, got: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4.
  Apr 28 09:37:25.273: INFO: Wrong image for pod: daemon-set-zbjfp. Expected: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45, got: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4.
  Apr 28 09:37:27.272: INFO: Pod daemon-set-rxwqc is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/28/24 09:37:27.276
  Apr 28 09:37:27.281: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 28 09:37:27.281: INFO: Node master1 is running 0 daemon pod, expected 1
  Apr 28 09:37:28.285: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 28 09:37:28.285: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/28/24 09:37:28.3
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2478, will wait for the garbage collector to delete the pods @ 04/28/24 09:37:28.3
  Apr 28 09:37:28.358: INFO: Deleting DaemonSet.extensions daemon-set took: 4.719956ms
  Apr 28 09:37:28.458: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.524503ms
  Apr 28 09:37:29.962: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 09:37:29.962: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 28 09:37:29.966: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22472"},"items":null}

  Apr 28 09:37:29.968: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22472"},"items":null}

  Apr 28 09:37:29.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2478" for this suite. @ 04/28/24 09:37:29.982
• [8.797 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/28/24 09:37:29.987
  Apr 28 09:37:29.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 09:37:29.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:37:30.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:37:30.005
  STEP: Creating configMap with name configmap-test-volume-098178f3-e816-49a1-be2b-fec28af96300 @ 04/28/24 09:37:30.006
  STEP: Creating a pod to test consume configMaps @ 04/28/24 09:37:30.011
  STEP: Saw pod success @ 04/28/24 09:37:34.035
  Apr 28 09:37:34.038: INFO: Trying to get logs from node worker2 pod pod-configmaps-d026e2bf-1949-4a74-a1f5-db30a6b1f033 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 09:37:34.046
  Apr 28 09:37:34.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4007" for this suite. @ 04/28/24 09:37:34.064
• [4.086 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 04/28/24 09:37:34.073
  Apr 28 09:37:34.073: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 09:37:34.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:37:34.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:37:34.089
  STEP: running the image registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4 @ 04/28/24 09:37:34.091
  Apr 28 09:37:34.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-5281 run e2e-test-httpd-pod --image=registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 28 09:37:34.140: INFO: stderr: ""
  Apr 28 09:37:34.140: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/28/24 09:37:34.14
  Apr 28 09:37:34.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-5281 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Apr 28 09:37:34.188: INFO: stderr: ""
  Apr 28 09:37:34.188: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4 @ 04/28/24 09:37:34.188
  Apr 28 09:37:34.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-5281 delete pods e2e-test-httpd-pod'
  Apr 28 09:37:36.208: INFO: stderr: ""
  Apr 28 09:37:36.208: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 28 09:37:36.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5281" for this suite. @ 04/28/24 09:37:36.213
• [2.146 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/28/24 09:37:36.219
  Apr 28 09:37:36.219: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 09:37:36.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:37:36.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:37:36.244
  STEP: Creating pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487 @ 04/28/24 09:37:36.246
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/28/24 09:37:38.26
  Apr 28 09:37:38.263: INFO: Initial restart count of pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 is 0
  Apr 28 09:37:38.265: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:40.269: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:42.273: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:44.278: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:46.284: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:48.289: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:50.293: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:52.298: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:54.304: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:56.308: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:58.313: INFO: Get pod liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 in namespace container-probe-6487
  Apr 28 09:37:58.313: INFO: Restart count of pod container-probe-6487/liveness-2aaba273-8cf8-4b5a-9b90-a80d247f2a49 is now 1 (20.050334267s elapsed)
  STEP: deleting the pod @ 04/28/24 09:37:58.313
  Apr 28 09:37:58.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6487" for this suite. @ 04/28/24 09:37:58.333
• [22.120 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/28/24 09:37:58.339
  Apr 28 09:37:58.339: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename dns @ 04/28/24 09:37:58.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:37:58.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:37:58.358
  STEP: Creating a test headless service @ 04/28/24 09:37:58.359
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7245 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7245;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7245 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7245;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7245.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7245.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7245.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7245.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7245.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7245.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7245.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7245.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7245.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7245.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7245.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7245.svc;check="$$(dig +notcp +noall +answer +search 169.180.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.180.169_udp@PTR;check="$$(dig +tcp +noall +answer +search 169.180.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.180.169_tcp@PTR;sleep 1; done
   @ 04/28/24 09:37:58.378
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7245 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7245;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7245 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7245;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7245.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7245.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7245.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7245.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7245.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7245.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7245.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7245.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7245.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7245.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7245.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7245.svc;check="$$(dig +notcp +noall +answer +search 169.180.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.180.169_udp@PTR;check="$$(dig +tcp +noall +answer +search 169.180.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.180.169_tcp@PTR;sleep 1; done
   @ 04/28/24 09:37:58.378
  STEP: creating a pod to probe DNS @ 04/28/24 09:37:58.378
  STEP: submitting the pod to kubernetes @ 04/28/24 09:37:58.378
  STEP: retrieving the pod @ 04/28/24 09:38:00.408
  STEP: looking for the results for each expected name from probers @ 04/28/24 09:38:00.412
  Apr 28 09:38:00.417: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.421: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.426: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.429: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.433: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.437: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.464: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.468: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.474: INFO: Unable to read jessie_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.477: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.484: INFO: Unable to read jessie_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.491: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:00.516: INFO: Lookups using dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7245 wheezy_tcp@dns-test-service.dns-7245 wheezy_udp@dns-test-service.dns-7245.svc wheezy_tcp@dns-test-service.dns-7245.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7245 jessie_tcp@dns-test-service.dns-7245 jessie_udp@dns-test-service.dns-7245.svc jessie_tcp@dns-test-service.dns-7245.svc]

  Apr 28 09:38:00.522: INFO: Pod client logs for webserver: 
  Apr 28 09:38:00.531: INFO: Pod client logs for querier: 
  Apr 28 09:38:00.540: INFO: Pod client logs for jessie-querier: 
  Apr 28 09:38:05.417: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.421: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.425: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.429: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.434: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.437: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.457: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.460: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.462: INFO: Unable to read jessie_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.466: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.472: INFO: Unable to read jessie_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.476: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:05.508: INFO: Lookups using dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7245 wheezy_tcp@dns-test-service.dns-7245 wheezy_udp@dns-test-service.dns-7245.svc wheezy_tcp@dns-test-service.dns-7245.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7245 jessie_tcp@dns-test-service.dns-7245 jessie_udp@dns-test-service.dns-7245.svc jessie_tcp@dns-test-service.dns-7245.svc]

  Apr 28 09:38:05.517: INFO: Pod client logs for webserver: 
  Apr 28 09:38:05.523: INFO: Pod client logs for querier: 
  Apr 28 09:38:05.530: INFO: Pod client logs for jessie-querier: 
  Apr 28 09:38:10.418: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.421: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.425: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.428: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.431: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.435: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.457: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.460: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.464: INFO: Unable to read jessie_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.467: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.470: INFO: Unable to read jessie_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.475: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:10.505: INFO: Lookups using dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7245 wheezy_tcp@dns-test-service.dns-7245 wheezy_udp@dns-test-service.dns-7245.svc wheezy_tcp@dns-test-service.dns-7245.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7245 jessie_tcp@dns-test-service.dns-7245 jessie_udp@dns-test-service.dns-7245.svc jessie_tcp@dns-test-service.dns-7245.svc]

  Apr 28 09:38:10.516: INFO: Pod client logs for webserver: 
  Apr 28 09:38:10.526: INFO: Pod client logs for querier: 
  Apr 28 09:38:10.535: INFO: Pod client logs for jessie-querier: 
  Apr 28 09:38:15.418: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.420: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.424: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.427: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.429: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.433: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.453: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.456: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.459: INFO: Unable to read jessie_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.463: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.465: INFO: Unable to read jessie_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.471: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:15.500: INFO: Lookups using dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7245 wheezy_tcp@dns-test-service.dns-7245 wheezy_udp@dns-test-service.dns-7245.svc wheezy_tcp@dns-test-service.dns-7245.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7245 jessie_tcp@dns-test-service.dns-7245 jessie_udp@dns-test-service.dns-7245.svc jessie_tcp@dns-test-service.dns-7245.svc]

  Apr 28 09:38:15.510: INFO: Pod client logs for webserver: 
  Apr 28 09:38:15.517: INFO: Pod client logs for querier: 
  Apr 28 09:38:15.523: INFO: Pod client logs for jessie-querier: 
  Apr 28 09:38:20.417: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.420: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.424: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.427: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.430: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.434: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.454: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.457: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.460: INFO: Unable to read jessie_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.462: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.466: INFO: Unable to read jessie_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.470: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:20.497: INFO: Lookups using dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7245 wheezy_tcp@dns-test-service.dns-7245 wheezy_udp@dns-test-service.dns-7245.svc wheezy_tcp@dns-test-service.dns-7245.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7245 jessie_tcp@dns-test-service.dns-7245 jessie_udp@dns-test-service.dns-7245.svc jessie_tcp@dns-test-service.dns-7245.svc]

  Apr 28 09:38:20.503: INFO: Pod client logs for webserver: 
  Apr 28 09:38:20.512: INFO: Pod client logs for querier: 
  Apr 28 09:38:20.520: INFO: Pod client logs for jessie-querier: 
  Apr 28 09:38:25.416: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.420: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.422: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.426: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.430: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.432: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.453: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.456: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.459: INFO: Unable to read jessie_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.462: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.466: INFO: Unable to read jessie_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.469: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:25.497: INFO: Lookups using dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7245 wheezy_tcp@dns-test-service.dns-7245 wheezy_udp@dns-test-service.dns-7245.svc wheezy_tcp@dns-test-service.dns-7245.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7245 jessie_tcp@dns-test-service.dns-7245 jessie_udp@dns-test-service.dns-7245.svc jessie_tcp@dns-test-service.dns-7245.svc]

  Apr 28 09:38:25.505: INFO: Pod client logs for webserver: 
  Apr 28 09:38:25.512: INFO: Pod client logs for querier: 
  Apr 28 09:38:25.517: INFO: Pod client logs for jessie-querier: 
  Apr 28 09:38:30.418: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.422: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.426: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.430: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.433: INFO: Unable to read wheezy_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.436: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.457: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.460: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.462: INFO: Unable to read jessie_udp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.470: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245 from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.474: INFO: Unable to read jessie_udp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.476: INFO: Unable to read jessie_tcp@dns-test-service.dns-7245.svc from pod dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76: the server could not find the requested resource (get pods dns-test-33799e79-39e3-46db-9524-35aa98980e76)
  Apr 28 09:38:30.505: INFO: Lookups using dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7245 wheezy_tcp@dns-test-service.dns-7245 wheezy_udp@dns-test-service.dns-7245.svc wheezy_tcp@dns-test-service.dns-7245.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7245 jessie_tcp@dns-test-service.dns-7245 jessie_udp@dns-test-service.dns-7245.svc jessie_tcp@dns-test-service.dns-7245.svc]

  Apr 28 09:38:30.515: INFO: Pod client logs for webserver: 
  Apr 28 09:38:30.525: INFO: Pod client logs for querier: 
  Apr 28 09:38:30.530: INFO: Pod client logs for jessie-querier: 
  Apr 28 09:38:35.503: INFO: DNS probes using dns-7245/dns-test-33799e79-39e3-46db-9524-35aa98980e76 succeeded

  STEP: deleting the pod @ 04/28/24 09:38:35.503
  STEP: deleting the test service @ 04/28/24 09:38:35.52
  STEP: deleting the test headless service @ 04/28/24 09:38:35.558
  Apr 28 09:38:35.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7245" for this suite. @ 04/28/24 09:38:35.596
• [37.266 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/28/24 09:38:35.605
  Apr 28 09:38:35.605: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 09:38:35.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:38:35.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:38:35.631
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 09:38:35.633
  STEP: Saw pod success @ 04/28/24 09:38:39.654
  Apr 28 09:38:39.657: INFO: Trying to get logs from node worker1 pod downwardapi-volume-afc40afa-7cf2-4de1-bfcd-62c57509f751 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 09:38:39.661
  Apr 28 09:38:39.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-110" for this suite. @ 04/28/24 09:38:39.678
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/28/24 09:38:39.683
  Apr 28 09:38:39.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-runtime @ 04/28/24 09:38:39.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:38:39.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:38:39.7
  STEP: create the container @ 04/28/24 09:38:39.702
  W0428 09:38:39.710872      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/28/24 09:38:39.711
  STEP: get the container status @ 04/28/24 09:38:41.721
  STEP: the container should be terminated @ 04/28/24 09:38:41.724
  STEP: the termination message should be set @ 04/28/24 09:38:41.724
  Apr 28 09:38:41.724: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/28/24 09:38:41.724
  Apr 28 09:38:41.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4958" for this suite. @ 04/28/24 09:38:41.74
• [2.062 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 04/28/24 09:38:41.745
  Apr 28 09:38:41.745: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-pred @ 04/28/24 09:38:41.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:38:41.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:38:41.759
  Apr 28 09:38:41.764: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 28 09:38:41.774: INFO: Waiting for terminating namespaces to be deleted...
  Apr 28 09:38:41.776: INFO: 
  Logging pods the apiserver thinks is on node master1 before test
  Apr 28 09:38:41.780: INFO: calico-kube-controllers-5994f46b69-6wms6 from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.780: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Apr 28 09:38:41.780: INFO: calico-node-zq7zm from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.780: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 09:38:41.780: INFO: dashboard-metrics-scraper-77b667b99d-pd58z from kube-system started at 2024-04-28 06:45:30 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.780: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Apr 28 09:38:41.780: INFO: node-local-dns-x5gk2 from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.780: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 09:38:41.780: INFO: sonobuoy-e2e-job-a7cb2e98a5034b0c from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 09:38:41.780: INFO: 	Container e2e ready: true, restart count 0
  Apr 28 09:38:41.780: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 09:38:41.780: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-gfv6z from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 09:38:41.780: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 09:38:41.780: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 28 09:38:41.780: INFO: 
  Logging pods the apiserver thinks is on node worker1 before test
  Apr 28 09:38:41.786: INFO: calico-node-t2nbk from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.786: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 09:38:41.786: INFO: coredns-6db9bd4cd7-zcglr from kube-system started at 2024-04-28 06:45:25 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.786: INFO: 	Container coredns ready: true, restart count 0
  Apr 28 09:38:41.786: INFO: node-local-dns-k6xsh from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.786: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 09:38:41.786: INFO: sonobuoy from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.786: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 28 09:38:41.786: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xsb9b from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 09:38:41.786: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 09:38:41.786: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 28 09:38:41.786: INFO: 
  Logging pods the apiserver thinks is on node worker2 before test
  Apr 28 09:38:41.790: INFO: calico-node-8wjpm from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.790: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 09:38:41.790: INFO: kubernetes-dashboard-74fb9f77fb-59wgv from kube-system started at 2024-04-28 06:45:30 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.790: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Apr 28 09:38:41.790: INFO: metrics-server-dfb478476-vvlcv from kube-system started at 2024-04-28 06:45:27 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.790: INFO: 	Container metrics-server ready: true, restart count 0
  Apr 28 09:38:41.790: INFO: node-local-dns-wggzj from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 09:38:41.790: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 09:38:41.790: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xkwx4 from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 09:38:41.790: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 09:38:41.790: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node master1 @ 04/28/24 09:38:41.803
  STEP: verifying the node has the label node worker1 @ 04/28/24 09:38:41.827
  STEP: verifying the node has the label node worker2 @ 04/28/24 09:38:41.839
  Apr 28 09:38:41.852: INFO: Pod calico-kube-controllers-5994f46b69-6wms6 requesting resource cpu=0m on Node master1
  Apr 28 09:38:41.852: INFO: Pod calico-node-8wjpm requesting resource cpu=250m on Node worker2
  Apr 28 09:38:41.852: INFO: Pod calico-node-t2nbk requesting resource cpu=250m on Node worker1
  Apr 28 09:38:41.852: INFO: Pod calico-node-zq7zm requesting resource cpu=250m on Node master1
  Apr 28 09:38:41.852: INFO: Pod coredns-6db9bd4cd7-zcglr requesting resource cpu=100m on Node worker1
  Apr 28 09:38:41.852: INFO: Pod dashboard-metrics-scraper-77b667b99d-pd58z requesting resource cpu=0m on Node master1
  Apr 28 09:38:41.852: INFO: Pod kubernetes-dashboard-74fb9f77fb-59wgv requesting resource cpu=0m on Node worker2
  Apr 28 09:38:41.852: INFO: Pod metrics-server-dfb478476-vvlcv requesting resource cpu=100m on Node worker2
  Apr 28 09:38:41.852: INFO: Pod node-local-dns-k6xsh requesting resource cpu=25m on Node worker1
  Apr 28 09:38:41.852: INFO: Pod node-local-dns-wggzj requesting resource cpu=25m on Node worker2
  Apr 28 09:38:41.852: INFO: Pod node-local-dns-x5gk2 requesting resource cpu=25m on Node master1
  Apr 28 09:38:41.852: INFO: Pod sonobuoy requesting resource cpu=0m on Node worker1
  Apr 28 09:38:41.852: INFO: Pod sonobuoy-e2e-job-a7cb2e98a5034b0c requesting resource cpu=0m on Node master1
  Apr 28 09:38:41.852: INFO: Pod sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-gfv6z requesting resource cpu=0m on Node master1
  Apr 28 09:38:41.852: INFO: Pod sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xkwx4 requesting resource cpu=0m on Node worker2
  Apr 28 09:38:41.852: INFO: Pod sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xsb9b requesting resource cpu=0m on Node worker1
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/28/24 09:38:41.852
  Apr 28 09:38:41.853: INFO: Creating a pod which consumes cpu=2607m on Node master1
  Apr 28 09:38:41.865: INFO: Creating a pod which consumes cpu=2537m on Node worker1
  Apr 28 09:38:41.876: INFO: Creating a pod which consumes cpu=2537m on Node worker2
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/28/24 09:38:43.918
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1900cdf8-9bf3-4500-9227-c0510710657a.17ca68264d26fb50], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8874/filler-pod-1900cdf8-9bf3-4500-9227-c0510710657a to master1] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1900cdf8-9bf3-4500-9227-c0510710657a.17ca68266ad0d504], Reason = [Pulled], Message = [Container image "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9" already present on machine] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1900cdf8-9bf3-4500-9227-c0510710657a.17ca68266b429335], Reason = [Created], Message = [Created container filler-pod-1900cdf8-9bf3-4500-9227-c0510710657a] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1900cdf8-9bf3-4500-9227-c0510710657a.17ca68266e66b025], Reason = [Started], Message = [Started container filler-pod-1900cdf8-9bf3-4500-9227-c0510710657a] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6b1d0677-82fc-4952-ad5a-530c115a2280.17ca68264e038073], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8874/filler-pod-6b1d0677-82fc-4952-ad5a-530c115a2280 to worker2] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6b1d0677-82fc-4952-ad5a-530c115a2280.17ca68266ccfbd65], Reason = [Pulled], Message = [Container image "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9" already present on machine] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6b1d0677-82fc-4952-ad5a-530c115a2280.17ca68266d4731f3], Reason = [Created], Message = [Created container filler-pod-6b1d0677-82fc-4952-ad5a-530c115a2280] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6b1d0677-82fc-4952-ad5a-530c115a2280.17ca68267012b8fb], Reason = [Started], Message = [Started container filler-pod-6b1d0677-82fc-4952-ad5a-530c115a2280] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9ff6edff-f66e-491d-ad60-872c728f5dec.17ca68264de6a2ac], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8874/filler-pod-9ff6edff-f66e-491d-ad60-872c728f5dec to worker1] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9ff6edff-f66e-491d-ad60-872c728f5dec.17ca68266dd93a08], Reason = [Pulled], Message = [Container image "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9" already present on machine] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9ff6edff-f66e-491d-ad60-872c728f5dec.17ca68266e4604ad], Reason = [Created], Message = [Created container filler-pod-9ff6edff-f66e-491d-ad60-872c728f5dec] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9ff6edff-f66e-491d-ad60-872c728f5dec.17ca682671082d8c], Reason = [Started], Message = [Started container filler-pod-9ff6edff-f66e-491d-ad60-872c728f5dec] @ 04/28/24 09:38:43.921
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17ca6826c71a7baf], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 04/28/24 09:38:43.933
  STEP: removing the label node off the node master1 @ 04/28/24 09:38:44.928
  STEP: verifying the node doesn't have the label node @ 04/28/24 09:38:44.938
  STEP: removing the label node off the node worker1 @ 04/28/24 09:38:44.943
  STEP: verifying the node doesn't have the label node @ 04/28/24 09:38:44.953
  STEP: removing the label node off the node worker2 @ 04/28/24 09:38:44.959
  STEP: verifying the node doesn't have the label node @ 04/28/24 09:38:44.981
  Apr 28 09:38:44.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8874" for this suite. @ 04/28/24 09:38:44.992
• [3.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/28/24 09:38:45
  Apr 28 09:38:45.000: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename ingressclass @ 04/28/24 09:38:45.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:38:45.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:38:45.014
  STEP: getting /apis @ 04/28/24 09:38:45.016
  STEP: getting /apis/networking.k8s.io @ 04/28/24 09:38:45.018
  STEP: getting /apis/networking.k8s.iov1 @ 04/28/24 09:38:45.02
  STEP: creating @ 04/28/24 09:38:45.021
  STEP: getting @ 04/28/24 09:38:45.037
  STEP: listing @ 04/28/24 09:38:45.043
  STEP: watching @ 04/28/24 09:38:45.049
  Apr 28 09:38:45.049: INFO: starting watch
  STEP: patching @ 04/28/24 09:38:45.05
  STEP: updating @ 04/28/24 09:38:45.055
  Apr 28 09:38:45.060: INFO: waiting for watch events with expected annotations
  Apr 28 09:38:45.060: INFO: saw patched and updated annotations
  STEP: deleting @ 04/28/24 09:38:45.06
  STEP: deleting a collection @ 04/28/24 09:38:45.078
  Apr 28 09:38:45.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2960" for this suite. @ 04/28/24 09:38:45.102
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 04/28/24 09:38:45.11
  Apr 28 09:38:45.110: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 09:38:45.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:38:45.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:38:45.125
  STEP: running the image registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4 @ 04/28/24 09:38:45.127
  Apr 28 09:38:45.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-6125 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4'
  Apr 28 09:38:45.180: INFO: stderr: ""
  Apr 28 09:38:45.180: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/28/24 09:38:45.18
  Apr 28 09:38:45.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-6125 delete pods e2e-test-httpd-pod'
  Apr 28 09:38:47.199: INFO: stderr: ""
  Apr 28 09:38:47.199: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 28 09:38:47.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6125" for this suite. @ 04/28/24 09:38:47.204
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/28/24 09:38:47.211
  Apr 28 09:38:47.211: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-runtime @ 04/28/24 09:38:47.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:38:47.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:38:47.234
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/28/24 09:38:47.248
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/28/24 09:39:01.308
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/28/24 09:39:01.31
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/28/24 09:39:01.317
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/28/24 09:39:01.317
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/28/24 09:39:01.336
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/28/24 09:39:04.351
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/28/24 09:39:05.357
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/28/24 09:39:05.363
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/28/24 09:39:05.363
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/28/24 09:39:05.386
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/28/24 09:39:06.395
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/28/24 09:39:08.407
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/28/24 09:39:08.412
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/28/24 09:39:08.412
  Apr 28 09:39:08.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1974" for this suite. @ 04/28/24 09:39:08.44
• [21.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/28/24 09:39:08.447
  Apr 28 09:39:08.447: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 09:39:08.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:39:08.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:39:08.51
  STEP: Creating projection with secret that has name projected-secret-test-0413762f-ed78-4280-8c4b-435faf1d8909 @ 04/28/24 09:39:08.512
  STEP: Creating a pod to test consume secrets @ 04/28/24 09:39:08.515
  STEP: Saw pod success @ 04/28/24 09:39:12.531
  Apr 28 09:39:12.534: INFO: Trying to get logs from node worker2 pod pod-projected-secrets-e1c3fab5-a7b2-472f-ab93-a5d04f84e253 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 09:39:12.541
  Apr 28 09:39:12.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2968" for this suite. @ 04/28/24 09:39:12.555
• [4.116 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/28/24 09:39:12.563
  Apr 28 09:39:12.564: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 09:39:12.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:39:12.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:39:12.578
  STEP: Setting up server cert @ 04/28/24 09:39:12.595
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 09:39:12.767
  STEP: Deploying the webhook pod @ 04/28/24 09:39:12.774
  STEP: Wait for the deployment to be ready @ 04/28/24 09:39:12.784
  Apr 28 09:39:12.795: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/28/24 09:39:14.805
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:39:14.815
  Apr 28 09:39:15.816: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 28 09:39:15.823: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/28/24 09:39:16.332
  STEP: Creating a custom resource that should be denied by the webhook @ 04/28/24 09:39:16.344
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/28/24 09:39:18.357
  STEP: Updating the custom resource with disallowed data should be denied @ 04/28/24 09:39:18.362
  STEP: Deleting the custom resource should be denied @ 04/28/24 09:39:18.372
  STEP: Remove the offending key and value from the custom resource data @ 04/28/24 09:39:18.378
  STEP: Deleting the updated custom resource should be successful @ 04/28/24 09:39:18.386
  Apr 28 09:39:18.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9860" for this suite. @ 04/28/24 09:39:18.953
  STEP: Destroying namespace "webhook-markers-7567" for this suite. @ 04/28/24 09:39:18.958
• [6.400 seconds]
------------------------------
SS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/28/24 09:39:18.964
  Apr 28 09:39:18.964: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename svc-latency @ 04/28/24 09:39:18.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:39:18.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:39:18.98
  Apr 28 09:39:18.982: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2936 @ 04/28/24 09:39:18.984
  I0428 09:39:18.989327      21 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2936, replica count: 1
  I0428 09:39:20.040658      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0428 09:39:21.041663      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 28 09:39:21.153: INFO: Created: latency-svc-g5xjg
  Apr 28 09:39:21.158: INFO: Got endpoints: latency-svc-g5xjg [16.154684ms]
  Apr 28 09:39:21.171: INFO: Created: latency-svc-5jt4g
  Apr 28 09:39:21.178: INFO: Got endpoints: latency-svc-5jt4g [19.626263ms]
  Apr 28 09:39:21.181: INFO: Created: latency-svc-thhr5
  Apr 28 09:39:21.189: INFO: Got endpoints: latency-svc-thhr5 [30.61247ms]
  Apr 28 09:39:21.190: INFO: Created: latency-svc-s4lr9
  Apr 28 09:39:21.198: INFO: Got endpoints: latency-svc-s4lr9 [38.92257ms]
  Apr 28 09:39:21.199: INFO: Created: latency-svc-8hw6b
  Apr 28 09:39:21.211: INFO: Got endpoints: latency-svc-8hw6b [51.858148ms]
  Apr 28 09:39:21.211: INFO: Created: latency-svc-9pvqw
  Apr 28 09:39:21.216: INFO: Got endpoints: latency-svc-9pvqw [56.489112ms]
  Apr 28 09:39:21.219: INFO: Created: latency-svc-s87tk
  Apr 28 09:39:21.224: INFO: Got endpoints: latency-svc-s87tk [65.437684ms]
  Apr 28 09:39:21.227: INFO: Created: latency-svc-gw7qt
  Apr 28 09:39:21.233: INFO: Got endpoints: latency-svc-gw7qt [74.145651ms]
  Apr 28 09:39:21.240: INFO: Created: latency-svc-tmbgh
  Apr 28 09:39:21.244: INFO: Got endpoints: latency-svc-tmbgh [85.423561ms]
  Apr 28 09:39:21.251: INFO: Created: latency-svc-65zlv
  Apr 28 09:39:21.255: INFO: Got endpoints: latency-svc-65zlv [95.665979ms]
  Apr 28 09:39:21.262: INFO: Created: latency-svc-tmqfp
  Apr 28 09:39:21.269: INFO: Got endpoints: latency-svc-tmqfp [109.536931ms]
  Apr 28 09:39:21.269: INFO: Created: latency-svc-rvch8
  Apr 28 09:39:21.275: INFO: Got endpoints: latency-svc-rvch8 [116.039791ms]
  Apr 28 09:39:21.278: INFO: Created: latency-svc-r5zng
  Apr 28 09:39:21.283: INFO: Got endpoints: latency-svc-r5zng [124.174055ms]
  Apr 28 09:39:21.287: INFO: Created: latency-svc-f2g8j
  Apr 28 09:39:21.291: INFO: Got endpoints: latency-svc-f2g8j [132.085079ms]
  Apr 28 09:39:21.297: INFO: Created: latency-svc-7kp2v
  Apr 28 09:39:21.304: INFO: Got endpoints: latency-svc-7kp2v [145.457371ms]
  Apr 28 09:39:21.306: INFO: Created: latency-svc-l8klh
  Apr 28 09:39:21.313: INFO: Got endpoints: latency-svc-l8klh [154.115036ms]
  Apr 28 09:39:21.319: INFO: Created: latency-svc-zsw6j
  Apr 28 09:39:21.325: INFO: Got endpoints: latency-svc-zsw6j [145.927737ms]
  Apr 28 09:39:21.330: INFO: Created: latency-svc-vcfln
  Apr 28 09:39:21.334: INFO: Got endpoints: latency-svc-vcfln [144.51489ms]
  Apr 28 09:39:21.337: INFO: Created: latency-svc-t4scl
  Apr 28 09:39:21.345: INFO: Created: latency-svc-t4zd5
  Apr 28 09:39:21.348: INFO: Got endpoints: latency-svc-t4scl [149.94348ms]
  Apr 28 09:39:21.351: INFO: Got endpoints: latency-svc-t4zd5 [139.704661ms]
  Apr 28 09:39:21.456: INFO: Created: latency-svc-6gqxh
  Apr 28 09:39:21.456: INFO: Created: latency-svc-mqdqs
  Apr 28 09:39:21.456: INFO: Created: latency-svc-mrnhp
  Apr 28 09:39:21.464: INFO: Created: latency-svc-6k92g
  Apr 28 09:39:21.464: INFO: Created: latency-svc-2ptpl
  Apr 28 09:39:21.464: INFO: Created: latency-svc-vkfnt
  Apr 28 09:39:21.464: INFO: Created: latency-svc-l485f
  Apr 28 09:39:21.464: INFO: Created: latency-svc-jck2h
  Apr 28 09:39:21.465: INFO: Created: latency-svc-j8c7q
  Apr 28 09:39:21.465: INFO: Created: latency-svc-45pmt
  Apr 28 09:39:21.465: INFO: Created: latency-svc-kctfb
  Apr 28 09:39:21.468: INFO: Created: latency-svc-l8h76
  Apr 28 09:39:21.470: INFO: Created: latency-svc-pkqzv
  Apr 28 09:39:21.470: INFO: Created: latency-svc-6g98x
  Apr 28 09:39:21.470: INFO: Created: latency-svc-m6c86
  Apr 28 09:39:21.476: INFO: Got endpoints: latency-svc-6gqxh [128.096343ms]
  Apr 28 09:39:21.479: INFO: Got endpoints: latency-svc-mrnhp [165.992195ms]
  Apr 28 09:39:21.479: INFO: Got endpoints: latency-svc-jck2h [187.902918ms]
  Apr 28 09:39:21.479: INFO: Got endpoints: latency-svc-mqdqs [263.821215ms]
  Apr 28 09:39:21.480: INFO: Got endpoints: latency-svc-m6c86 [176.029892ms]
  Apr 28 09:39:21.480: INFO: Got endpoints: latency-svc-45pmt [129.476478ms]
  Apr 28 09:39:21.484: INFO: Got endpoints: latency-svc-6g98x [259.745016ms]
  Apr 28 09:39:21.491: INFO: Got endpoints: latency-svc-pkqzv [207.476597ms]
  Apr 28 09:39:21.497: INFO: Got endpoints: latency-svc-l8h76 [163.043193ms]
  Apr 28 09:39:21.497: INFO: Got endpoints: latency-svc-j8c7q [221.719833ms]
  Apr 28 09:39:21.497: INFO: Got endpoints: latency-svc-kctfb [242.066439ms]
  Apr 28 09:39:21.500: INFO: Got endpoints: latency-svc-vkfnt [231.286234ms]
  Apr 28 09:39:21.504: INFO: Got endpoints: latency-svc-2ptpl [270.553162ms]
  Apr 28 09:39:21.505: INFO: Created: latency-svc-77d5m
  Apr 28 09:39:21.507: INFO: Got endpoints: latency-svc-6k92g [262.483929ms]
  Apr 28 09:39:21.507: INFO: Got endpoints: latency-svc-l485f [182.511585ms]
  Apr 28 09:39:21.513: INFO: Created: latency-svc-tx2ds
  Apr 28 09:39:21.515: INFO: Got endpoints: latency-svc-77d5m [38.623735ms]
  Apr 28 09:39:21.520: INFO: Got endpoints: latency-svc-tx2ds [41.089029ms]
  Apr 28 09:39:21.522: INFO: Created: latency-svc-z489v
  Apr 28 09:39:21.536: INFO: Created: latency-svc-mfw56
  Apr 28 09:39:21.544: INFO: Created: latency-svc-glggr
  Apr 28 09:39:21.554: INFO: Created: latency-svc-55gh9
  Apr 28 09:39:21.559: INFO: Got endpoints: latency-svc-z489v [79.32736ms]
  Apr 28 09:39:21.565: INFO: Created: latency-svc-pm64l
  Apr 28 09:39:21.571: INFO: Created: latency-svc-snng9
  Apr 28 09:39:21.577: INFO: Created: latency-svc-wgrb6
  Apr 28 09:39:21.586: INFO: Created: latency-svc-7g88c
  Apr 28 09:39:21.596: INFO: Created: latency-svc-v4tql
  Apr 28 09:39:21.601: INFO: Created: latency-svc-lz2wl
  Apr 28 09:39:21.611: INFO: Got endpoints: latency-svc-mfw56 [132.059108ms]
  Apr 28 09:39:21.621: INFO: Created: latency-svc-968ns
  Apr 28 09:39:21.628: INFO: Created: latency-svc-fs9jz
  Apr 28 09:39:21.634: INFO: Created: latency-svc-l25w8
  Apr 28 09:39:21.651: INFO: Created: latency-svc-rwdzl
  Apr 28 09:39:21.660: INFO: Got endpoints: latency-svc-glggr [180.814443ms]
  Apr 28 09:39:21.661: INFO: Created: latency-svc-zj4b4
  Apr 28 09:39:21.671: INFO: Created: latency-svc-jmcgd
  Apr 28 09:39:21.686: INFO: Created: latency-svc-55rv8
  Apr 28 09:39:21.693: INFO: Created: latency-svc-flj6g
  Apr 28 09:39:21.706: INFO: Got endpoints: latency-svc-55gh9 [225.778959ms]
  Apr 28 09:39:21.716: INFO: Created: latency-svc-wvbv2
  Apr 28 09:39:21.757: INFO: Got endpoints: latency-svc-pm64l [273.120618ms]
  Apr 28 09:39:21.768: INFO: Created: latency-svc-g8l9r
  Apr 28 09:39:21.806: INFO: Got endpoints: latency-svc-snng9 [314.772522ms]
  Apr 28 09:39:21.818: INFO: Created: latency-svc-h8lhg
  Apr 28 09:39:21.858: INFO: Got endpoints: latency-svc-wgrb6 [361.011286ms]
  Apr 28 09:39:21.870: INFO: Created: latency-svc-bbssl
  Apr 28 09:39:21.907: INFO: Got endpoints: latency-svc-7g88c [410.104332ms]
  Apr 28 09:39:21.917: INFO: Created: latency-svc-6tjmt
  Apr 28 09:39:21.957: INFO: Got endpoints: latency-svc-v4tql [459.483431ms]
  Apr 28 09:39:21.965: INFO: Created: latency-svc-z5zgw
  Apr 28 09:39:22.006: INFO: Got endpoints: latency-svc-lz2wl [505.691394ms]
  Apr 28 09:39:22.016: INFO: Created: latency-svc-8x564
  Apr 28 09:39:22.057: INFO: Got endpoints: latency-svc-968ns [553.292633ms]
  Apr 28 09:39:22.067: INFO: Created: latency-svc-ql6b5
  Apr 28 09:39:22.107: INFO: Got endpoints: latency-svc-fs9jz [599.680328ms]
  Apr 28 09:39:22.116: INFO: Created: latency-svc-7nnxv
  Apr 28 09:39:22.156: INFO: Got endpoints: latency-svc-l25w8 [649.069424ms]
  Apr 28 09:39:22.165: INFO: Created: latency-svc-c25vj
  Apr 28 09:39:22.207: INFO: Got endpoints: latency-svc-rwdzl [691.867077ms]
  Apr 28 09:39:22.221: INFO: Created: latency-svc-cz992
  Apr 28 09:39:22.259: INFO: Got endpoints: latency-svc-zj4b4 [738.940487ms]
  Apr 28 09:39:22.268: INFO: Created: latency-svc-4dm8f
  Apr 28 09:39:22.307: INFO: Got endpoints: latency-svc-jmcgd [747.047147ms]
  Apr 28 09:39:22.318: INFO: Created: latency-svc-pqvr9
  Apr 28 09:39:22.364: INFO: Got endpoints: latency-svc-55rv8 [752.582998ms]
  Apr 28 09:39:22.377: INFO: Created: latency-svc-v7b8j
  Apr 28 09:39:22.407: INFO: Got endpoints: latency-svc-flj6g [747.028852ms]
  Apr 28 09:39:22.416: INFO: Created: latency-svc-kbtsr
  Apr 28 09:39:22.456: INFO: Got endpoints: latency-svc-wvbv2 [749.719544ms]
  Apr 28 09:39:22.467: INFO: Created: latency-svc-wghvz
  Apr 28 09:39:22.507: INFO: Got endpoints: latency-svc-g8l9r [749.248105ms]
  Apr 28 09:39:22.518: INFO: Created: latency-svc-kq98x
  Apr 28 09:39:22.557: INFO: Got endpoints: latency-svc-h8lhg [750.808742ms]
  Apr 28 09:39:22.567: INFO: Created: latency-svc-bmqxt
  Apr 28 09:39:22.607: INFO: Got endpoints: latency-svc-bbssl [748.981145ms]
  Apr 28 09:39:22.620: INFO: Created: latency-svc-74qkj
  Apr 28 09:39:22.658: INFO: Got endpoints: latency-svc-6tjmt [750.033376ms]
  Apr 28 09:39:22.670: INFO: Created: latency-svc-pptsf
  Apr 28 09:39:22.707: INFO: Got endpoints: latency-svc-z5zgw [750.236716ms]
  Apr 28 09:39:22.718: INFO: Created: latency-svc-bm76s
  Apr 28 09:39:22.756: INFO: Got endpoints: latency-svc-8x564 [749.683388ms]
  Apr 28 09:39:22.767: INFO: Created: latency-svc-frnng
  Apr 28 09:39:22.807: INFO: Got endpoints: latency-svc-ql6b5 [750.080541ms]
  Apr 28 09:39:22.817: INFO: Created: latency-svc-6f2jb
  Apr 28 09:39:22.857: INFO: Got endpoints: latency-svc-7nnxv [749.737223ms]
  Apr 28 09:39:22.867: INFO: Created: latency-svc-bczpt
  Apr 28 09:39:22.906: INFO: Got endpoints: latency-svc-c25vj [749.631479ms]
  Apr 28 09:39:22.917: INFO: Created: latency-svc-wwt45
  Apr 28 09:39:22.957: INFO: Got endpoints: latency-svc-cz992 [750.587492ms]
  Apr 28 09:39:22.968: INFO: Created: latency-svc-hw7h6
  Apr 28 09:39:23.007: INFO: Got endpoints: latency-svc-4dm8f [747.854475ms]
  Apr 28 09:39:23.016: INFO: Created: latency-svc-kv94j
  Apr 28 09:39:23.057: INFO: Got endpoints: latency-svc-pqvr9 [750.042653ms]
  Apr 28 09:39:23.067: INFO: Created: latency-svc-c4wgz
  Apr 28 09:39:23.108: INFO: Got endpoints: latency-svc-v7b8j [744.015673ms]
  Apr 28 09:39:23.118: INFO: Created: latency-svc-hr9rr
  Apr 28 09:39:23.158: INFO: Got endpoints: latency-svc-kbtsr [750.74161ms]
  Apr 28 09:39:23.169: INFO: Created: latency-svc-v9tk7
  Apr 28 09:39:23.206: INFO: Got endpoints: latency-svc-wghvz [750.455282ms]
  Apr 28 09:39:23.215: INFO: Created: latency-svc-vdbvg
  Apr 28 09:39:23.256: INFO: Got endpoints: latency-svc-kq98x [749.357804ms]
  Apr 28 09:39:23.267: INFO: Created: latency-svc-99bjv
  Apr 28 09:39:23.307: INFO: Got endpoints: latency-svc-bmqxt [750.187313ms]
  Apr 28 09:39:23.318: INFO: Created: latency-svc-gd62w
  Apr 28 09:39:23.356: INFO: Got endpoints: latency-svc-74qkj [749.336014ms]
  Apr 28 09:39:23.368: INFO: Created: latency-svc-m9h7r
  Apr 28 09:39:23.406: INFO: Got endpoints: latency-svc-pptsf [748.428771ms]
  Apr 28 09:39:23.415: INFO: Created: latency-svc-cwm9j
  Apr 28 09:39:23.458: INFO: Got endpoints: latency-svc-bm76s [750.531635ms]
  Apr 28 09:39:23.468: INFO: Created: latency-svc-cm4ph
  Apr 28 09:39:23.507: INFO: Got endpoints: latency-svc-frnng [751.046579ms]
  Apr 28 09:39:23.518: INFO: Created: latency-svc-kdlvb
  Apr 28 09:39:23.556: INFO: Got endpoints: latency-svc-6f2jb [748.946669ms]
  Apr 28 09:39:23.567: INFO: Created: latency-svc-zrctj
  Apr 28 09:39:23.608: INFO: Got endpoints: latency-svc-bczpt [751.015021ms]
  Apr 28 09:39:23.621: INFO: Created: latency-svc-ghwrg
  Apr 28 09:39:23.657: INFO: Got endpoints: latency-svc-wwt45 [750.729741ms]
  Apr 28 09:39:23.666: INFO: Created: latency-svc-5f96r
  Apr 28 09:39:23.707: INFO: Got endpoints: latency-svc-hw7h6 [749.659806ms]
  Apr 28 09:39:23.717: INFO: Created: latency-svc-phpb9
  Apr 28 09:39:23.758: INFO: Got endpoints: latency-svc-kv94j [750.730846ms]
  Apr 28 09:39:23.769: INFO: Created: latency-svc-588tg
  Apr 28 09:39:23.807: INFO: Got endpoints: latency-svc-c4wgz [750.477556ms]
  Apr 28 09:39:23.817: INFO: Created: latency-svc-pb7dj
  Apr 28 09:39:23.857: INFO: Got endpoints: latency-svc-hr9rr [748.883616ms]
  Apr 28 09:39:23.867: INFO: Created: latency-svc-wkcr8
  Apr 28 09:39:23.907: INFO: Got endpoints: latency-svc-v9tk7 [748.798139ms]
  Apr 28 09:39:23.918: INFO: Created: latency-svc-fpmvc
  Apr 28 09:39:23.957: INFO: Got endpoints: latency-svc-vdbvg [750.706234ms]
  Apr 28 09:39:23.967: INFO: Created: latency-svc-hl75q
  Apr 28 09:39:24.006: INFO: Got endpoints: latency-svc-99bjv [750.215232ms]
  Apr 28 09:39:24.017: INFO: Created: latency-svc-bwflt
  Apr 28 09:39:24.059: INFO: Got endpoints: latency-svc-gd62w [751.665131ms]
  Apr 28 09:39:24.075: INFO: Created: latency-svc-9vm8x
  Apr 28 09:39:24.110: INFO: Got endpoints: latency-svc-m9h7r [752.872218ms]
  Apr 28 09:39:24.125: INFO: Created: latency-svc-wpznk
  Apr 28 09:39:24.157: INFO: Got endpoints: latency-svc-cwm9j [751.059765ms]
  Apr 28 09:39:24.170: INFO: Created: latency-svc-mfttt
  Apr 28 09:39:24.206: INFO: Got endpoints: latency-svc-cm4ph [748.419462ms]
  Apr 28 09:39:24.219: INFO: Created: latency-svc-hv9s9
  Apr 28 09:39:24.257: INFO: Got endpoints: latency-svc-kdlvb [750.116358ms]
  Apr 28 09:39:24.271: INFO: Created: latency-svc-z4lxz
  Apr 28 09:39:24.307: INFO: Got endpoints: latency-svc-zrctj [750.795373ms]
  Apr 28 09:39:24.328: INFO: Created: latency-svc-xjtkd
  Apr 28 09:39:24.356: INFO: Got endpoints: latency-svc-ghwrg [747.891493ms]
  Apr 28 09:39:24.366: INFO: Created: latency-svc-z4mzj
  Apr 28 09:39:24.407: INFO: Got endpoints: latency-svc-5f96r [750.112397ms]
  Apr 28 09:39:24.419: INFO: Created: latency-svc-q7t77
  Apr 28 09:39:24.457: INFO: Got endpoints: latency-svc-phpb9 [749.769638ms]
  Apr 28 09:39:24.468: INFO: Created: latency-svc-skxds
  Apr 28 09:39:24.506: INFO: Got endpoints: latency-svc-588tg [748.160098ms]
  Apr 28 09:39:24.515: INFO: Created: latency-svc-6s44g
  Apr 28 09:39:24.557: INFO: Got endpoints: latency-svc-pb7dj [749.185746ms]
  Apr 28 09:39:24.569: INFO: Created: latency-svc-qgzzg
  Apr 28 09:39:24.607: INFO: Got endpoints: latency-svc-wkcr8 [749.300008ms]
  Apr 28 09:39:24.624: INFO: Created: latency-svc-bb4f5
  Apr 28 09:39:24.657: INFO: Got endpoints: latency-svc-fpmvc [750.07769ms]
  Apr 28 09:39:24.666: INFO: Created: latency-svc-zsdxv
  Apr 28 09:39:24.707: INFO: Got endpoints: latency-svc-hl75q [749.243425ms]
  Apr 28 09:39:24.718: INFO: Created: latency-svc-65nf2
  Apr 28 09:39:24.757: INFO: Got endpoints: latency-svc-bwflt [750.270357ms]
  Apr 28 09:39:24.767: INFO: Created: latency-svc-h76lz
  Apr 28 09:39:24.807: INFO: Got endpoints: latency-svc-9vm8x [747.722226ms]
  Apr 28 09:39:24.816: INFO: Created: latency-svc-59mm4
  Apr 28 09:39:24.859: INFO: Got endpoints: latency-svc-wpznk [749.143586ms]
  Apr 28 09:39:24.870: INFO: Created: latency-svc-vhqxf
  Apr 28 09:39:24.907: INFO: Got endpoints: latency-svc-mfttt [749.509977ms]
  Apr 28 09:39:24.916: INFO: Created: latency-svc-vxmnv
  Apr 28 09:39:24.957: INFO: Got endpoints: latency-svc-hv9s9 [750.36567ms]
  Apr 28 09:39:24.966: INFO: Created: latency-svc-2vbtg
  Apr 28 09:39:25.007: INFO: Got endpoints: latency-svc-z4lxz [750.111261ms]
  Apr 28 09:39:25.019: INFO: Created: latency-svc-dfgf4
  Apr 28 09:39:25.056: INFO: Got endpoints: latency-svc-xjtkd [748.844976ms]
  Apr 28 09:39:25.067: INFO: Created: latency-svc-hgh5v
  Apr 28 09:39:25.107: INFO: Got endpoints: latency-svc-z4mzj [750.983337ms]
  Apr 28 09:39:25.116: INFO: Created: latency-svc-s4tkp
  Apr 28 09:39:25.158: INFO: Got endpoints: latency-svc-q7t77 [750.582697ms]
  Apr 28 09:39:25.172: INFO: Created: latency-svc-nzg94
  Apr 28 09:39:25.208: INFO: Got endpoints: latency-svc-skxds [750.742557ms]
  Apr 28 09:39:25.219: INFO: Created: latency-svc-tzr7d
  Apr 28 09:39:25.257: INFO: Got endpoints: latency-svc-6s44g [750.343488ms]
  Apr 28 09:39:25.267: INFO: Created: latency-svc-rtlfl
  Apr 28 09:39:25.306: INFO: Got endpoints: latency-svc-qgzzg [749.59478ms]
  Apr 28 09:39:25.318: INFO: Created: latency-svc-97kv7
  Apr 28 09:39:25.356: INFO: Got endpoints: latency-svc-bb4f5 [749.590026ms]
  Apr 28 09:39:25.368: INFO: Created: latency-svc-dxcbq
  Apr 28 09:39:25.407: INFO: Got endpoints: latency-svc-zsdxv [749.773053ms]
  Apr 28 09:39:25.417: INFO: Created: latency-svc-cq9qd
  Apr 28 09:39:25.457: INFO: Got endpoints: latency-svc-65nf2 [750.828496ms]
  Apr 28 09:39:25.469: INFO: Created: latency-svc-tgk72
  Apr 28 09:39:25.509: INFO: Got endpoints: latency-svc-h76lz [751.605625ms]
  Apr 28 09:39:25.518: INFO: Created: latency-svc-zb8gj
  Apr 28 09:39:25.557: INFO: Got endpoints: latency-svc-59mm4 [749.673936ms]
  Apr 28 09:39:25.566: INFO: Created: latency-svc-j5tl2
  Apr 28 09:39:25.607: INFO: Got endpoints: latency-svc-vhqxf [748.31535ms]
  Apr 28 09:39:25.619: INFO: Created: latency-svc-w6rg5
  Apr 28 09:39:25.659: INFO: Got endpoints: latency-svc-vxmnv [752.193505ms]
  Apr 28 09:39:25.670: INFO: Created: latency-svc-b4pj2
  Apr 28 09:39:25.706: INFO: Got endpoints: latency-svc-2vbtg [749.258115ms]
  Apr 28 09:39:25.714: INFO: Created: latency-svc-crwkz
  Apr 28 09:39:25.757: INFO: Got endpoints: latency-svc-dfgf4 [749.319323ms]
  Apr 28 09:39:25.768: INFO: Created: latency-svc-dpv6q
  Apr 28 09:39:25.806: INFO: Got endpoints: latency-svc-hgh5v [749.235611ms]
  Apr 28 09:39:25.815: INFO: Created: latency-svc-2k2rh
  Apr 28 09:39:25.857: INFO: Got endpoints: latency-svc-s4tkp [750.185808ms]
  Apr 28 09:39:25.866: INFO: Created: latency-svc-zzszc
  Apr 28 09:39:25.907: INFO: Got endpoints: latency-svc-nzg94 [749.509498ms]
  Apr 28 09:39:25.918: INFO: Created: latency-svc-k9cwc
  Apr 28 09:39:25.957: INFO: Got endpoints: latency-svc-tzr7d [749.124422ms]
  Apr 28 09:39:25.966: INFO: Created: latency-svc-2qw4x
  Apr 28 09:39:26.006: INFO: Got endpoints: latency-svc-rtlfl [748.635333ms]
  Apr 28 09:39:26.015: INFO: Created: latency-svc-mm9vw
  Apr 28 09:39:26.058: INFO: Got endpoints: latency-svc-97kv7 [751.12295ms]
  Apr 28 09:39:26.069: INFO: Created: latency-svc-smbqm
  Apr 28 09:39:26.108: INFO: Got endpoints: latency-svc-dxcbq [751.537867ms]
  Apr 28 09:39:26.119: INFO: Created: latency-svc-jcwmh
  Apr 28 09:39:26.157: INFO: Got endpoints: latency-svc-cq9qd [749.810631ms]
  Apr 28 09:39:26.167: INFO: Created: latency-svc-f6lj9
  Apr 28 09:39:26.206: INFO: Got endpoints: latency-svc-tgk72 [748.709364ms]
  Apr 28 09:39:26.217: INFO: Created: latency-svc-kdnfg
  Apr 28 09:39:26.257: INFO: Got endpoints: latency-svc-zb8gj [748.284852ms]
  Apr 28 09:39:26.267: INFO: Created: latency-svc-x984d
  Apr 28 09:39:26.307: INFO: Got endpoints: latency-svc-j5tl2 [750.360455ms]
  Apr 28 09:39:26.330: INFO: Created: latency-svc-ww8sj
  Apr 28 09:39:26.357: INFO: Got endpoints: latency-svc-w6rg5 [749.732759ms]
  Apr 28 09:39:26.372: INFO: Created: latency-svc-8jrzw
  Apr 28 09:39:26.407: INFO: Got endpoints: latency-svc-b4pj2 [747.74996ms]
  Apr 28 09:39:26.419: INFO: Created: latency-svc-z56tz
  Apr 28 09:39:26.457: INFO: Got endpoints: latency-svc-crwkz [750.888883ms]
  Apr 28 09:39:26.467: INFO: Created: latency-svc-qqhfp
  Apr 28 09:39:26.507: INFO: Got endpoints: latency-svc-dpv6q [750.10672ms]
  Apr 28 09:39:26.520: INFO: Created: latency-svc-q9xt5
  Apr 28 09:39:26.557: INFO: Got endpoints: latency-svc-2k2rh [750.96563ms]
  Apr 28 09:39:26.568: INFO: Created: latency-svc-9cj7x
  Apr 28 09:39:26.611: INFO: Got endpoints: latency-svc-zzszc [753.20996ms]
  Apr 28 09:39:26.624: INFO: Created: latency-svc-wcknp
  Apr 28 09:39:26.658: INFO: Got endpoints: latency-svc-k9cwc [750.168451ms]
  Apr 28 09:39:26.670: INFO: Created: latency-svc-mt78b
  Apr 28 09:39:26.707: INFO: Got endpoints: latency-svc-2qw4x [750.515708ms]
  Apr 28 09:39:26.718: INFO: Created: latency-svc-zx6h7
  Apr 28 09:39:26.757: INFO: Got endpoints: latency-svc-mm9vw [751.586045ms]
  Apr 28 09:39:26.767: INFO: Created: latency-svc-krpjm
  Apr 28 09:39:26.806: INFO: Got endpoints: latency-svc-smbqm [748.713002ms]
  Apr 28 09:39:26.817: INFO: Created: latency-svc-pqrmr
  Apr 28 09:39:26.858: INFO: Got endpoints: latency-svc-jcwmh [749.705454ms]
  Apr 28 09:39:26.868: INFO: Created: latency-svc-8jrzg
  Apr 28 09:39:26.907: INFO: Got endpoints: latency-svc-f6lj9 [749.449225ms]
  Apr 28 09:39:26.916: INFO: Created: latency-svc-926xw
  Apr 28 09:39:26.957: INFO: Got endpoints: latency-svc-kdnfg [750.033847ms]
  Apr 28 09:39:26.967: INFO: Created: latency-svc-6svw2
  Apr 28 09:39:27.008: INFO: Got endpoints: latency-svc-x984d [750.805807ms]
  Apr 28 09:39:27.019: INFO: Created: latency-svc-chmpr
  Apr 28 09:39:27.056: INFO: Got endpoints: latency-svc-ww8sj [749.075533ms]
  Apr 28 09:39:27.065: INFO: Created: latency-svc-8blkz
  Apr 28 09:39:27.108: INFO: Got endpoints: latency-svc-8jrzw [750.502676ms]
  Apr 28 09:39:27.118: INFO: Created: latency-svc-9p8pf
  Apr 28 09:39:27.158: INFO: Got endpoints: latency-svc-z56tz [751.150139ms]
  Apr 28 09:39:27.174: INFO: Created: latency-svc-8m8s7
  Apr 28 09:39:27.217: INFO: Got endpoints: latency-svc-qqhfp [759.528826ms]
  Apr 28 09:39:27.242: INFO: Created: latency-svc-xc9l6
  Apr 28 09:39:27.258: INFO: Got endpoints: latency-svc-q9xt5 [750.941603ms]
  Apr 28 09:39:27.271: INFO: Created: latency-svc-zwvvt
  Apr 28 09:39:27.308: INFO: Got endpoints: latency-svc-9cj7x [751.211254ms]
  Apr 28 09:39:27.322: INFO: Created: latency-svc-26mps
  Apr 28 09:39:27.356: INFO: Got endpoints: latency-svc-wcknp [745.684023ms]
  Apr 28 09:39:27.365: INFO: Created: latency-svc-jdjrs
  Apr 28 09:39:27.407: INFO: Got endpoints: latency-svc-mt78b [749.166183ms]
  Apr 28 09:39:27.419: INFO: Created: latency-svc-j4x9g
  Apr 28 09:39:27.457: INFO: Got endpoints: latency-svc-zx6h7 [749.149073ms]
  Apr 28 09:39:27.467: INFO: Created: latency-svc-9mjlf
  Apr 28 09:39:27.507: INFO: Got endpoints: latency-svc-krpjm [750.107003ms]
  Apr 28 09:39:27.515: INFO: Created: latency-svc-d46f9
  Apr 28 09:39:27.560: INFO: Got endpoints: latency-svc-pqrmr [753.331082ms]
  Apr 28 09:39:27.573: INFO: Created: latency-svc-54wrt
  Apr 28 09:39:27.609: INFO: Got endpoints: latency-svc-8jrzg [750.661941ms]
  Apr 28 09:39:27.622: INFO: Created: latency-svc-lbm5t
  Apr 28 09:39:27.657: INFO: Got endpoints: latency-svc-926xw [750.442176ms]
  Apr 28 09:39:27.667: INFO: Created: latency-svc-wpbfg
  Apr 28 09:39:27.707: INFO: Got endpoints: latency-svc-6svw2 [750.224093ms]
  Apr 28 09:39:27.719: INFO: Created: latency-svc-q68hg
  Apr 28 09:39:27.759: INFO: Got endpoints: latency-svc-chmpr [750.761975ms]
  Apr 28 09:39:27.773: INFO: Created: latency-svc-r58cv
  Apr 28 09:39:27.807: INFO: Got endpoints: latency-svc-8blkz [750.66898ms]
  Apr 28 09:39:27.818: INFO: Created: latency-svc-2rdqp
  Apr 28 09:39:27.857: INFO: Got endpoints: latency-svc-9p8pf [749.291925ms]
  Apr 28 09:39:27.869: INFO: Created: latency-svc-zfzn8
  Apr 28 09:39:27.909: INFO: Got endpoints: latency-svc-8m8s7 [750.85134ms]
  Apr 28 09:39:27.919: INFO: Created: latency-svc-24xjm
  Apr 28 09:39:27.959: INFO: Got endpoints: latency-svc-xc9l6 [742.522294ms]
  Apr 28 09:39:27.970: INFO: Created: latency-svc-ctjpv
  Apr 28 09:39:28.010: INFO: Got endpoints: latency-svc-zwvvt [751.485826ms]
  Apr 28 09:39:28.024: INFO: Created: latency-svc-v9wtg
  Apr 28 09:39:28.059: INFO: Got endpoints: latency-svc-26mps [750.401162ms]
  Apr 28 09:39:28.072: INFO: Created: latency-svc-t5dsw
  Apr 28 09:39:28.106: INFO: Got endpoints: latency-svc-jdjrs [749.407181ms]
  Apr 28 09:39:28.114: INFO: Created: latency-svc-9pvh9
  Apr 28 09:39:28.156: INFO: Got endpoints: latency-svc-j4x9g [749.285658ms]
  Apr 28 09:39:28.169: INFO: Created: latency-svc-l7b8t
  Apr 28 09:39:28.209: INFO: Got endpoints: latency-svc-9mjlf [751.884486ms]
  Apr 28 09:39:28.218: INFO: Created: latency-svc-8nvt4
  Apr 28 09:39:28.255: INFO: Got endpoints: latency-svc-d46f9 [747.99444ms]
  Apr 28 09:39:28.265: INFO: Created: latency-svc-2494r
  Apr 28 09:39:28.306: INFO: Got endpoints: latency-svc-54wrt [745.993103ms]
  Apr 28 09:39:28.319: INFO: Created: latency-svc-bm95j
  Apr 28 09:39:28.358: INFO: Got endpoints: latency-svc-lbm5t [749.379808ms]
  Apr 28 09:39:28.368: INFO: Created: latency-svc-mb6r6
  Apr 28 09:39:28.406: INFO: Got endpoints: latency-svc-wpbfg [748.655135ms]
  Apr 28 09:39:28.414: INFO: Created: latency-svc-jmlzp
  Apr 28 09:39:28.457: INFO: Got endpoints: latency-svc-q68hg [750.45675ms]
  Apr 28 09:39:28.469: INFO: Created: latency-svc-xkg4w
  Apr 28 09:39:28.507: INFO: Got endpoints: latency-svc-r58cv [747.932051ms]
  Apr 28 09:39:28.517: INFO: Created: latency-svc-8jcnz
  Apr 28 09:39:28.557: INFO: Got endpoints: latency-svc-2rdqp [749.754038ms]
  Apr 28 09:39:28.564: INFO: Created: latency-svc-nbx5j
  Apr 28 09:39:28.607: INFO: Got endpoints: latency-svc-zfzn8 [750.280996ms]
  Apr 28 09:39:28.619: INFO: Created: latency-svc-np9f8
  Apr 28 09:39:28.656: INFO: Got endpoints: latency-svc-24xjm [746.414726ms]
  Apr 28 09:39:28.668: INFO: Created: latency-svc-5mwtl
  Apr 28 09:39:28.707: INFO: Got endpoints: latency-svc-ctjpv [746.90228ms]
  Apr 28 09:39:28.716: INFO: Created: latency-svc-sdn76
  Apr 28 09:39:28.758: INFO: Got endpoints: latency-svc-v9wtg [748.177048ms]
  Apr 28 09:39:28.770: INFO: Created: latency-svc-zfc56
  Apr 28 09:39:28.806: INFO: Got endpoints: latency-svc-t5dsw [747.267458ms]
  Apr 28 09:39:28.816: INFO: Created: latency-svc-r966z
  Apr 28 09:39:28.858: INFO: Got endpoints: latency-svc-9pvh9 [751.874514ms]
  Apr 28 09:39:28.867: INFO: Created: latency-svc-scqcf
  Apr 28 09:39:28.907: INFO: Got endpoints: latency-svc-l7b8t [750.376034ms]
  Apr 28 09:39:28.918: INFO: Created: latency-svc-4b2t2
  Apr 28 09:39:28.956: INFO: Got endpoints: latency-svc-8nvt4 [747.308083ms]
  Apr 28 09:39:28.966: INFO: Created: latency-svc-xc9xw
  Apr 28 09:39:29.007: INFO: Got endpoints: latency-svc-2494r [750.950994ms]
  Apr 28 09:39:29.057: INFO: Got endpoints: latency-svc-bm95j [750.80189ms]
  Apr 28 09:39:29.107: INFO: Got endpoints: latency-svc-mb6r6 [749.076855ms]
  Apr 28 09:39:29.156: INFO: Got endpoints: latency-svc-jmlzp [750.027629ms]
  Apr 28 09:39:29.207: INFO: Got endpoints: latency-svc-xkg4w [749.980672ms]
  Apr 28 09:39:29.256: INFO: Got endpoints: latency-svc-8jcnz [749.511969ms]
  Apr 28 09:39:29.307: INFO: Got endpoints: latency-svc-nbx5j [749.822913ms]
  Apr 28 09:39:29.357: INFO: Got endpoints: latency-svc-np9f8 [749.306343ms]
  Apr 28 09:39:29.405: INFO: Got endpoints: latency-svc-5mwtl [749.848778ms]
  Apr 28 09:39:29.458: INFO: Got endpoints: latency-svc-sdn76 [751.065269ms]
  Apr 28 09:39:29.506: INFO: Got endpoints: latency-svc-zfc56 [748.247205ms]
  Apr 28 09:39:29.555: INFO: Got endpoints: latency-svc-r966z [749.196088ms]
  Apr 28 09:39:29.606: INFO: Got endpoints: latency-svc-scqcf [748.370639ms]
  Apr 28 09:39:29.657: INFO: Got endpoints: latency-svc-4b2t2 [749.784334ms]
  Apr 28 09:39:29.707: INFO: Got endpoints: latency-svc-xc9xw [751.008303ms]
  Apr 28 09:39:29.707: INFO: Latencies: [19.626263ms 30.61247ms 38.623735ms 38.92257ms 41.089029ms 51.858148ms 56.489112ms 65.437684ms 74.145651ms 79.32736ms 85.423561ms 95.665979ms 109.536931ms 116.039791ms 124.174055ms 128.096343ms 129.476478ms 132.059108ms 132.085079ms 139.704661ms 144.51489ms 145.457371ms 145.927737ms 149.94348ms 154.115036ms 163.043193ms 165.992195ms 176.029892ms 180.814443ms 182.511585ms 187.902918ms 207.476597ms 221.719833ms 225.778959ms 231.286234ms 242.066439ms 259.745016ms 262.483929ms 263.821215ms 270.553162ms 273.120618ms 314.772522ms 361.011286ms 410.104332ms 459.483431ms 505.691394ms 553.292633ms 599.680328ms 649.069424ms 691.867077ms 738.940487ms 742.522294ms 744.015673ms 745.684023ms 745.993103ms 746.414726ms 746.90228ms 747.028852ms 747.047147ms 747.267458ms 747.308083ms 747.722226ms 747.74996ms 747.854475ms 747.891493ms 747.932051ms 747.99444ms 748.160098ms 748.177048ms 748.247205ms 748.284852ms 748.31535ms 748.370639ms 748.419462ms 748.428771ms 748.635333ms 748.655135ms 748.709364ms 748.713002ms 748.798139ms 748.844976ms 748.883616ms 748.946669ms 748.981145ms 749.075533ms 749.076855ms 749.124422ms 749.143586ms 749.149073ms 749.166183ms 749.185746ms 749.196088ms 749.235611ms 749.243425ms 749.248105ms 749.258115ms 749.285658ms 749.291925ms 749.300008ms 749.306343ms 749.319323ms 749.336014ms 749.357804ms 749.379808ms 749.407181ms 749.449225ms 749.509498ms 749.509977ms 749.511969ms 749.590026ms 749.59478ms 749.631479ms 749.659806ms 749.673936ms 749.683388ms 749.705454ms 749.719544ms 749.732759ms 749.737223ms 749.754038ms 749.769638ms 749.773053ms 749.784334ms 749.810631ms 749.822913ms 749.848778ms 749.980672ms 750.027629ms 750.033376ms 750.033847ms 750.042653ms 750.07769ms 750.080541ms 750.10672ms 750.107003ms 750.111261ms 750.112397ms 750.116358ms 750.168451ms 750.185808ms 750.187313ms 750.215232ms 750.224093ms 750.236716ms 750.270357ms 750.280996ms 750.343488ms 750.360455ms 750.36567ms 750.376034ms 750.401162ms 750.442176ms 750.455282ms 750.45675ms 750.477556ms 750.502676ms 750.515708ms 750.531635ms 750.582697ms 750.587492ms 750.661941ms 750.66898ms 750.706234ms 750.729741ms 750.730846ms 750.74161ms 750.742557ms 750.761975ms 750.795373ms 750.80189ms 750.805807ms 750.808742ms 750.828496ms 750.85134ms 750.888883ms 750.941603ms 750.950994ms 750.96563ms 750.983337ms 751.008303ms 751.015021ms 751.046579ms 751.059765ms 751.065269ms 751.12295ms 751.150139ms 751.211254ms 751.485826ms 751.537867ms 751.586045ms 751.605625ms 751.665131ms 751.874514ms 751.884486ms 752.193505ms 752.582998ms 752.872218ms 753.20996ms 753.331082ms 759.528826ms]
  Apr 28 09:39:29.707: INFO: 50 %ile: 749.319323ms
  Apr 28 09:39:29.707: INFO: 90 %ile: 751.015021ms
  Apr 28 09:39:29.707: INFO: 99 %ile: 753.331082ms
  Apr 28 09:39:29.707: INFO: Total sample count: 200
  Apr 28 09:39:29.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2936" for this suite. @ 04/28/24 09:39:29.712
• [10.755 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/28/24 09:39:29.719
  Apr 28 09:39:29.719: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 09:39:29.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:39:29.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:39:29.737
  STEP: Creating secret with name secret-test-bda9c2e5-35a9-4692-8fc3-92e4d1d0af01 @ 04/28/24 09:39:29.739
  STEP: Creating a pod to test consume secrets @ 04/28/24 09:39:29.744
  STEP: Saw pod success @ 04/28/24 09:39:33.767
  Apr 28 09:39:33.769: INFO: Trying to get logs from node worker1 pod pod-secrets-97f9fffd-73b7-4dfa-96d2-db859a7cf94b container secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 09:39:33.776
  Apr 28 09:39:33.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9811" for this suite. @ 04/28/24 09:39:33.795
• [4.082 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/28/24 09:39:33.801
  Apr 28 09:39:33.801: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/28/24 09:39:33.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:39:33.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:39:33.813
  STEP: Creating two CSIDrivers @ 04/28/24 09:39:33.815
  STEP: Getting "inline-driver-d841e4ed-f76b-404c-b54a-0ed3d21e3b22" & "inline-driver-bbc0b6ba-f115-43ba-84b8-b57aeca0de1f" @ 04/28/24 09:39:33.837
  STEP: Patching the CSIDriver "inline-driver-bbc0b6ba-f115-43ba-84b8-b57aeca0de1f" @ 04/28/24 09:39:33.846
  STEP: Updating the CSIDriver "inline-driver-bbc0b6ba-f115-43ba-84b8-b57aeca0de1f" @ 04/28/24 09:39:33.854
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3704" @ 04/28/24 09:39:33.86
  STEP: Deleting CSIDriver "inline-driver-d841e4ed-f76b-404c-b54a-0ed3d21e3b22" @ 04/28/24 09:39:33.865
  STEP: Confirm deletion of CSIDriver "inline-driver-d841e4ed-f76b-404c-b54a-0ed3d21e3b22" @ 04/28/24 09:39:33.871
  STEP: Deleting CSIDriver "inline-driver-bbc0b6ba-f115-43ba-84b8-b57aeca0de1f" via DeleteCollection @ 04/28/24 09:39:33.875
  STEP: Confirm deletion of CSIDriver "inline-driver-bbc0b6ba-f115-43ba-84b8-b57aeca0de1f" @ 04/28/24 09:39:33.886
  Apr 28 09:39:33.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3704" for this suite. @ 04/28/24 09:39:33.893
• [0.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/28/24 09:39:33.901
  Apr 28 09:39:33.901: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename deployment @ 04/28/24 09:39:33.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:39:33.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:39:33.915
  Apr 28 09:39:33.924: INFO: Creating deployment "webserver-deployment"
  Apr 28 09:39:33.931: INFO: Waiting for observed generation 1
  Apr 28 09:39:35.938: INFO: Waiting for all required pods to come up
  Apr 28 09:39:35.946: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/28/24 09:39:35.947
  Apr 28 09:39:35.947: INFO: Waiting for deployment "webserver-deployment" to complete
  Apr 28 09:39:35.957: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Apr 28 09:39:35.970: INFO: Updating deployment webserver-deployment
  Apr 28 09:39:35.970: INFO: Waiting for observed generation 2
  Apr 28 09:39:37.984: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Apr 28 09:39:37.987: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Apr 28 09:39:37.995: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 28 09:39:38.010: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Apr 28 09:39:38.010: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Apr 28 09:39:38.024: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 28 09:39:38.036: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Apr 28 09:39:38.036: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Apr 28 09:39:38.047: INFO: Updating deployment webserver-deployment
  Apr 28 09:39:38.048: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Apr 28 09:39:38.057: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Apr 28 09:39:38.069: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Apr 28 09:39:38.096: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbec4e5f-385f-4431-9d4e-2e35e1ff571f",
      ResourceVersion: (string) (len=5) "24875",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 28 09:39:38.145: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
      ResourceVersion: (string) (len=5) "24871",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fbec4e5f-385f-4431-9d4e-2e35e1ff571f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 65 63 34 65  35 66 2d 33 38 35 66 2d  |\"fbec4e5f-385f-|
              00000120  34 34 33 31 2d 39 64 34  65 2d 32 65 33 35 65 31  |4431-9d4e-2e35e1|
              00000130  66 66 35 37 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ff571f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 09:39:38.146: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Apr 28 09:39:38.146: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-79b84df886",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
      ResourceVersion: (string) (len=5) "24866",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fbec4e5f-385f-4431-9d4e-2e35e1ff571f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 65 63 34 65  35 66 2d 33 38 35 66 2d  |\"fbec4e5f-385f-|
              00000120  34 34 33 31 2d 39 64 34  65 2d 32 65 33 35 65 31  |4431-9d4e-2e35e1|
              00000130  66 66 35 37 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ff571f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 09:39:38.161: INFO: Pod "webserver-deployment-79b84df886-7b767" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-7b767",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5cee03ac-75d0-4358-84b4-4e127827bb51",
      ResourceVersion: (string) (len=5) "24415",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 38 39  2e 31 32 31 5c 22 7d 22  |2.20.189.121\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xkc2z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xkc2z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) (len=14) "172.20.189.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.189.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849893974,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://1f234591d8b21bc35a1c4118197864f8fdbf9692bad39933fe1b1575a81e390f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.165: INFO: Pod "webserver-deployment-79b84df886-7hd8g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-7hd8g",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d951d61b-209f-49a6-bb37-44d24d58404c",
      ResourceVersion: (string) (len=5) "24905",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6f9hz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6f9hz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.137"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.174: INFO: Pod "webserver-deployment-79b84df886-7vv4n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-7vv4n",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68890a9b-b854-414a-9f3b-b1d48630c386",
      ResourceVersion: (string) (len=5) "24355",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 31 39  2e 38 34 5c 22 7d 22 3a  |2.20.219.84\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pdk24",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pdk24",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "master1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.136"
        }
      },
      PodIP: (string) (len=13) "172.20.219.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.219.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849893974,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://7dc317d76aeeffc67e6b58caa8fc18e9dbddce3a01610e6cfdf8810fa2a05b22",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.179: INFO: Pod "webserver-deployment-79b84df886-7wm88" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-7wm88",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7567eb53-3c0c-485d-b30f-2a058eced268",
      ResourceVersion: (string) (len=5) "24421",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 38 39  2e 31 32 32 5c 22 7d 22  |2.20.189.122\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f62hb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f62hb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) (len=14) "172.20.189.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.189.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849893974,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://cb538e5223161b21f0a282dfda13a847ceb828feded4c7545e7052b4aa81d517",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.186: INFO: Pod "webserver-deployment-79b84df886-c288z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-c288z",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b776ed9a-3aa4-4ba2-a8de-43435dc2c061",
      ResourceVersion: (string) (len=5) "24898",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2f25z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2f25z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.193: INFO: Pod "webserver-deployment-79b84df886-dtqg6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-dtqg6",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4205dbc-5f6a-4a5c-b3ef-a13c367af5f6",
      ResourceVersion: (string) (len=5) "24894",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xgdqq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xgdqq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.194: INFO: Pod "webserver-deployment-79b84df886-gzwp5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-gzwp5",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afc0bfc1-807e-4ec8-9c36-ce62cc845f18",
      ResourceVersion: (string) (len=5) "24904",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8k5bj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8k5bj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "master1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.203: INFO: Pod "webserver-deployment-79b84df886-kblpx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-kblpx",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "418411ed-f9d1-40a8-803b-52bfa08c62b3",
      ResourceVersion: (string) (len=5) "24383",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 33 35  2e 31 37 30 5c 22 7d 22  |2.20.235.170\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2wxst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2wxst",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.137"
        }
      },
      PodIP: (string) (len=14) "172.20.235.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.235.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849893974,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://cfa598cf1e5397757a89f26ed8aaf80ef6afde49a6729f5610970e0c5e6126cd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.212: INFO: Pod "webserver-deployment-79b84df886-kwvlg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-kwvlg",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13c332f1-19e7-45d4-a85d-13ddfb2e9d4c",
      ResourceVersion: (string) (len=5) "24906",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tl9s9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tl9s9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.233: INFO: Pod "webserver-deployment-79b84df886-l7nrv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-l7nrv",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d2eadd3-ebbe-4c2b-8c12-ba13267179c4",
      ResourceVersion: (string) (len=5) "24389",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 33 35  2e 31 37 33 5c 22 7d 22  |2.20.235.173\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l57ds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l57ds",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.137"
        }
      },
      PodIP: (string) (len=14) "172.20.235.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.235.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849893974,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://cfefdaca2dd6ea01cf97f1568e0065206925dc2525d1187679afd2de60b39b91",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.239: INFO: Pod "webserver-deployment-79b84df886-l8nh8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-l8nh8",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f858422e-f25e-4720-a87d-48614f369efe",
      ResourceVersion: (string) (len=5) "24900",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m889c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m889c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.241: INFO: Pod "webserver-deployment-79b84df886-l9snn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-l9snn",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77007de8-2dcb-4f80-ad83-73d8a65f432d",
      ResourceVersion: (string) (len=5) "24348",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 31 39  2e 38 33 5c 22 7d 22 3a  |2.20.219.83\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-48w2c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-48w2c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "master1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.136"
        }
      },
      PodIP: (string) (len=13) "172.20.219.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.219.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849893974,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://718ff758dbec730b84da75bfc1521282028dd54b2f3be44b2ec62df1c9b0d076",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.244: INFO: Pod "webserver-deployment-79b84df886-qmkr8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-qmkr8",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dab9deb2-89a8-4442-b275-92cdd762259e",
      ResourceVersion: (string) (len=5) "24426",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 38 39  2e 31 32 33 5c 22 7d 22  |2.20.189.123\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cws4w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cws4w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) (len=14) "172.20.189.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.189.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849893974,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://4a3dac7ebd44c5d9c848853a621709e3b0b59553ad267c261f8f59eb22a3a784",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.255: INFO: Pod "webserver-deployment-79b84df886-slhxw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-slhxw",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14ad1b1c-873b-4607-97c9-8d07d688c097",
      ResourceVersion: (string) (len=5) "24345",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 31 39  2e 38 32 5c 22 7d 22 3a  |2.20.219.82\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d69jm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d69jm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "master1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.136"
        }
      },
      PodIP: (string) (len=13) "172.20.219.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.219.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849893974,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://54dce07367c1a33ea9378da2b170fbde95301a8708d70219df16160a446dfce3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.258: INFO: Pod "webserver-deployment-79b84df886-wpqgs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-79b84df886-wpqgs",
      GenerateName: (string) (len=32) "webserver-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5753bc62-f336-4a8c-a9c0-a636cfbdfafa",
      ResourceVersion: (string) (len=5) "24909",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-79b84df886",
          UID: (types.UID) (len=36) "40c6c927-3a27-4460-96e6-0ec30774a8b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  63 36 63 39 32 37 2d 33  |d\":\"40c6c927-3|
              00000090  61 32 37 2d 34 34 36 30  2d 39 36 65 36 2d 30 65  |a27-4460-96e6-0e|
              000000a0  63 33 30 37 37 34 61 38  62 38 5c 22 7d 22 3a 7b  |c30774a8b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2nd9m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2nd9m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.260: INFO: Pod "webserver-deployment-9b4f5bf69-8hsv2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8hsv2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1ceab14-07ca-4d02-80b0-8178908637af",
      ResourceVersion: (string) (len=5) "24567",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z9q9z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z9q9z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.265: INFO: Pod "webserver-deployment-9b4f5bf69-8rxx9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8rxx9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c263cc3a-3c51-4c85-82cf-2cbc2df98662",
      ResourceVersion: (string) (len=5) "24531",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z552k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z552k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.267: INFO: Pod "webserver-deployment-9b4f5bf69-dlwrt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dlwrt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bbd696c-168b-42e1-a1fc-f50bdcc5c08c",
      ResourceVersion: (string) (len=5) "24895",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2672h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2672h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.270: INFO: Pod "webserver-deployment-9b4f5bf69-f879n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-f879n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39d8fe16-cd38-4b5d-93d1-b3f54e00f4b8",
      ResourceVersion: (string) (len=5) "24897",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cvvz9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cvvz9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.274: INFO: Pod "webserver-deployment-9b4f5bf69-p9bjm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-p9bjm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4cf5e44-adc5-4bce-8d37-0980645c1fa7",
      ResourceVersion: (string) (len=5) "24902",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-flnd8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-flnd8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.282: INFO: Pod "webserver-deployment-9b4f5bf69-qf47n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qf47n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "680d077c-abb9-40c0-be8c-df37ba7103a4",
      ResourceVersion: (string) (len=5) "24546",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6lqdr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6lqdr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "master1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.136"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.284: INFO: Pod "webserver-deployment-9b4f5bf69-t45pr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t45pr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11f152fa-1aba-4786-bd61-89950dda7386",
      ResourceVersion: (string) (len=5) "24908",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ftr7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ftr7p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "master1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.287: INFO: Pod "webserver-deployment-9b4f5bf69-v2zk8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-v2zk8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c326b74c-bc59-4fe3-a71f-2eeaa57e8b8f",
      ResourceVersion: (string) (len=5) "24903",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m2kh7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m2kh7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "master1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.289: INFO: Pod "webserver-deployment-9b4f5bf69-vtw9c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vtw9c",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a160cdf-6e82-4d17-8ecf-3c4276a40e29",
      ResourceVersion: (string) (len=5) "24907",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z78c7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z78c7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.291: INFO: Pod "webserver-deployment-9b4f5bf69-w9k9w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-w9k9w",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de4ecdc7-244f-4c58-b288-c1abe6e4c36e",
      ResourceVersion: (string) (len=5) "24547",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m7w27",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m7w27",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.137"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.293: INFO: Pod "webserver-deployment-9b4f5bf69-wqj6h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wqj6h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36e6abd1-be90-414f-b757-d75356f37336",
      ResourceVersion: (string) (len=5) "24882",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vzpkm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vzpkm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "master1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.295: INFO: Pod "webserver-deployment-9b4f5bf69-zchwk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zchwk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f41612d-af67-4c13-a79a-9f808f309ad9",
      ResourceVersion: (string) (len=5) "24563",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-szpxn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-szpxn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.137"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.297: INFO: Pod "webserver-deployment-9b4f5bf69-zwwff" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zwwff",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1973",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5a25350-23d2-418f-8250-07935feb467f",
      ResourceVersion: (string) (len=5) "24899",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849893978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "823ca353-4022-49c0-bdd9-7a956c0ae944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  33 63 61 33 35 33 2d 34  |d\":\"823ca353-4|
              00000090  30 32 32 2d 34 39 63 30  2d 62 64 64 39 2d 37 61  |022-49c0-bdd9-7a|
              000000a0  39 35 36 63 30 61 65 39  34 34 5c 22 7d 22 3a 7b  |956c0ae944\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cbvld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cbvld",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849893978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:39:38.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1973" for this suite. @ 04/28/24 09:39:38.327
• [4.452 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/28/24 09:39:38.356
  Apr 28 09:39:38.356: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename watch @ 04/28/24 09:39:38.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:39:38.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:39:38.435
  STEP: creating a watch on configmaps with label A @ 04/28/24 09:39:38.463
  STEP: creating a watch on configmaps with label B @ 04/28/24 09:39:38.473
  STEP: creating a watch on configmaps with label A or B @ 04/28/24 09:39:38.476
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/28/24 09:39:38.48
  Apr 28 09:39:38.589: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4479  6d8c7e32-121e-4e44-b059-a085d84b87fe 24990 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:39:38.589: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4479  6d8c7e32-121e-4e44-b059-a085d84b87fe 24990 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/28/24 09:39:38.589
  Apr 28 09:39:38.654: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4479  6d8c7e32-121e-4e44-b059-a085d84b87fe 25004 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:39:38.654: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4479  6d8c7e32-121e-4e44-b059-a085d84b87fe 25004 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/28/24 09:39:38.654
  Apr 28 09:39:38.689: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4479  6d8c7e32-121e-4e44-b059-a085d84b87fe 25009 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:39:38.689: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4479  6d8c7e32-121e-4e44-b059-a085d84b87fe 25009 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/28/24 09:39:38.689
  Apr 28 09:39:38.720: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4479  6d8c7e32-121e-4e44-b059-a085d84b87fe 25013 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:39:38.720: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4479  6d8c7e32-121e-4e44-b059-a085d84b87fe 25013 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/28/24 09:39:38.72
  Apr 28 09:39:38.753: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4479  f637e7c8-3cd0-4056-a3b6-db011feeea04 25014 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:39:38.753: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4479  f637e7c8-3cd0-4056-a3b6-db011feeea04 25014 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/28/24 09:39:48.756
  Apr 28 09:39:48.761: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4479  f637e7c8-3cd0-4056-a3b6-db011feeea04 25721 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:39:48.762: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4479  f637e7c8-3cd0-4056-a3b6-db011feeea04 25721 0 2024-04-28 09:39:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-28 09:39:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:39:58.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4479" for this suite. @ 04/28/24 09:39:58.768
• [20.418 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/28/24 09:39:58.775
  Apr 28 09:39:58.775: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename dns @ 04/28/24 09:39:58.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:39:58.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:39:58.789
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/28/24 09:39:58.792
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/28/24 09:39:58.792
  STEP: creating a pod to probe DNS @ 04/28/24 09:39:58.792
  STEP: submitting the pod to kubernetes @ 04/28/24 09:39:58.792
  STEP: retrieving the pod @ 04/28/24 09:40:00.811
  STEP: looking for the results for each expected name from probers @ 04/28/24 09:40:00.814
  Apr 28 09:40:00.829: INFO: DNS probes using dns-7444/dns-test-06cf5fad-b954-465d-bd86-9b39b27ebbf3 succeeded

  STEP: deleting the pod @ 04/28/24 09:40:00.829
  Apr 28 09:40:00.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7444" for this suite. @ 04/28/24 09:40:00.843
• [2.074 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 04/28/24 09:40:00.849
  Apr 28 09:40:00.849: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 09:40:00.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:40:00.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:40:00.864
  STEP: Counting existing ResourceQuota @ 04/28/24 09:40:00.867
  STEP: Creating a ResourceQuota @ 04/28/24 09:40:05.87
  STEP: Ensuring resource quota status is calculated @ 04/28/24 09:40:05.875
  STEP: Creating a ReplicationController @ 04/28/24 09:40:07.88
  STEP: Ensuring resource quota status captures replication controller creation @ 04/28/24 09:40:07.888
  STEP: Deleting a ReplicationController @ 04/28/24 09:40:09.895
  STEP: Ensuring resource quota status released usage @ 04/28/24 09:40:09.901
  Apr 28 09:40:11.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1787" for this suite. @ 04/28/24 09:40:11.91
• [11.065 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/28/24 09:40:11.915
  Apr 28 09:40:11.915: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-preemption @ 04/28/24 09:40:11.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:40:11.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:40:11.931
  Apr 28 09:40:11.943: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 28 09:41:11.948: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/28/24 09:41:11.951
  Apr 28 09:41:11.967: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 28 09:41:11.976: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 28 09:41:11.993: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 28 09:41:12.004: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 28 09:41:12.017: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 28 09:41:12.022: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/28/24 09:41:12.022
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/28/24 09:41:14.041
  Apr 28 09:41:18.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9255" for this suite. @ 04/28/24 09:41:18.127
• [66.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 04/28/24 09:41:18.132
  Apr 28 09:41:18.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 09:41:18.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:18.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:18.15
  STEP: starting the proxy server @ 04/28/24 09:41:18.152
  Apr 28 09:41:18.153: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3550 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/28/24 09:41:18.187
  Apr 28 09:41:18.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3550" for this suite. @ 04/28/24 09:41:18.197
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 04/28/24 09:41:18.202
  Apr 28 09:41:18.202: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/28/24 09:41:18.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:18.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:18.216
  STEP: create the container to handle the HTTPGet hook request. @ 04/28/24 09:41:18.222
  STEP: create the pod with lifecycle hook @ 04/28/24 09:41:20.239
  STEP: delete the pod with lifecycle hook @ 04/28/24 09:41:22.252
  STEP: check prestop hook @ 04/28/24 09:41:24.265
  Apr 28 09:41:24.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5506" for this suite. @ 04/28/24 09:41:24.276
• [6.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/28/24 09:41:24.282
  Apr 28 09:41:24.282: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename disruption @ 04/28/24 09:41:24.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:24.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:24.295
  STEP: Creating a kubernetes client @ 04/28/24 09:41:24.297
  Apr 28 09:41:24.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename disruption-2 @ 04/28/24 09:41:24.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:24.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:24.318
  STEP: Waiting for the pdb to be processed @ 04/28/24 09:41:24.324
  STEP: Waiting for the pdb to be processed @ 04/28/24 09:41:26.332
  STEP: Waiting for the pdb to be processed @ 04/28/24 09:41:28.339
  STEP: listing a collection of PDBs across all namespaces @ 04/28/24 09:41:30.342
  STEP: listing a collection of PDBs in namespace disruption-3970 @ 04/28/24 09:41:30.345
  STEP: deleting a collection of PDBs @ 04/28/24 09:41:30.348
  STEP: Waiting for the PDB collection to be deleted @ 04/28/24 09:41:30.359
  Apr 28 09:41:30.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8599" for this suite. @ 04/28/24 09:41:30.365
  Apr 28 09:41:30.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3970" for this suite. @ 04/28/24 09:41:30.373
• [6.096 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/28/24 09:41:30.378
  Apr 28 09:41:30.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename field-validation @ 04/28/24 09:41:30.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:30.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:30.394
  Apr 28 09:41:30.396: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  W0428 09:41:32.925998      21 warnings.go:70] unknown field "alpha"
  W0428 09:41:32.926025      21 warnings.go:70] unknown field "beta"
  W0428 09:41:32.926031      21 warnings.go:70] unknown field "delta"
  W0428 09:41:32.926037      21 warnings.go:70] unknown field "epsilon"
  W0428 09:41:32.926042      21 warnings.go:70] unknown field "gamma"
  Apr 28 09:41:33.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6168" for this suite. @ 04/28/24 09:41:33.458
• [3.085 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/28/24 09:41:33.463
  Apr 28 09:41:33.463: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 09:41:33.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:33.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:33.481
  STEP: Creating secret with name secret-test-8d991ba6-e5bf-4253-91b9-0cd81974f1fb @ 04/28/24 09:41:33.484
  STEP: Creating a pod to test consume secrets @ 04/28/24 09:41:33.488
  STEP: Saw pod success @ 04/28/24 09:41:37.506
  Apr 28 09:41:37.509: INFO: Trying to get logs from node worker2 pod pod-secrets-8487864c-652b-4715-884d-eb5cef06f2a8 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 09:41:37.514
  Apr 28 09:41:37.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-385" for this suite. @ 04/28/24 09:41:37.53
• [4.071 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/28/24 09:41:37.534
  Apr 28 09:41:37.534: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 09:41:37.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:37.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:37.549
  STEP: Setting up server cert @ 04/28/24 09:41:37.567
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 09:41:37.784
  STEP: Deploying the webhook pod @ 04/28/24 09:41:37.789
  STEP: Wait for the deployment to be ready @ 04/28/24 09:41:37.797
  Apr 28 09:41:37.803: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/28/24 09:41:39.813
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:41:39.822
  Apr 28 09:41:40.822: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/28/24 09:41:40.867
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/28/24 09:41:40.889
  STEP: Deleting the collection of validation webhooks @ 04/28/24 09:41:40.904
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/28/24 09:41:40.976
  Apr 28 09:41:41.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4627" for this suite. @ 04/28/24 09:41:41.035
  STEP: Destroying namespace "webhook-markers-7802" for this suite. @ 04/28/24 09:41:41.044
• [3.525 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 04/28/24 09:41:41.06
  Apr 28 09:41:41.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename job @ 04/28/24 09:41:41.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:41.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:41.092
  STEP: Creating a job @ 04/28/24 09:41:41.094
  STEP: Ensuring active pods == parallelism @ 04/28/24 09:41:41.098
  STEP: Orphaning one of the Job's Pods @ 04/28/24 09:41:43.102
  Apr 28 09:41:43.614: INFO: Successfully updated pod "adopt-release-ctggb"
  STEP: Checking that the Job readopts the Pod @ 04/28/24 09:41:43.614
  STEP: Removing the labels from the Job's Pod @ 04/28/24 09:41:45.623
  Apr 28 09:41:46.135: INFO: Successfully updated pod "adopt-release-ctggb"
  STEP: Checking that the Job releases the Pod @ 04/28/24 09:41:46.135
  Apr 28 09:41:48.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2109" for this suite. @ 04/28/24 09:41:48.15
• [7.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/28/24 09:41:48.157
  Apr 28 09:41:48.157: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-runtime @ 04/28/24 09:41:48.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:48.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:48.171
  STEP: create the container @ 04/28/24 09:41:48.174
  W0428 09:41:48.183525      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/28/24 09:41:48.183
  STEP: get the container status @ 04/28/24 09:41:51.198
  STEP: the container should be terminated @ 04/28/24 09:41:51.201
  STEP: the termination message should be set @ 04/28/24 09:41:51.201
  Apr 28 09:41:51.201: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/28/24 09:41:51.201
  Apr 28 09:41:51.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-40" for this suite. @ 04/28/24 09:41:51.221
• [3.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/28/24 09:41:51.227
  Apr 28 09:41:51.227: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename init-container @ 04/28/24 09:41:51.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:51.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:51.244
  STEP: creating the pod @ 04/28/24 09:41:51.247
  Apr 28 09:41:51.247: INFO: PodSpec: initContainers in spec.initContainers
  Apr 28 09:41:54.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9609" for this suite. @ 04/28/24 09:41:54.822
• [3.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/28/24 09:41:54.827
  Apr 28 09:41:54.827: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename init-container @ 04/28/24 09:41:54.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:41:54.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:41:54.839
  STEP: creating the pod @ 04/28/24 09:41:54.842
  Apr 28 09:41:54.842: INFO: PodSpec: initContainers in spec.initContainers
  Apr 28 09:42:36.882: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-fbacf38d-7b3f-4080-aaf0-b09dedfa8f4f", GenerateName:"", Namespace:"init-container-4209", SelfLink:"", UID:"77158bc4-2ddd-4205-b727-df9af581662f", ResourceVersion:"26738", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 41, 54, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"842176858"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 41, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003264f00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 42, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003264f60), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-s69s2", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000b1f680), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s69s2", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s69s2", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s69s2", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc001474b90), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0001256c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001474c10)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001474c30)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc001474c38), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc001474c3c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000c8fd10), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 28, 9, 41, 55, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 28, 9, 41, 54, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 28, 9, 41, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 28, 9, 41, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 28, 9, 41, 54, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.227.138", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.227.138"}}, PodIP:"172.20.189.77", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.20.189.77"}}, StartTime:time.Date(2024, time.April, 28, 9, 41, 54, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0001257a0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0001258f0)}, Ready:false, RestartCount:3, Image:"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/busybox@sha256:ce452754de8eae3d468b03a225cd243380f313ff4c8df232f6818fe250630dc4", ContainerID:"containerd://1f339fd946695126bd96a098d0708a665b5004735a1863c23e87853e42ce23d8", Started:(*bool)(0xc001474cdf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000b1f6e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc001474ce5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000b1f6c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc001474cb4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Apr 28 09:42:36.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4209" for this suite. @ 04/28/24 09:42:36.885
• [42.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/28/24 09:42:36.891
  Apr 28 09:42:36.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename containers @ 04/28/24 09:42:36.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:42:36.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:42:36.907
  STEP: Creating a pod to test override all @ 04/28/24 09:42:36.91
  STEP: Saw pod success @ 04/28/24 09:42:38.923
  Apr 28 09:42:38.927: INFO: Trying to get logs from node worker1 pod client-containers-be905539-dad7-4ec4-8f6c-11fb5055f6ae container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 09:42:38.933
  Apr 28 09:42:38.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6808" for this suite. @ 04/28/24 09:42:38.95
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 04/28/24 09:42:38.959
  Apr 28 09:42:38.959: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename namespaces @ 04/28/24 09:42:38.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:42:38.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:42:38.975
  STEP: Creating a test namespace @ 04/28/24 09:42:38.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:42:38.993
  STEP: Creating a pod in the namespace @ 04/28/24 09:42:38.996
  STEP: Waiting for the pod to have running status @ 04/28/24 09:42:39.005
  STEP: Deleting the namespace @ 04/28/24 09:42:41.014
  STEP: Waiting for the namespace to be removed. @ 04/28/24 09:42:41.02
  STEP: Recreating the namespace @ 04/28/24 09:42:52.023
  STEP: Verifying there are no pods in the namespace @ 04/28/24 09:42:52.041
  Apr 28 09:42:52.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6587" for this suite. @ 04/28/24 09:42:52.048
  STEP: Destroying namespace "nsdeletetest-2578" for this suite. @ 04/28/24 09:42:52.054
  Apr 28 09:42:52.056: INFO: Namespace nsdeletetest-2578 was already deleted
  STEP: Destroying namespace "nsdeletetest-7098" for this suite. @ 04/28/24 09:42:52.056
• [13.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/28/24 09:42:52.061
  Apr 28 09:42:52.061: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 09:42:52.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:42:52.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:42:52.078
  STEP: Setting up server cert @ 04/28/24 09:42:52.1
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 09:42:52.254
  STEP: Deploying the webhook pod @ 04/28/24 09:42:52.259
  STEP: Wait for the deployment to be ready @ 04/28/24 09:42:52.267
  Apr 28 09:42:52.274: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/28/24 09:42:54.283
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:42:54.293
  Apr 28 09:42:55.293: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 28 09:42:55.299: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5895-crds.webhook.example.com via the AdmissionRegistration API @ 04/28/24 09:42:55.808
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/28/24 09:42:55.818
  Apr 28 09:42:58.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3567" for this suite. @ 04/28/24 09:42:58.423
  STEP: Destroying namespace "webhook-markers-9937" for this suite. @ 04/28/24 09:42:58.429
• [6.373 seconds]
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 04/28/24 09:42:58.435
  Apr 28 09:42:58.435: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 09:42:58.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:42:58.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:42:58.448
  STEP: creating service multi-endpoint-test in namespace services-4592 @ 04/28/24 09:42:58.451
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4592 to expose endpoints map[] @ 04/28/24 09:42:58.465
  Apr 28 09:42:58.476: INFO: successfully validated that service multi-endpoint-test in namespace services-4592 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4592 @ 04/28/24 09:42:58.476
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4592 to expose endpoints map[pod1:[100]] @ 04/28/24 09:43:00.5
  Apr 28 09:43:00.509: INFO: successfully validated that service multi-endpoint-test in namespace services-4592 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4592 @ 04/28/24 09:43:00.509
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4592 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/28/24 09:43:02.524
  Apr 28 09:43:02.534: INFO: successfully validated that service multi-endpoint-test in namespace services-4592 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/28/24 09:43:02.534
  Apr 28 09:43:02.534: INFO: Creating new exec pod
  Apr 28 09:43:05.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4592 exec execpodhzlxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Apr 28 09:43:05.631: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Apr 28 09:43:05.631: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 09:43:05.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4592 exec execpodhzlxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.66 80'
  Apr 28 09:43:05.707: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.150.66 80\nConnection to 10.68.150.66 80 port [tcp/http] succeeded!\n"
  Apr 28 09:43:05.707: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 09:43:05.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4592 exec execpodhzlxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Apr 28 09:43:05.789: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Apr 28 09:43:05.789: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 09:43:05.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4592 exec execpodhzlxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.66 81'
  Apr 28 09:43:05.864: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.150.66 81\nConnection to 10.68.150.66 81 port [tcp/*] succeeded!\n"
  Apr 28 09:43:05.864: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4592 @ 04/28/24 09:43:05.864
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4592 to expose endpoints map[pod2:[101]] @ 04/28/24 09:43:05.878
  Apr 28 09:43:05.896: INFO: successfully validated that service multi-endpoint-test in namespace services-4592 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4592 @ 04/28/24 09:43:05.896
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4592 to expose endpoints map[] @ 04/28/24 09:43:05.922
  Apr 28 09:43:06.939: INFO: successfully validated that service multi-endpoint-test in namespace services-4592 exposes endpoints map[]
  Apr 28 09:43:06.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4592" for this suite. @ 04/28/24 09:43:06.963
• [8.536 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/28/24 09:43:06.971
  Apr 28 09:43:06.971: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/28/24 09:43:06.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:43:06.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:43:06.986
  Apr 28 09:43:06.989: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:43:13.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5288" for this suite. @ 04/28/24 09:43:13.152
• [6.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 04/28/24 09:43:13.159
  Apr 28 09:43:13.159: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename statefulset @ 04/28/24 09:43:13.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:43:13.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:43:13.172
  STEP: Creating service test in namespace statefulset-3977 @ 04/28/24 09:43:13.173
  STEP: Creating a new StatefulSet @ 04/28/24 09:43:13.177
  Apr 28 09:43:13.187: INFO: Found 0 stateful pods, waiting for 3
  Apr 28 09:43:23.191: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 09:43:23.191: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 09:43:23.191: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4 to registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.39-4 @ 04/28/24 09:43:23.199
  Apr 28 09:43:23.217: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/28/24 09:43:23.217
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/28/24 09:43:33.226
  STEP: Performing a canary update @ 04/28/24 09:43:33.226
  Apr 28 09:43:33.244: INFO: Updating stateful set ss2
  Apr 28 09:43:33.252: INFO: Waiting for Pod statefulset-3977/ss2-2 to have revision ss2-6d564bbcc9 update revision ss2-6b8ff7dd9d
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/28/24 09:43:43.25
  Apr 28 09:43:43.288: INFO: Found 1 stateful pods, waiting for 3
  Apr 28 09:43:53.286: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 09:43:53.286: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 09:43:53.286: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/28/24 09:43:53.292
  Apr 28 09:43:53.310: INFO: Updating stateful set ss2
  Apr 28 09:43:53.317: INFO: Waiting for Pod statefulset-3977/ss2-1 to have revision ss2-6d564bbcc9 update revision ss2-6b8ff7dd9d
  Apr 28 09:44:03.334: INFO: Updating stateful set ss2
  Apr 28 09:44:03.341: INFO: Waiting for StatefulSet statefulset-3977/ss2 to complete update
  Apr 28 09:44:03.341: INFO: Waiting for Pod statefulset-3977/ss2-0 to have revision ss2-6d564bbcc9 update revision ss2-6b8ff7dd9d
  Apr 28 09:44:13.341: INFO: Deleting all statefulset in ns statefulset-3977
  Apr 28 09:44:13.344: INFO: Scaling statefulset ss2 to 0
  Apr 28 09:44:23.356: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 28 09:44:23.358: INFO: Deleting statefulset ss2
  Apr 28 09:44:23.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3977" for this suite. @ 04/28/24 09:44:23.372
• [70.219 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/28/24 09:44:23.378
  Apr 28 09:44:23.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename subpath @ 04/28/24 09:44:23.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:44:23.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:44:23.394
  STEP: Setting up data @ 04/28/24 09:44:23.396
  STEP: Creating pod pod-subpath-test-projected-m4l5 @ 04/28/24 09:44:23.402
  STEP: Creating a pod to test atomic-volume-subpath @ 04/28/24 09:44:23.402
  STEP: Saw pod success @ 04/28/24 09:44:45.466
  Apr 28 09:44:45.469: INFO: Trying to get logs from node worker2 pod pod-subpath-test-projected-m4l5 container test-container-subpath-projected-m4l5: <nil>
  STEP: delete the pod @ 04/28/24 09:44:45.477
  STEP: Deleting pod pod-subpath-test-projected-m4l5 @ 04/28/24 09:44:45.496
  Apr 28 09:44:45.496: INFO: Deleting pod "pod-subpath-test-projected-m4l5" in namespace "subpath-2925"
  Apr 28 09:44:45.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2925" for this suite. @ 04/28/24 09:44:45.502
• [22.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/28/24 09:44:45.508
  Apr 28 09:44:45.508: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replication-controller @ 04/28/24 09:44:45.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:44:45.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:44:45.521
  STEP: creating a ReplicationController @ 04/28/24 09:44:45.524
  STEP: waiting for RC to be added @ 04/28/24 09:44:45.529
  STEP: waiting for available Replicas @ 04/28/24 09:44:45.529
  STEP: patching ReplicationController @ 04/28/24 09:44:46.153
  STEP: waiting for RC to be modified @ 04/28/24 09:44:46.158
  STEP: patching ReplicationController status @ 04/28/24 09:44:46.159
  STEP: waiting for RC to be modified @ 04/28/24 09:44:46.163
  STEP: waiting for available Replicas @ 04/28/24 09:44:46.163
  STEP: fetching ReplicationController status @ 04/28/24 09:44:46.167
  STEP: patching ReplicationController scale @ 04/28/24 09:44:46.171
  STEP: waiting for RC to be modified @ 04/28/24 09:44:46.176
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/28/24 09:44:46.176
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/28/24 09:44:46.985
  STEP: updating ReplicationController status @ 04/28/24 09:44:46.988
  STEP: waiting for RC to be modified @ 04/28/24 09:44:46.993
  STEP: listing all ReplicationControllers @ 04/28/24 09:44:46.993
  STEP: checking that ReplicationController has expected values @ 04/28/24 09:44:46.996
  STEP: deleting ReplicationControllers by collection @ 04/28/24 09:44:46.996
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/28/24 09:44:47.004
  Apr 28 09:44:47.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0428 09:44:47.052891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2821" for this suite. @ 04/28/24 09:44:47.056
• [1.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/28/24 09:44:47.064
  Apr 28 09:44:47.064: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename watch @ 04/28/24 09:44:47.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:44:47.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:44:47.084
  STEP: creating a watch on configmaps with a certain label @ 04/28/24 09:44:47.088
  STEP: creating a new configmap @ 04/28/24 09:44:47.088
  STEP: modifying the configmap once @ 04/28/24 09:44:47.093
  STEP: changing the label value of the configmap @ 04/28/24 09:44:47.106
  STEP: Expecting to observe a delete notification for the watched object @ 04/28/24 09:44:47.115
  Apr 28 09:44:47.115: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5283  87684ca0-32f0-463e-9f55-1dde03e92907 27755 0 2024-04-28 09:44:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-28 09:44:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:44:47.115: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5283  87684ca0-32f0-463e-9f55-1dde03e92907 27756 0 2024-04-28 09:44:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-28 09:44:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:44:47.115: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5283  87684ca0-32f0-463e-9f55-1dde03e92907 27757 0 2024-04-28 09:44:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-28 09:44:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/28/24 09:44:47.115
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/28/24 09:44:47.121
  E0428 09:44:48.053117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:49.053300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:50.053628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:51.053797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:52.053795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:53.054035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:54.054118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:55.054553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:56.054724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:57.054786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 04/28/24 09:44:57.122
  STEP: modifying the configmap a third time @ 04/28/24 09:44:57.128
  STEP: deleting the configmap @ 04/28/24 09:44:57.135
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/28/24 09:44:57.139
  Apr 28 09:44:57.139: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5283  87684ca0-32f0-463e-9f55-1dde03e92907 27816 0 2024-04-28 09:44:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-28 09:44:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:44:57.139: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5283  87684ca0-32f0-463e-9f55-1dde03e92907 27817 0 2024-04-28 09:44:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-28 09:44:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:44:57.139: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5283  87684ca0-32f0-463e-9f55-1dde03e92907 27818 0 2024-04-28 09:44:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-28 09:44:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 09:44:57.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5283" for this suite. @ 04/28/24 09:44:57.143
• [10.084 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/28/24 09:44:57.148
  Apr 28 09:44:57.148: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename events @ 04/28/24 09:44:57.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:44:57.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:44:57.167
  STEP: creating a test event @ 04/28/24 09:44:57.169
  STEP: listing events in all namespaces @ 04/28/24 09:44:57.176
  STEP: listing events in test namespace @ 04/28/24 09:44:57.182
  STEP: listing events with field selection filtering on source @ 04/28/24 09:44:57.185
  STEP: listing events with field selection filtering on reportingController @ 04/28/24 09:44:57.191
  STEP: getting the test event @ 04/28/24 09:44:57.201
  STEP: patching the test event @ 04/28/24 09:44:57.211
  STEP: getting the test event @ 04/28/24 09:44:57.22
  STEP: updating the test event @ 04/28/24 09:44:57.225
  STEP: getting the test event @ 04/28/24 09:44:57.231
  STEP: deleting the test event @ 04/28/24 09:44:57.234
  STEP: listing events in all namespaces @ 04/28/24 09:44:57.241
  STEP: listing events in test namespace @ 04/28/24 09:44:57.244
  Apr 28 09:44:57.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8934" for this suite. @ 04/28/24 09:44:57.252
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/28/24 09:44:57.257
  Apr 28 09:44:57.257: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/28/24 09:44:57.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:44:57.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:44:57.273
  STEP: creating a target pod @ 04/28/24 09:44:57.275
  E0428 09:44:58.055206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:44:59.056427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/28/24 09:44:59.296
  E0428 09:45:00.057450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:01.057686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/28/24 09:45:01.313
  Apr 28 09:45:01.314: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3952 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 09:45:01.314: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:45:01.314: INFO: ExecWithOptions: Clientset creation
  Apr 28 09:45:01.314: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-3952/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 28 09:45:01.347: INFO: Exec stderr: ""
  Apr 28 09:45:01.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3952" for this suite. @ 04/28/24 09:45:01.356
• [4.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/28/24 09:45:01.363
  Apr 28 09:45:01.363: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replicaset @ 04/28/24 09:45:01.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:45:01.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:45:01.377
  STEP: Create a Replicaset @ 04/28/24 09:45:01.382
  STEP: Verify that the required pods have come up. @ 04/28/24 09:45:01.386
  Apr 28 09:45:01.389: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0428 09:45:02.057898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:03.058119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:04.058401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:05.058569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:06.058822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:06.394: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/28/24 09:45:06.395
  STEP: Getting /status @ 04/28/24 09:45:06.395
  Apr 28 09:45:06.399: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/28/24 09:45:06.399
  Apr 28 09:45:06.406: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/28/24 09:45:06.406
  Apr 28 09:45:06.407: INFO: Observed &ReplicaSet event: ADDED
  Apr 28 09:45:06.407: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 28 09:45:06.407: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 28 09:45:06.407: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 28 09:45:06.407: INFO: Found replicaset test-rs in namespace replicaset-2390 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 28 09:45:06.407: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/28/24 09:45:06.407
  Apr 28 09:45:06.407: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 28 09:45:06.413: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/28/24 09:45:06.413
  Apr 28 09:45:06.414: INFO: Observed &ReplicaSet event: ADDED
  Apr 28 09:45:06.414: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 28 09:45:06.414: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 28 09:45:06.415: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 28 09:45:06.415: INFO: Observed replicaset test-rs in namespace replicaset-2390 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 28 09:45:06.415: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 28 09:45:06.415: INFO: Found replicaset test-rs in namespace replicaset-2390 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 28 09:45:06.415: INFO: Replicaset test-rs has a patched status
  Apr 28 09:45:06.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2390" for this suite. @ 04/28/24 09:45:06.417
• [5.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 04/28/24 09:45:06.424
  Apr 28 09:45:06.424: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename namespaces @ 04/28/24 09:45:06.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:45:06.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:45:06.44
  STEP: Creating namespace "e2e-ns-q5rzs" @ 04/28/24 09:45:06.442
  Apr 28 09:45:06.454: INFO: Namespace "e2e-ns-q5rzs-6905" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-q5rzs-6905" @ 04/28/24 09:45:06.454
  Apr 28 09:45:06.466: INFO: Namespace "e2e-ns-q5rzs-6905" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-q5rzs-6905" @ 04/28/24 09:45:06.466
  Apr 28 09:45:06.475: INFO: Namespace "e2e-ns-q5rzs-6905" has []v1.FinalizerName{"kubernetes"}
  Apr 28 09:45:06.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2571" for this suite. @ 04/28/24 09:45:06.481
  STEP: Destroying namespace "e2e-ns-q5rzs-6905" for this suite. @ 04/28/24 09:45:06.491
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/28/24 09:45:06.503
  Apr 28 09:45:06.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 09:45:06.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:45:06.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:45:06.524
  STEP: Creating projection with secret that has name projected-secret-test-map-38338f55-e1a9-4f6f-b769-82b872253219 @ 04/28/24 09:45:06.525
  STEP: Creating a pod to test consume secrets @ 04/28/24 09:45:06.531
  E0428 09:45:07.059821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:08.059885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:45:08.548
  Apr 28 09:45:08.552: INFO: Trying to get logs from node worker2 pod pod-projected-secrets-15b62061-1c81-4f1e-89a1-28134b4dd231 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 09:45:08.557
  Apr 28 09:45:08.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7337" for this suite. @ 04/28/24 09:45:08.574
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/28/24 09:45:08.58
  Apr 28 09:45:08.580: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename daemonsets @ 04/28/24 09:45:08.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:45:08.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:45:08.596
  STEP: Creating simple DaemonSet "daemon-set" @ 04/28/24 09:45:08.622
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/28/24 09:45:08.628
  Apr 28 09:45:08.634: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 09:45:08.634: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 09:45:09.060025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:09.635: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 09:45:09.635: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 09:45:10.060626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:10.637: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 28 09:45:10.637: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/28/24 09:45:10.64
  Apr 28 09:45:10.643: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/28/24 09:45:10.643
  Apr 28 09:45:10.650: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/28/24 09:45:10.65
  Apr 28 09:45:10.651: INFO: Observed &DaemonSet event: ADDED
  Apr 28 09:45:10.652: INFO: Observed &DaemonSet event: MODIFIED
  Apr 28 09:45:10.652: INFO: Observed &DaemonSet event: MODIFIED
  Apr 28 09:45:10.652: INFO: Observed &DaemonSet event: MODIFIED
  Apr 28 09:45:10.652: INFO: Observed &DaemonSet event: MODIFIED
  Apr 28 09:45:10.652: INFO: Found daemon set daemon-set in namespace daemonsets-5117 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 28 09:45:10.652: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/28/24 09:45:10.652
  STEP: watching for the daemon set status to be patched @ 04/28/24 09:45:10.658
  Apr 28 09:45:10.659: INFO: Observed &DaemonSet event: ADDED
  Apr 28 09:45:10.659: INFO: Observed &DaemonSet event: MODIFIED
  Apr 28 09:45:10.659: INFO: Observed &DaemonSet event: MODIFIED
  Apr 28 09:45:10.659: INFO: Observed &DaemonSet event: MODIFIED
  Apr 28 09:45:10.659: INFO: Observed &DaemonSet event: MODIFIED
  Apr 28 09:45:10.659: INFO: Observed daemon set daemon-set in namespace daemonsets-5117 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 28 09:45:10.660: INFO: Observed &DaemonSet event: MODIFIED
  Apr 28 09:45:10.660: INFO: Found daemon set daemon-set in namespace daemonsets-5117 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Apr 28 09:45:10.660: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/28/24 09:45:10.663
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5117, will wait for the garbage collector to delete the pods @ 04/28/24 09:45:10.663
  Apr 28 09:45:10.723: INFO: Deleting DaemonSet.extensions daemon-set took: 5.16101ms
  Apr 28 09:45:10.824: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.081834ms
  E0428 09:45:11.061486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:12.062016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:13.062569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:13.226: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 09:45:13.226: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 28 09:45:13.228: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28075"},"items":null}

  Apr 28 09:45:13.231: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28075"},"items":null}

  Apr 28 09:45:13.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5117" for this suite. @ 04/28/24 09:45:13.244
• [4.668 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 04/28/24 09:45:13.249
  Apr 28 09:45:13.249: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename var-expansion @ 04/28/24 09:45:13.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:45:13.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:45:13.263
  STEP: Creating a pod to test substitution in container's args @ 04/28/24 09:45:13.265
  E0428 09:45:14.063152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:15.063607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:45:15.28
  Apr 28 09:45:15.282: INFO: Trying to get logs from node worker1 pod var-expansion-14cb9db1-f462-4352-9316-d12e6e517161 container dapi-container: <nil>
  STEP: delete the pod @ 04/28/24 09:45:15.29
  Apr 28 09:45:15.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8012" for this suite. @ 04/28/24 09:45:15.305
• [2.063 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 04/28/24 09:45:15.312
  Apr 28 09:45:15.312: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename namespaces @ 04/28/24 09:45:15.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:45:15.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:45:15.324
  STEP: Creating a test namespace @ 04/28/24 09:45:15.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:45:15.348
  STEP: Creating a service in the namespace @ 04/28/24 09:45:15.35
  STEP: Deleting the namespace @ 04/28/24 09:45:15.359
  STEP: Waiting for the namespace to be removed. @ 04/28/24 09:45:15.369
  E0428 09:45:16.064025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:17.064171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:18.064272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:19.064949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:20.065487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:21.066208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/28/24 09:45:21.372
  STEP: Verifying there is no service in the namespace @ 04/28/24 09:45:21.383
  Apr 28 09:45:21.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8325" for this suite. @ 04/28/24 09:45:21.391
  STEP: Destroying namespace "nsdeletetest-684" for this suite. @ 04/28/24 09:45:21.399
  Apr 28 09:45:21.406: INFO: Namespace nsdeletetest-684 was already deleted
  STEP: Destroying namespace "nsdeletetest-498" for this suite. @ 04/28/24 09:45:21.406
• [6.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/28/24 09:45:21.414
  Apr 28 09:45:21.414: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename field-validation @ 04/28/24 09:45:21.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:45:21.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:45:21.425
  Apr 28 09:45:21.428: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 09:45:22.066760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:23.066942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:24.067682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:24.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3875" for this suite. @ 04/28/24 09:45:24.491
• [3.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/28/24 09:45:24.496
  Apr 28 09:45:24.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename dns @ 04/28/24 09:45:24.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:45:24.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:45:24.512
  STEP: Creating a test headless service @ 04/28/24 09:45:24.515
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-713.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-713.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-713.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-713.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-713.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-713.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-713.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-713.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-713.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-713.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 251.21.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.21.251_udp@PTR;check="$$(dig +tcp +noall +answer +search 251.21.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.21.251_tcp@PTR;sleep 1; done
   @ 04/28/24 09:45:24.529
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-713.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-713.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-713.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-713.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-713.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-713.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-713.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-713.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-713.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-713.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 251.21.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.21.251_udp@PTR;check="$$(dig +tcp +noall +answer +search 251.21.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.21.251_tcp@PTR;sleep 1; done
   @ 04/28/24 09:45:24.529
  STEP: creating a pod to probe DNS @ 04/28/24 09:45:24.529
  STEP: submitting the pod to kubernetes @ 04/28/24 09:45:24.529
  E0428 09:45:25.068575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:26.068707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/28/24 09:45:26.548
  STEP: looking for the results for each expected name from probers @ 04/28/24 09:45:26.551
  Apr 28 09:45:26.555: INFO: Unable to read wheezy_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:26.559: INFO: Unable to read wheezy_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:26.564: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:26.567: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:26.596: INFO: Unable to read jessie_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:26.599: INFO: Unable to read jessie_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:26.603: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:26.608: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:26.628: INFO: Lookups using dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd failed for: [wheezy_udp@dns-test-service.dns-713.svc.cluster.local wheezy_tcp@dns-test-service.dns-713.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_udp@dns-test-service.dns-713.svc.cluster.local jessie_tcp@dns-test-service.dns-713.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local]

  Apr 28 09:45:26.637: INFO: Pod client logs for webserver: 
  Apr 28 09:45:26.648: INFO: Pod client logs for querier: 
  Apr 28 09:45:26.655: INFO: Pod client logs for jessie-querier: 
  E0428 09:45:27.069307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:28.070290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:29.070891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:30.071643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:31.072268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:31.555: INFO: Unable to read wheezy_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:31.558: INFO: Unable to read wheezy_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:31.562: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:31.566: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:31.592: INFO: Unable to read jessie_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:31.598: INFO: Unable to read jessie_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:31.602: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:31.611: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:31.628: INFO: Lookups using dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd failed for: [wheezy_udp@dns-test-service.dns-713.svc.cluster.local wheezy_tcp@dns-test-service.dns-713.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_udp@dns-test-service.dns-713.svc.cluster.local jessie_tcp@dns-test-service.dns-713.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local]

  Apr 28 09:45:31.637: INFO: Pod client logs for webserver: 
  Apr 28 09:45:31.645: INFO: Pod client logs for querier: 
  Apr 28 09:45:31.651: INFO: Pod client logs for jessie-querier: 
  E0428 09:45:32.072838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:33.073022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:34.073180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:35.073933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:36.074985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:36.556: INFO: Unable to read wheezy_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:36.561: INFO: Unable to read wheezy_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:36.564: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:36.568: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:36.584: INFO: Unable to read jessie_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:36.588: INFO: Unable to read jessie_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:36.591: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:36.594: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:36.609: INFO: Lookups using dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd failed for: [wheezy_udp@dns-test-service.dns-713.svc.cluster.local wheezy_tcp@dns-test-service.dns-713.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_udp@dns-test-service.dns-713.svc.cluster.local jessie_tcp@dns-test-service.dns-713.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local]

  Apr 28 09:45:36.616: INFO: Pod client logs for webserver: 
  Apr 28 09:45:36.621: INFO: Pod client logs for querier: 
  Apr 28 09:45:36.637: INFO: Pod client logs for jessie-querier: 
  E0428 09:45:37.075493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:38.075758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:39.076208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:40.077089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:41.077381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:41.555: INFO: Unable to read wheezy_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:41.558: INFO: Unable to read wheezy_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:41.562: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:41.564: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:41.580: INFO: Unable to read jessie_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:41.582: INFO: Unable to read jessie_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:41.585: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:41.589: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:41.606: INFO: Lookups using dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd failed for: [wheezy_udp@dns-test-service.dns-713.svc.cluster.local wheezy_tcp@dns-test-service.dns-713.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_udp@dns-test-service.dns-713.svc.cluster.local jessie_tcp@dns-test-service.dns-713.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local]

  Apr 28 09:45:41.614: INFO: Pod client logs for webserver: 
  Apr 28 09:45:41.622: INFO: Pod client logs for querier: 
  Apr 28 09:45:41.630: INFO: Pod client logs for jessie-querier: 
  E0428 09:45:42.077693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:43.077926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:44.078151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:45.078650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:46.078833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:46.556: INFO: Unable to read wheezy_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:46.560: INFO: Unable to read wheezy_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:46.563: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:46.567: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:46.584: INFO: Unable to read jessie_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:46.587: INFO: Unable to read jessie_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:46.590: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:46.593: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:46.610: INFO: Lookups using dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd failed for: [wheezy_udp@dns-test-service.dns-713.svc.cluster.local wheezy_tcp@dns-test-service.dns-713.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_udp@dns-test-service.dns-713.svc.cluster.local jessie_tcp@dns-test-service.dns-713.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local]

  Apr 28 09:45:46.616: INFO: Pod client logs for webserver: 
  Apr 28 09:45:46.623: INFO: Pod client logs for querier: 
  Apr 28 09:45:46.641: INFO: Pod client logs for jessie-querier: 
  E0428 09:45:47.079163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:48.079388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:49.080414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:50.080517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:51.081402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:51.556: INFO: Unable to read wheezy_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:51.559: INFO: Unable to read wheezy_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:51.563: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:51.566: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:51.582: INFO: Unable to read jessie_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:51.584: INFO: Unable to read jessie_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:51.587: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:51.591: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:51.605: INFO: Lookups using dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd failed for: [wheezy_udp@dns-test-service.dns-713.svc.cluster.local wheezy_tcp@dns-test-service.dns-713.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_udp@dns-test-service.dns-713.svc.cluster.local jessie_tcp@dns-test-service.dns-713.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local]

  Apr 28 09:45:51.612: INFO: Pod client logs for webserver: 
  Apr 28 09:45:51.617: INFO: Pod client logs for querier: 
  Apr 28 09:45:51.625: INFO: Pod client logs for jessie-querier: 
  E0428 09:45:52.081715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:53.082713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:54.082981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:55.083662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:56.084341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:45:56.557: INFO: Unable to read wheezy_udp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:56.560: INFO: Unable to read wheezy_tcp@dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:56.563: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:56.567: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local from pod dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd: the server could not find the requested resource (get pods dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd)
  Apr 28 09:45:56.607: INFO: Lookups using dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd failed for: [wheezy_udp@dns-test-service.dns-713.svc.cluster.local wheezy_tcp@dns-test-service.dns-713.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-713.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-713.svc.cluster.local]

  Apr 28 09:45:56.620: INFO: Pod client logs for webserver: 
  Apr 28 09:45:56.626: INFO: Pod client logs for querier: 
  Apr 28 09:45:56.636: INFO: Pod client logs for jessie-querier: 
  E0428 09:45:57.085355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:58.085556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:45:59.085829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:00.086293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:01.086523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:01.602: INFO: DNS probes using dns-713/dns-test-5b5ff2cb-9fef-4ab0-aebe-d903651852fd succeeded

  STEP: deleting the pod @ 04/28/24 09:46:01.602
  STEP: deleting the test service @ 04/28/24 09:46:01.619
  STEP: deleting the test headless service @ 04/28/24 09:46:01.661
  Apr 28 09:46:01.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-713" for this suite. @ 04/28/24 09:46:01.686
• [37.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 04/28/24 09:46:01.694
  Apr 28 09:46:01.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 09:46:01.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:46:01.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:46:01.709
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6880 @ 04/28/24 09:46:01.71
  STEP: changing the ExternalName service to type=ClusterIP @ 04/28/24 09:46:01.717
  STEP: creating replication controller externalname-service in namespace services-6880 @ 04/28/24 09:46:01.741
  I0428 09:46:01.748464      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6880, replica count: 2
  E0428 09:46:02.086775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:03.087136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:04.088316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0428 09:46:04.800475      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 28 09:46:04.800: INFO: Creating new exec pod
  E0428 09:46:05.088381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:06.088826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:07.088982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:07.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6880 exec execpodw6n5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 28 09:46:07.896: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 28 09:46:07.896: INFO: stdout: ""
  E0428 09:46:08.089545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:08.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6880 exec execpodw6n5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 28 09:46:08.891: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 28 09:46:08.891: INFO: stdout: ""
  E0428 09:46:09.089936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:09.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6880 exec execpodw6n5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 28 09:46:09.893: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 28 09:46:09.893: INFO: stdout: ""
  E0428 09:46:10.090418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:10.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6880 exec execpodw6n5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 28 09:46:10.892: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 28 09:46:10.892: INFO: stdout: ""
  E0428 09:46:11.091279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:11.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6880 exec execpodw6n5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 28 09:46:11.890: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 28 09:46:11.891: INFO: stdout: ""
  E0428 09:46:12.091462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:12.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6880 exec execpodw6n5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 28 09:46:12.886: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 28 09:46:12.886: INFO: stdout: "externalname-service-8gv4q"
  Apr 28 09:46:12.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6880 exec execpodw6n5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.107.143 80'
  Apr 28 09:46:12.957: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.107.143 80\nConnection to 10.68.107.143 80 port [tcp/http] succeeded!\n"
  Apr 28 09:46:12.957: INFO: stdout: "externalname-service-khspr"
  Apr 28 09:46:12.957: INFO: Cleaning up the ExternalName to ClusterIP test service
  Apr 28 09:46:12.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6880" for this suite. @ 04/28/24 09:46:12.981
• [11.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/28/24 09:46:12.992
  Apr 28 09:46:12.992: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 09:46:12.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:46:13.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:46:13.011
  STEP: Creating pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897 @ 04/28/24 09:46:13.014
  E0428 09:46:13.091491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:14.092225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/28/24 09:46:15.03
  Apr 28 09:46:15.033: INFO: Initial restart count of pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b is 0
  Apr 28 09:46:15.036: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:15.092404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:16.092627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:17.039: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:17.093628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:18.093992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:19.044: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:19.094236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:20.094294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:21.047: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:21.094549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:22.094740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:23.051: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:23.095541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:24.095461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:25.055: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:25.096042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:26.096239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:27.059: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:27.096726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:28.096924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:29.064: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:29.097390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:30.097841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:31.069: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:31.098387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:32.098600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:33.073: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:33.099099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:34.099208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:35.078: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:35.100169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:36.100392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:37.082: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:37.101284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:38.101485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:39.085: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:39.102412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:40.102584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:41.089: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:41.103536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:42.104496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:43.098: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:43.105083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:44.105566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:45.103: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:45.106052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:46.106229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:47.106732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:47.106: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:48.107388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:49.108462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:49.111: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:50.108931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:51.108841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:51.114: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:52.109336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:53.109662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:53.118: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:54.109758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:55.110120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:55.121: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:56.110291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:57.110487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:57.125: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:46:58.111156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:46:59.111261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:46:59.129: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:00.111600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:01.112675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:01.133: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:02.113836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:03.113848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:03.138: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:04.114121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:05.114678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:05.142: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:06.115605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:07.116295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:07.146: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:08.117218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:09.117368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:09.149: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:10.117521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:11.117868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:11.153: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:12.117993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:13.118935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:13.157: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:14.119641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:15.120251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:15.162: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:16.121256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:17.121485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:17.167: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:18.121647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:19.122334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:19.170: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  E0428 09:47:20.122394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:21.123268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:21.173: INFO: Get pod test-grpc-61734d7a-ec54-446e-9988-c1991649455b in namespace container-probe-7897
  Apr 28 09:47:21.173: INFO: Restart count of pod container-probe-7897/test-grpc-61734d7a-ec54-446e-9988-c1991649455b is now 1 (1m6.139942079s elapsed)
  STEP: deleting the pod @ 04/28/24 09:47:21.173
  Apr 28 09:47:21.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7897" for this suite. @ 04/28/24 09:47:21.19
• [68.205 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/28/24 09:47:21.197
  Apr 28 09:47:21.197: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename deployment @ 04/28/24 09:47:21.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:47:21.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:47:21.218
  Apr 28 09:47:21.226: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0428 09:47:22.123661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:23.123785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:24.124152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:25.124621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:26.124962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:26.230: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/28/24 09:47:26.23
  Apr 28 09:47:26.230: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/28/24 09:47:26.24
  E0428 09:47:27.125113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:28.125901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:28.261: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2043",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7ef7d56-9154-498c-968b-04468062085d",
      ResourceVersion: (string) (len=5) "28703",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-855fb55d45\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 28 09:47:28.267: INFO: New ReplicaSet "test-cleanup-deployment-855fb55d45" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-855fb55d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2043",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3ce590c-f7e2-4333-8012-8fb58af647e7",
      ResourceVersion: (string) (len=5) "28693",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "855fb55d45",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b7ef7d56-9154-498c-968b-04468062085d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 37 65 66 37 64  35 36 2d 39 31 35 34 2d  |\"b7ef7d56-9154-|
              00000120  34 39 38 63 2d 39 36 38  62 2d 30 34 34 36 38 30  |498c-968b-044680|
              00000130  36 32 30 38 35 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |62085d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "855fb55d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "855fb55d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 09:47:28.273: INFO: Pod "test-cleanup-deployment-855fb55d45-wkqnf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-855fb55d45-wkqnf",
      GenerateName: (string) (len=35) "test-cleanup-deployment-855fb55d45-",
      Namespace: (string) (len=15) "deployment-2043",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbb30ca2-4a1f-4c05-b043-f6b25486cbd4",
      ResourceVersion: (string) (len=5) "28692",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "855fb55d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-855fb55d45",
          UID: (types.UID) (len=36) "e3ce590c-f7e2-4333-8012-8fb58af647e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 33  63 65 35 39 30 63 2d 66  |d\":\"e3ce590c-f|
              00000090  37 65 32 2d 34 33 33 33  2d 38 30 31 32 2d 38 66  |7e2-4333-8012-8f|
              000000a0  62 35 38 61 66 36 34 37  65 37 5c 22 7d 22 3a 7b  |b58af647e7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 33 35  2e 31 34 31 5c 22 7d 22  |2.20.235.141\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fgxf2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fgxf2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.137"
        }
      },
      PodIP: (string) (len=14) "172.20.235.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.235.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849894446,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=139) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost@sha256:8f07c07228b54f5d644c14241ad3e483b999c5d3a78f7580a6252c8ab42f2b66",
          ContainerID: (string) (len=77) "containerd://033e29b813b028abad42880afe8f21be1408ea27de32b589b2915eddf34f05c4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:47:28.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2043" for this suite. @ 04/28/24 09:47:28.281
• [7.093 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/28/24 09:47:28.291
  Apr 28 09:47:28.291: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pod-network-test @ 04/28/24 09:47:28.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:47:28.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:47:28.311
  STEP: Performing setup for networking test in namespace pod-network-test-9844 @ 04/28/24 09:47:28.313
  STEP: creating a selector @ 04/28/24 09:47:28.313
  STEP: Creating the service pods in kubernetes @ 04/28/24 09:47:28.313
  Apr 28 09:47:28.314: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0428 09:47:29.126059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:30.126975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:31.127178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:32.127341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:33.128285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:34.128409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:35.129392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:36.129596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:37.129722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:38.130666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:39.131306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:40.132025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/28/24 09:47:40.379
  E0428 09:47:41.132379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:42.133369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:42.396: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 28 09:47:42.396: INFO: Breadth first check of 172.20.219.94 on host 192.168.227.136...
  Apr 28 09:47:42.398: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.189.91:9080/dial?request=hostname&protocol=http&host=172.20.219.94&port=8083&tries=1'] Namespace:pod-network-test-9844 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 09:47:42.398: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:47:42.398: INFO: ExecWithOptions: Clientset creation
  Apr 28 09:47:42.398: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9844/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.189.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.219.94%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 28 09:47:42.435: INFO: Waiting for responses: map[]
  Apr 28 09:47:42.435: INFO: reached 172.20.219.94 after 0/1 tries
  Apr 28 09:47:42.435: INFO: Breadth first check of 172.20.235.140 on host 192.168.227.137...
  Apr 28 09:47:42.439: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.189.91:9080/dial?request=hostname&protocol=http&host=172.20.235.140&port=8083&tries=1'] Namespace:pod-network-test-9844 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 09:47:42.439: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:47:42.439: INFO: ExecWithOptions: Clientset creation
  Apr 28 09:47:42.439: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9844/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.189.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.235.140%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 28 09:47:42.474: INFO: Waiting for responses: map[]
  Apr 28 09:47:42.475: INFO: reached 172.20.235.140 after 0/1 tries
  Apr 28 09:47:42.475: INFO: Breadth first check of 172.20.189.88 on host 192.168.227.138...
  Apr 28 09:47:42.479: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.189.91:9080/dial?request=hostname&protocol=http&host=172.20.189.88&port=8083&tries=1'] Namespace:pod-network-test-9844 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 09:47:42.479: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:47:42.479: INFO: ExecWithOptions: Clientset creation
  Apr 28 09:47:42.479: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9844/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.189.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.189.88%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 28 09:47:42.517: INFO: Waiting for responses: map[]
  Apr 28 09:47:42.517: INFO: reached 172.20.189.88 after 0/1 tries
  Apr 28 09:47:42.517: INFO: Going to retry 0 out of 3 pods....
  Apr 28 09:47:42.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9844" for this suite. @ 04/28/24 09:47:42.521
• [14.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 04/28/24 09:47:42.527
  Apr 28 09:47:42.527: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 09:47:42.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:47:42.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:47:42.542
  STEP: validating api versions @ 04/28/24 09:47:42.545
  Apr 28 09:47:42.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-934 api-versions'
  Apr 28 09:47:42.588: INFO: stderr: ""
  Apr 28 09:47:42.588: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Apr 28 09:47:42.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-934" for this suite. @ 04/28/24 09:47:42.592
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 04/28/24 09:47:42.597
  Apr 28 09:47:42.597: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 09:47:42.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:47:42.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:47:42.611
  STEP: creating Agnhost RC @ 04/28/24 09:47:42.613
  Apr 28 09:47:42.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2199 create -f -'
  Apr 28 09:47:42.691: INFO: stderr: ""
  Apr 28 09:47:42.691: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/28/24 09:47:42.691
  E0428 09:47:43.134118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:47:43.697: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 28 09:47:43.697: INFO: Found 1 / 1
  Apr 28 09:47:43.697: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/28/24 09:47:43.697
  Apr 28 09:47:43.699: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 28 09:47:43.699: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 28 09:47:43.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2199 patch pod agnhost-primary-8kl5l -p {"metadata":{"annotations":{"x":"y"}}}'
  Apr 28 09:47:43.745: INFO: stderr: ""
  Apr 28 09:47:43.745: INFO: stdout: "pod/agnhost-primary-8kl5l patched\n"
  STEP: checking annotations @ 04/28/24 09:47:43.745
  Apr 28 09:47:43.748: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 28 09:47:43.748: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 28 09:47:43.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2199" for this suite. @ 04/28/24 09:47:43.751
• [1.159 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/28/24 09:47:43.756
  Apr 28 09:47:43.756: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/28/24 09:47:43.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:47:43.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:47:43.772
  STEP: creating a target pod @ 04/28/24 09:47:43.775
  E0428 09:47:44.134213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:45.134894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/28/24 09:47:45.796
  E0428 09:47:46.135831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:47.135978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:48.136066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:49.136625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/28/24 09:47:49.816
  Apr 28 09:47:49.816: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2963 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 09:47:49.816: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 09:47:49.816: INFO: ExecWithOptions: Clientset creation
  Apr 28 09:47:49.816: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-2963/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 28 09:47:49.854: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/28/24 09:47:49.86
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/28/24 09:47:49.865
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/28/24 09:47:49.872
  Apr 28 09:47:49.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2963" for this suite. @ 04/28/24 09:47:49.88
• [6.132 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 04/28/24 09:47:49.889
  Apr 28 09:47:49.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename job @ 04/28/24 09:47:49.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:47:49.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:47:49.905
  STEP: Creating Indexed job @ 04/28/24 09:47:49.908
  STEP: Ensuring job reaches completions @ 04/28/24 09:47:49.912
  E0428 09:47:50.136838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:51.137069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:52.137382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:53.137861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:54.138693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:55.139236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:56.140130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:57.140303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 04/28/24 09:47:57.916
  Apr 28 09:47:57.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2092" for this suite. @ 04/28/24 09:47:57.922
• [8.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 04/28/24 09:47:57.929
  Apr 28 09:47:57.929: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/28/24 09:47:57.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:47:57.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:47:57.943
  STEP: create the container to handle the HTTPGet hook request. @ 04/28/24 09:47:57.949
  E0428 09:47:58.141230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:47:59.141650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/28/24 09:47:59.968
  E0428 09:48:00.142177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:01.142462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/28/24 09:48:01.984
  E0428 09:48:02.143192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:03.143363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/28/24 09:48:03.999
  Apr 28 09:48:04.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8165" for this suite. @ 04/28/24 09:48:04.009
• [6.086 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 04/28/24 09:48:04.015
  Apr 28 09:48:04.015: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-webhook @ 04/28/24 09:48:04.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:48:04.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:48:04.028
  STEP: Setting up server cert @ 04/28/24 09:48:04.03
  E0428 09:48:04.143935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/28/24 09:48:04.384
  STEP: Deploying the custom resource conversion webhook pod @ 04/28/24 09:48:04.391
  STEP: Wait for the deployment to be ready @ 04/28/24 09:48:04.401
  Apr 28 09:48:04.408: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0428 09:48:05.144809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:06.145053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 09:48:06.418
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:48:06.427
  E0428 09:48:07.145326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:48:07.427: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 28 09:48:07.434: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 09:48:08.145827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:09.145876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/28/24 09:48:09.974
  STEP: Create a v2 custom resource @ 04/28/24 09:48:09.987
  STEP: List CRs in v1 @ 04/28/24 09:48:10.008
  STEP: List CRs in v2 @ 04/28/24 09:48:10.013
  E0428 09:48:10.146590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:48:10.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2542" for this suite. @ 04/28/24 09:48:10.576
• [6.573 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/28/24 09:48:10.588
  Apr 28 09:48:10.588: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 09:48:10.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:48:10.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:48:10.609
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 09:48:10.616
  E0428 09:48:11.146862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:12.146950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:13.147129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:14.147413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:48:14.644
  Apr 28 09:48:14.647: INFO: Trying to get logs from node worker2 pod downwardapi-volume-ea974a4a-c08a-4cb0-8f81-493c748f5b38 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 09:48:14.654
  Apr 28 09:48:14.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5303" for this suite. @ 04/28/24 09:48:14.676
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 04/28/24 09:48:14.684
  Apr 28 09:48:14.684: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename svcaccounts @ 04/28/24 09:48:14.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:48:14.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:48:14.699
  Apr 28 09:48:14.718: INFO: created pod
  E0428 09:48:15.147830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:16.148388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:48:16.728
  E0428 09:48:17.149263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:18.149576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:19.150631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:20.150732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:21.151033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:22.151185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:23.151216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:24.151281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:25.151845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:26.152131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:27.152494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:28.152770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:29.152930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:30.153779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:31.153978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:32.154192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:33.154388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:34.154618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:35.154666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:36.154869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:37.155275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:38.156350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:39.156617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:40.156742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:41.156776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:42.156960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:43.157013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:44.157686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:45.158323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:46.159226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:48:46.728: INFO: polling logs
  Apr 28 09:48:46.735: INFO: Pod logs: 
  I0428 09:48:15.245840       1 log.go:194] OK: Got token
  I0428 09:48:15.245903       1 log.go:194] validating with in-cluster discovery
  I0428 09:48:15.246075       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I0428 09:48:15.246102       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4059:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00023ed00), NotBefore:(*jwt.NumericDate)(0xc00023ede8), IssuedAt:(*jwt.NumericDate)(0xc00023ed10), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4059", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"dba457a9-b572-4b63-87c9-abf6fca3bca6"}}}
  I0428 09:48:15.254050       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0428 09:48:15.258925       1 log.go:194] OK: Validated signature on JWT
  I0428 09:48:15.258983       1 log.go:194] OK: Got valid claims from token!
  I0428 09:48:15.258998       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4059:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000048740), NotBefore:(*jwt.NumericDate)(0xc000048778), IssuedAt:(*jwt.NumericDate)(0xc000048748), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4059", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"dba457a9-b572-4b63-87c9-abf6fca3bca6"}}}

  Apr 28 09:48:46.735: INFO: completed pod
  Apr 28 09:48:46.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4059" for this suite. @ 04/28/24 09:48:46.743
• [32.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 04/28/24 09:48:46.749
  Apr 28 09:48:46.749: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename statefulset @ 04/28/24 09:48:46.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:48:46.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:48:46.766
  STEP: Creating service test in namespace statefulset-2834 @ 04/28/24 09:48:46.768
  STEP: Creating a new StatefulSet @ 04/28/24 09:48:46.774
  Apr 28 09:48:46.782: INFO: Found 0 stateful pods, waiting for 3
  E0428 09:48:47.159352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:48.159365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:49.159739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:50.160011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:51.160005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:52.160141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:53.160541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:54.161012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:55.161776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:56.162766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:48:56.784: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 09:48:56.784: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 09:48:56.784: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 09:48:56.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-2834 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 09:48:56.872: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 09:48:56.873: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 09:48:56.873: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0428 09:48:57.163195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:58.164297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:48:59.164819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:00.165671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:01.166626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:02.167441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:03.168364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:04.168637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:05.168828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:06.169085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4 to registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.39-4 @ 04/28/24 09:49:06.883
  Apr 28 09:49:06.901: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/28/24 09:49:06.901
  E0428 09:49:07.169774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:08.169585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:09.169857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:10.170909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:11.171777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:12.171930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:13.172844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:14.173109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:15.173784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:16.173976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 04/28/24 09:49:16.909
  Apr 28 09:49:16.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-2834 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 28 09:49:16.995: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 28 09:49:16.995: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 28 09:49:16.995: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0428 09:49:17.174070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:18.174135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:19.174324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:20.174659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:21.175698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:22.176865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:23.176973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:24.177243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:25.177721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:26.177974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 04/28/24 09:49:27.008
  Apr 28 09:49:27.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-2834 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 09:49:27.085: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 09:49:27.085: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 09:49:27.085: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0428 09:49:27.178105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:28.178218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:29.178504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:30.178569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:31.178797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:32.179658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:33.180340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:34.180622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:35.181203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:36.181427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:49:37.109: INFO: Updating stateful set ss2
  E0428 09:49:37.183199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:38.184259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:39.185325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:40.185618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:41.185850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:42.186114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:43.186348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:44.186642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:45.187227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:46.188282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 04/28/24 09:49:47.116
  Apr 28 09:49:47.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-2834 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0428 09:49:47.189484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:49:47.232: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 28 09:49:47.232: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 28 09:49:47.232: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0428 09:49:48.189695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:49.189900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:50.189981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:51.190156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:52.191083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:53.191209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:54.191635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:55.192154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:56.192667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:57.196955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:49:57.243: INFO: Deleting all statefulset in ns statefulset-2834
  Apr 28 09:49:57.246: INFO: Scaling statefulset ss2 to 0
  E0428 09:49:58.197596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:49:59.197997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:00.198502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:01.198798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:02.199111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:03.199323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:04.200308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:05.201290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:06.201601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:07.202348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:07.257: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 28 09:50:07.259: INFO: Deleting statefulset ss2
  Apr 28 09:50:07.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2834" for this suite. @ 04/28/24 09:50:07.272
• [80.530 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/28/24 09:50:07.279
  Apr 28 09:50:07.279: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename aggregator @ 04/28/24 09:50:07.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:50:07.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:50:07.295
  Apr 28 09:50:07.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Registering the sample API server. @ 04/28/24 09:50:07.298
  Apr 28 09:50:07.474: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Apr 28 09:50:07.496: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0428 09:50:08.202770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:09.203642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:09.540: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:10.204806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:11.205587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:11.544: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:12.206444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:13.206760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:13.544: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:14.207752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:15.208399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:15.543: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:16.209403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:17.209799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:17.545: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:18.210312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:19.210862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:19.544: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:20.210951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:21.211224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:21.544: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:22.211920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:23.212873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:23.543: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:24.213237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:25.213773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:25.544: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:26.214768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:27.215074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:27.544: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:28.215254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:29.216363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:29.544: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:30.216831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:31.217078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:31.543: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-75567c47dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:50:32.217913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:33.218153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:33.658: INFO: Waited 109.709783ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/28/24 09:50:33.683
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/28/24 09:50:33.687
  STEP: List APIServices @ 04/28/24 09:50:33.691
  Apr 28 09:50:33.695: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/28/24 09:50:33.695
  Apr 28 09:50:33.704: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/28/24 09:50:33.704
  Apr 28 09:50:33.711: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 28, 9, 50, 33, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/28/24 09:50:33.711
  Apr 28 09:50:33.714: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-28 09:50:33 +0000 UTC Passed all checks passed}
  Apr 28 09:50:33.714: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 28 09:50:33.714: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/28/24 09:50:33.714
  Apr 28 09:50:33.725: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1013695030" @ 04/28/24 09:50:33.725
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/28/24 09:50:33.736
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/28/24 09:50:33.74
  STEP: Patch APIService Status @ 04/28/24 09:50:33.742
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/28/24 09:50:33.75
  Apr 28 09:50:33.753: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-28 09:50:33 +0000 UTC Passed all checks passed}
  Apr 28 09:50:33.754: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 28 09:50:33.754: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Apr 28 09:50:33.754: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/28/24 09:50:33.754
  STEP: Confirm that the generated APIService has been deleted @ 04/28/24 09:50:33.762
  Apr 28 09:50:33.762: INFO: Requesting list of APIServices to confirm quantity
  Apr 28 09:50:33.765: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Apr 28 09:50:33.765: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Apr 28 09:50:33.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-8562" for this suite. @ 04/28/24 09:50:33.922
• [26.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/28/24 09:50:33.929
  Apr 28 09:50:33.929: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 09:50:33.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:50:33.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:50:33.952
  STEP: Creating secret with name projected-secret-test-9162d93b-767d-425f-a073-3f46fd17a3f4 @ 04/28/24 09:50:33.955
  STEP: Creating a pod to test consume secrets @ 04/28/24 09:50:33.96
  E0428 09:50:34.219083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:35.219774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:50:35.979
  Apr 28 09:50:35.982: INFO: Trying to get logs from node worker2 pod pod-projected-secrets-8cdec178-49a1-448c-bafc-b2c7e65c66ce container secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 09:50:35.99
  Apr 28 09:50:36.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8040" for this suite. @ 04/28/24 09:50:36.005
• [2.082 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 04/28/24 09:50:36.011
  Apr 28 09:50:36.011: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 09:50:36.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:50:36.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:50:36.027
  STEP: Creating a pod to test downward api env vars @ 04/28/24 09:50:36.029
  E0428 09:50:36.220471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:37.221507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:50:38.047
  Apr 28 09:50:38.051: INFO: Trying to get logs from node worker2 pod downward-api-ababf60f-f702-41ec-b4a7-1e17a3aa5dcb container dapi-container: <nil>
  STEP: delete the pod @ 04/28/24 09:50:38.057
  Apr 28 09:50:38.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3627" for this suite. @ 04/28/24 09:50:38.079
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 04/28/24 09:50:38.09
  Apr 28 09:50:38.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/28/24 09:50:38.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:50:38.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:50:38.104
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/28/24 09:50:38.106
  Apr 28 09:50:38.106: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 09:50:38.222316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:39.223172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:39.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 09:50:40.223712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:41.223781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:42.224321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:43.224377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:43.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-846" for this suite. @ 04/28/24 09:50:43.833
• [5.749 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/28/24 09:50:43.839
  Apr 28 09:50:43.839: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename daemonsets @ 04/28/24 09:50:43.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:50:43.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:50:43.854
  STEP: Creating simple DaemonSet "daemon-set" @ 04/28/24 09:50:43.875
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/28/24 09:50:43.88
  Apr 28 09:50:43.888: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 09:50:43.888: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 09:50:44.224980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:44.887: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 28 09:50:44.887: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 09:50:45.225956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:50:45.887: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 28 09:50:45.887: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/28/24 09:50:45.89
  STEP: DeleteCollection of the DaemonSets @ 04/28/24 09:50:45.895
  STEP: Verify that ReplicaSets have been deleted @ 04/28/24 09:50:45.902
  Apr 28 09:50:45.912: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30300"},"items":null}

  Apr 28 09:50:45.919: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30302"},"items":[{"metadata":{"name":"daemon-set-dq9xb","generateName":"daemon-set-","namespace":"daemonsets-2270","uid":"96903a31-6f58-4857-8e69-71f4a9d02e06","resourceVersion":"30292","creationTimestamp":"2024-04-28T09:50:43Z","labels":{"controller-revision-hash":"6dd4bc54c6","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f7cecacf-9216-4a5b-9007-733baa965f68","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-28T09:50:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7cecacf-9216-4a5b-9007-733baa965f68\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-28T09:50:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.235.152\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-k2mlj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-k2mlj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:44Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:44Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:44Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:43Z"}],"hostIP":"192.168.227.137","hostIPs":[{"ip":"192.168.227.137"}],"podIP":"172.20.235.152","podIPs":[{"ip":"172.20.235.152"}],"startTime":"2024-04-28T09:50:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-28T09:50:44Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4","imageID":"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3","containerID":"containerd://978ec8398aa14b3c7f79b032440f1868853ad75f1f37c0c37b0b1d6c287e7b5b","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-px4c5","generateName":"daemon-set-","namespace":"daemonsets-2270","uid":"89c110ec-bcf2-40a9-8d3f-3e8b73b1f14d","resourceVersion":"30301","creationTimestamp":"2024-04-28T09:50:43Z","deletionTimestamp":"2024-04-28T09:51:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6dd4bc54c6","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f7cecacf-9216-4a5b-9007-733baa965f68","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-28T09:50:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7cecacf-9216-4a5b-9007-733baa965f68\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-28T09:50:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.219.98\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8vznb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8vznb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"master1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["master1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:43Z"}],"hostIP":"192.168.227.136","hostIPs":[{"ip":"192.168.227.136"}],"podIP":"172.20.219.98","podIPs":[{"ip":"172.20.219.98"}],"startTime":"2024-04-28T09:50:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-28T09:50:44Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4","imageID":"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3","containerID":"containerd://6d6031bafe029015db611e13f2a1a341bcb59376cf035d6a7037bc8b85af9ef1","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-scxdn","generateName":"daemon-set-","namespace":"daemonsets-2270","uid":"af23cb4b-180a-48d8-b88c-20e4e5b1a635","resourceVersion":"30294","creationTimestamp":"2024-04-28T09:50:43Z","labels":{"controller-revision-hash":"6dd4bc54c6","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f7cecacf-9216-4a5b-9007-733baa965f68","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-28T09:50:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7cecacf-9216-4a5b-9007-733baa965f68\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-28T09:50:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.189.101\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-bvccf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-bvccf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:44Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:44Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:44Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-28T09:50:43Z"}],"hostIP":"192.168.227.138","hostIPs":[{"ip":"192.168.227.138"}],"podIP":"172.20.189.101","podIPs":[{"ip":"172.20.189.101"}],"startTime":"2024-04-28T09:50:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-28T09:50:44Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4","imageID":"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3","containerID":"containerd://28a4a6370a95dea4f92d71d254d81af55a06428fc032b1dc39e6a58f57a6365d","started":true}],"qosClass":"BestEffort"}}]}

  Apr 28 09:50:45.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2270" for this suite. @ 04/28/24 09:50:45.952
• [2.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/28/24 09:50:45.957
  Apr 28 09:50:45.957: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 09:50:45.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:50:45.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:50:45.976
  STEP: Creating secret with name s-test-opt-del-04dda7b5-6800-4017-a035-e74e80b91c06 @ 04/28/24 09:50:45.987
  STEP: Creating secret with name s-test-opt-upd-3a3ec105-c254-4686-a2a6-460ab29108e3 @ 04/28/24 09:50:45.993
  STEP: Creating the pod @ 04/28/24 09:50:45.997
  E0428 09:50:46.226044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:47.226076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-04dda7b5-6800-4017-a035-e74e80b91c06 @ 04/28/24 09:50:48.045
  STEP: Updating secret s-test-opt-upd-3a3ec105-c254-4686-a2a6-460ab29108e3 @ 04/28/24 09:50:48.056
  STEP: Creating secret with name s-test-opt-create-3016e885-68af-4822-aafe-df9044914ae1 @ 04/28/24 09:50:48.061
  STEP: waiting to observe update in volume @ 04/28/24 09:50:48.064
  E0428 09:50:48.226619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:49.226851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:50.227450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:51.228285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:52.229218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:53.229394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:54.230339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:55.230911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:56.231492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:57.232466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:58.233143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:50:59.233361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:00.234212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:01.234447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:02.235145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:03.235295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:04.236170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:05.237048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:06.238226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:07.238610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:08.239219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:09.239558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:10.239959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:11.240256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:12.240320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:13.240590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:14.240835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:15.241594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:16.241901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:17.242017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:18.242433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:19.242735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:20.243573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:21.244607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:22.244958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:23.245122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:24.245965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:25.247216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:26.247109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:27.247224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:28.247856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:29.248346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:30.248860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:31.249086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:32.249169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:33.249298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:34.249973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:35.250817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:36.251342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:37.251957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:38.252242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:39.252530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:40.252664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:41.252866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:42.253101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:43.253841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:44.254089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:45.255128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:46.255246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:47.255343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:48.256429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:49.256812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:50.257097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:51.257222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:52.257451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:53.257939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:54.258144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:55.259127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:56.259419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:51:56.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8214" for this suite. @ 04/28/24 09:51:56.359
• [70.412 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/28/24 09:51:56.37
  Apr 28 09:51:56.370: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replicaset @ 04/28/24 09:51:56.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:51:56.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:51:56.384
  STEP: Create a ReplicaSet @ 04/28/24 09:51:56.386
  STEP: Verify that the required pods have come up @ 04/28/24 09:51:56.392
  Apr 28 09:51:56.395: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0428 09:51:57.260283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:58.260893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:51:59.261860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:00.262755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:01.262796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:01.400: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/28/24 09:52:01.4
  Apr 28 09:52:01.404: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/28/24 09:52:01.404
  STEP: DeleteCollection of the ReplicaSets @ 04/28/24 09:52:01.409
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/28/24 09:52:01.42
  Apr 28 09:52:01.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3106" for this suite. @ 04/28/24 09:52:01.429
• [5.068 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/28/24 09:52:01.438
  Apr 28 09:52:01.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 09:52:01.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:01.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:01.474
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/28/24 09:52:01.478
  E0428 09:52:02.263858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:03.264937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:04.265319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:05.266040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:52:05.511
  Apr 28 09:52:05.513: INFO: Trying to get logs from node worker1 pod pod-1fb6fe7a-f0e9-4d28-bb9e-392c5546c43a container test-container: <nil>
  STEP: delete the pod @ 04/28/24 09:52:05.522
  Apr 28 09:52:05.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1877" for this suite. @ 04/28/24 09:52:05.54
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/28/24 09:52:05.546
  Apr 28 09:52:05.546: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 09:52:05.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:05.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:05.561
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/28/24 09:52:05.563
  E0428 09:52:06.266831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:07.267188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:08.267237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:09.268278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:52:09.583
  Apr 28 09:52:09.587: INFO: Trying to get logs from node worker2 pod pod-fc8aaf70-1f50-4c20-a72f-0841b5c478ec container test-container: <nil>
  STEP: delete the pod @ 04/28/24 09:52:09.594
  Apr 28 09:52:09.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9839" for this suite. @ 04/28/24 09:52:09.61
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 04/28/24 09:52:09.617
  Apr 28 09:52:09.617: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/28/24 09:52:09.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:09.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:09.633
  STEP: set up a multi version CRD @ 04/28/24 09:52:09.636
  Apr 28 09:52:09.636: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 09:52:10.268406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:11.269640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:12.269891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 04/28/24 09:52:12.514
  STEP: check the new version name is served @ 04/28/24 09:52:12.522
  STEP: check the old version name is removed @ 04/28/24 09:52:13.138
  E0428 09:52:13.269994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/28/24 09:52:13.707
  E0428 09:52:14.270948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:15.271734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:15.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1012" for this suite. @ 04/28/24 09:52:15.982
• [6.372 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/28/24 09:52:15.989
  Apr 28 09:52:15.989: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 09:52:15.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:16.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:16.004
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/28/24 09:52:16.006
  E0428 09:52:16.271871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:17.272337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:18.272482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:19.272744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:52:20.027
  Apr 28 09:52:20.030: INFO: Trying to get logs from node worker2 pod pod-bd05b6ef-3846-4860-867f-fe5dbeeb10c8 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 09:52:20.035
  Apr 28 09:52:20.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7054" for this suite. @ 04/28/24 09:52:20.053
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/28/24 09:52:20.059
  Apr 28 09:52:20.059: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 09:52:20.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:20.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:20.073
  STEP: Creating secret with name secret-test-d21cc2a5-415d-4f53-9645-a441b5644240 @ 04/28/24 09:52:20.09
  STEP: Creating a pod to test consume secrets @ 04/28/24 09:52:20.099
  E0428 09:52:20.273420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:21.273894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:22.274938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:23.275144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:52:24.127
  Apr 28 09:52:24.130: INFO: Trying to get logs from node worker2 pod pod-secrets-2be348a1-f7f5-4ef5-8460-48f3399e74d7 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 09:52:24.136
  Apr 28 09:52:24.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7172" for this suite. @ 04/28/24 09:52:24.152
  STEP: Destroying namespace "secret-namespace-9545" for this suite. @ 04/28/24 09:52:24.163
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 04/28/24 09:52:24.171
  Apr 28 09:52:24.171: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename svcaccounts @ 04/28/24 09:52:24.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:24.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:24.186
  STEP: Creating ServiceAccount "e2e-sa-6s9tn"  @ 04/28/24 09:52:24.187
  Apr 28 09:52:24.190: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-6s9tn"  @ 04/28/24 09:52:24.19
  Apr 28 09:52:24.201: INFO: AutomountServiceAccountToken: true
  Apr 28 09:52:24.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8070" for this suite. @ 04/28/24 09:52:24.206
• [0.048 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 04/28/24 09:52:24.219
  Apr 28 09:52:24.219: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 09:52:24.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:24.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:24.234
  STEP: Counting existing ResourceQuota @ 04/28/24 09:52:24.237
  E0428 09:52:24.275374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:25.275671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:26.276380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:27.277175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:28.278038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/28/24 09:52:29.244
  STEP: Ensuring resource quota status is calculated @ 04/28/24 09:52:29.248
  E0428 09:52:29.278884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:30.279186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 04/28/24 09:52:31.251
  STEP: Creating a NodePort Service @ 04/28/24 09:52:31.266
  E0428 09:52:31.279563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/28/24 09:52:31.289
  STEP: Ensuring resource quota status captures service creation @ 04/28/24 09:52:31.315
  E0428 09:52:32.280565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:33.280680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 04/28/24 09:52:33.318
  STEP: Ensuring resource quota status released usage @ 04/28/24 09:52:33.358
  E0428 09:52:34.281627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:35.282010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:35.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5143" for this suite. @ 04/28/24 09:52:35.365
• [11.151 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 04/28/24 09:52:35.37
  Apr 28 09:52:35.370: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename var-expansion @ 04/28/24 09:52:35.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:35.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:35.384
  STEP: Creating a pod to test substitution in volume subpath @ 04/28/24 09:52:35.385
  E0428 09:52:36.282859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:37.283457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 09:52:37.401
  Apr 28 09:52:37.404: INFO: Trying to get logs from node worker2 pod var-expansion-3df07b4a-60a1-4f17-8e65-5e42428ce78a container dapi-container: <nil>
  STEP: delete the pod @ 04/28/24 09:52:37.411
  Apr 28 09:52:37.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6318" for this suite. @ 04/28/24 09:52:37.427
• [2.062 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/28/24 09:52:37.433
  Apr 28 09:52:37.433: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename deployment @ 04/28/24 09:52:37.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:37.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:37.448
  Apr 28 09:52:37.457: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0428 09:52:38.284465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:39.284926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:40.285286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:41.285951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:42.286278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:42.461: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/28/24 09:52:42.461
  Apr 28 09:52:42.461: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0428 09:52:43.286408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:44.286711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:44.466: INFO: Creating deployment "test-rollover-deployment"
  Apr 28 09:52:44.472: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0428 09:52:45.286702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:46.286842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:46.482: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Apr 28 09:52:46.488: INFO: Ensure that both replica sets have 1 created replica
  Apr 28 09:52:46.493: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Apr 28 09:52:46.500: INFO: Updating deployment test-rollover-deployment
  Apr 28 09:52:46.500: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0428 09:52:47.287286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:48.287354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:48.508: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Apr 28 09:52:48.513: INFO: Make sure deployment "test-rollover-deployment" is complete
  Apr 28 09:52:48.517: INFO: all replica sets need to contain the pod-template-hash label
  Apr 28 09:52:48.517: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-56d66557cb\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:52:49.288363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:50.288898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:50.524: INFO: all replica sets need to contain the pod-template-hash label
  Apr 28 09:52:50.524: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-56d66557cb\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:52:51.289102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:52.289396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:52.525: INFO: all replica sets need to contain the pod-template-hash label
  Apr 28 09:52:52.525: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-56d66557cb\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:52:53.289862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:54.290272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:54.526: INFO: all replica sets need to contain the pod-template-hash label
  Apr 28 09:52:54.526: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-56d66557cb\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:52:55.290478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:56.290629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:56.523: INFO: all replica sets need to contain the pod-template-hash label
  Apr 28 09:52:56.523: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 28, 9, 52, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 28, 9, 52, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-56d66557cb\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0428 09:52:57.290870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:52:58.291613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:52:58.524: INFO: 
  Apr 28 09:52:58.524: INFO: Ensure that both old replica sets have no replicas
  Apr 28 09:52:58.531: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3097",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8c761ec-4058-4652-a2ae-ac8c42dc72ec",
      ResourceVersion: (string) (len=5) "31044",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894764,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-56d66557cb\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 28 09:52:58.539: INFO: New ReplicaSet "test-rollover-deployment-56d66557cb" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-56d66557cb",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3097",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe0e5ac2-c1be-4ff9-8776-c4b30a2e79f3",
      ResourceVersion: (string) (len=5) "31034",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56d66557cb"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "c8c761ec-4058-4652-a2ae-ac8c42dc72ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 38 63 37 36 31  65 63 2d 34 30 35 38 2d  |\"c8c761ec-4058-|
              00000120  34 36 35 32 2d 61 32 61  65 2d 61 63 38 63 34 32  |4652-a2ae-ac8c42|
              00000130  64 63 37 32 65 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |dc72ec\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56d66557cb"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56d66557cb"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 09:52:58.540: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Apr 28 09:52:58.540: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3097",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6a22146-1caf-43c3-b3bf-d2d3c87787f5",
      ResourceVersion: (string) (len=5) "31043",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894757,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "c8c761ec-4058-4652-a2ae-ac8c42dc72ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894757,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  63 38 63 37 36 31 65 63  2d 34 30 35 38 2d 34 36  |c8c761ec-4058-46|
              000000c0  35 32 2d 61 32 61 65 2d  61 63 38 63 34 32 64 63  |52-a2ae-ac8c42dc|
              000000d0  37 32 65 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |72ec\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 09:52:58.542: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3097",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61f430b5-c2de-40db-a44b-668dd3f30ee7",
      ResourceVersion: (string) (len=5) "31003",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894764,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "c8c761ec-4058-4652-a2ae-ac8c42dc72ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 38 63 37 36 31  65 63 2d 34 30 35 38 2d  |\"c8c761ec-4058-|
              00000120  34 36 35 32 2d 61 32 61  65 2d 61 63 38 63 34 32  |4652-a2ae-ac8c42|
              00000130  64 63 37 32 65 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |dc72ec\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 09:52:58.547: INFO: Pod "test-rollover-deployment-56d66557cb-mjcxn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-56d66557cb-mjcxn",
      GenerateName: (string) (len=36) "test-rollover-deployment-56d66557cb-",
      Namespace: (string) (len=15) "deployment-3097",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0a385ad-2870-4b77-b753-8a3237fa9394",
      ResourceVersion: (string) (len=5) "31016",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56d66557cb"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-56d66557cb",
          UID: (types.UID) (len=36) "fe0e5ac2-c1be-4ff9-8776-c4b30a2e79f3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  30 65 35 61 63 32 2d 63  |d\":\"fe0e5ac2-c|
              00000090  31 62 65 2d 34 66 66 39  2d 38 37 37 36 2d 63 34  |1be-4ff9-8776-c4|
              000000a0  62 33 30 61 32 65 37 39  66 33 5c 22 7d 22 3a 7b  |b30a2e79f3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 33 35  2e 31 35 36 5c 22 7d 22  |2.20.235.156\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tzj4n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tzj4n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849894766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.137"
        }
      },
      PodIP: (string) (len=14) "172.20.235.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.235.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849894766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849894767,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=139) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost@sha256:8f07c07228b54f5d644c14241ad3e483b999c5d3a78f7580a6252c8ab42f2b66",
          ContainerID: (string) (len=77) "containerd://5f31dd44d9e13673546321ac72e45c8d62b7de80d97e69902d02750a8715099a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 09:52:58.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3097" for this suite. @ 04/28/24 09:52:58.554
• [21.128 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/28/24 09:52:58.56
  Apr 28 09:52:58.561: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename taint-single-pod @ 04/28/24 09:52:58.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:52:58.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:52:58.579
  Apr 28 09:52:58.581: INFO: Waiting up to 1m0s for all nodes to be ready
  E0428 09:52:59.292294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:00.293229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:01.293584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:02.293837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:03.293967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:04.294156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:05.295188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:06.295301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:07.295395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:08.296319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:09.296985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:10.297554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:11.297685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:12.298083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:13.299256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:14.299371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:15.300043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:16.300437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:17.300943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:18.301422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:19.301615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:20.302620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:21.303019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:22.303378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:23.304421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:24.304706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:25.304962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:26.305258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:27.306266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:28.306384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:29.306812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:30.307793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:31.307979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:32.308883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:33.309979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:34.310865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:35.311867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:36.312868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:37.313673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:38.314656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:39.315164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:40.315194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:41.315293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:42.316254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:43.316653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:44.316814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:45.317030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:46.317289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:47.317972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:48.318120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:49.318834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:50.319158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:51.319456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:52.319605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:53.320315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:54.320467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:55.321403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:56.321543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:57.322554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:53:58.323375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:53:58.583: INFO: Waiting for terminating namespaces to be deleted...
  Apr 28 09:53:58.585: INFO: Starting informer...
  STEP: Starting pod... @ 04/28/24 09:53:58.585
  Apr 28 09:53:58.797: INFO: Pod is running on worker2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/28/24 09:53:58.797
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/28/24 09:53:58.803
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/28/24 09:53:58.807
  Apr 28 09:53:58.807: INFO: Pod wasn't evicted. Proceeding
  Apr 28 09:53:58.807: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/28/24 09:53:58.815
  STEP: Waiting some time to make sure that toleration time passed. @ 04/28/24 09:53:58.819
  E0428 09:53:59.324138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:00.324960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:01.325800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:02.325963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:03.326104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:04.326198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:05.326660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:06.326901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:07.327005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:08.327221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:09.327364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:10.327916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:11.328146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:12.328299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:13.328492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:14.328639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:15.328864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:16.329135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:17.329261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:18.329483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:19.329781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:20.329825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:21.329977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:22.330224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:23.330342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:24.330489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:25.331005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:26.331273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:27.331451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:28.332282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:29.332490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:30.333364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:31.333562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:32.333833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:33.334018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:34.334234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:35.334966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:36.335156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:37.335263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:38.336261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:39.336434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:40.336723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:41.336993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:42.337896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:43.338123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:44.338591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:45.339008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:46.339308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:47.340321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:48.341030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:49.341231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:50.341711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:51.341920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:52.342145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:53.342352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:54.342557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:55.343412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:56.344294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:57.345331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:58.345664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:54:59.346134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:00.346427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:01.346796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:02.347106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:03.347220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:04.348286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:05.348881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:06.349428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:07.349624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:08.349822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:09.350033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:10.350827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:11.351550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:12.352248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:13.353232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:13.819: INFO: Pod wasn't evicted. Test successful
  Apr 28 09:55:13.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3964" for this suite. @ 04/28/24 09:55:13.823
• [135.268 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/28/24 09:55:13.828
  Apr 28 09:55:13.828: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replication-controller @ 04/28/24 09:55:13.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:55:13.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:55:13.843
  STEP: Given a ReplicationController is created @ 04/28/24 09:55:13.846
  STEP: When the matched label of one of its pods change @ 04/28/24 09:55:13.851
  Apr 28 09:55:13.854: INFO: Pod name pod-release: Found 0 pods out of 1
  E0428 09:55:14.353247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:15.353915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:16.354022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:17.354179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:18.354436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:18.857: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/28/24 09:55:18.866
  E0428 09:55:19.354606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:19.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9869" for this suite. @ 04/28/24 09:55:19.881
• [6.058 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/28/24 09:55:19.887
  Apr 28 09:55:19.887: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 09:55:19.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:55:19.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:55:19.9
  STEP: Setting up server cert @ 04/28/24 09:55:19.943
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 09:55:20.064
  STEP: Deploying the webhook pod @ 04/28/24 09:55:20.071
  STEP: Wait for the deployment to be ready @ 04/28/24 09:55:20.078
  Apr 28 09:55:20.085: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0428 09:55:20.354730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:21.354921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 09:55:22.095
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:55:22.104
  E0428 09:55:22.355566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:23.104: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/28/24 09:55:23.153
  STEP: Creating a configMap that should be mutated @ 04/28/24 09:55:23.166
  STEP: Deleting the collection of validation webhooks @ 04/28/24 09:55:23.197
  STEP: Creating a configMap that should not be mutated @ 04/28/24 09:55:23.256
  Apr 28 09:55:23.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2692" for this suite. @ 04/28/24 09:55:23.314
  STEP: Destroying namespace "webhook-markers-7677" for this suite. @ 04/28/24 09:55:23.323
• [3.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/28/24 09:55:23.334
  Apr 28 09:55:23.334: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 09:55:23.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:55:23.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:55:23.353
  E0428 09:55:23.356376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 04/28/24 09:55:23.379
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 09:55:23.68
  STEP: Deploying the webhook pod @ 04/28/24 09:55:23.684
  STEP: Wait for the deployment to be ready @ 04/28/24 09:55:23.692
  Apr 28 09:55:23.699: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0428 09:55:24.357090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:25.357830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 09:55:25.708
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 09:55:25.718
  E0428 09:55:26.358238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:26.718: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/28/24 09:55:26.723
  STEP: create a pod @ 04/28/24 09:55:26.733
  E0428 09:55:27.358428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:28.358809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/28/24 09:55:28.746
  Apr 28 09:55:28.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=webhook-478 attach --namespace=webhook-478 to-be-attached-pod -i -c=container1'
  Apr 28 09:55:28.793: INFO: rc: 1
  Apr 28 09:55:28.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-478" for this suite. @ 04/28/24 09:55:28.848
  STEP: Destroying namespace "webhook-markers-9533" for this suite. @ 04/28/24 09:55:28.856
• [5.537 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 04/28/24 09:55:28.871
  Apr 28 09:55:28.871: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 09:55:28.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:55:28.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:55:28.939
  STEP: Creating resourceQuota "e2e-rq-status-h27gc" @ 04/28/24 09:55:28.946
  Apr 28 09:55:28.953: INFO: Resource quota "e2e-rq-status-h27gc" reports spec: hard cpu limit of 500m
  Apr 28 09:55:28.953: INFO: Resource quota "e2e-rq-status-h27gc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-h27gc" /status @ 04/28/24 09:55:28.953
  STEP: Confirm /status for "e2e-rq-status-h27gc" resourceQuota via watch @ 04/28/24 09:55:28.963
  Apr 28 09:55:28.965: INFO: observed resourceQuota "e2e-rq-status-h27gc" in namespace "resourcequota-7087" with hard status: v1.ResourceList(nil)
  Apr 28 09:55:28.965: INFO: Found resourceQuota "e2e-rq-status-h27gc" in namespace "resourcequota-7087" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 28 09:55:28.965: INFO: ResourceQuota "e2e-rq-status-h27gc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/28/24 09:55:28.971
  Apr 28 09:55:28.975: INFO: Resource quota "e2e-rq-status-h27gc" reports spec: hard cpu limit of 1
  Apr 28 09:55:28.975: INFO: Resource quota "e2e-rq-status-h27gc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-h27gc" /status @ 04/28/24 09:55:28.975
  STEP: Confirm /status for "e2e-rq-status-h27gc" resourceQuota via watch @ 04/28/24 09:55:28.984
  Apr 28 09:55:28.986: INFO: observed resourceQuota "e2e-rq-status-h27gc" in namespace "resourcequota-7087" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 28 09:55:28.986: INFO: Found resourceQuota "e2e-rq-status-h27gc" in namespace "resourcequota-7087" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 28 09:55:28.986: INFO: ResourceQuota "e2e-rq-status-h27gc" /status was patched
  STEP: Get "e2e-rq-status-h27gc" /status @ 04/28/24 09:55:28.986
  Apr 28 09:55:28.990: INFO: Resourcequota "e2e-rq-status-h27gc" reports status: hard cpu of 1
  Apr 28 09:55:28.990: INFO: Resourcequota "e2e-rq-status-h27gc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-h27gc" /status before checking Spec is unchanged @ 04/28/24 09:55:28.994
  Apr 28 09:55:29.000: INFO: Resourcequota "e2e-rq-status-h27gc" reports status: hard cpu of 2
  Apr 28 09:55:29.000: INFO: Resourcequota "e2e-rq-status-h27gc" reports status: hard memory of 2Gi
  Apr 28 09:55:29.001: INFO: Found resourceQuota "e2e-rq-status-h27gc" in namespace "resourcequota-7087" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Apr 28 09:55:29.003: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001527560), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015275c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001527620), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:55:29.359175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:30.360292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:31.360404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:32.360552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:33.360996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:34.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a662b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:55:34.361738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:35.362052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:36.362610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:37.362913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:38.363129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:39.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a30d80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a30df8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a30e58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:55:39.364244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:40.364293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:41.364617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:42.364830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:43.365517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:44.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a311a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a31200), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a31260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:55:44.366387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:45.366683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:46.366708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:47.366926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:48.367142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:49.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a661b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:55:49.367247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:50.368532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:51.368562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:52.368791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:53.369053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:54.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d70408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d70450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d704e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:55:54.369995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:55.370182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:56.371153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:57.371180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:55:58.371329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:55:59.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a666c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:55:59.371444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:00.371816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:01.372468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:02.372668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:03.372894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:04.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66a80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66ab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:04.372940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:05.373116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:06.373591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:07.373818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:08.374069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:09.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66d20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66d80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:09.374790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:10.374803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:11.374930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:12.375291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:13.375473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:14.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a308a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a308d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a30a20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:14.376444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:15.376683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:16.376779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:17.376952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:18.377145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:19.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a30df8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a30e58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a30ea0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:19.378128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:20.379271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:21.380363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:22.381159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:23.381574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:24.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d70f18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d70f60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d70fc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:24.381841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:25.382969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:26.383169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:27.384342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:28.384999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:29.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a312c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a31308), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a31368), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:29.386077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:30.386241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:31.386416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:32.386679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:33.386955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:34.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a672f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a67320), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a67398), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:34.387245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:35.387924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:36.388359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:37.388677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:38.388823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:39.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a676e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a67710), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a67788), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:39.389121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:40.389543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:41.390010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:42.390232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:43.390380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:44.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a67a58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a67ab8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a67b00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:44.390956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:45.391283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:46.392033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:47.392115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:48.392283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:49.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d71638), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d716b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d716f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:49.393210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:50.393356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:51.393495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:52.393685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:53.393858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:54.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d71c20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d71c68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d71c98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:54.394315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:55.395289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:56.395344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:57.396330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:56:58.396461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:56:59.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d71f50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d71f98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:56:59.396619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:00.396881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:01.396971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:02.397801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:03.397898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:04.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c720a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:04.398052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:05.398735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:06.399001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:07.399167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:08.399210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:09.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00070a810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00070a9d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00070aa68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:09.400306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:10.400424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:11.400544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:12.400668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:13.400836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:14.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c725a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c725d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:14.400971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:15.401765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:16.402609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:17.402947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:18.403032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:19.007: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00070af48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00070afa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00070aff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:19.403226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:20.403921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:21.404284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:22.404434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:23.404650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:24.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00070baa0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00070bae8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00070bb30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:24.404724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:25.405696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:26.405869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:27.406086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:28.406317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:29.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72ae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:29.407405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:30.407870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:31.408381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:32.409404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:33.409802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:34.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c708), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:34.410044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:35.410826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:36.411363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:37.412218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:38.412643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:39.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049aa348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049aa3a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049aa3d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:39.413336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:40.413604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:41.413777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:42.413973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:43.414176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:44.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72e58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72ea0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72ed0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:44.414668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:45.415024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:46.415141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:47.415767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:48.416317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:49.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c1b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:49.416446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:50.417020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:51.417762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:52.418814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:53.419129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:54.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:54.419213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:55.420130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:56.420335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:57.421384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:57:58.421725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:57:59.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049aa4e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049aa528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049aa558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:57:59.422705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:00.423202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:01.424263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:02.424580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:03.424796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:04.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c750), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c798), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:04.425518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:05.426317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:06.427336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:07.427551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:08.428278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:09.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3c9f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3ca20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:09.428697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:10.428889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:11.429139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:12.429596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:13.429839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:14.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c725b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:14.429985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:15.430683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:16.430919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:17.431171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:18.431221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:19.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c729d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:19.432113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:20.433308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:21.433528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:22.433880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:23.434356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:24.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3cfd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3d008), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3d038), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:24.434979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:25.435367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:26.435551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:27.435711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:28.435795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:29.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3d320), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3d350), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3d380), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:29.436268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:30.437355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:31.437593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:32.437888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:33.438048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:34.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3d5d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3d608), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3d638), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:34.438164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:35.438849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:36.439100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:37.439170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:38.439344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:39.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72de0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72e10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c72e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:39.440255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:40.440523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:41.440607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:42.441071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:43.441267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:44.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049aacc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049aad08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049aad38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:44.442338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:45.442867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:46.443074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:47.443185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:48.443350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:49.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3db00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3db30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004c3db78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:49.444288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:50.444333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:51.444875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:52.444974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:53.445224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:54.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049ab128), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049ab158), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049ab1a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:54.445306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:55.446024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:56.446408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:57.446630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:58:58.446861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:58:59.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049ab500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049ab530), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049ab578), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:58:59.447158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:00.447189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:01.448268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:02.448508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:03.448725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:04.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049ab848), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049ab890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049ab8d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:04.448996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:05.449814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:06.450144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:07.450447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:08.450698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:09.007: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049abbc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049abbf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049abc38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:09.451447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:10.451780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:11.452319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:12.452603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:13.452766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:14.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015261f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001526258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015262a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:14.453192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:15.453657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:16.453868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:17.454027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:18.454344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:19.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a660d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:19.454395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:20.454823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:21.455813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:22.456451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:23.456655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:24.007: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a664c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a664f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:24.457366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:25.457917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:26.458277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:27.458661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:28.458966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:29.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001526720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001526768), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015267e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:29.459821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:30.459915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:31.460317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:32.461230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:33.461487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:34.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66a20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:34.461612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:35.462174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:36.462237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:37.463258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:38.464303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:39.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66d80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66e28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66e70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:39.465272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:40.465647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:41.465923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:42.466079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:43.466233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:44.004: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c73b18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c73b78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c73bc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:44.467266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:45.467319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:46.467443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:47.468092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:48.469035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:49.005: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h27gc", GenerateName:"", Namespace:"resourcequota-7087", SelfLink:"", UID:"406387a9-c9cf-4558-bebc-2539e0bad7db", ResourceVersion:"31686", Generation:0, CreationTimestamp:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h27gc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a66150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 28, 9, 55, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a661b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0428 09:59:49.469131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:50.469558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:51.469797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:52.470309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:53.470494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:54.006: INFO: ResourceQuota "e2e-rq-status-h27gc" Spec was unchanged and /status reset
  Apr 28 09:59:54.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7087" for this suite. @ 04/28/24 09:59:54.009
• [265.144 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/28/24 09:59:54.016
  Apr 28 09:59:54.016: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replicaset @ 04/28/24 09:59:54.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 09:59:54.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 09:59:54.032
  Apr 28 09:59:54.044: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0428 09:59:54.471167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:55.471214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:56.472299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:57.472528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 09:59:58.473383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 09:59:59.048: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/28/24 09:59:59.048
  STEP: Scaling up "test-rs" replicaset @ 04/28/24 09:59:59.048
  Apr 28 09:59:59.055: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/28/24 09:59:59.055
  Apr 28 09:59:59.062: INFO: observed ReplicaSet test-rs in namespace replicaset-1158 with ReadyReplicas 1, AvailableReplicas 1
  Apr 28 09:59:59.078: INFO: observed ReplicaSet test-rs in namespace replicaset-1158 with ReadyReplicas 1, AvailableReplicas 1
  Apr 28 09:59:59.090: INFO: observed ReplicaSet test-rs in namespace replicaset-1158 with ReadyReplicas 1, AvailableReplicas 1
  Apr 28 09:59:59.098: INFO: observed ReplicaSet test-rs in namespace replicaset-1158 with ReadyReplicas 1, AvailableReplicas 1
  E0428 09:59:59.474415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:00.285: INFO: observed ReplicaSet test-rs in namespace replicaset-1158 with ReadyReplicas 2, AvailableReplicas 2
  E0428 10:00:00.474902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:00.620: INFO: observed Replicaset test-rs in namespace replicaset-1158 with ReadyReplicas 3 found true
  Apr 28 10:00:00.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1158" for this suite. @ 04/28/24 10:00:00.623
• [6.613 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/28/24 10:00:00.63
  Apr 28 10:00:00.630: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename events @ 04/28/24 10:00:00.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:00.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:00.693
  STEP: Create set of events @ 04/28/24 10:00:00.695
  Apr 28 10:00:00.698: INFO: created test-event-1
  Apr 28 10:00:00.702: INFO: created test-event-2
  Apr 28 10:00:00.705: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/28/24 10:00:00.705
  STEP: delete collection of events @ 04/28/24 10:00:00.707
  Apr 28 10:00:00.707: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/28/24 10:00:00.733
  Apr 28 10:00:00.733: INFO: requesting list of events to confirm quantity
  Apr 28 10:00:00.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-26" for this suite. @ 04/28/24 10:00:00.74
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/28/24 10:00:00.749
  Apr 28 10:00:00.749: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:00:00.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:00.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:00.768
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:00:00.77
  E0428 10:00:01.475979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:02.476376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:03.476805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:04.476989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:00:04.793
  Apr 28 10:00:04.796: INFO: Trying to get logs from node worker2 pod downwardapi-volume-3414b750-d61f-475f-b96f-d27c6a86cb29 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:00:04.803
  Apr 28 10:00:04.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9357" for this suite. @ 04/28/24 10:00:04.82
• [4.076 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 04/28/24 10:00:04.824
  Apr 28 10:00:04.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 10:00:04.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:04.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:04.891
  STEP: Counting existing ResourceQuota @ 04/28/24 10:00:04.893
  E0428 10:00:05.477991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:06.478124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:07.479023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:08.479346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:09.479417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/28/24 10:00:09.897
  STEP: Ensuring resource quota status is calculated @ 04/28/24 10:00:09.902
  E0428 10:00:10.480222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:11.481317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:11.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7314" for this suite. @ 04/28/24 10:00:11.909
• [7.091 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/28/24 10:00:11.915
  Apr 28 10:00:11.915: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 10:00:11.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:11.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:11.932
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/28/24 10:00:11.934
  E0428 10:00:12.481516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:13.481805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:14.482634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:15.482966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:00:15.954
  Apr 28 10:00:15.957: INFO: Trying to get logs from node worker2 pod pod-507a1026-6824-48ad-8940-1c0de51a1933 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:00:15.963
  Apr 28 10:00:15.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1252" for this suite. @ 04/28/24 10:00:15.978
• [4.068 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/28/24 10:00:15.983
  Apr 28 10:00:15.984: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 10:00:15.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:15.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:16.001
  STEP: Setting up server cert @ 04/28/24 10:00:16.031
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 10:00:16.301
  STEP: Deploying the webhook pod @ 04/28/24 10:00:16.307
  STEP: Wait for the deployment to be ready @ 04/28/24 10:00:16.316
  Apr 28 10:00:16.320: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0428 10:00:16.483787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:17.484263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 10:00:18.33
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 10:00:18.339
  E0428 10:00:18.484890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:19.340: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/28/24 10:00:19.345
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/28/24 10:00:19.354
  STEP: Creating a dummy validating-webhook-configuration object @ 04/28/24 10:00:19.364
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/28/24 10:00:19.37
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/28/24 10:00:19.375
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/28/24 10:00:19.381
  Apr 28 10:00:19.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9670" for this suite. @ 04/28/24 10:00:19.465
  STEP: Destroying namespace "webhook-markers-4121" for this suite. @ 04/28/24 10:00:19.476
  E0428 10:00:19.485301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [3.506 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/28/24 10:00:19.49
  Apr 28 10:00:19.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename limitrange @ 04/28/24 10:00:19.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:19.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:19.508
  STEP: Creating a LimitRange @ 04/28/24 10:00:19.511
  STEP: Setting up watch @ 04/28/24 10:00:19.511
  STEP: Submitting a LimitRange @ 04/28/24 10:00:19.615
  STEP: Verifying LimitRange creation was observed @ 04/28/24 10:00:19.63
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/28/24 10:00:19.632
  Apr 28 10:00:19.636: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 28 10:00:19.636: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/28/24 10:00:19.636
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/28/24 10:00:19.642
  Apr 28 10:00:19.645: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 28 10:00:19.645: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/28/24 10:00:19.645
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/28/24 10:00:19.653
  Apr 28 10:00:19.663: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Apr 28 10:00:19.663: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/28/24 10:00:19.663
  STEP: Failing to create a Pod with more than max resources @ 04/28/24 10:00:19.665
  STEP: Updating a LimitRange @ 04/28/24 10:00:19.666
  STEP: Verifying LimitRange updating is effective @ 04/28/24 10:00:19.669
  E0428 10:00:20.485823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:21.485909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 04/28/24 10:00:21.674
  STEP: Failing to create a Pod with more than max resources @ 04/28/24 10:00:21.679
  STEP: Deleting a LimitRange @ 04/28/24 10:00:21.68
  STEP: Verifying the LimitRange was deleted @ 04/28/24 10:00:21.687
  E0428 10:00:22.486923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:23.487112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:24.487227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:25.488019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:26.488138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:26.692: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/28/24 10:00:26.692
  Apr 28 10:00:26.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4863" for this suite. @ 04/28/24 10:00:26.707
• [7.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/28/24 10:00:26.713
  Apr 28 10:00:26.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename daemonsets @ 04/28/24 10:00:26.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:26.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:26.728
  Apr 28 10:00:26.756: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/28/24 10:00:26.761
  Apr 28 10:00:26.764: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:00:26.764: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/28/24 10:00:26.764
  Apr 28 10:00:26.782: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:00:26.782: INFO: Node worker1 is running 0 daemon pod, expected 1
  E0428 10:00:27.489183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:27.783: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 28 10:00:27.783: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/28/24 10:00:27.785
  Apr 28 10:00:27.798: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 28 10:00:27.798: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0428 10:00:28.489624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:28.798: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:00:28.798: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/28/24 10:00:28.798
  Apr 28 10:00:28.808: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:00:28.808: INFO: Node worker1 is running 0 daemon pod, expected 1
  E0428 10:00:29.489833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:29.806: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 28 10:00:29.806: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/28/24 10:00:29.813
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2621, will wait for the garbage collector to delete the pods @ 04/28/24 10:00:29.813
  Apr 28 10:00:29.871: INFO: Deleting DaemonSet.extensions daemon-set took: 6.113338ms
  Apr 28 10:00:29.972: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.264647ms
  E0428 10:00:30.490788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:31.491524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:31.775: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:00:31.775: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 28 10:00:31.781: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32579"},"items":null}

  Apr 28 10:00:31.785: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32579"},"items":null}

  Apr 28 10:00:31.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2621" for this suite. @ 04/28/24 10:00:31.82
• [5.115 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/28/24 10:00:31.827
  Apr 28 10:00:31.827: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename field-validation @ 04/28/24 10:00:31.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:31.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:31.847
  Apr 28 10:00:31.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:00:32.492001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:33.492073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0428 10:00:34.381841      21 warnings.go:70] unknown field "alpha"
  W0428 10:00:34.381869      21 warnings.go:70] unknown field "beta"
  W0428 10:00:34.381876      21 warnings.go:70] unknown field "delta"
  W0428 10:00:34.381882      21 warnings.go:70] unknown field "epsilon"
  W0428 10:00:34.381896      21 warnings.go:70] unknown field "gamma"
  E0428 10:00:34.492226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:34.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9215" for this suite. @ 04/28/24 10:00:34.915
• [3.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/28/24 10:00:34.922
  Apr 28 10:00:34.922: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pod-network-test @ 04/28/24 10:00:34.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:34.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:34.938
  STEP: Performing setup for networking test in namespace pod-network-test-633 @ 04/28/24 10:00:34.941
  STEP: creating a selector @ 04/28/24 10:00:34.941
  STEP: Creating the service pods in kubernetes @ 04/28/24 10:00:34.941
  Apr 28 10:00:34.941: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0428 10:00:35.492390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:36.492549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:37.493044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:38.493410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:39.493879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:40.494178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:41.494750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:42.495098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:43.495221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:44.495587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:45.496626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:46.496668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/28/24 10:00:47.018
  E0428 10:00:47.497500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:48.497888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:49.041: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 28 10:00:49.041: INFO: Going to poll 172.20.219.101 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 28 10:00:49.044: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.219.101 8081 | grep -v '^\s*$'] Namespace:pod-network-test-633 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:00:49.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:00:49.044: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:00:49.044: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-633/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.219.101+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0428 10:00:49.498434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:50.086: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 28 10:00:50.086: INFO: Going to poll 172.20.235.162 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 28 10:00:50.089: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.235.162 8081 | grep -v '^\s*$'] Namespace:pod-network-test-633 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:00:50.089: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:00:50.089: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:00:50.090: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-633/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.235.162+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0428 10:00:50.499145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:51.125: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 28 10:00:51.125: INFO: Going to poll 172.20.189.120 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 28 10:00:51.127: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.189.120 8081 | grep -v '^\s*$'] Namespace:pod-network-test-633 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:00:51.128: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:00:51.128: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:00:51.128: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-633/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.189.120+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0428 10:00:51.500438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:00:52.162: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 28 10:00:52.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-633" for this suite. @ 04/28/24 10:00:52.165
• [17.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/28/24 10:00:52.17
  Apr 28 10:00:52.170: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:00:52.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:52.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:52.187
  STEP: Creating configMap with name configmap-test-volume-cc0f0094-b806-490d-918a-ea5c6ecc1feb @ 04/28/24 10:00:52.189
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:00:52.199
  E0428 10:00:52.501257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:53.501804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:00:54.216
  Apr 28 10:00:54.218: INFO: Trying to get logs from node worker2 pod pod-configmaps-adce94a9-49ef-4bcf-ade3-ceeede782998 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:00:54.224
  Apr 28 10:00:54.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7537" for this suite. @ 04/28/24 10:00:54.24
• [2.075 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/28/24 10:00:54.246
  Apr 28 10:00:54.246: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename deployment @ 04/28/24 10:00:54.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:54.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:54.26
  Apr 28 10:00:54.262: INFO: Creating simple deployment test-new-deployment
  Apr 28 10:00:54.276: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E0428 10:00:54.502892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:55.503381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 04/28/24 10:00:56.288
  STEP: updating a scale subresource @ 04/28/24 10:00:56.291
  STEP: verifying the deployment Spec.Replicas was modified @ 04/28/24 10:00:56.296
  STEP: Patch a scale subresource @ 04/28/24 10:00:56.299
  Apr 28 10:00:56.312: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3285",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d6f8679-d4fe-4303-bafb-6dfae9513698",
      ResourceVersion: (string) (len=5) "32804",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895254,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-79b84df886\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 28 10:00:56.325: INFO: New ReplicaSet "test-new-deployment-79b84df886" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-79b84df886",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3285",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3177988-7b3e-49cf-a3d9-3cd14e412c4a",
      ResourceVersion: (string) (len=5) "32808",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895254,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "1d6f8679-d4fe-4303-bafb-6dfae9513698",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895256,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 64 36 66 38 36  37 39 2d 64 34 66 65 2d  |\"1d6f8679-d4fe-|
              00000120  34 33 30 33 2d 62 61 66  62 2d 36 64 66 61 65 39  |4303-bafb-6dfae9|
              00000130  35 31 33 36 39 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |513698\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895256,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 10:00:56.336: INFO: Pod "test-new-deployment-79b84df886-t98zj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-79b84df886-t98zj",
      GenerateName: (string) (len=31) "test-new-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-3285",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e0a344a-fa75-47e0-b308-a31f9721e3b6",
      ResourceVersion: (string) (len=5) "32807",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895256,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-79b84df886",
          UID: (types.UID) (len=36) "a3177988-7b3e-49cf-a3d9-3cd14e412c4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895256,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  31 37 37 39 38 38 2d 37  |d\":\"a3177988-7|
              00000090  62 33 65 2d 34 39 63 66  2d 61 33 64 39 2d 33 63  |b3e-49cf-a3d9-3c|
              000000a0  64 31 34 65 34 31 32 63  34 61 5c 22 7d 22 3a 7b  |d14e412c4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-855gz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-855gz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895256,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 10:00:56.341: INFO: Pod "test-new-deployment-79b84df886-xkrcz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-79b84df886-xkrcz",
      GenerateName: (string) (len=31) "test-new-deployment-79b84df886-",
      Namespace: (string) (len=15) "deployment-3285",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3063437d-10b9-4cc6-84f8-071c8591ac1f",
      ResourceVersion: (string) (len=5) "32796",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895254,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79b84df886",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-79b84df886",
          UID: (types.UID) (len=36) "a3177988-7b3e-49cf-a3d9-3cd14e412c4a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  31 37 37 39 38 38 2d 37  |d\":\"a3177988-7|
              00000090  62 33 65 2d 34 39 63 66  2d 61 33 64 39 2d 33 63  |b3e-49cf-a3d9-3c|
              000000a0  64 31 34 65 34 31 32 63  34 61 5c 22 7d 22 3a 7b  |d14e412c4a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 38 39  2e 36 38 5c 22 7d 22 3a  |2.20.189.68\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-27q5p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-27q5p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) (len=13) "172.20.189.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.189.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895254,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849895254,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://73e10a6abefd2985aa6f1b7b7acb634879cf0b5fb3f668a1cd767b78aee6b58c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 10:00:56.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3285" for this suite. @ 04/28/24 10:00:56.352
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/28/24 10:00:56.371
  Apr 28 10:00:56.371: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename deployment @ 04/28/24 10:00:56.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:00:56.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:00:56.396
  Apr 28 10:00:56.398: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Apr 28 10:00:56.405: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0428 10:00:56.503966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:57.504695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:58.504936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:00:59.505107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:00.506020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:01:01.409: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/28/24 10:01:01.409
  Apr 28 10:01:01.409: INFO: Creating deployment "test-rolling-update-deployment"
  Apr 28 10:01:01.416: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Apr 28 10:01:01.420: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0428 10:01:01.506471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:02.506742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:01:03.426: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Apr 28 10:01:03.429: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Apr 28 10:01:03.436: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1034",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8842f6c6-1734-44c0-8d43-c570bed31bc6",
      ResourceVersion: (string) (len=5) "32979",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895261,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-848b55c8f5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 28 10:01:03.442: INFO: New ReplicaSet "test-rolling-update-deployment-848b55c8f5" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-848b55c8f5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1034",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f043077-a3ad-4050-bb43-9a6b745caec9",
      ResourceVersion: (string) (len=5) "32969",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895261,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "848b55c8f5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "8842f6c6-1734-44c0-8d43-c570bed31bc6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 38 34 32 66 36  63 36 2d 31 37 33 34 2d  |\"8842f6c6-1734-|
              00000120  34 34 63 30 2d 38 64 34  33 2d 63 35 37 30 62 65  |44c0-8d43-c570be|
              00000130  64 33 31 62 63 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d31bc6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "848b55c8f5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "848b55c8f5",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 10:01:03.443: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Apr 28 10:01:03.443: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1034",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "988c9f87-1d76-4e00-91ce-6c19a8e49af5",
      ResourceVersion: (string) (len=5) "32978",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895256,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "8842f6c6-1734-44c0-8d43-c570bed31bc6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895256,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 38 34 32 66 36 63  |"uid\":\"8842f6c|
              000000b0  36 2d 31 37 33 34 2d 34  34 63 30 2d 38 64 34 33  |6-1734-44c0-8d43|
              000000c0  2d 63 35 37 30 62 65 64  33 31 62 63 36 5c 22 7d  |-c570bed31bc6\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 10:01:03.449: INFO: Pod "test-rolling-update-deployment-848b55c8f5-7tcnr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-848b55c8f5-7tcnr",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-848b55c8f5-",
      Namespace: (string) (len=15) "deployment-1034",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1db762b5-5f0e-4421-8911-71999693704a",
      ResourceVersion: (string) (len=5) "32968",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895261,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "848b55c8f5",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-848b55c8f5",
          UID: (types.UID) (len=36) "5f043077-a3ad-4050-bb43-9a6b745caec9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  30 34 33 30 37 37 2d 61  |d\":\"5f043077-a|
              00000090  33 61 64 2d 34 30 35 30  2d 62 62 34 33 2d 39 61  |3ad-4050-bb43-9a|
              000000a0  36 62 37 34 35 63 61 65  63 39 5c 22 7d 22 3a 7b  |6b745caec9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 38 39  2e 31 32 37 5c 22 7d 22  |2.20.189.127\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4cs5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4cs5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849895261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) (len=14) "172.20.189.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.189.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849895261,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849895261,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=139) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost@sha256:8f07c07228b54f5d644c14241ad3e483b999c5d3a78f7580a6252c8ab42f2b66",
          ContainerID: (string) (len=77) "containerd://79e8281fe01939bd2f01d137b0ced675e9ea4a8cef83bead8713f8a31762284d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 10:01:03.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1034" for this suite. @ 04/28/24 10:01:03.456
• [7.096 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/28/24 10:01:03.462
  Apr 28 10:01:03.462: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:01:03.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:01:03.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:01:03.477
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:01:03.48
  E0428 10:01:03.507731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:04.508445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:05.509400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:06.509611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:01:07.498
  Apr 28 10:01:07.501: INFO: Trying to get logs from node worker2 pod downwardapi-volume-ac93a36a-d70f-4e64-88ea-47a93140b076 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:01:07.508
  E0428 10:01:07.509915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:01:07.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6434" for this suite. @ 04/28/24 10:01:07.524
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/28/24 10:01:07.534
  Apr 28 10:01:07.534: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 10:01:07.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:01:07.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:01:07.55
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/28/24 10:01:07.552
  E0428 10:01:08.510141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:09.510485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:10.511354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:11.512230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:01:11.575
  Apr 28 10:01:11.578: INFO: Trying to get logs from node worker2 pod pod-be98f990-a297-42a7-bbe8-19d1015d225e container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:01:11.584
  Apr 28 10:01:11.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6984" for this suite. @ 04/28/24 10:01:11.603
• [4.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 04/28/24 10:01:11.611
  Apr 28 10:01:11.611: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/28/24 10:01:11.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:01:11.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:01:11.625
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/28/24 10:01:11.628
  Apr 28 10:01:11.628: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:01:12.512835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:01:12.790: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:01:13.513466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:14.514017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:15.514174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:16.514244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:01:17.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6619" for this suite. @ 04/28/24 10:01:17.353
• [5.749 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/28/24 10:01:17.359
  Apr 28 10:01:17.359: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename dns @ 04/28/24 10:01:17.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:01:17.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:01:17.374
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/28/24 10:01:17.378
  Apr 28 10:01:17.384: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6238  b81eeaee-1118-4ad6-9fc7-8560cf2483d3 33134 0 2024-04-28 10:01:17 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-28 10:01:17 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rxwcv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rxwcv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0428 10:01:17.515213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:18.515577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/28/24 10:01:19.391
  Apr 28 10:01:19.391: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6238 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:01:19.391: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:01:19.392: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:01:19.392: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-6238/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/28/24 10:01:19.437
  Apr 28 10:01:19.437: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6238 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:01:19.437: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:01:19.437: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:01:19.437: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-6238/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 28 10:01:19.481: INFO: Deleting pod test-dns-nameservers...
  Apr 28 10:01:19.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6238" for this suite. @ 04/28/24 10:01:19.494
• [2.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/28/24 10:01:19.501
  Apr 28 10:01:19.501: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename discovery @ 04/28/24 10:01:19.501
  E0428 10:01:19.516040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:01:19.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:01:19.521
  STEP: Setting up server cert @ 04/28/24 10:01:19.524
  Apr 28 10:01:19.930: INFO: Checking APIGroup: apiregistration.k8s.io
  Apr 28 10:01:19.930: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Apr 28 10:01:19.930: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Apr 28 10:01:19.930: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Apr 28 10:01:19.930: INFO: Checking APIGroup: apps
  Apr 28 10:01:19.931: INFO: PreferredVersion.GroupVersion: apps/v1
  Apr 28 10:01:19.931: INFO: Versions found [{apps/v1 v1}]
  Apr 28 10:01:19.931: INFO: apps/v1 matches apps/v1
  Apr 28 10:01:19.931: INFO: Checking APIGroup: events.k8s.io
  Apr 28 10:01:19.931: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Apr 28 10:01:19.931: INFO: Versions found [{events.k8s.io/v1 v1}]
  Apr 28 10:01:19.931: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Apr 28 10:01:19.931: INFO: Checking APIGroup: authentication.k8s.io
  Apr 28 10:01:19.932: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Apr 28 10:01:19.932: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Apr 28 10:01:19.932: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Apr 28 10:01:19.932: INFO: Checking APIGroup: authorization.k8s.io
  Apr 28 10:01:19.933: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Apr 28 10:01:19.933: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Apr 28 10:01:19.933: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Apr 28 10:01:19.933: INFO: Checking APIGroup: autoscaling
  Apr 28 10:01:19.934: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Apr 28 10:01:19.934: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Apr 28 10:01:19.934: INFO: autoscaling/v2 matches autoscaling/v2
  Apr 28 10:01:19.934: INFO: Checking APIGroup: batch
  Apr 28 10:01:19.935: INFO: PreferredVersion.GroupVersion: batch/v1
  Apr 28 10:01:19.935: INFO: Versions found [{batch/v1 v1}]
  Apr 28 10:01:19.935: INFO: batch/v1 matches batch/v1
  Apr 28 10:01:19.935: INFO: Checking APIGroup: certificates.k8s.io
  Apr 28 10:01:19.935: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Apr 28 10:01:19.935: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Apr 28 10:01:19.936: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Apr 28 10:01:19.936: INFO: Checking APIGroup: networking.k8s.io
  Apr 28 10:01:19.936: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Apr 28 10:01:19.936: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Apr 28 10:01:19.936: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Apr 28 10:01:19.936: INFO: Checking APIGroup: policy
  Apr 28 10:01:19.937: INFO: PreferredVersion.GroupVersion: policy/v1
  Apr 28 10:01:19.937: INFO: Versions found [{policy/v1 v1}]
  Apr 28 10:01:19.937: INFO: policy/v1 matches policy/v1
  Apr 28 10:01:19.937: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Apr 28 10:01:19.938: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Apr 28 10:01:19.938: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Apr 28 10:01:19.938: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Apr 28 10:01:19.938: INFO: Checking APIGroup: storage.k8s.io
  Apr 28 10:01:19.938: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Apr 28 10:01:19.938: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Apr 28 10:01:19.938: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Apr 28 10:01:19.939: INFO: Checking APIGroup: admissionregistration.k8s.io
  Apr 28 10:01:19.939: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Apr 28 10:01:19.939: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Apr 28 10:01:19.939: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Apr 28 10:01:19.939: INFO: Checking APIGroup: apiextensions.k8s.io
  Apr 28 10:01:19.940: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Apr 28 10:01:19.940: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Apr 28 10:01:19.940: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Apr 28 10:01:19.940: INFO: Checking APIGroup: scheduling.k8s.io
  Apr 28 10:01:19.940: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Apr 28 10:01:19.941: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Apr 28 10:01:19.941: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Apr 28 10:01:19.941: INFO: Checking APIGroup: coordination.k8s.io
  Apr 28 10:01:19.941: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Apr 28 10:01:19.941: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Apr 28 10:01:19.941: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Apr 28 10:01:19.941: INFO: Checking APIGroup: node.k8s.io
  Apr 28 10:01:19.942: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Apr 28 10:01:19.942: INFO: Versions found [{node.k8s.io/v1 v1}]
  Apr 28 10:01:19.942: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Apr 28 10:01:19.942: INFO: Checking APIGroup: discovery.k8s.io
  Apr 28 10:01:19.942: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Apr 28 10:01:19.942: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Apr 28 10:01:19.942: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Apr 28 10:01:19.942: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Apr 28 10:01:19.943: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Apr 28 10:01:19.943: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Apr 28 10:01:19.943: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Apr 28 10:01:19.943: INFO: Checking APIGroup: metrics.k8s.io
  Apr 28 10:01:19.943: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Apr 28 10:01:19.943: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Apr 28 10:01:19.943: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Apr 28 10:01:19.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2304" for this suite. @ 04/28/24 10:01:19.947
• [0.451 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/28/24 10:01:19.952
  Apr 28 10:01:19.952: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename cronjob @ 04/28/24 10:01:19.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:01:19.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:01:19.965
  STEP: Creating a cronjob @ 04/28/24 10:01:19.967
  STEP: Ensuring more than one job is running at a time @ 04/28/24 10:01:19.972
  E0428 10:01:20.516228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:21.516544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:22.516722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:23.517019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:24.517943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:25.518467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:26.518791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:27.518953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:28.519171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:29.519459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:30.520148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:31.520481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:32.520574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:33.520741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:34.521313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:35.521888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:36.521988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:37.523008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:38.524054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:39.524998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:40.525973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:41.526163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:42.526534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:43.527435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:44.528426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:45.528943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:46.529161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:47.530305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:48.530578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:49.531298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:50.532258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:51.533243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:52.534235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:53.534591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:54.534823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:55.535172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:56.535509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:57.536229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:58.537252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:01:59.537465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:00.538499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:01.538676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:02.538824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:03.539023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:04.539154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:05.539315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:06.540349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:07.540596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:08.540843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:09.541077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:10.541832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:11.542037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:12.543122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:13.543178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:14.544025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:15.544593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:16.544790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:17.544953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:18.545906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:19.546019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:20.547186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:21.547423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:22.547575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:23.547671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:24.548199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:25.548765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:26.548932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:27.549059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:28.549209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:29.549844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:30.549910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:31.550138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:32.550391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:33.551378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:34.552295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:35.552373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:36.552465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:37.552763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:38.552947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:39.553163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:40.553243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:41.553498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:42.553600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:43.553911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:44.554464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:45.554961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:46.555446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:47.556323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:48.557111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:49.557785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:50.558869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:51.559760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:52.560252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:53.560953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:54.561280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:55.561874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:56.562105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:57.562197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:58.562471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:02:59.562655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:00.563707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:01.564347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/28/24 10:03:01.976
  STEP: Removing cronjob @ 04/28/24 10:03:01.979
  Apr 28 10:03:01.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9563" for this suite. @ 04/28/24 10:03:01.986
• [102.041 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 04/28/24 10:03:01.994
  Apr 28 10:03:01.994: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename svcaccounts @ 04/28/24 10:03:01.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:02.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:02.016
  STEP: Creating a pod to test service account token:  @ 04/28/24 10:03:02.022
  E0428 10:03:02.564602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:03.564803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:04.564916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:05.565585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:03:06.054
  Apr 28 10:03:06.056: INFO: Trying to get logs from node worker2 pod test-pod-d19fe70f-a2d7-48a4-bfb1-38f3af1e54a6 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:03:06.063
  Apr 28 10:03:06.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6302" for this suite. @ 04/28/24 10:03:06.081
• [4.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/28/24 10:03:06.087
  Apr 28 10:03:06.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 10:03:06.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:06.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:06.104
  STEP: Setting up server cert @ 04/28/24 10:03:06.143
  E0428 10:03:06.565646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 10:03:06.592
  STEP: Deploying the webhook pod @ 04/28/24 10:03:06.6
  STEP: Wait for the deployment to be ready @ 04/28/24 10:03:06.608
  Apr 28 10:03:06.620: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0428 10:03:07.565864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:08.566066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 10:03:08.628
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 10:03:08.635
  E0428 10:03:09.566147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:03:09.636: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 28 10:03:09.643: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6978-crds.webhook.example.com via the AdmissionRegistration API @ 04/28/24 10:03:10.15
  STEP: Creating a custom resource while v1 is storage version @ 04/28/24 10:03:10.161
  E0428 10:03:10.566502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:11.566904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/28/24 10:03:12.183
  STEP: Patching the custom resource while v2 is storage version @ 04/28/24 10:03:12.192
  E0428 10:03:12.567686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:03:12.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4092" for this suite. @ 04/28/24 10:03:12.796
  STEP: Destroying namespace "webhook-markers-3016" for this suite. @ 04/28/24 10:03:12.802
• [6.720 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 04/28/24 10:03:12.807
  Apr 28 10:03:12.807: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-webhook @ 04/28/24 10:03:12.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:12.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:12.82
  STEP: Setting up server cert @ 04/28/24 10:03:12.824
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/28/24 10:03:13.049
  STEP: Deploying the custom resource conversion webhook pod @ 04/28/24 10:03:13.054
  STEP: Wait for the deployment to be ready @ 04/28/24 10:03:13.064
  Apr 28 10:03:13.071: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0428 10:03:13.568127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:14.568227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 10:03:15.083
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 10:03:15.093
  E0428 10:03:15.568379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:03:16.094: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 28 10:03:16.100: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:03:16.569186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:17.569894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:18.570465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/28/24 10:03:18.637
  STEP: v2 custom resource should be converted @ 04/28/24 10:03:18.644
  Apr 28 10:03:19.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6548" for this suite. @ 04/28/24 10:03:19.212
• [6.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/28/24 10:03:19.221
  Apr 28 10:03:19.221: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:03:19.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:19.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:19.249
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:03:19.252
  E0428 10:03:19.570683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:20.571026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:21.571187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:22.571319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:03:23.285
  Apr 28 10:03:23.288: INFO: Trying to get logs from node worker2 pod downwardapi-volume-73c2f76a-2bba-478c-ab94-8328a4546512 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:03:23.293
  Apr 28 10:03:23.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5138" for this suite. @ 04/28/24 10:03:23.311
• [4.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 04/28/24 10:03:23.317
  Apr 28 10:03:23.317: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename security-context-test @ 04/28/24 10:03:23.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:23.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:23.331
  E0428 10:03:23.571956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:24.572819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:25.572934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:26.573485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:03:27.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8504" for this suite. @ 04/28/24 10:03:27.359
• [4.047 seconds]
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/28/24 10:03:27.364
  Apr 28 10:03:27.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename hostport @ 04/28/24 10:03:27.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:27.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:27.377
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/28/24 10:03:27.384
  E0428 10:03:27.573583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:28.574809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.227.136 on the node which pod1 resides and expect scheduled @ 04/28/24 10:03:29.397
  E0428 10:03:29.575840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:30.576076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.227.136 but use UDP protocol on the node which pod2 resides @ 04/28/24 10:03:31.411
  E0428 10:03:31.577120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:32.577293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:33.577769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:34.578281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/28/24 10:03:35.438
  Apr 28 10:03:35.438: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.227.136 http://127.0.0.1:54323/hostname] Namespace:hostport-6618 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:03:35.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:03:35.438: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:03:35.438: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-6618/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.227.136+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.227.136, port: 54323 @ 04/28/24 10:03:35.478
  Apr 28 10:03:35.478: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.227.136:54323/hostname] Namespace:hostport-6618 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:03:35.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:03:35.478: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:03:35.478: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-6618/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.227.136%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.227.136, port: 54323 UDP @ 04/28/24 10:03:35.51
  Apr 28 10:03:35.510: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.227.136 54323] Namespace:hostport-6618 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:03:35.510: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:03:35.510: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:03:35.510: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-6618/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.227.136+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0428 10:03:35.578672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:36.579245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:37.580251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:38.580319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:39.580526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:03:40.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6618" for this suite. @ 04/28/24 10:03:40.549
• [13.191 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 04/28/24 10:03:40.555
  Apr 28 10:03:40.555: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/28/24 10:03:40.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:40.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:40.568
  Apr 28 10:03:40.570: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:03:40.581112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:41.581616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/28/24 10:03:41.692
  Apr 28 10:03:41.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-5008 --namespace=crd-publish-openapi-5008 create -f -'
  E0428 10:03:42.582434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:43.583309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:03:43.752: INFO: stderr: ""
  Apr 28 10:03:43.752: INFO: stdout: "e2e-test-crd-publish-openapi-379-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 28 10:03:43.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-5008 --namespace=crd-publish-openapi-5008 delete e2e-test-crd-publish-openapi-379-crds test-cr'
  Apr 28 10:03:43.795: INFO: stderr: ""
  Apr 28 10:03:43.795: INFO: stdout: "e2e-test-crd-publish-openapi-379-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Apr 28 10:03:43.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-5008 --namespace=crd-publish-openapi-5008 apply -f -'
  Apr 28 10:03:43.844: INFO: stderr: ""
  Apr 28 10:03:43.844: INFO: stdout: "e2e-test-crd-publish-openapi-379-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 28 10:03:43.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-5008 --namespace=crd-publish-openapi-5008 delete e2e-test-crd-publish-openapi-379-crds test-cr'
  Apr 28 10:03:43.892: INFO: stderr: ""
  Apr 28 10:03:43.892: INFO: stdout: "e2e-test-crd-publish-openapi-379-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/28/24 10:03:43.892
  Apr 28 10:03:43.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-5008 explain e2e-test-crd-publish-openapi-379-crds'
  Apr 28 10:03:43.933: INFO: stderr: ""
  Apr 28 10:03:43.933: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-379-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0428 10:03:44.583738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:03:45.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5008" for this suite. @ 04/28/24 10:03:45.071
• [4.522 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/28/24 10:03:45.077
  Apr 28 10:03:45.077: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:03:45.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:45.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:45.091
  STEP: Creating configMap with name projected-configmap-test-volume-5ca8200d-f93f-4d3f-b0d5-a7d8c370e5b3 @ 04/28/24 10:03:45.094
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:03:45.098
  E0428 10:03:45.584439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:46.584716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:47.584961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:48.585047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:03:49.12
  Apr 28 10:03:49.123: INFO: Trying to get logs from node worker2 pod pod-projected-configmaps-6d71967f-7514-4930-963d-6df217288dfe container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:03:49.128
  Apr 28 10:03:49.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7279" for this suite. @ 04/28/24 10:03:49.143
• [4.072 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 04/28/24 10:03:49.149
  Apr 28 10:03:49.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pv @ 04/28/24 10:03:49.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:49.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:49.164
  STEP: Creating initial PV and PVC @ 04/28/24 10:03:49.167
  Apr 28 10:03:49.167: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5640" @ 04/28/24 10:03:49.177
  STEP: Listing PVCs in namespace "pv-5640" @ 04/28/24 10:03:49.18
  STEP: Reading "pvc-rfk2q" Status @ 04/28/24 10:03:49.183
  STEP: Reading "pv-5640-6wsjk" Status @ 04/28/24 10:03:49.185
  STEP: Patching "pvc-rfk2q" Status @ 04/28/24 10:03:49.191
  STEP: Patching "pv-5640-6wsjk" Status @ 04/28/24 10:03:49.196
  STEP: Updating "pvc-rfk2q" Status @ 04/28/24 10:03:49.2
  STEP: Updating "pv-5640-6wsjk" Status @ 04/28/24 10:03:49.213
  Apr 28 10:03:49.240: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 28 10:03:49.240: INFO: Deleting PersistentVolumeClaim "pvc-rfk2q"
  Apr 28 10:03:49.246: INFO: Deleting PersistentVolume "pv-5640-6wsjk"
  Apr 28 10:03:49.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5640" for this suite. @ 04/28/24 10:03:49.257
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/28/24 10:03:49.266
  Apr 28 10:03:49.266: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:03:49.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:49.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:49.288
  STEP: Creating configMap with name configmap-test-volume-map-30f90569-ff09-4184-9530-f57aadcf5d1f @ 04/28/24 10:03:49.291
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:03:49.295
  E0428 10:03:49.585838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:50.586129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:51.586896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:52.587160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:03:53.313
  Apr 28 10:03:53.315: INFO: Trying to get logs from node worker2 pod pod-configmaps-77c3fcfe-928c-4ae3-accf-7801696e6c62 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:03:53.322
  Apr 28 10:03:53.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7150" for this suite. @ 04/28/24 10:03:53.337
• [4.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 04/28/24 10:03:53.343
  Apr 28 10:03:53.343: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubelet-test @ 04/28/24 10:03:53.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:53.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:53.356
  E0428 10:03:53.587761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:54.588217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:55.589006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:56.589116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:03:57.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8246" for this suite. @ 04/28/24 10:03:57.382
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/28/24 10:03:57.387
  Apr 28 10:03:57.387: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename prestop @ 04/28/24 10:03:57.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:03:57.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:03:57.402
  STEP: Creating server pod server in namespace prestop-7123 @ 04/28/24 10:03:57.405
  STEP: Waiting for pods to come up. @ 04/28/24 10:03:57.411
  E0428 10:03:57.589134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:03:58.589613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-7123 @ 04/28/24 10:03:59.421
  E0428 10:03:59.590170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:00.590227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 04/28/24 10:04:01.432
  E0428 10:04:01.590338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:02.590961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:03.591109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:04.591280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:05.591523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:06.442: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/28/24 10:04:06.442
  Apr 28 10:04:06.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7123" for this suite. @ 04/28/24 10:04:06.459
• [9.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/28/24 10:04:06.469
  Apr 28 10:04:06.469: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 10:04:06.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:04:06.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:04:06.484
  STEP: Creating pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090 @ 04/28/24 10:04:06.486
  E0428 10:04:06.591871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:07.592538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/28/24 10:04:08.501
  Apr 28 10:04:08.504: INFO: Initial restart count of pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 is 0
  Apr 28 10:04:08.507: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:08.593653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:09.593926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:10.511: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:10.594652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:11.595060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:12.514: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:12.595383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:13.595557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:14.517: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:14.596634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:15.597202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:16.520: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:16.597760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:17.597898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:18.523: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:18.598504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:19.598826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:20.526: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:20.599277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:21.599386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:22.529: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:22.599682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:23.600041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:24.533: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:24.600304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:25.600455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:26.537: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:26.600850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:27.601029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:28.541: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:28.601395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:29.601527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:30.544: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:30.601868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:31.601902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:32.547: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:32.602699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:33.602927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:34.550: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:34.603180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:35.604320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:36.553: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:36.605216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:37.605525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:38.558: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:38.606594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:39.606874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:40.561: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:40.607241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:41.608254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:42.566: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:42.608307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:43.608591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:44.571: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:44.609173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:45.609540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:46.578: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:46.610543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:47.610841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:48.584: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:48.611720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:49.611893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:50.587: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:50.612004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:51.612280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:52.592: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:52.612321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:53.613121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:54.596: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:54.614142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:55.614786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:56.601: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:56.615849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:57.615889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:04:58.605: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:04:58.616609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:04:59.617061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:00.609: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:00.617827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:01.617971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:02.614: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:02.618695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:03.618929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:04.618: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:04.618939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:05.619070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:06.619208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:06.622: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:07.619981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:08.620225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:08.626: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:09.620988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:10.621565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:10.630: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:11.622539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:12.622977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:12.635: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:13.623065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:14.623452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:14.639: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:15.624046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:16.624452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:16.642: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:17.625220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:18.625408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:18.648: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:19.625624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:20.626222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:20.651: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:21.626890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:22.627121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:22.655: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:23.627169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:24.627853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:24.659: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:25.628441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:26.628847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:26.663: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:27.628987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:28.629202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:28.667: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:29.629301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:30.629865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:30.671: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:31.630007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:32.630348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:32.677: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:33.631261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:34.631723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:34.680: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:35.632291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:36.632507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:36.684: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:37.632577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:38.632799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:38.688: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:39.633201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:40.633390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:40.693: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:41.633531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:42.633726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:42.697: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:43.633945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:44.634996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:44.699: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:45.635313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:46.635446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:46.704: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:47.636288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:48.636435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:48.706: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:49.636557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:50.636753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:50.710: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:51.636977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:52.637954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:52.714: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:53.638284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:54.638618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:54.717: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:55.639192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:56.639455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:56.721: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:57.639984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:05:58.640084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:05:58.723: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:05:59.640180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:00.640602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:00.727: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:01.640786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:02.640908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:02.732: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:03.641469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:04.642132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:04.738: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:05.643401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:06.644290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:06.741: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:07.644398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:08.644555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:08.746: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:09.644901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:10.645120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:10.750: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:11.646145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:12.646316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:12.754: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:13.646461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:14.647595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:14.758: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:15.648255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:16.648480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:16.762: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:17.648621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:18.648932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:18.766: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:19.649295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:20.650086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:20.770: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:21.650353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:22.650547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:22.774: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:23.651739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:24.652119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:24.779: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:25.652179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:26.652589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:26.784: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:27.652997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:28.653308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:28.788: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:29.653705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:30.653977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:30.790: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:31.654823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:32.655034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:32.794: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:33.655152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:34.655210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:34.799: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:35.655867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:36.656093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:36.803: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:37.656303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:38.657019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:38.807: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:39.657784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:40.658137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:40.812: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:41.658291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:42.658539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:42.817: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:43.659303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:44.659733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:44.821: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:45.660063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:46.660226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:46.825: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:47.661319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:48.662083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:48.827: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:49.662640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:50.663196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:50.833: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:51.663319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:52.664303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:52.838: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:53.664884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:54.665840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:54.842: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:55.666543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:56.666797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:56.846: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:57.667171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:06:58.667216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:06:58.850: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:06:59.668281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:00.668327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:00.855: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:01.669034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:02.669249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:02.859: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:03.669423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:04.669735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:04.863: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:05.670855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:06.671686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:06.867: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:07.672222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:08.672476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:08.874: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:09.672595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:10.673028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:10.879: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:11.674108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:12.674291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:12.883: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:13.674840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:14.675388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:14.889: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:15.676394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:16.676627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:16.893: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:17.676954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:18.677233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:18.898: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:19.678236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:20.678552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:20.903: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:21.679195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:22.679392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:22.906: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:23.680283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:24.680662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:24.910: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:25.681473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:26.681831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:26.914: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:27.682402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:28.683297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:28.919: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:29.684337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:30.684814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:30.924: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:31.685711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:32.686040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:32.930: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:33.686474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:34.686875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:34.935: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:35.687656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:36.688371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:36.940: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:37.688599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:38.688835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:38.945: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:39.689923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:40.690974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:40.948: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:41.691189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:42.691230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:42.952: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:43.691375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:44.692353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:44.956: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:45.693102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:46.693751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:46.959: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:47.694788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:48.695006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:48.964: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:49.695115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:50.695209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:50.968: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:51.696122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:52.696260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:52.971: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:53.696549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:54.696936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:54.975: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:55.697238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:56.697652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:56.980: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:57.697803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:07:58.698112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:07:58.984: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:07:59.698814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:00.699164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:08:00.990: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:08:01.699319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:02.699467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:08:02.997: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:08:03.700009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:04.700469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:08:05.000: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:08:05.701563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:06.702589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:08:07.005: INFO: Get pod busybox-8e53039c-94d3-4065-bdf6-b9f360d71d41 in namespace container-probe-5090
  E0428 10:08:07.703520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:08.704315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/28/24 10:08:09.005
  Apr 28 10:08:09.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5090" for this suite. @ 04/28/24 10:08:09.023
• [242.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 04/28/24 10:08:09.03
  Apr 28 10:08:09.030: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename cronjob @ 04/28/24 10:08:09.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:08:09.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:08:09.044
  STEP: Creating a ReplaceConcurrent cronjob @ 04/28/24 10:08:09.046
  STEP: Ensuring a job is scheduled @ 04/28/24 10:08:09.049
  E0428 10:08:09.704472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:10.704717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:11.704831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:12.705862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:13.706182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:14.706285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:15.706480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:16.706630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:17.707496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:18.707744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:19.707906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:20.708209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:21.709076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:22.709226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:23.710185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:24.710353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:25.710474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:26.710514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:27.710843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:28.711231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:29.711819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:30.711897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:31.712983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:32.713164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:33.713669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:34.714078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:35.714496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:36.714715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:37.715217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:38.716254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:39.717370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:40.717758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:41.717929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:42.718930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:43.720012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:44.720255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:45.720435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:46.720853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:47.721620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:48.721822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:49.722269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:50.722527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:51.722704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:52.723004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:53.723807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:54.723888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:55.724951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:56.725206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:57.725380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:58.725759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:08:59.726396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:00.726765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/28/24 10:09:01.053
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/28/24 10:09:01.056
  STEP: Ensuring the job is replaced with a new one @ 04/28/24 10:09:01.059
  E0428 10:09:01.726929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:02.727219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:03.728460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:04.729407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:05.729941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:06.730311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:07.731167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:08.732265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:09.733150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:10.733620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:11.733919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:12.734313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:13.734596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:14.735578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:15.736038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:16.736249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:17.737137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:18.737277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:19.737600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:20.738125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:21.738627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:22.739607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:23.739811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:24.740166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:25.740181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:26.740307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:27.740390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:28.740532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:29.741574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:30.742757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:31.743865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:32.744319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:33.744551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:34.745468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:35.745976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:36.746218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:37.747421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:38.747521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:39.747684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:40.748168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:41.748317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:42.748441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:43.748880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:44.749216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:45.749752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:46.749769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:47.750354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:48.750560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:49.751261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:50.752298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:51.753390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:52.753601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:53.753772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:54.754646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:55.754804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:56.755090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:57.755677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:58.755954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:09:59.756190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:00.756834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/28/24 10:10:01.063
  Apr 28 10:10:01.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2989" for this suite. @ 04/28/24 10:10:01.073
• [112.048 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/28/24 10:10:01.079
  Apr 28 10:10:01.079: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 10:10:01.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:01.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:01.096
  Apr 28 10:10:01.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1444" for this suite. @ 04/28/24 10:10:01.149
• [0.078 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/28/24 10:10:01.157
  Apr 28 10:10:01.157: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename runtimeclass @ 04/28/24 10:10:01.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:01.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:01.171
  E0428 10:10:01.756910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:02.757049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:03.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9508" for this suite. @ 04/28/24 10:10:03.199
• [2.048 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/28/24 10:10:03.205
  Apr 28 10:10:03.205: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replication-controller @ 04/28/24 10:10:03.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:03.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:03.219
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/28/24 10:10:03.222
  E0428 10:10:03.757845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:04.758218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 04/28/24 10:10:05.239
  STEP: Then the orphan pod is adopted @ 04/28/24 10:10:05.245
  E0428 10:10:05.759131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:06.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-640" for this suite. @ 04/28/24 10:10:06.257
• [3.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/28/24 10:10:06.266
  Apr 28 10:10:06.266: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 10:10:06.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:06.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:06.283
  STEP: creating a Pod with a static label @ 04/28/24 10:10:06.293
  STEP: watching for Pod to be ready @ 04/28/24 10:10:06.298
  Apr 28 10:10:06.301: INFO: observed Pod pod-test in namespace pods-6198 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Apr 28 10:10:06.304: INFO: observed Pod pod-test in namespace pods-6198 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:06 +0000 UTC  }]
  Apr 28 10:10:06.316: INFO: observed Pod pod-test in namespace pods-6198 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:06 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:06 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:06 +0000 UTC  }]
  E0428 10:10:06.759871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:07.329: INFO: Found Pod pod-test in namespace pods-6198 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:06 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:07 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:07 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:10:06 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/28/24 10:10:07.332
  STEP: getting the Pod and ensuring that it's patched @ 04/28/24 10:10:07.339
  STEP: replacing the Pod's status Ready condition to False @ 04/28/24 10:10:07.343
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/28/24 10:10:07.351
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/28/24 10:10:07.351
  STEP: watching for the Pod to be deleted @ 04/28/24 10:10:07.358
  Apr 28 10:10:07.359: INFO: observed event type MODIFIED
  E0428 10:10:07.760264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:08.761211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:09.334: INFO: observed event type MODIFIED
  Apr 28 10:10:09.485: INFO: observed event type MODIFIED
  E0428 10:10:09.761808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:10.335: INFO: observed event type MODIFIED
  Apr 28 10:10:10.344: INFO: observed event type MODIFIED
  Apr 28 10:10:10.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6198" for this suite. @ 04/28/24 10:10:10.355
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/28/24 10:10:10.361
  Apr 28 10:10:10.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename watch @ 04/28/24 10:10:10.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:10.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:10.376
  STEP: getting a starting resourceVersion @ 04/28/24 10:10:10.377
  STEP: starting a background goroutine to produce watch events @ 04/28/24 10:10:10.382
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/28/24 10:10:10.382
  E0428 10:10:10.762296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:11.762766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:12.762810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:13.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1237" for this suite. @ 04/28/24 10:10:13.215
• [2.906 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/28/24 10:10:13.267
  Apr 28 10:10:13.267: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename proxy @ 04/28/24 10:10:13.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:13.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:13.282
  STEP: starting an echo server on multiple ports @ 04/28/24 10:10:13.295
  STEP: creating replication controller proxy-service-wf5t5 in namespace proxy-9435 @ 04/28/24 10:10:13.296
  I0428 10:10:13.302481      21 runners.go:197] Created replication controller with name: proxy-service-wf5t5, namespace: proxy-9435, replica count: 1
  E0428 10:10:13.763857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0428 10:10:14.352855      21 runners.go:197] proxy-service-wf5t5 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 28 10:10:14.357: INFO: setup took 1.072821576s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/28/24 10:10:14.357
  Apr 28 10:10:14.366: INFO: (0) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 8.735934ms)
  Apr 28 10:10:14.366: INFO: (0) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 9.282125ms)
  Apr 28 10:10:14.366: INFO: (0) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 9.322879ms)
  Apr 28 10:10:14.367: INFO: (0) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 10.239096ms)
  Apr 28 10:10:14.367: INFO: (0) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 10.420747ms)
  Apr 28 10:10:14.368: INFO: (0) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 10.848194ms)
  Apr 28 10:10:14.368: INFO: (0) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 10.380293ms)
  Apr 28 10:10:14.368: INFO: (0) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 11.764073ms)
  Apr 28 10:10:14.369: INFO: (0) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 11.82302ms)
  Apr 28 10:10:14.369: INFO: (0) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 12.213ms)
  Apr 28 10:10:14.370: INFO: (0) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 12.683811ms)
  Apr 28 10:10:14.371: INFO: (0) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 14.039811ms)
  Apr 28 10:10:14.372: INFO: (0) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 15.088605ms)
  Apr 28 10:10:14.372: INFO: (0) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 15.350229ms)
  Apr 28 10:10:14.372: INFO: (0) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 15.12733ms)
  Apr 28 10:10:14.374: INFO: (0) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 16.900375ms)
  Apr 28 10:10:14.378: INFO: (1) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 4.475848ms)
  Apr 28 10:10:14.378: INFO: (1) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 4.275476ms)
  Apr 28 10:10:14.379: INFO: (1) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 4.442444ms)
  Apr 28 10:10:14.380: INFO: (1) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 5.643201ms)
  Apr 28 10:10:14.380: INFO: (1) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 5.759809ms)
  Apr 28 10:10:14.380: INFO: (1) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 5.931484ms)
  Apr 28 10:10:14.380: INFO: (1) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 6.133846ms)
  Apr 28 10:10:14.381: INFO: (1) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 6.467716ms)
  Apr 28 10:10:14.382: INFO: (1) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 7.311725ms)
  Apr 28 10:10:14.382: INFO: (1) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 8.163947ms)
  Apr 28 10:10:14.382: INFO: (1) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 8.539787ms)
  Apr 28 10:10:14.383: INFO: (1) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 8.668946ms)
  Apr 28 10:10:14.383: INFO: (1) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 9.18326ms)
  Apr 28 10:10:14.383: INFO: (1) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 9.120082ms)
  Apr 28 10:10:14.384: INFO: (1) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 10.320499ms)
  Apr 28 10:10:14.384: INFO: (1) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 10.303333ms)
  Apr 28 10:10:14.388: INFO: (2) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 3.828664ms)
  Apr 28 10:10:14.391: INFO: (2) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 6.234519ms)
  Apr 28 10:10:14.391: INFO: (2) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 6.286272ms)
  Apr 28 10:10:14.391: INFO: (2) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 6.736182ms)
  Apr 28 10:10:14.391: INFO: (2) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 6.693331ms)
  Apr 28 10:10:14.392: INFO: (2) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.290338ms)
  Apr 28 10:10:14.392: INFO: (2) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 7.697863ms)
  Apr 28 10:10:14.392: INFO: (2) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 7.698703ms)
  Apr 28 10:10:14.393: INFO: (2) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 8.337214ms)
  Apr 28 10:10:14.393: INFO: (2) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 8.348506ms)
  Apr 28 10:10:14.393: INFO: (2) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 8.615765ms)
  Apr 28 10:10:14.393: INFO: (2) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 8.820467ms)
  Apr 28 10:10:14.396: INFO: (2) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 11.530253ms)
  Apr 28 10:10:14.396: INFO: (2) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 11.592442ms)
  Apr 28 10:10:14.397: INFO: (2) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 12.3802ms)
  Apr 28 10:10:14.399: INFO: (2) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 14.751773ms)
  Apr 28 10:10:14.403: INFO: (3) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 3.976105ms)
  Apr 28 10:10:14.404: INFO: (3) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 4.226243ms)
  Apr 28 10:10:14.404: INFO: (3) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 4.249662ms)
  Apr 28 10:10:14.405: INFO: (3) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 5.463014ms)
  Apr 28 10:10:14.405: INFO: (3) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 5.558259ms)
  Apr 28 10:10:14.408: INFO: (3) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.996975ms)
  Apr 28 10:10:14.408: INFO: (3) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 8.038524ms)
  Apr 28 10:10:14.408: INFO: (3) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 8.180002ms)
  Apr 28 10:10:14.408: INFO: (3) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.917457ms)
  Apr 28 10:10:14.408: INFO: (3) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 8.180727ms)
  Apr 28 10:10:14.408: INFO: (3) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 8.303386ms)
  Apr 28 10:10:14.408: INFO: (3) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 8.432308ms)
  Apr 28 10:10:14.409: INFO: (3) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 9.458633ms)
  Apr 28 10:10:14.410: INFO: (3) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 10.131067ms)
  Apr 28 10:10:14.410: INFO: (3) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 10.508602ms)
  Apr 28 10:10:14.414: INFO: (3) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 13.887883ms)
  Apr 28 10:10:14.419: INFO: (4) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 5.166628ms)
  Apr 28 10:10:14.419: INFO: (4) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 5.450412ms)
  Apr 28 10:10:14.419: INFO: (4) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 5.605756ms)
  Apr 28 10:10:14.420: INFO: (4) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 6.387456ms)
  Apr 28 10:10:14.420: INFO: (4) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 6.509268ms)
  Apr 28 10:10:14.422: INFO: (4) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.841829ms)
  Apr 28 10:10:14.422: INFO: (4) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 8.655288ms)
  Apr 28 10:10:14.422: INFO: (4) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 8.614193ms)
  Apr 28 10:10:14.423: INFO: (4) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 8.817791ms)
  Apr 28 10:10:14.424: INFO: (4) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 9.751069ms)
  Apr 28 10:10:14.426: INFO: (4) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 12.11474ms)
  Apr 28 10:10:14.426: INFO: (4) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 12.450516ms)
  Apr 28 10:10:14.426: INFO: (4) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 12.824468ms)
  Apr 28 10:10:14.427: INFO: (4) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 12.881356ms)
  Apr 28 10:10:14.427: INFO: (4) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 12.848567ms)
  Apr 28 10:10:14.427: INFO: (4) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 12.850335ms)
  Apr 28 10:10:14.434: INFO: (5) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 7.591829ms)
  Apr 28 10:10:14.435: INFO: (5) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 7.69977ms)
  Apr 28 10:10:14.436: INFO: (5) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 9.083184ms)
  Apr 28 10:10:14.438: INFO: (5) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 11.217837ms)
  Apr 28 10:10:14.438: INFO: (5) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 11.181835ms)
  Apr 28 10:10:14.438: INFO: (5) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 11.16547ms)
  Apr 28 10:10:14.438: INFO: (5) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 11.124209ms)
  Apr 28 10:10:14.438: INFO: (5) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 11.124915ms)
  Apr 28 10:10:14.438: INFO: (5) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 11.297375ms)
  Apr 28 10:10:14.438: INFO: (5) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 11.281427ms)
  Apr 28 10:10:14.438: INFO: (5) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 11.214331ms)
  Apr 28 10:10:14.438: INFO: (5) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 11.051261ms)
  Apr 28 10:10:14.439: INFO: (5) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 11.766933ms)
  Apr 28 10:10:14.440: INFO: (5) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 12.956361ms)
  Apr 28 10:10:14.441: INFO: (5) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 13.910408ms)
  Apr 28 10:10:14.442: INFO: (5) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 15.175292ms)
  Apr 28 10:10:14.448: INFO: (6) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 5.400173ms)
  Apr 28 10:10:14.448: INFO: (6) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 5.811502ms)
  Apr 28 10:10:14.449: INFO: (6) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 5.919002ms)
  Apr 28 10:10:14.449: INFO: (6) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 6.120228ms)
  Apr 28 10:10:14.449: INFO: (6) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 6.715755ms)
  Apr 28 10:10:14.450: INFO: (6) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 6.872588ms)
  Apr 28 10:10:14.450: INFO: (6) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 7.68273ms)
  Apr 28 10:10:14.450: INFO: (6) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 7.83342ms)
  Apr 28 10:10:14.451: INFO: (6) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 8.123688ms)
  Apr 28 10:10:14.451: INFO: (6) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 8.323222ms)
  Apr 28 10:10:14.452: INFO: (6) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 9.569318ms)
  Apr 28 10:10:14.452: INFO: (6) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 9.573954ms)
  Apr 28 10:10:14.453: INFO: (6) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 10.572482ms)
  Apr 28 10:10:14.453: INFO: (6) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 10.451412ms)
  Apr 28 10:10:14.455: INFO: (6) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 12.43102ms)
  Apr 28 10:10:14.455: INFO: (6) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 12.556917ms)
  Apr 28 10:10:14.460: INFO: (7) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 4.574974ms)
  Apr 28 10:10:14.460: INFO: (7) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 4.523558ms)
  Apr 28 10:10:14.462: INFO: (7) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 6.796633ms)
  Apr 28 10:10:14.463: INFO: (7) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 7.132239ms)
  Apr 28 10:10:14.463: INFO: (7) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.543986ms)
  Apr 28 10:10:14.463: INFO: (7) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 7.459273ms)
  Apr 28 10:10:14.463: INFO: (7) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 8.029381ms)
  Apr 28 10:10:14.464: INFO: (7) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 8.0951ms)
  Apr 28 10:10:14.464: INFO: (7) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 8.10122ms)
  Apr 28 10:10:14.464: INFO: (7) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 8.484953ms)
  Apr 28 10:10:14.465: INFO: (7) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 9.150403ms)
  Apr 28 10:10:14.465: INFO: (7) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 9.847322ms)
  Apr 28 10:10:14.466: INFO: (7) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 10.176304ms)
  Apr 28 10:10:14.466: INFO: (7) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 10.149095ms)
  Apr 28 10:10:14.466: INFO: (7) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 10.266172ms)
  Apr 28 10:10:14.466: INFO: (7) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 10.698689ms)
  Apr 28 10:10:14.470: INFO: (8) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 3.778708ms)
  Apr 28 10:10:14.470: INFO: (8) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 3.750319ms)
  Apr 28 10:10:14.471: INFO: (8) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 4.639483ms)
  Apr 28 10:10:14.472: INFO: (8) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 5.834161ms)
  Apr 28 10:10:14.475: INFO: (8) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 8.410422ms)
  Apr 28 10:10:14.475: INFO: (8) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 9.143126ms)
  Apr 28 10:10:14.475: INFO: (8) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 9.084626ms)
  Apr 28 10:10:14.475: INFO: (8) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 9.023649ms)
  Apr 28 10:10:14.475: INFO: (8) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 8.964292ms)
  Apr 28 10:10:14.475: INFO: (8) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 8.939406ms)
  Apr 28 10:10:14.476: INFO: (8) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 9.367572ms)
  Apr 28 10:10:14.476: INFO: (8) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 9.366907ms)
  Apr 28 10:10:14.476: INFO: (8) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 9.33514ms)
  Apr 28 10:10:14.476: INFO: (8) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 9.853178ms)
  Apr 28 10:10:14.476: INFO: (8) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 9.727324ms)
  Apr 28 10:10:14.479: INFO: (8) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 12.571334ms)
  Apr 28 10:10:14.483: INFO: (9) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 3.652609ms)
  Apr 28 10:10:14.485: INFO: (9) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 5.492307ms)
  Apr 28 10:10:14.485: INFO: (9) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 5.572666ms)
  Apr 28 10:10:14.485: INFO: (9) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 5.528757ms)
  Apr 28 10:10:14.485: INFO: (9) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 5.455438ms)
  Apr 28 10:10:14.485: INFO: (9) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 5.648707ms)
  Apr 28 10:10:14.485: INFO: (9) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 5.744243ms)
  Apr 28 10:10:14.485: INFO: (9) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 5.867857ms)
  Apr 28 10:10:14.486: INFO: (9) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 6.598403ms)
  Apr 28 10:10:14.487: INFO: (9) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.638953ms)
  Apr 28 10:10:14.488: INFO: (9) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 8.744364ms)
  Apr 28 10:10:14.488: INFO: (9) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 8.814569ms)
  Apr 28 10:10:14.488: INFO: (9) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 8.945696ms)
  Apr 28 10:10:14.489: INFO: (9) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 9.443111ms)
  Apr 28 10:10:14.490: INFO: (9) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 10.410458ms)
  Apr 28 10:10:14.492: INFO: (9) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 12.731126ms)
  Apr 28 10:10:14.498: INFO: (10) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 5.180691ms)
  Apr 28 10:10:14.498: INFO: (10) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 5.529287ms)
  Apr 28 10:10:14.498: INFO: (10) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 5.662145ms)
  Apr 28 10:10:14.498: INFO: (10) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 6.016675ms)
  Apr 28 10:10:14.498: INFO: (10) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 5.734459ms)
  Apr 28 10:10:14.502: INFO: (10) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 9.333878ms)
  Apr 28 10:10:14.502: INFO: (10) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 9.443307ms)
  Apr 28 10:10:14.502: INFO: (10) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 9.247851ms)
  Apr 28 10:10:14.502: INFO: (10) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 9.292176ms)
  Apr 28 10:10:14.502: INFO: (10) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 9.499943ms)
  Apr 28 10:10:14.502: INFO: (10) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 9.534297ms)
  Apr 28 10:10:14.502: INFO: (10) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 9.592196ms)
  Apr 28 10:10:14.503: INFO: (10) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 10.593263ms)
  Apr 28 10:10:14.503: INFO: (10) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 10.289989ms)
  Apr 28 10:10:14.504: INFO: (10) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 10.965905ms)
  Apr 28 10:10:14.506: INFO: (10) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 13.678622ms)
  Apr 28 10:10:14.514: INFO: (11) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.392997ms)
  Apr 28 10:10:14.514: INFO: (11) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.442882ms)
  Apr 28 10:10:14.514: INFO: (11) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 7.417117ms)
  Apr 28 10:10:14.514: INFO: (11) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 7.306011ms)
  Apr 28 10:10:14.514: INFO: (11) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 7.339581ms)
  Apr 28 10:10:14.514: INFO: (11) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 7.488296ms)
  Apr 28 10:10:14.515: INFO: (11) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 7.469744ms)
  Apr 28 10:10:14.515: INFO: (11) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 7.696814ms)
  Apr 28 10:10:14.515: INFO: (11) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 7.614891ms)
  Apr 28 10:10:14.515: INFO: (11) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 7.892778ms)
  Apr 28 10:10:14.515: INFO: (11) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 8.008472ms)
  Apr 28 10:10:14.515: INFO: (11) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 8.172719ms)
  Apr 28 10:10:14.515: INFO: (11) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 7.834782ms)
  Apr 28 10:10:14.515: INFO: (11) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 8.028602ms)
  Apr 28 10:10:14.516: INFO: (11) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 9.079966ms)
  Apr 28 10:10:14.518: INFO: (11) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 11.110666ms)
  Apr 28 10:10:14.521: INFO: (12) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 3.263166ms)
  Apr 28 10:10:14.524: INFO: (12) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 5.785273ms)
  Apr 28 10:10:14.524: INFO: (12) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 5.623206ms)
  Apr 28 10:10:14.526: INFO: (12) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 7.058261ms)
  Apr 28 10:10:14.526: INFO: (12) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 7.162129ms)
  Apr 28 10:10:14.526: INFO: (12) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.633634ms)
  Apr 28 10:10:14.526: INFO: (12) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 8.056948ms)
  Apr 28 10:10:14.526: INFO: (12) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 7.980483ms)
  Apr 28 10:10:14.526: INFO: (12) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 7.949342ms)
  Apr 28 10:10:14.527: INFO: (12) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 8.13149ms)
  Apr 28 10:10:14.527: INFO: (12) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 8.059701ms)
  Apr 28 10:10:14.527: INFO: (12) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 7.925575ms)
  Apr 28 10:10:14.527: INFO: (12) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 8.963372ms)
  Apr 28 10:10:14.529: INFO: (12) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 10.536481ms)
  Apr 28 10:10:14.530: INFO: (12) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 11.370912ms)
  Apr 28 10:10:14.537: INFO: (12) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 17.829123ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 5.757374ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 5.745445ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 5.69431ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 5.61796ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 5.602277ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 6.132224ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 6.042858ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 6.018285ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 5.992172ms)
  Apr 28 10:10:14.543: INFO: (13) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 5.975764ms)
  Apr 28 10:10:14.544: INFO: (13) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 6.620424ms)
  Apr 28 10:10:14.544: INFO: (13) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 6.941072ms)
  Apr 28 10:10:14.544: INFO: (13) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 7.273441ms)
  Apr 28 10:10:14.544: INFO: (13) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.254759ms)
  Apr 28 10:10:14.545: INFO: (13) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 7.771897ms)
  Apr 28 10:10:14.547: INFO: (13) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 10.432498ms)
  Apr 28 10:10:14.555: INFO: (14) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 7.202174ms)
  Apr 28 10:10:14.556: INFO: (14) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 7.831973ms)
  Apr 28 10:10:14.556: INFO: (14) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 8.234141ms)
  Apr 28 10:10:14.556: INFO: (14) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 8.392874ms)
  Apr 28 10:10:14.556: INFO: (14) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 8.280506ms)
  Apr 28 10:10:14.557: INFO: (14) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 9.019117ms)
  Apr 28 10:10:14.557: INFO: (14) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 9.309497ms)
  Apr 28 10:10:14.557: INFO: (14) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 9.580603ms)
  Apr 28 10:10:14.557: INFO: (14) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 9.372815ms)
  Apr 28 10:10:14.557: INFO: (14) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 9.357738ms)
  Apr 28 10:10:14.557: INFO: (14) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 9.531305ms)
  Apr 28 10:10:14.558: INFO: (14) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 9.71917ms)
  Apr 28 10:10:14.559: INFO: (14) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 11.284628ms)
  Apr 28 10:10:14.559: INFO: (14) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 11.031281ms)
  Apr 28 10:10:14.559: INFO: (14) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 11.022928ms)
  Apr 28 10:10:14.561: INFO: (14) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 12.601331ms)
  Apr 28 10:10:14.564: INFO: (15) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 3.77119ms)
  Apr 28 10:10:14.566: INFO: (15) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 5.473439ms)
  Apr 28 10:10:14.566: INFO: (15) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 5.34345ms)
  Apr 28 10:10:14.566: INFO: (15) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 5.548614ms)
  Apr 28 10:10:14.566: INFO: (15) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 5.843473ms)
  Apr 28 10:10:14.567: INFO: (15) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 6.073523ms)
  Apr 28 10:10:14.568: INFO: (15) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 6.538775ms)
  Apr 28 10:10:14.568: INFO: (15) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 7.127045ms)
  Apr 28 10:10:14.568: INFO: (15) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 7.173504ms)
  Apr 28 10:10:14.568: INFO: (15) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 7.146138ms)
  Apr 28 10:10:14.568: INFO: (15) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 7.413676ms)
  Apr 28 10:10:14.570: INFO: (15) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 8.973723ms)
  Apr 28 10:10:14.570: INFO: (15) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 9.782283ms)
  Apr 28 10:10:14.572: INFO: (15) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 11.643888ms)
  Apr 28 10:10:14.577: INFO: (15) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 16.778466ms)
  Apr 28 10:10:14.579: INFO: (15) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 18.657802ms)
  Apr 28 10:10:14.584: INFO: (16) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 4.652778ms)
  Apr 28 10:10:14.584: INFO: (16) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 4.781254ms)
  Apr 28 10:10:14.585: INFO: (16) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 5.444094ms)
  Apr 28 10:10:14.586: INFO: (16) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 5.711052ms)
  Apr 28 10:10:14.586: INFO: (16) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 6.627571ms)
  Apr 28 10:10:14.586: INFO: (16) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 6.71272ms)
  Apr 28 10:10:14.587: INFO: (16) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 7.336232ms)
  Apr 28 10:10:14.587: INFO: (16) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 7.528843ms)
  Apr 28 10:10:14.589: INFO: (16) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 9.121432ms)
  Apr 28 10:10:14.590: INFO: (16) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 10.685125ms)
  Apr 28 10:10:14.591: INFO: (16) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 10.672817ms)
  Apr 28 10:10:14.591: INFO: (16) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 10.640617ms)
  Apr 28 10:10:14.591: INFO: (16) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 10.74644ms)
  Apr 28 10:10:14.591: INFO: (16) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 11.315368ms)
  Apr 28 10:10:14.591: INFO: (16) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 11.178354ms)
  Apr 28 10:10:14.598: INFO: (16) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 17.769666ms)
  Apr 28 10:10:14.601: INFO: (17) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 3.487802ms)
  Apr 28 10:10:14.602: INFO: (17) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 4.435204ms)
  Apr 28 10:10:14.603: INFO: (17) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 4.939102ms)
  Apr 28 10:10:14.603: INFO: (17) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 5.361646ms)
  Apr 28 10:10:14.604: INFO: (17) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 6.268129ms)
  Apr 28 10:10:14.604: INFO: (17) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 6.662555ms)
  Apr 28 10:10:14.605: INFO: (17) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 7.23201ms)
  Apr 28 10:10:14.605: INFO: (17) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 7.414127ms)
  Apr 28 10:10:14.606: INFO: (17) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 8.083732ms)
  Apr 28 10:10:14.606: INFO: (17) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 8.069611ms)
  Apr 28 10:10:14.607: INFO: (17) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 8.857686ms)
  Apr 28 10:10:14.608: INFO: (17) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 9.904769ms)
  Apr 28 10:10:14.609: INFO: (17) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 11.07833ms)
  Apr 28 10:10:14.611: INFO: (17) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 13.226137ms)
  Apr 28 10:10:14.611: INFO: (17) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 13.487937ms)
  Apr 28 10:10:14.611: INFO: (17) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 13.673509ms)
  Apr 28 10:10:14.620: INFO: (18) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 8.446675ms)
  Apr 28 10:10:14.620: INFO: (18) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 8.575017ms)
  Apr 28 10:10:14.620: INFO: (18) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 8.331018ms)
  Apr 28 10:10:14.620: INFO: (18) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 8.827863ms)
  Apr 28 10:10:14.620: INFO: (18) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 8.498829ms)
  Apr 28 10:10:14.620: INFO: (18) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 8.767191ms)
  Apr 28 10:10:14.620: INFO: (18) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 8.678824ms)
  Apr 28 10:10:14.620: INFO: (18) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 8.400369ms)
  Apr 28 10:10:14.621: INFO: (18) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 8.884975ms)
  Apr 28 10:10:14.622: INFO: (18) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 9.869139ms)
  Apr 28 10:10:14.623: INFO: (18) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 11.761174ms)
  Apr 28 10:10:14.624: INFO: (18) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 12.370969ms)
  Apr 28 10:10:14.625: INFO: (18) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 13.609181ms)
  Apr 28 10:10:14.626: INFO: (18) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 13.76611ms)
  Apr 28 10:10:14.628: INFO: (18) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 16.280568ms)
  Apr 28 10:10:14.630: INFO: (18) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 18.640216ms)
  Apr 28 10:10:14.634: INFO: (19) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:460/proxy/: tls baz (200; 3.390414ms)
  Apr 28 10:10:14.636: INFO: (19) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:462/proxy/: tls qux (200; 5.196699ms)
  Apr 28 10:10:14.636: INFO: (19) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">test<... (200; 4.816707ms)
  Apr 28 10:10:14.637: INFO: (19) /api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/https:proxy-service-wf5t5-rsmtz:443/proxy/tlsrewritem... (200; 6.435072ms)
  Apr 28 10:10:14.638: INFO: (19) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 7.230469ms)
  Apr 28 10:10:14.638: INFO: (19) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:160/proxy/: foo (200; 7.299026ms)
  Apr 28 10:10:14.639: INFO: (19) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:1080/proxy/rewriteme">... (200; 8.123251ms)
  Apr 28 10:10:14.640: INFO: (19) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname2/proxy/: tls qux (200; 8.977375ms)
  Apr 28 10:10:14.640: INFO: (19) /api/v1/namespaces/proxy-9435/services/https:proxy-service-wf5t5:tlsportname1/proxy/: tls baz (200; 9.647429ms)
  Apr 28 10:10:14.641: INFO: (19) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/: <a href="/api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz/proxy/rewriteme">test</a> (200; 9.785757ms)
  Apr 28 10:10:14.641: INFO: (19) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname2/proxy/: bar (200; 10.138086ms)
  Apr 28 10:10:14.643: INFO: (19) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname1/proxy/: foo (200; 11.91841ms)
  Apr 28 10:10:14.647: INFO: (19) /api/v1/namespaces/proxy-9435/services/proxy-service-wf5t5:portname2/proxy/: bar (200; 15.945884ms)
  Apr 28 10:10:14.647: INFO: (19) /api/v1/namespaces/proxy-9435/services/http:proxy-service-wf5t5:portname1/proxy/: foo (200; 15.900673ms)
  Apr 28 10:10:14.647: INFO: (19) /api/v1/namespaces/proxy-9435/pods/http:proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 16.114873ms)
  Apr 28 10:10:14.647: INFO: (19) /api/v1/namespaces/proxy-9435/pods/proxy-service-wf5t5-rsmtz:162/proxy/: bar (200; 15.777113ms)
  STEP: deleting ReplicationController proxy-service-wf5t5 in namespace proxy-9435, will wait for the garbage collector to delete the pods @ 04/28/24 10:10:14.647
  Apr 28 10:10:14.715: INFO: Deleting ReplicationController proxy-service-wf5t5 took: 4.957606ms
  E0428 10:10:14.764816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:14.816: INFO: Terminating ReplicationController proxy-service-wf5t5 pods took: 100.908095ms
  E0428 10:10:15.765187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:16.766245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:17.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9435" for this suite. @ 04/28/24 10:10:17.121
• [3.860 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/28/24 10:10:17.127
  Apr 28 10:10:17.127: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename dns @ 04/28/24 10:10:17.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:17.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:17.141
  STEP: Creating a test headless service @ 04/28/24 10:10:17.143
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5502.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5502.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/28/24 10:10:17.147
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5502.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5502.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/28/24 10:10:17.147
  STEP: creating a pod to probe DNS @ 04/28/24 10:10:17.147
  STEP: submitting the pod to kubernetes @ 04/28/24 10:10:17.147
  E0428 10:10:17.767159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:18.767210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:19.767751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:20.768514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:21.769191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:22.769408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/28/24 10:10:23.175
  STEP: looking for the results for each expected name from probers @ 04/28/24 10:10:23.178
  Apr 28 10:10:23.191: INFO: DNS probes using dns-5502/dns-test-127f3cb8-6c00-4c84-bbf2-0a3b071963cd succeeded

  STEP: deleting the pod @ 04/28/24 10:10:23.191
  STEP: deleting the test headless service @ 04/28/24 10:10:23.203
  Apr 28 10:10:23.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5502" for this suite. @ 04/28/24 10:10:23.221
• [6.106 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/28/24 10:10:23.232
  Apr 28 10:10:23.232: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename field-validation @ 04/28/24 10:10:23.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:23.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:23.25
  STEP: apply creating a deployment @ 04/28/24 10:10:23.252
  Apr 28 10:10:23.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6733" for this suite. @ 04/28/24 10:10:23.279
• [0.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 04/28/24 10:10:23.285
  Apr 28 10:10:23.285: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:10:23.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:23.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:23.296
  STEP: fetching services @ 04/28/24 10:10:23.298
  Apr 28 10:10:23.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6975" for this suite. @ 04/28/24 10:10:23.304
• [0.028 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/28/24 10:10:23.313
  Apr 28 10:10:23.313: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 10:10:23.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:23.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:23.334
  Apr 28 10:10:23.336: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: creating the pod @ 04/28/24 10:10:23.336
  STEP: submitting the pod to kubernetes @ 04/28/24 10:10:23.336
  E0428 10:10:23.770240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:24.770326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:25.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9507" for this suite. @ 04/28/24 10:10:25.405
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 04/28/24 10:10:25.412
  Apr 28 10:10:25.412: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename security-context-test @ 04/28/24 10:10:25.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:25.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:25.428
  E0428 10:10:25.771224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:26.772077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:27.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-32" for this suite. @ 04/28/24 10:10:27.452
• [2.045 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/28/24 10:10:27.457
  Apr 28 10:10:27.457: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename containers @ 04/28/24 10:10:27.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:27.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:27.472
  STEP: Creating a pod to test override command @ 04/28/24 10:10:27.474
  E0428 10:10:27.772852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:28.773779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:29.774362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:30.774900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:10:31.493
  Apr 28 10:10:31.495: INFO: Trying to get logs from node worker2 pod client-containers-25895669-eee5-45a9-a39d-f19dfe35f010 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:10:31.501
  Apr 28 10:10:31.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1945" for this suite. @ 04/28/24 10:10:31.519
• [4.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/28/24 10:10:31.526
  Apr 28 10:10:31.526: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/28/24 10:10:31.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:31.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:31.588
  STEP: getting /apis @ 04/28/24 10:10:31.589
  STEP: getting /apis/storage.k8s.io @ 04/28/24 10:10:31.592
  STEP: getting /apis/storage.k8s.io/v1 @ 04/28/24 10:10:31.593
  STEP: creating @ 04/28/24 10:10:31.593
  STEP: watching @ 04/28/24 10:10:31.605
  Apr 28 10:10:31.605: INFO: starting watch
  STEP: getting @ 04/28/24 10:10:31.609
  STEP: listing in namespace @ 04/28/24 10:10:31.612
  STEP: listing across namespaces @ 04/28/24 10:10:31.615
  STEP: patching @ 04/28/24 10:10:31.617
  STEP: updating @ 04/28/24 10:10:31.622
  Apr 28 10:10:31.627: INFO: waiting for watch events with expected annotations in namespace
  Apr 28 10:10:31.627: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/28/24 10:10:31.627
  STEP: deleting a collection @ 04/28/24 10:10:31.638
  Apr 28 10:10:31.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8727" for this suite. @ 04/28/24 10:10:31.662
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 04/28/24 10:10:31.671
  Apr 28 10:10:31.671: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename var-expansion @ 04/28/24 10:10:31.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:31.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:31.684
  STEP: Creating a pod to test env composition @ 04/28/24 10:10:31.685
  E0428 10:10:31.774950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:32.775476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:33.775574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:34.776597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:10:35.706
  Apr 28 10:10:35.710: INFO: Trying to get logs from node worker2 pod var-expansion-59544496-6f7b-4090-a933-b90290c07214 container dapi-container: <nil>
  STEP: delete the pod @ 04/28/24 10:10:35.715
  Apr 28 10:10:35.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1048" for this suite. @ 04/28/24 10:10:35.732
• [4.069 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/28/24 10:10:35.74
  Apr 28 10:10:35.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 10:10:35.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:35.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:35.756
  Apr 28 10:10:35.757: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: creating the pod @ 04/28/24 10:10:35.758
  STEP: submitting the pod to kubernetes @ 04/28/24 10:10:35.758
  E0428 10:10:35.777082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:36.778148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:37.778264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:10:37.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4322" for this suite. @ 04/28/24 10:10:37.788
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/28/24 10:10:37.793
  Apr 28 10:10:37.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename endpointslice @ 04/28/24 10:10:37.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:10:37.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:10:37.806
  E0428 10:10:38.778681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:39.779299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:40.780255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:41.780438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:42.780443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 04/28/24 10:10:42.876
  E0428 10:10:43.781509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:44.781945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:45.782350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:46.783329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:47.784296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 04/28/24 10:10:47.885
  E0428 10:10:48.785066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:49.785269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:50.785669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:51.785887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:52.786084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/28/24 10:10:52.892
  E0428 10:10:53.786228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:54.787123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:55.787242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:56.788346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:57.789336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 04/28/24 10:10:57.9
  Apr 28 10:10:57.918: INFO: EndpointSlice for Service endpointslice-831/example-named-port not found
  E0428 10:10:58.790185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:10:59.790259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:00.790359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:01.790807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:02.791006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:03.791353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:04.791753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:05.792208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:06.792427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:07.792664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:07.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-831" for this suite. @ 04/28/24 10:11:07.928
• [30.140 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/28/24 10:11:07.934
  Apr 28 10:11:07.934: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename field-validation @ 04/28/24 10:11:07.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:11:07.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:11:07.948
  Apr 28 10:11:07.950: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  W0428 10:11:07.951563      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000c8e1c0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0428 10:11:08.793413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:09.793657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0428 10:11:10.484701      21 warnings.go:70] unknown field "alpha"
  W0428 10:11:10.484729      21 warnings.go:70] unknown field "beta"
  W0428 10:11:10.484735      21 warnings.go:70] unknown field "delta"
  W0428 10:11:10.484741      21 warnings.go:70] unknown field "epsilon"
  W0428 10:11:10.484746      21 warnings.go:70] unknown field "gamma"
  E0428 10:11:10.794391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:11.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4244" for this suite. @ 04/28/24 10:11:11.016
• [3.088 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 04/28/24 10:11:11.022
  Apr 28 10:11:11.022: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:11:11.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:11:11.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:11:11.035
  STEP: creating a Service @ 04/28/24 10:11:11.04
  STEP: watching for the Service to be added @ 04/28/24 10:11:11.056
  Apr 28 10:11:11.057: INFO: Found Service test-service-lqq9n in namespace services-7178 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31897}]
  Apr 28 10:11:11.058: INFO: Service test-service-lqq9n created
  STEP: Getting /status @ 04/28/24 10:11:11.058
  Apr 28 10:11:11.062: INFO: Service test-service-lqq9n has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/28/24 10:11:11.062
  STEP: watching for the Service to be patched @ 04/28/24 10:11:11.067
  Apr 28 10:11:11.068: INFO: observed Service test-service-lqq9n in namespace services-7178 with annotations: map[] & LoadBalancer: {[]}
  Apr 28 10:11:11.068: INFO: Found Service test-service-lqq9n in namespace services-7178 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Apr 28 10:11:11.068: INFO: Service test-service-lqq9n has service status patched
  STEP: updating the ServiceStatus @ 04/28/24 10:11:11.068
  Apr 28 10:11:11.078: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/28/24 10:11:11.078
  Apr 28 10:11:11.079: INFO: Observed Service test-service-lqq9n in namespace services-7178 with annotations: map[] & Conditions: {[]}
  Apr 28 10:11:11.079: INFO: Observed event: &Service{ObjectMeta:{test-service-lqq9n  services-7178  94934f22-5db7-40df-b841-d8e3b5ebe9f9 35533 0 2024-04-28 10:11:11 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-28 10:11:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-28 10:11:11 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31897,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.68.56.155,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.68.56.155],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Apr 28 10:11:11.079: INFO: Found Service test-service-lqq9n in namespace services-7178 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 28 10:11:11.079: INFO: Service test-service-lqq9n has service status updated
  STEP: patching the service @ 04/28/24 10:11:11.079
  STEP: watching for the Service to be patched @ 04/28/24 10:11:11.087
  Apr 28 10:11:11.088: INFO: observed Service test-service-lqq9n in namespace services-7178 with labels: map[test-service-static:true]
  Apr 28 10:11:11.088: INFO: observed Service test-service-lqq9n in namespace services-7178 with labels: map[test-service-static:true]
  Apr 28 10:11:11.088: INFO: observed Service test-service-lqq9n in namespace services-7178 with labels: map[test-service-static:true]
  Apr 28 10:11:11.088: INFO: Found Service test-service-lqq9n in namespace services-7178 with labels: map[test-service:patched test-service-static:true]
  Apr 28 10:11:11.088: INFO: Service test-service-lqq9n patched
  STEP: deleting the service @ 04/28/24 10:11:11.089
  STEP: watching for the Service to be deleted @ 04/28/24 10:11:11.11
  Apr 28 10:11:11.111: INFO: Observed event: ADDED
  Apr 28 10:11:11.111: INFO: Observed event: MODIFIED
  Apr 28 10:11:11.111: INFO: Observed event: MODIFIED
  Apr 28 10:11:11.112: INFO: Observed event: MODIFIED
  Apr 28 10:11:11.112: INFO: Found Service test-service-lqq9n in namespace services-7178 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Apr 28 10:11:11.112: INFO: Service test-service-lqq9n deleted
  Apr 28 10:11:11.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7178" for this suite. @ 04/28/24 10:11:11.115
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/28/24 10:11:11.123
  Apr 28 10:11:11.123: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:11:11.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:11:11.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:11:11.141
  STEP: Creating projection with secret that has name projected-secret-test-ac68d341-ca15-40a5-b5ec-fe6a74b354e3 @ 04/28/24 10:11:11.143
  STEP: Creating a pod to test consume secrets @ 04/28/24 10:11:11.149
  E0428 10:11:11.794919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:12.795210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:13.795566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:14.796141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:11:15.181
  Apr 28 10:11:15.184: INFO: Trying to get logs from node worker2 pod pod-projected-secrets-7551cce4-dbef-469e-8f3b-71eae3698eaf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 10:11:15.192
  Apr 28 10:11:15.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4088" for this suite. @ 04/28/24 10:11:15.211
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/28/24 10:11:15.217
  Apr 28 10:11:15.217: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename controllerrevisions @ 04/28/24 10:11:15.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:11:15.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:11:15.234
  STEP: Creating DaemonSet "e2e-fhvhz-daemon-set" @ 04/28/24 10:11:15.257
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/28/24 10:11:15.261
  Apr 28 10:11:15.276: INFO: Number of nodes with available pods controlled by daemonset e2e-fhvhz-daemon-set: 0
  Apr 28 10:11:15.276: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 10:11:15.796249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:16.271: INFO: Number of nodes with available pods controlled by daemonset e2e-fhvhz-daemon-set: 1
  Apr 28 10:11:16.271: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 10:11:16.796462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:17.267: INFO: Number of nodes with available pods controlled by daemonset e2e-fhvhz-daemon-set: 3
  Apr 28 10:11:17.267: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-fhvhz-daemon-set
  STEP: Confirm DaemonSet "e2e-fhvhz-daemon-set" successfully created with "daemonset-name=e2e-fhvhz-daemon-set" label @ 04/28/24 10:11:17.269
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-fhvhz-daemon-set" @ 04/28/24 10:11:17.274
  Apr 28 10:11:17.277: INFO: Located ControllerRevision: "e2e-fhvhz-daemon-set-7bfcf886fb"
  STEP: Patching ControllerRevision "e2e-fhvhz-daemon-set-7bfcf886fb" @ 04/28/24 10:11:17.279
  Apr 28 10:11:17.283: INFO: e2e-fhvhz-daemon-set-7bfcf886fb has been patched
  STEP: Create a new ControllerRevision @ 04/28/24 10:11:17.283
  Apr 28 10:11:17.289: INFO: Created ControllerRevision: e2e-fhvhz-daemon-set-755557899d
  STEP: Confirm that there are two ControllerRevisions @ 04/28/24 10:11:17.289
  Apr 28 10:11:17.289: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 28 10:11:17.292: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-fhvhz-daemon-set-7bfcf886fb" @ 04/28/24 10:11:17.292
  STEP: Confirm that there is only one ControllerRevision @ 04/28/24 10:11:17.297
  Apr 28 10:11:17.297: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 28 10:11:17.299: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-fhvhz-daemon-set-755557899d" @ 04/28/24 10:11:17.302
  Apr 28 10:11:17.310: INFO: e2e-fhvhz-daemon-set-755557899d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/28/24 10:11:17.31
  W0428 10:11:17.318062      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/28/24 10:11:17.318
  Apr 28 10:11:17.318: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0428 10:11:17.797058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:18.318: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 28 10:11:18.321: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-fhvhz-daemon-set-755557899d=updated" @ 04/28/24 10:11:18.321
  STEP: Confirm that there is only one ControllerRevision @ 04/28/24 10:11:18.328
  Apr 28 10:11:18.328: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 28 10:11:18.331: INFO: Found 1 ControllerRevisions
  Apr 28 10:11:18.334: INFO: ControllerRevision "e2e-fhvhz-daemon-set-d6c8b664c" has revision 3
  STEP: Deleting DaemonSet "e2e-fhvhz-daemon-set" @ 04/28/24 10:11:18.337
  STEP: deleting DaemonSet.extensions e2e-fhvhz-daemon-set in namespace controllerrevisions-5024, will wait for the garbage collector to delete the pods @ 04/28/24 10:11:18.337
  Apr 28 10:11:18.396: INFO: Deleting DaemonSet.extensions e2e-fhvhz-daemon-set took: 4.790232ms
  Apr 28 10:11:18.496: INFO: Terminating DaemonSet.extensions e2e-fhvhz-daemon-set pods took: 100.216481ms
  E0428 10:11:18.797927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:19.798440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:19.900: INFO: Number of nodes with available pods controlled by daemonset e2e-fhvhz-daemon-set: 0
  Apr 28 10:11:19.900: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-fhvhz-daemon-set
  Apr 28 10:11:19.903: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35751"},"items":null}

  Apr 28 10:11:19.905: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35751"},"items":null}

  Apr 28 10:11:19.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5024" for this suite. @ 04/28/24 10:11:19.919
• [4.711 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 04/28/24 10:11:19.928
  Apr 28 10:11:19.928: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename namespaces @ 04/28/24 10:11:19.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:11:19.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:11:19.944
  STEP: Read namespace status @ 04/28/24 10:11:19.945
  Apr 28 10:11:19.949: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/28/24 10:11:19.949
  Apr 28 10:11:19.956: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/28/24 10:11:19.956
  Apr 28 10:11:19.962: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Apr 28 10:11:19.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3253" for this suite. @ 04/28/24 10:11:19.965
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/28/24 10:11:19.977
  Apr 28 10:11:19.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 10:11:19.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:11:19.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:11:19.991
  E0428 10:11:20.798969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:21.799479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:22.800589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:23.800938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:24.801404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:25.801883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:26.802260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:27.802805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:28.803170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:29.803271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:30.803642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:31.803854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:32.804142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:33.804364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:34.805390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:35.805606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:36.805714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:37.805932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:38.806067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:39.806714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:40.806990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:41.807351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:42.057: INFO: Container started at 2024-04-28 10:11:20 +0000 UTC, pod became ready at 2024-04-28 10:11:40 +0000 UTC
  Apr 28 10:11:42.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9849" for this suite. @ 04/28/24 10:11:42.061
• [22.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/28/24 10:11:42.066
  Apr 28 10:11:42.066: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replicaset @ 04/28/24 10:11:42.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:11:42.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:11:42.08
  Apr 28 10:11:42.084: INFO: Creating ReplicaSet my-hostname-basic-96de301f-bfe4-4b4a-ba08-3062033c2927
  Apr 28 10:11:42.091: INFO: Pod name my-hostname-basic-96de301f-bfe4-4b4a-ba08-3062033c2927: Found 0 pods out of 1
  E0428 10:11:42.807472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:43.808276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:44.808892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:45.809311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:46.809361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:47.095: INFO: Pod name my-hostname-basic-96de301f-bfe4-4b4a-ba08-3062033c2927: Found 1 pods out of 1
  Apr 28 10:11:47.095: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-96de301f-bfe4-4b4a-ba08-3062033c2927" is running
  Apr 28 10:11:47.098: INFO: Pod "my-hostname-basic-96de301f-bfe4-4b4a-ba08-3062033c2927-rngvc" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-28 10:11:43 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-28 10:11:42 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-28 10:11:43 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-28 10:11:43 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-28 10:11:42 +0000 UTC Reason: Message:}])
  Apr 28 10:11:47.098: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/28/24 10:11:47.098
  Apr 28 10:11:47.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3963" for this suite. @ 04/28/24 10:11:47.111
• [5.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 04/28/24 10:11:47.122
  Apr 28 10:11:47.122: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:11:47.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:11:47.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:11:47.137
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2291 @ 04/28/24 10:11:47.14
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/28/24 10:11:47.161
  STEP: creating service externalsvc in namespace services-2291 @ 04/28/24 10:11:47.161
  STEP: creating replication controller externalsvc in namespace services-2291 @ 04/28/24 10:11:47.185
  I0428 10:11:47.196139      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2291, replica count: 2
  E0428 10:11:47.809767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:48.809852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:49.810044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0428 10:11:50.251650      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/28/24 10:11:50.255
  Apr 28 10:11:50.273: INFO: Creating new exec pod
  E0428 10:11:50.810123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:51.810305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:52.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-2291 exec execpodfd86r -- /bin/sh -x -c nslookup nodeport-service.services-2291.svc.cluster.local'
  Apr 28 10:11:52.403: INFO: stderr: "+ nslookup nodeport-service.services-2291.svc.cluster.local\n"
  Apr 28 10:11:52.403: INFO: stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-2291.svc.cluster.local\tcanonical name = externalsvc.services-2291.svc.cluster.local.\nName:\texternalsvc.services-2291.svc.cluster.local\nAddress: 10.68.30.249\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2291, will wait for the garbage collector to delete the pods @ 04/28/24 10:11:52.404
  Apr 28 10:11:52.462: INFO: Deleting ReplicationController externalsvc took: 4.379546ms
  Apr 28 10:11:52.563: INFO: Terminating ReplicationController externalsvc pods took: 100.786103ms
  E0428 10:11:52.811155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:53.812158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:54.813051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:11:55.581: INFO: Cleaning up the NodePort to ExternalName test service
  Apr 28 10:11:55.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2291" for this suite. @ 04/28/24 10:11:55.595
• [8.481 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 04/28/24 10:11:55.602
  Apr 28 10:11:55.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename statefulset @ 04/28/24 10:11:55.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:11:55.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:11:55.675
  STEP: Creating service test in namespace statefulset-3651 @ 04/28/24 10:11:55.677
  Apr 28 10:11:55.696: INFO: Found 0 stateful pods, waiting for 1
  E0428 10:11:55.813481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:56.813880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:57.814133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:58.814438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:11:59.815271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:00.816296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:01.816563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:02.817519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:03.817691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:04.818078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:05.694: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/28/24 10:12:05.7
  W0428 10:12:05.708750      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Apr 28 10:12:05.717: INFO: Found 1 stateful pods, waiting for 2
  E0428 10:12:05.818197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:06.818411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:07.818620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:08.818716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:09.819136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:10.819324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:11.819329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:12.820428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:13.820539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:14.820672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:15.718: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 10:12:15.718: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/28/24 10:12:15.723
  STEP: Delete all of the StatefulSets @ 04/28/24 10:12:15.726
  STEP: Verify that StatefulSets have been deleted @ 04/28/24 10:12:15.732
  Apr 28 10:12:15.734: INFO: Deleting all statefulset in ns statefulset-3651
  Apr 28 10:12:15.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3651" for this suite. @ 04/28/24 10:12:15.755
• [20.170 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 04/28/24 10:12:15.772
  Apr 28 10:12:15.772: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 10:12:15.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:12:15.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:12:15.792
  STEP: running the image registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4 @ 04/28/24 10:12:15.794
  Apr 28 10:12:15.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4785 run e2e-test-httpd-pod --image=registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0428 10:12:15.821667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:15.847: INFO: stderr: ""
  Apr 28 10:12:15.847: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/28/24 10:12:15.847
  E0428 10:12:16.822251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:17.823323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:18.824311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:19.824797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:20.825838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/28/24 10:12:20.898
  Apr 28 10:12:20.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4785 get pod e2e-test-httpd-pod -o json'
  Apr 28 10:12:20.943: INFO: stderr: ""
  Apr 28 10:12:20.943: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-04-28T10:12:15Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4785\",\n        \"resourceVersion\": \"36231\",\n        \"uid\": \"e6e11a72-1f8e-4191-881c-7ed8af2140c3\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-8sbmg\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-8sbmg\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-28T10:12:17Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-28T10:12:15Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-28T10:12:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-28T10:12:17Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-28T10:12:15Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://76ddf80a8ba369edb2c2168045c310bc3fb464cc6b8dd8c9657c7e65d3843cb5\",\n                \"image\": \"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-28T10:12:16Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.227.138\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.227.138\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"172.20.189.101\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.20.189.101\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-28T10:12:15Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/28/24 10:12:20.943
  Apr 28 10:12:20.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4785 replace -f -'
  Apr 28 10:12:21.029: INFO: stderr: ""
  Apr 28 10:12:21.029: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/busybox:1.36.1-1 @ 04/28/24 10:12:21.029
  Apr 28 10:12:21.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4785 delete pods e2e-test-httpd-pod'
  E0428 10:12:21.826436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:22.376: INFO: stderr: ""
  Apr 28 10:12:22.376: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 28 10:12:22.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4785" for this suite. @ 04/28/24 10:12:22.379
• [6.611 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 04/28/24 10:12:22.384
  Apr 28 10:12:22.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:12:22.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:12:22.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:12:22.401
  STEP: creating service in namespace services-7017 @ 04/28/24 10:12:22.402
  STEP: creating service affinity-clusterip in namespace services-7017 @ 04/28/24 10:12:22.402
  STEP: creating replication controller affinity-clusterip in namespace services-7017 @ 04/28/24 10:12:22.412
  I0428 10:12:22.422302      21 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7017, replica count: 3
  E0428 10:12:22.827356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:23.827698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:24.828884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0428 10:12:25.473020      21 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 28 10:12:25.480: INFO: Creating new exec pod
  E0428 10:12:25.829398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:26.829587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:27.829900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:28.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-7017 exec execpod-affinity4pk8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Apr 28 10:12:28.570: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Apr 28 10:12:28.570: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:12:28.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-7017 exec execpod-affinity4pk8r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.125.71 80'
  Apr 28 10:12:28.649: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.125.71 80\nConnection to 10.68.125.71 80 port [tcp/http] succeeded!\n"
  Apr 28 10:12:28.649: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:12:28.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-7017 exec execpod-affinity4pk8r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.125.71:80/ ; done'
  Apr 28 10:12:28.785: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.125.71:80/\n"
  Apr 28 10:12:28.785: INFO: stdout: "\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x\naffinity-clusterip-t695x"
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Received response from host: affinity-clusterip-t695x
  Apr 28 10:12:28.785: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7017, will wait for the garbage collector to delete the pods @ 04/28/24 10:12:28.798
  E0428 10:12:28.830841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:28.857: INFO: Deleting ReplicationController affinity-clusterip took: 5.394867ms
  Apr 28 10:12:28.958: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.132217ms
  E0428 10:12:29.831140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:30.831902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:31.832603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:31.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7017" for this suite. @ 04/28/24 10:12:31.985
• [9.613 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 04/28/24 10:12:31.997
  Apr 28 10:12:31.997: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 10:12:31.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:12:32.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:12:32.021
  STEP: Creating a ResourceQuota with terminating scope @ 04/28/24 10:12:32.024
  STEP: Ensuring ResourceQuota status is calculated @ 04/28/24 10:12:32.028
  E0428 10:12:32.832694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:33.832813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/28/24 10:12:34.032
  STEP: Ensuring ResourceQuota status is calculated @ 04/28/24 10:12:34.035
  E0428 10:12:34.833590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:35.834048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/28/24 10:12:36.04
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/28/24 10:12:36.05
  E0428 10:12:36.834480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:37.834701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/28/24 10:12:38.054
  E0428 10:12:38.835223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:39.835250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/28/24 10:12:40.059
  STEP: Ensuring resource quota status released the pod usage @ 04/28/24 10:12:40.07
  E0428 10:12:40.836323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:41.836556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/28/24 10:12:42.073
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/28/24 10:12:42.083
  E0428 10:12:42.837017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:43.837283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/28/24 10:12:44.087
  E0428 10:12:44.837488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:45.838048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/28/24 10:12:46.092
  STEP: Ensuring resource quota status released the pod usage @ 04/28/24 10:12:46.105
  E0428 10:12:46.838424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:47.838725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:48.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9010" for this suite. @ 04/28/24 10:12:48.113
• [16.122 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/28/24 10:12:48.119
  Apr 28 10:12:48.119: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 10:12:48.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:12:48.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:12:48.132
  STEP: Creating secret with name secret-test-map-f2a29bc2-dfa5-4759-8506-f56d78147efa @ 04/28/24 10:12:48.134
  STEP: Creating a pod to test consume secrets @ 04/28/24 10:12:48.138
  E0428 10:12:48.839250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:49.839386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:50.840528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:51.841297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:12:52.159
  Apr 28 10:12:52.162: INFO: Trying to get logs from node worker2 pod pod-secrets-5fd32115-a62d-4ae9-8838-04d564878fc1 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 10:12:52.167
  Apr 28 10:12:52.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5559" for this suite. @ 04/28/24 10:12:52.185
• [4.074 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/28/24 10:12:52.193
  Apr 28 10:12:52.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 10:12:52.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:12:52.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:12:52.213
  STEP: Creating pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804 @ 04/28/24 10:12:52.215
  E0428 10:12:52.841709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:53.841884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/28/24 10:12:54.229
  Apr 28 10:12:54.232: INFO: Initial restart count of pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd is 0
  Apr 28 10:12:54.235: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:12:54.842301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:55.842287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:56.239: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:12:56.843353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:57.843402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:12:58.242: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:12:58.843678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:12:59.843853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:00.247: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:00.844011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:01.844201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:02.253: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:02.844291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:03.844678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:04.257: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:04.846073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:05.846583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:06.260: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:06.846712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:07.846852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:08.264: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:08.847869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:09.848149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:10.268: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:10.848237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:11.848610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:12.272: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:12.848800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:13.849089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:14.275: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:14.849594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:15.850075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:16.279: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:16.851219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:17.851315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:18.282: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:18.852268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:19.852422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:20.286: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:20.853229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:21.853416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:22.289: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:22.854127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:23.854354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:24.292: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:24.854456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:25.854658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:26.296: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:26.854723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:27.854986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:28.299: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:28.855269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:29.855291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:30.303: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:30.856546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:31.856665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:32.308: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:32.857774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:33.858044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:34.311: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:34.858963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:35.859275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:36.314: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:36.860196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:37.860338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:38.319: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:38.860442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:39.860754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:40.322: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:40.861323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:41.861571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:42.326: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:42.862442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:43.862720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:44.330: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:44.863497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:45.863889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:46.335: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:46.864298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:47.864626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:48.340: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:48.865713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:49.865946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:50.344: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:50.866345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:51.866495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:52.350: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:52.866563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:53.867188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:54.354: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:54.868217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:55.868447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:56.358: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:56.868593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:57.868832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:13:58.362: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:13:58.869498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:13:59.869804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:00.367: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:00.870683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:01.870897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:02.371: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:02.871371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:03.872391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:04.375: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:04.873180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:05.873503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:06.380: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:06.874839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:07.875219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:08.386: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:08.875932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:09.876884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:10.391: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:10.877068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:11.877417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:12.396: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:12.878539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:13.878907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:14.402: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:14.879222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:15.880117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:16.407: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:16.881101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:17.881344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:18.412: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:18.881854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:19.882418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:20.416: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:20.882520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:21.882765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:22.421: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:22.883201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:23.883311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:24.426: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:24.883389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:25.884457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:26.431: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:26.884909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:27.885041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:28.437: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:28.885508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:29.885706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:30.440: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:30.886125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:31.886719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:32.444: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:32.887013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:33.887247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:34.450: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:34.888185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:35.888670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:36.455: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:36.889462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:37.889845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:38.460: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:38.890044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:39.890978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:40.465: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:40.891621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:41.892305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:42.470: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:42.893350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:43.893611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:44.473: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:44.894585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:45.895092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:46.478: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:46.895205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:47.895539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:48.481: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:48.895788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:49.895852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:50.485: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:50.896776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:51.897165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:52.490: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:52.897722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:53.897960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:54.495: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:54.898258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:55.898429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:56.500: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:56.898453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:57.899734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:14:58.502: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:14:58.900223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:14:59.900550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:00.506: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:00.900712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:01.901252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:02.509: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:02.902420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:03.903437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:04.513: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:04.903682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:05.904362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:06.517: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:06.904683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:07.905179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:08.521: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:08.906135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:09.906379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:10.525: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:10.906997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:11.907313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:12.529: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:12.907432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:13.908342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:14.533: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:14.908790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:15.909183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:16.536: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:16.910245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:17.910472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:18.539: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:18.911117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:19.911260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:20.543: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:20.912228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:21.912445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:22.547: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:22.912630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:23.912801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:24.552: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:24.912822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:25.913020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:26.556: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:26.913027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:27.915160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:28.561: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:28.915301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:29.916340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:30.565: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:30.916403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:31.916538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:32.571: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:32.917493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:33.917642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:34.574: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:34.918236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:35.918694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:36.581: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:36.919292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:37.920329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:38.586: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:38.921369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:39.921592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:40.590: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:40.921944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:41.922191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:42.597: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:42.922856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:43.923140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:44.601: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:44.923817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:45.924181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:46.605: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:46.924971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:47.926050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:48.609: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:48.926637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:49.927443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:50.615: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:50.927782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:51.928489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:52.620: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:52.928830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:53.929116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:54.623: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:54.930011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:55.930774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:56.627: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:56.931542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:57.932205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:15:58.631: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:15:58.933172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:15:59.933424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:00.636: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:00.933709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:01.933994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:02.641: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:02.934710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:03.934874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:04.645: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:04.934944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:05.935164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:06.649: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:06.936306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:07.936543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:08.652: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:08.937261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:09.937460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:10.656: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:10.938305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:11.938720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:12.660: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:12.939253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:13.940291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:14.664: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:14.941406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:15.941618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:16.668: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:16.941930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:17.942130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:18.671: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:18.942341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:19.942639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:20.676: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:20.943073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:21.943300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:22.679: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:22.944329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:23.944523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:24.683: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:24.945424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:25.946255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:26.687: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:26.946697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:27.947105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:28.692: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:28.948128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:29.948487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:30.695: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:30.949417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:31.949605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:32.700: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:32.950340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:33.950631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:34.704: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:34.950810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:35.951031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:36.707: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:36.951890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:37.952239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:38.712: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:38.952412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:39.952485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:40.716: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:40.953570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:41.953765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:42.719: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:42.954412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:43.955080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:44.722: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:44.955491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:45.955606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:46.727: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:46.956294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:47.956649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:48.732: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:48.957636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:49.957846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:50.736: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:50.958838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:51.959099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:16:52.741: INFO: Get pod test-grpc-ab5b0843-2292-465f-bf38-bbfbb31f3acd in namespace container-probe-9804
  E0428 10:16:52.959191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:53.959352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/28/24 10:16:54.741
  Apr 28 10:16:54.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9804" for this suite. @ 04/28/24 10:16:54.757
• [242.570 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/28/24 10:16:54.763
  Apr 28 10:16:54.763: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename csi-storageclass @ 04/28/24 10:16:54.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:16:54.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:16:54.778
  STEP: Creating a StorageClass @ 04/28/24 10:16:54.78
  STEP: Get StorageClass "e2e-b8chd" @ 04/28/24 10:16:54.786
  STEP: Patching the StorageClass "e2e-b8chd" @ 04/28/24 10:16:54.789
  STEP: Delete StorageClass "e2e-b8chd" @ 04/28/24 10:16:54.793
  STEP: Confirm deletion of StorageClass "e2e-b8chd" @ 04/28/24 10:16:54.802
  STEP: Create a replacement StorageClass @ 04/28/24 10:16:54.805
  STEP: Updating StorageClass "e2e-v2-mnmkw" @ 04/28/24 10:16:54.81
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-mnmkw=updated" @ 04/28/24 10:16:54.819
  STEP: Deleting StorageClass "e2e-v2-mnmkw" via DeleteCollection @ 04/28/24 10:16:54.824
  STEP: Confirm deletion of StorageClass "e2e-v2-mnmkw" @ 04/28/24 10:16:54.833
  Apr 28 10:16:54.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7944" for this suite. @ 04/28/24 10:16:54.842
• [0.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 04/28/24 10:16:54.853
  Apr 28 10:16:54.853: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:16:54.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:16:54.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:16:54.867
  STEP: Creating a pod to test downward api env vars @ 04/28/24 10:16:54.869
  E0428 10:16:54.960072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:55.960254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:56.961259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:57.962085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:16:58.896
  Apr 28 10:16:58.898: INFO: Trying to get logs from node worker2 pod downward-api-c39bcd8d-0f88-416c-befd-9466c117051f container dapi-container: <nil>
  STEP: delete the pod @ 04/28/24 10:16:58.911
  Apr 28 10:16:58.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4716" for this suite. @ 04/28/24 10:16:58.927
• [4.079 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 04/28/24 10:16:58.932
  Apr 28 10:16:58.932: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/28/24 10:16:58.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:16:58.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:16:58.944
  STEP: create the container to handle the HTTPGet hook request. @ 04/28/24 10:16:58.952
  E0428 10:16:58.962597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:16:59.963622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:00.963724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/28/24 10:17:00.983
  E0428 10:17:01.964216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:02.964420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/28/24 10:17:03
  STEP: delete the pod with lifecycle hook @ 04/28/24 10:17:03.004
  E0428 10:17:03.964638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:04.965196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:17:05.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3160" for this suite. @ 04/28/24 10:17:05.024
• [6.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 04/28/24 10:17:05.03
  Apr 28 10:17:05.030: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename security-context-test @ 04/28/24 10:17:05.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:17:05.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:17:05.045
  E0428 10:17:05.965685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:06.965939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:17:07.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5930" for this suite. @ 04/28/24 10:17:07.065
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 04/28/24 10:17:07.069
  Apr 28 10:17:07.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:17:07.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:17:07.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:17:07.084
  STEP: Creating configMap configmap-5180/configmap-test-520bcd6a-feb3-4967-8f39-171fa958afeb @ 04/28/24 10:17:07.085
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:17:07.09
  E0428 10:17:07.966118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:08.966343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:17:09.107
  Apr 28 10:17:09.111: INFO: Trying to get logs from node worker2 pod pod-configmaps-a728d73d-5cab-4463-b0c3-435c4d31fe92 container env-test: <nil>
  STEP: delete the pod @ 04/28/24 10:17:09.117
  Apr 28 10:17:09.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5180" for this suite. @ 04/28/24 10:17:09.134
• [2.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/28/24 10:17:09.138
  Apr 28 10:17:09.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/28/24 10:17:09.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:17:09.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:17:09.151
  Apr 28 10:17:09.154: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:17:09.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5746" for this suite. @ 04/28/24 10:17:09.687
• [0.554 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/28/24 10:17:09.693
  Apr 28 10:17:09.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:17:09.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:17:09.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:17:09.709
  STEP: Creating configMap with name projected-configmap-test-volume-map-61667270-c39c-40c0-aa59-a489a238bdfc @ 04/28/24 10:17:09.711
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:17:09.718
  E0428 10:17:09.967415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:10.967641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:11.967889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:12.968346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:17:13.742
  Apr 28 10:17:13.746: INFO: Trying to get logs from node worker2 pod pod-projected-configmaps-624feb8e-8cb4-42e3-9102-6132955f3106 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:17:13.752
  Apr 28 10:17:13.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3317" for this suite. @ 04/28/24 10:17:13.77
• [4.083 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 04/28/24 10:17:13.776
  Apr 28 10:17:13.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:17:13.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:17:13.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:17:13.793
  STEP: creating service in namespace services-9638 @ 04/28/24 10:17:13.797
  STEP: creating service affinity-nodeport in namespace services-9638 @ 04/28/24 10:17:13.797
  STEP: creating replication controller affinity-nodeport in namespace services-9638 @ 04/28/24 10:17:13.813
  I0428 10:17:13.819594      21 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-9638, replica count: 3
  E0428 10:17:13.969239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:14.969644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:15.969783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0428 10:17:16.871540      21 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 28 10:17:16.879: INFO: Creating new exec pod
  E0428 10:17:16.970427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:17.970636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:18.971643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:17:19.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-9638 exec execpod-affinitymtq6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0428 10:17:19.972278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:17:19.982: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Apr 28 10:17:19.982: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:17:19.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-9638 exec execpod-affinitymtq6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.57.118 80'
  Apr 28 10:17:20.061: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.57.118 80\nConnection to 10.68.57.118 80 port [tcp/http] succeeded!\n"
  Apr 28 10:17:20.061: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:17:20.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-9638 exec execpod-affinitymtq6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.136 30310'
  Apr 28 10:17:20.134: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.136 30310\nConnection to 192.168.227.136 30310 port [tcp/*] succeeded!\n"
  Apr 28 10:17:20.134: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:17:20.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-9638 exec execpod-affinitymtq6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.137 30310'
  Apr 28 10:17:20.206: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.137 30310\nConnection to 192.168.227.137 30310 port [tcp/*] succeeded!\n"
  Apr 28 10:17:20.206: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:17:20.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-9638 exec execpod-affinitymtq6s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.227.136:30310/ ; done'
  Apr 28 10:17:20.359: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.136:30310/\n"
  Apr 28 10:17:20.359: INFO: stdout: "\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d\naffinity-nodeport-4ck9d"
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.359: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.360: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.360: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.360: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.360: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.360: INFO: Received response from host: affinity-nodeport-4ck9d
  Apr 28 10:17:20.360: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-9638, will wait for the garbage collector to delete the pods @ 04/28/24 10:17:20.375
  Apr 28 10:17:20.435: INFO: Deleting ReplicationController affinity-nodeport took: 5.722288ms
  Apr 28 10:17:20.535: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.093781ms
  E0428 10:17:20.972673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:21.973569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:22.974180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:17:23.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9638" for this suite. @ 04/28/24 10:17:23.459
• [9.695 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/28/24 10:17:23.474
  Apr 28 10:17:23.474: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 10:17:23.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:17:23.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:17:23.494
  STEP: Creating secret with name secret-test-f5dce843-043a-42c8-8d17-3b2ae7c8b2a9 @ 04/28/24 10:17:23.496
  STEP: Creating a pod to test consume secrets @ 04/28/24 10:17:23.501
  E0428 10:17:23.974446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:24.975223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:25.975872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:26.977017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:17:27.522
  Apr 28 10:17:27.525: INFO: Trying to get logs from node worker2 pod pod-secrets-115b8973-ce30-4eec-97e6-3c9993e1efc1 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 10:17:27.532
  Apr 28 10:17:27.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7091" for this suite. @ 04/28/24 10:17:27.55
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/28/24 10:17:27.56
  Apr 28 10:17:27.560: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename chunking @ 04/28/24 10:17:27.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:17:27.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:17:27.577
  STEP: creating a large number of resources @ 04/28/24 10:17:27.579
  E0428 10:17:27.977760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:28.977974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:29.978535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:30.978749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:31.979098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:32.979922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:33.980656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:34.981287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:35.981382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:36.981944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:37.982443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:38.983410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:39.984367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:40.985356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:41.985929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:42.986763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:43.987146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:44.987348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 04/28/24 10:17:45.266
  Apr 28 10:17:45.315: INFO: Retrieved 40/40 results with rv 37878 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 04/28/24 10:17:45.315
  E0428 10:17:45.987787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:46.987788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:47.988286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:48.989023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:49.989403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:50.989514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:51.989768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:52.990813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:53.991690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:54.991826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:55.992037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:56.992242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:57.992396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:58.992626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:17:59.993765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:00.993905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:01.994105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:02.994337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:03.994610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:04.995331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:18:05.320: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:18:05.995672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:06.996109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:07.996480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:08.996707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:09.997511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:10.997655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:11.997921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:12.998016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:13.998237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:14.998686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:15.999051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:16.999203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:17.999368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:18.999498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:19.999937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:21.000082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:22.000214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:23.000329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:24.000737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:25.000850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:18:25.318: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:18:26.001900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:27.001998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:28.002418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:29.002700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:30.003673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:31.004275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:32.004494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:33.005600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:34.005874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:35.006479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:36.006784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:37.007222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:38.008325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:39.008560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:40.009511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:41.009895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:42.010761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:43.011890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:44.012599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:45.013111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:18:45.319: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:18:46.013404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:47.014449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:48.014868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:49.015199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:50.015600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:51.016379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:52.016603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:53.016695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:54.017295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:55.017704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:56.017951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:57.018689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:58.019110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:18:59.019218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:00.019709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:01.020444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:02.021236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:03.022096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:04.022318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:05.022378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:19:05.320: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:19:06.022569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:07.022940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:08.023212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:09.024284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:10.024434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:11.024607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:12.024792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:13.024994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:14.026062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:15.026510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:16.026629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:17.027005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:18.027157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:19.028267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:20.028609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:21.028862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:22.029087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:23.029362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:24.029843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:25.030487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:19:25.319: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:19:26.031467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:27.032247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:28.032539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:29.032739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:30.033562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:31.033763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:32.034024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:33.034265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:34.034533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:35.035050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:36.035168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:37.036269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:38.036449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:39.036662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:40.037577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:41.037783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:42.038010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:43.038783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:44.038952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:45.039558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:19:45.320: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:19:46.039872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:47.039912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:48.040488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:49.041291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:50.041602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:51.041791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:52.042022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:53.042132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:54.042210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:55.042543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:56.042732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:57.042867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:58.043537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:19:59.043638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:00.043909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:01.044297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:02.044584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:03.044807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:04.045052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:05.045620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:20:05.320: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:20:06.046095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:07.046171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:08.046890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:09.047211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:10.047587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:11.048560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:12.049655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:13.050184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:14.050687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:15.051670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:16.052259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:17.052400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:18.052680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:19.053561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:20.054730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:21.054870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:22.054959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:23.055218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:24.056240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:25.056896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:20:25.319: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:20:26.057949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:27.058687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:28.058787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:29.058981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:30.059711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:31.060344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:32.060436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:33.060740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:34.061170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:35.061465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:36.061657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:37.062454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:38.062956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:39.063212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:40.063700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:41.064326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:42.065076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:43.065212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:44.065515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:45.066137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:20:45.320: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:20:46.066415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:47.066492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:48.066599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:49.066725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:50.067785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:51.068260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:52.068384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:53.068546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:54.068902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:55.069802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:56.070111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:57.070351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:58.070649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:20:59.070698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:00.070764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:01.070985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:02.071206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:03.072289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:04.072493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:05.073279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:21:05.319: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:21:06.073400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:07.073519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:08.073663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:09.073816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:10.074798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:11.075094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:12.075309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:13.075572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:14.075689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:15.075973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:16.076073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:17.076241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:18.076463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:19.076567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:20.076862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:21.076989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:22.077656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:23.077844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:24.078041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:25.078488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:21:25.321: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:21:26.079339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:27.080268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:28.080549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:29.081474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:30.081770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:31.081982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:32.082053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:33.082247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:34.082342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:35.082719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:36.082852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:37.083011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:38.083236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:39.084276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:40.084690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:41.085157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:42.085372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:43.086340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:44.086539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:45.086993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:21:45.319: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:21:46.087443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:47.087297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:48.088223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:49.088482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:50.088559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:51.089171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:52.089384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:53.089655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:54.090518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:55.091346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:56.092330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:57.092633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:58.092827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:21:59.093878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:00.094852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:01.095765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:02.096632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:03.097590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:04.097848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:05.099101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:22:05.320: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:22:06.100135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:07.100236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:08.100455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:09.100654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:10.101681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:11.101831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:12.101939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:13.102691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:14.103003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:15.103584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:16.104342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:17.104872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:18.105058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:19.105226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:20.105947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:21.106148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:22.106495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:23.106708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:24.106828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:25.107361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:22:25.320: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:22:26.107635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:27.108250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:28.108451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:29.108670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:30.109646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:31.109848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:32.110043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:33.110340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:34.111208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:35.111602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:36.112269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:37.112647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:38.113536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:39.113855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:40.114636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:41.115276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:42.116233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:43.116654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:44.117162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:45.118179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:22:45.318: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:22:46.118361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:47.118817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:48.119013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:49.119191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:50.119537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:51.119704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:52.120321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:53.121119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:54.121340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:55.121583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:56.121755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:57.121916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:58.122097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:22:59.122783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:00.122946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:01.123163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:02.123276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:03.124318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:04.124529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:05.125117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:23:05.319: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:23:06.125856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:07.126166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:08.126338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:09.126536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:10.126912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:11.127167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:12.127253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:13.128286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:14.128501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:15.128897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:16.129105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:17.129284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:18.129940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:19.130591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:20.130644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:21.130877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:22.131509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:23.131576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:24.132217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:25.132733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:23:25.320: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0428 10:23:26.133407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:27.134461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:28.134675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:29.134886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:30.135720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:31.136252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:32.136499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:33.136751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:34.137351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:35.137533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:36.137847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:37.138166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:38.138244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:39.138462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:40.138916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:41.139188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:42.140273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:43.140964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:44.141184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:45.141575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:23:45.318: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Apr 28 10:23:45.318: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/28/24 10:23:45.318
  STEP: retrieving all remaining pages @ 04/28/24 10:23:45.323
  Apr 28 10:23:45.326: INFO: Retrieved 40/40 results with rv 38433 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Apr 28 10:23:45.330: INFO: Retrieved 40/40 results with rv 38433 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Apr 28 10:23:45.333: INFO: Retrieved 40/40 results with rv 38433 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Apr 28 10:23:45.337: INFO: Retrieved 40/40 results with rv 38433 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Apr 28 10:23:45.340: INFO: Retrieved 40/40 results with rv 38433 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Apr 28 10:23:45.344: INFO: Retrieved 40/40 results with rv 38433 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Apr 28 10:23:45.347: INFO: Retrieved 40/40 results with rv 38433 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg0MzMsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Apr 28 10:23:45.350: INFO: Retrieved 40/40 results with rv 38433 and continue 
  Apr 28 10:23:45.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1658" for this suite. @ 04/28/24 10:23:45.352
• [377.797 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/28/24 10:23:45.357
  Apr 28 10:23:45.357: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/28/24 10:23:45.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:23:45.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:23:45.37
  Apr 28 10:23:45.373: INFO: Waiting up to 1m0s for all nodes to be ready
  E0428 10:23:46.142010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:47.142569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:48.143444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:49.144231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:50.144663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:51.144831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:52.144872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:53.145006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:54.145917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:55.146707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:56.146763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:57.147230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:58.148287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:23:59.148514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:00.149385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:01.149637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:02.149772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:03.149982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:04.150810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:05.151799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:06.152577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:07.152689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:08.153739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:09.154281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:10.154988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:11.155189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:12.155312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:13.155421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:14.156075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:15.156695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:16.156744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:17.157105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:18.157275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:19.157605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:20.158251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:21.158443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:22.159226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:23.159322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:24.159972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:25.160942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:26.161319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:27.161512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:28.162190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:29.162313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:30.162825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:31.162992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:32.163303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:33.164340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:34.165275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:35.165963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:36.167141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:37.167212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:38.168219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:39.169051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:40.169800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:41.170222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:42.170825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:43.170982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:44.171412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:45.172209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:24:45.374: INFO: Waiting for terminating namespaces to be deleted...
  Apr 28 10:24:45.379: INFO: Starting informer...
  STEP: Starting pods... @ 04/28/24 10:24:45.379
  Apr 28 10:24:45.597: INFO: Pod1 is running on worker2. Tainting Node
  E0428 10:24:46.172373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:47.173927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:24:47.813: INFO: Pod2 is running on worker2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/28/24 10:24:47.813
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/28/24 10:24:47.82
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/28/24 10:24:47.823
  E0428 10:24:48.175198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:49.175437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:50.175813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:51.176430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:52.176932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:53.178150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:24:53.637: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0428 10:24:54.178299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:55.178935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:56.179058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:57.180674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:58.180813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:24:59.181486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:00.181790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:01.182573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:02.182881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:03.183104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:04.183235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:05.183532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:06.183705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:07.185111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:08.185370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:09.185559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:10.185753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:11.185864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:12.186030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:13.187077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:13.669: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/28/24 10:25:13.676
  Apr 28 10:25:13.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8652" for this suite. @ 04/28/24 10:25:13.683
• [88.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/28/24 10:25:13.689
  Apr 28 10:25:13.689: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 10:25:13.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:25:13.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:25:13.702
  STEP: creating the pod @ 04/28/24 10:25:13.705
  STEP: submitting the pod to kubernetes @ 04/28/24 10:25:13.705
  STEP: verifying QOS class is set on the pod @ 04/28/24 10:25:13.717
  Apr 28 10:25:13.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1154" for this suite. @ 04/28/24 10:25:13.728
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/28/24 10:25:13.735
  Apr 28 10:25:13.735: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename disruption @ 04/28/24 10:25:13.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:25:13.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:25:13.751
  STEP: Waiting for the pdb to be processed @ 04/28/24 10:25:13.761
  E0428 10:25:14.187689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:15.188099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 04/28/24 10:25:15.768
  STEP: Waiting for all pods to be running @ 04/28/24 10:25:15.775
  Apr 28 10:25:15.780: INFO: running pods: 0 < 1
  E0428 10:25:16.188815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:17.190131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/28/24 10:25:17.78
  STEP: Waiting for the pdb to be processed @ 04/28/24 10:25:17.792
  STEP: Patching PodDisruptionBudget status @ 04/28/24 10:25:17.798
  STEP: Waiting for the pdb to be processed @ 04/28/24 10:25:17.805
  Apr 28 10:25:17.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9798" for this suite. @ 04/28/24 10:25:17.812
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 04/28/24 10:25:17.818
  Apr 28 10:25:17.818: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/28/24 10:25:17.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:25:17.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:25:17.835
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/28/24 10:25:17.838
  Apr 28 10:25:17.838: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:25:18.191282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:19.192039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:20.192549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:21.193321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:22.194169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/28/24 10:25:22.409
  Apr 28 10:25:22.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:25:23.194754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:23.525: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:25:24.194905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:25.195588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:26.196262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:27.197774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:28.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9217" for this suite. @ 04/28/24 10:25:28.08
• [10.269 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 04/28/24 10:25:28.087
  Apr 28 10:25:28.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename security-context-test @ 04/28/24 10:25:28.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:25:28.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:25:28.112
  E0428 10:25:28.198397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:29.198500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:30.198590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:31.199012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:32.144: INFO: Got logs for pod "busybox-privileged-false-a79007c5-5099-4372-a054-996ef96339d6": "ip: RTNETLINK answers: Operation not permitted\n"
  Apr 28 10:25:32.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9274" for this suite. @ 04/28/24 10:25:32.146
• [4.065 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/28/24 10:25:32.152
  Apr 28 10:25:32.152: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 10:25:32.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:25:32.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:25:32.166
  STEP: creating pod @ 04/28/24 10:25:32.168
  E0428 10:25:32.199847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:33.200071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:34.189: INFO: Pod pod-hostip-86e01f56-c793-4a00-b476-85245b3021ae has hostIP: 192.168.227.138
  Apr 28 10:25:34.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6330" for this suite. @ 04/28/24 10:25:34.193
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 04/28/24 10:25:34.199
  Apr 28 10:25:34.199: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 10:25:34.199
  E0428 10:25:34.201057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:25:34.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:25:34.261
  STEP: Starting the proxy @ 04/28/24 10:25:34.264
  Apr 28 10:25:34.264: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2002 proxy --unix-socket=/tmp/kubectl-proxy-unix1358330365/test'
  STEP: retrieving proxy /api/ output @ 04/28/24 10:25:34.296
  Apr 28 10:25:34.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2002" for this suite. @ 04/28/24 10:25:34.302
• [0.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/28/24 10:25:34.307
  Apr 28 10:25:34.307: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename gc @ 04/28/24 10:25:34.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:25:34.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:25:34.321
  STEP: create the rc @ 04/28/24 10:25:34.325
  W0428 10:25:34.331709      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0428 10:25:35.201674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:36.202309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:37.202708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:38.203123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:39.203349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:40.203789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/28/24 10:25:40.343
  STEP: wait for the rc to be deleted @ 04/28/24 10:25:40.422
  E0428 10:25:41.204593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:41.500: INFO: 80 pods remaining
  Apr 28 10:25:41.500: INFO: 80 pods has nil DeletionTimestamp
  Apr 28 10:25:41.500: INFO: 
  E0428 10:25:42.207285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:42.449: INFO: 69 pods remaining
  Apr 28 10:25:42.449: INFO: 69 pods has nil DeletionTimestamp
  Apr 28 10:25:42.449: INFO: 
  E0428 10:25:43.207436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:43.469: INFO: 60 pods remaining
  Apr 28 10:25:43.469: INFO: 60 pods has nil DeletionTimestamp
  Apr 28 10:25:43.469: INFO: 
  E0428 10:25:44.209249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:44.447: INFO: 40 pods remaining
  Apr 28 10:25:44.447: INFO: 40 pods has nil DeletionTimestamp
  Apr 28 10:25:44.447: INFO: 
  E0428 10:25:45.209949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:45.451: INFO: 29 pods remaining
  Apr 28 10:25:45.451: INFO: 28 pods has nil DeletionTimestamp
  Apr 28 10:25:45.451: INFO: 
  E0428 10:25:46.210057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:46.432: INFO: 20 pods remaining
  Apr 28 10:25:46.432: INFO: 20 pods has nil DeletionTimestamp
  Apr 28 10:25:46.432: INFO: 
  E0428 10:25:47.211181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/28/24 10:25:47.437
  W0428 10:25:47.442322      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 28 10:25:47.442: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 28 10:25:47.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5865" for this suite. @ 04/28/24 10:25:47.47
• [13.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 04/28/24 10:25:47.495
  Apr 28 10:25:47.495: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/28/24 10:25:47.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:25:47.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:25:47.58
  STEP: create the container to handle the HTTPGet hook request. @ 04/28/24 10:25:47.596
  E0428 10:25:48.212281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:49.212637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/28/24 10:25:49.667
  E0428 10:25:50.213643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:51.213769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/28/24 10:25:51.684
  STEP: delete the pod with lifecycle hook @ 04/28/24 10:25:51.691
  E0428 10:25:52.214011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:53.214105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:25:53.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9591" for this suite. @ 04/28/24 10:25:53.707
• [6.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/28/24 10:25:53.713
  Apr 28 10:25:53.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename gc @ 04/28/24 10:25:53.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:25:53.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:25:53.728
  STEP: create the rc1 @ 04/28/24 10:25:53.733
  STEP: create the rc2 @ 04/28/24 10:25:53.738
  E0428 10:25:54.215129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:55.216017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:56.216897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:57.217359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:58.218269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:25:59.219121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/28/24 10:25:59.839
  E0428 10:26:00.219424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:01.220485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:02.221354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/28/24 10:26:02.668
  STEP: wait for the rc to be deleted @ 04/28/24 10:26:02.712
  E0428 10:26:03.221590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:04.221704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:05.221835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:06.222238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:07.222112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:07.752: INFO: 70 pods remaining
  Apr 28 10:26:07.752: INFO: 70 pods has nil DeletionTimestamp
  Apr 28 10:26:07.752: INFO: 
  E0428 10:26:08.222390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:09.222538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:10.223106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:11.223316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:12.223304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/28/24 10:26:12.728
  W0428 10:26:12.738270      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 28 10:26:12.738: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 28 10:26:12.738: INFO: Deleting pod "simpletest-rc-to-be-deleted-26x5c" in namespace "gc-1243"
  Apr 28 10:26:12.752: INFO: Deleting pod "simpletest-rc-to-be-deleted-27nhn" in namespace "gc-1243"
  Apr 28 10:26:12.778: INFO: Deleting pod "simpletest-rc-to-be-deleted-2fwvf" in namespace "gc-1243"
  Apr 28 10:26:12.811: INFO: Deleting pod "simpletest-rc-to-be-deleted-2h4pq" in namespace "gc-1243"
  Apr 28 10:26:12.842: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bx26" in namespace "gc-1243"
  Apr 28 10:26:12.869: INFO: Deleting pod "simpletest-rc-to-be-deleted-4jxwq" in namespace "gc-1243"
  Apr 28 10:26:12.906: INFO: Deleting pod "simpletest-rc-to-be-deleted-4rsvj" in namespace "gc-1243"
  Apr 28 10:26:12.935: INFO: Deleting pod "simpletest-rc-to-be-deleted-5fbvf" in namespace "gc-1243"
  Apr 28 10:26:12.969: INFO: Deleting pod "simpletest-rc-to-be-deleted-5lbpl" in namespace "gc-1243"
  Apr 28 10:26:13.005: INFO: Deleting pod "simpletest-rc-to-be-deleted-65xzj" in namespace "gc-1243"
  Apr 28 10:26:13.036: INFO: Deleting pod "simpletest-rc-to-be-deleted-66v42" in namespace "gc-1243"
  Apr 28 10:26:13.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-67jf5" in namespace "gc-1243"
  Apr 28 10:26:13.105: INFO: Deleting pod "simpletest-rc-to-be-deleted-67nc6" in namespace "gc-1243"
  Apr 28 10:26:13.168: INFO: Deleting pod "simpletest-rc-to-be-deleted-689cj" in namespace "gc-1243"
  Apr 28 10:26:13.216: INFO: Deleting pod "simpletest-rc-to-be-deleted-6fqnf" in namespace "gc-1243"
  E0428 10:26:13.223766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:13.251: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jcf4" in namespace "gc-1243"
  Apr 28 10:26:13.310: INFO: Deleting pod "simpletest-rc-to-be-deleted-6wgrw" in namespace "gc-1243"
  Apr 28 10:26:13.353: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cn4q" in namespace "gc-1243"
  Apr 28 10:26:13.406: INFO: Deleting pod "simpletest-rc-to-be-deleted-7nlv5" in namespace "gc-1243"
  Apr 28 10:26:13.437: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bxlj" in namespace "gc-1243"
  Apr 28 10:26:13.497: INFO: Deleting pod "simpletest-rc-to-be-deleted-8q7gp" in namespace "gc-1243"
  Apr 28 10:26:13.529: INFO: Deleting pod "simpletest-rc-to-be-deleted-8tfn6" in namespace "gc-1243"
  Apr 28 10:26:13.583: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vl7x" in namespace "gc-1243"
  Apr 28 10:26:13.627: INFO: Deleting pod "simpletest-rc-to-be-deleted-8w52w" in namespace "gc-1243"
  Apr 28 10:26:13.680: INFO: Deleting pod "simpletest-rc-to-be-deleted-9kld4" in namespace "gc-1243"
  Apr 28 10:26:13.735: INFO: Deleting pod "simpletest-rc-to-be-deleted-9ldcm" in namespace "gc-1243"
  Apr 28 10:26:13.801: INFO: Deleting pod "simpletest-rc-to-be-deleted-9w8tl" in namespace "gc-1243"
  Apr 28 10:26:13.836: INFO: Deleting pod "simpletest-rc-to-be-deleted-9ztmk" in namespace "gc-1243"
  Apr 28 10:26:13.947: INFO: Deleting pod "simpletest-rc-to-be-deleted-bd887" in namespace "gc-1243"
  Apr 28 10:26:14.008: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgbwk" in namespace "gc-1243"
  Apr 28 10:26:14.100: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjq9q" in namespace "gc-1243"
  E0428 10:26:14.224659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:14.229: INFO: Deleting pod "simpletest-rc-to-be-deleted-blx9x" in namespace "gc-1243"
  Apr 28 10:26:14.345: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpbrq" in namespace "gc-1243"
  Apr 28 10:26:14.414: INFO: Deleting pod "simpletest-rc-to-be-deleted-brvjw" in namespace "gc-1243"
  Apr 28 10:26:14.512: INFO: Deleting pod "simpletest-rc-to-be-deleted-d2h42" in namespace "gc-1243"
  Apr 28 10:26:14.535: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbswj" in namespace "gc-1243"
  Apr 28 10:26:14.574: INFO: Deleting pod "simpletest-rc-to-be-deleted-dl728" in namespace "gc-1243"
  Apr 28 10:26:14.724: INFO: Deleting pod "simpletest-rc-to-be-deleted-dld8z" in namespace "gc-1243"
  Apr 28 10:26:14.772: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdwhm" in namespace "gc-1243"
  Apr 28 10:26:14.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-g27rv" in namespace "gc-1243"
  Apr 28 10:26:14.929: INFO: Deleting pod "simpletest-rc-to-be-deleted-g77d6" in namespace "gc-1243"
  Apr 28 10:26:14.991: INFO: Deleting pod "simpletest-rc-to-be-deleted-g9s7d" in namespace "gc-1243"
  Apr 28 10:26:15.049: INFO: Deleting pod "simpletest-rc-to-be-deleted-gcxv7" in namespace "gc-1243"
  Apr 28 10:26:15.107: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfd7m" in namespace "gc-1243"
  Apr 28 10:26:15.165: INFO: Deleting pod "simpletest-rc-to-be-deleted-gmvwm" in namespace "gc-1243"
  E0428 10:26:15.225447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:15.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-grcwl" in namespace "gc-1243"
  Apr 28 10:26:15.275: INFO: Deleting pod "simpletest-rc-to-be-deleted-hf865" in namespace "gc-1243"
  Apr 28 10:26:15.335: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2nts" in namespace "gc-1243"
  Apr 28 10:26:15.396: INFO: Deleting pod "simpletest-rc-to-be-deleted-k4xt7" in namespace "gc-1243"
  Apr 28 10:26:15.429: INFO: Deleting pod "simpletest-rc-to-be-deleted-k5snv" in namespace "gc-1243"
  Apr 28 10:26:15.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1243" for this suite. @ 04/28/24 10:26:15.493
• [21.803 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/28/24 10:26:15.516
  Apr 28 10:26:15.516: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/28/24 10:26:15.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:26:15.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:26:15.593
  STEP: mirroring a new custom Endpoint @ 04/28/24 10:26:15.661
  Apr 28 10:26:15.700: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0428 10:26:16.226066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:17.230359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 04/28/24 10:26:17.706
  Apr 28 10:26:17.725: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0428 10:26:18.231057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:19.231243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 04/28/24 10:26:19.729
  Apr 28 10:26:19.741: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0428 10:26:20.232035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:21.232493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:21.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1861" for this suite. @ 04/28/24 10:26:21.75
• [6.243 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/28/24 10:26:21.759
  Apr 28 10:26:21.759: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename endpointslice @ 04/28/24 10:26:21.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:26:21.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:26:21.783
  E0428 10:26:22.233512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:23.234383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:23.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1708" for this suite. @ 04/28/24 10:26:23.88
• [2.130 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/28/24 10:26:23.889
  Apr 28 10:26:23.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename dns @ 04/28/24 10:26:23.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:26:23.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:26:23.923
  STEP: Creating a test externalName service @ 04/28/24 10:26:23.965
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6058.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local; sleep 1; done
   @ 04/28/24 10:26:23.976
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6058.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local; sleep 1; done
   @ 04/28/24 10:26:23.976
  STEP: creating a pod to probe DNS @ 04/28/24 10:26:23.976
  STEP: submitting the pod to kubernetes @ 04/28/24 10:26:23.976
  E0428 10:26:24.235378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:25.236004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/28/24 10:26:26.003
  STEP: looking for the results for each expected name from probers @ 04/28/24 10:26:26.006
  Apr 28 10:26:26.014: INFO: DNS probes using dns-test-dcba2b25-dced-4ec4-a209-fd98b348e6a5 succeeded

  STEP: changing the externalName to bar.example.com @ 04/28/24 10:26:26.014
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6058.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local; sleep 1; done
   @ 04/28/24 10:26:26.021
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6058.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local; sleep 1; done
   @ 04/28/24 10:26:26.021
  STEP: creating a second pod to probe DNS @ 04/28/24 10:26:26.021
  STEP: submitting the pod to kubernetes @ 04/28/24 10:26:26.021
  E0428 10:26:26.236174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:27.236510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/28/24 10:26:28.038
  STEP: looking for the results for each expected name from probers @ 04/28/24 10:26:28.041
  Apr 28 10:26:28.045: INFO: File wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:28.049: INFO: File jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:28.049: INFO: Lookups using dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca failed for: [wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local]

  Apr 28 10:26:28.054: INFO: Pod client logs for webserver: 
  Apr 28 10:26:28.060: INFO: Pod client logs for querier: 
  Apr 28 10:26:28.067: INFO: Pod client logs for jessie-querier: 
  E0428 10:26:28.237352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:29.237537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:30.237645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:31.238288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:32.239278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:33.045: INFO: File wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:33.049: INFO: File jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:33.049: INFO: Lookups using dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca failed for: [wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local]

  Apr 28 10:26:33.058: INFO: Pod client logs for webserver: 
  Apr 28 10:26:33.063: INFO: Pod client logs for querier: 
  Apr 28 10:26:33.074: INFO: Pod client logs for jessie-querier: 
  E0428 10:26:33.240387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:34.240478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:35.241084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:36.242009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:37.242285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:38.046: INFO: File wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:38.050: INFO: File jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:38.050: INFO: Lookups using dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca failed for: [wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local]

  Apr 28 10:26:38.056: INFO: Pod client logs for webserver: 
  Apr 28 10:26:38.061: INFO: Pod client logs for querier: 
  Apr 28 10:26:38.070: INFO: Pod client logs for jessie-querier: 
  E0428 10:26:38.242344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:39.242796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:40.242738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:41.242957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:42.243122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:43.046: INFO: File wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:43.049: INFO: File jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:43.049: INFO: Lookups using dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca failed for: [wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local]

  Apr 28 10:26:43.055: INFO: Pod client logs for webserver: 
  Apr 28 10:26:43.061: INFO: Pod client logs for querier: 
  Apr 28 10:26:43.066: INFO: Pod client logs for jessie-querier: 
  E0428 10:26:43.244096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:44.244315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:45.244806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:46.245168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:47.245563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:48.046: INFO: File wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:48.049: INFO: File jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:48.049: INFO: Lookups using dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca failed for: [wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local]

  Apr 28 10:26:48.054: INFO: Pod client logs for webserver: 
  Apr 28 10:26:48.060: INFO: Pod client logs for querier: 
  Apr 28 10:26:48.065: INFO: Pod client logs for jessie-querier: 
  E0428 10:26:48.246173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:49.246536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:50.246736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:51.246941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:52.247213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:53.045: INFO: File wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:53.048: INFO: File jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local from pod  dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 28 10:26:53.049: INFO: Lookups using dns-6058/dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca failed for: [wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local]

  Apr 28 10:26:53.056: INFO: Pod client logs for webserver: 
  Apr 28 10:26:53.063: INFO: Pod client logs for querier: 
  Apr 28 10:26:53.068: INFO: Pod client logs for jessie-querier: 
  E0428 10:26:53.248305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:54.248548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:55.248742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:56.248999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:57.249754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:26:58.049: INFO: DNS probes using dns-test-0104a027-08cf-4d1c-b9d0-6a408aea20ca succeeded

  STEP: changing the service to type=ClusterIP @ 04/28/24 10:26:58.049
  W0428 10:26:58.066154      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6058.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6058.svc.cluster.local; sleep 1; done
   @ 04/28/24 10:26:58.066
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6058.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6058.svc.cluster.local; sleep 1; done
   @ 04/28/24 10:26:58.066
  STEP: creating a third pod to probe DNS @ 04/28/24 10:26:58.066
  STEP: submitting the pod to kubernetes @ 04/28/24 10:26:58.07
  E0428 10:26:58.250307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:26:59.250521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/28/24 10:27:00.09
  STEP: looking for the results for each expected name from probers @ 04/28/24 10:27:00.094
  Apr 28 10:27:00.102: INFO: DNS probes using dns-test-5b9a7098-b52a-4db3-a4b4-5b99b7ac62ff succeeded

  STEP: deleting the pod @ 04/28/24 10:27:00.102
  STEP: deleting the pod @ 04/28/24 10:27:00.113
  STEP: deleting the pod @ 04/28/24 10:27:00.125
  STEP: deleting the test externalName service @ 04/28/24 10:27:00.136
  Apr 28 10:27:00.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6058" for this suite. @ 04/28/24 10:27:00.166
• [36.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 04/28/24 10:27:00.182
  Apr 28 10:27:00.182: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubelet-test @ 04/28/24 10:27:00.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:27:00.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:27:00.203
  Apr 28 10:27:00.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2661" for this suite. @ 04/28/24 10:27:00.24
  E0428 10:27:00.251291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.072 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/28/24 10:27:00.254
  Apr 28 10:27:00.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:27:00.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:27:00.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:27:00.274
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:27:00.276
  E0428 10:27:01.252249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:02.252865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:03.253258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:04.253483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:27:04.294
  Apr 28 10:27:04.297: INFO: Trying to get logs from node worker2 pod downwardapi-volume-35f19a8c-2b7c-45ee-8d33-4f0a9303adcf container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:27:04.302
  Apr 28 10:27:04.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4599" for this suite. @ 04/28/24 10:27:04.318
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/28/24 10:27:04.323
  Apr 28 10:27:04.323: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 10:27:04.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:27:04.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:27:04.386
  STEP: Creating secret with name secret-test-map-fa771a09-f0cf-44b7-a53f-4c89d6230176 @ 04/28/24 10:27:04.389
  STEP: Creating a pod to test consume secrets @ 04/28/24 10:27:04.393
  E0428 10:27:05.253647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:06.253928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:07.254075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:08.254174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:27:08.42
  Apr 28 10:27:08.423: INFO: Trying to get logs from node worker2 pod pod-secrets-71334d1a-e334-4eab-a511-ba10b65af816 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 10:27:08.429
  Apr 28 10:27:08.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5993" for this suite. @ 04/28/24 10:27:08.446
• [4.129 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/28/24 10:27:08.452
  Apr 28 10:27:08.452: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 10:27:08.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:27:08.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:27:08.468
  STEP: Setting up server cert @ 04/28/24 10:27:08.484
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 10:27:08.603
  STEP: Deploying the webhook pod @ 04/28/24 10:27:08.609
  STEP: Wait for the deployment to be ready @ 04/28/24 10:27:08.617
  Apr 28 10:27:08.622: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0428 10:27:09.255191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:10.256218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 10:27:10.63
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 10:27:10.642
  E0428 10:27:11.257211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:11.643: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/28/24 10:27:11.648
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/28/24 10:27:11.663
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/28/24 10:27:11.669
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/28/24 10:27:11.677
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/28/24 10:27:11.685
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/28/24 10:27:11.69
  Apr 28 10:27:11.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8003" for this suite. @ 04/28/24 10:27:11.753
  STEP: Destroying namespace "webhook-markers-669" for this suite. @ 04/28/24 10:27:11.761
• [3.318 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/28/24 10:27:11.77
  Apr 28 10:27:11.770: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename deployment @ 04/28/24 10:27:11.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:27:11.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:27:11.798
  Apr 28 10:27:11.800: INFO: Creating deployment "test-recreate-deployment"
  Apr 28 10:27:11.806: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Apr 28 10:27:11.814: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0428 10:27:12.257351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:13.257536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:13.821: INFO: Waiting deployment "test-recreate-deployment" to complete
  Apr 28 10:27:13.825: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Apr 28 10:27:13.832: INFO: Updating deployment test-recreate-deployment
  Apr 28 10:27:13.832: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Apr 28 10:27:13.896: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7422",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93f7de32-e161-49cd-b2b0-d9c683174f23",
      ResourceVersion: (string) (len=5) "43871",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849896831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-68cfcdb458\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 28 10:27:13.902: INFO: New ReplicaSet "test-recreate-deployment-68cfcdb458" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-68cfcdb458",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7422",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7a629ef-cf9e-4b2b-b49f-dbbc48c58d76",
      ResourceVersion: (string) (len=5) "43869",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849896833,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68cfcdb458"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "93f7de32-e161-49cd-b2b0-d9c683174f23",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 33 66 37 64 65  33 32 2d 65 31 36 31 2d  |\"93f7de32-e161-|
              00000120  34 39 63 64 2d 62 32 62  30 2d 64 39 63 36 38 33  |49cd-b2b0-d9c683|
              00000130  31 37 34 66 32 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |174f23\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68cfcdb458"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "68cfcdb458",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 10:27:13.903: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Apr 28 10:27:13.904: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7bf74bb867",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7422",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f4ad046-86f7-4643-8322-d8a0d9581bdb",
      ResourceVersion: (string) (len=5) "43859",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849896831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bf74bb867"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "93f7de32-e161-49cd-b2b0-d9c683174f23",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 33 66 37 64 65  33 32 2d 65 31 36 31 2d  |\"93f7de32-e161-|
              00000120  34 39 63 64 2d 62 32 62  30 2d 64 39 63 36 38 33  |49cd-b2b0-d9c683|
              00000130  31 37 34 66 32 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |174f23\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bf74bb867"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bf74bb867"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 28 10:27:13.909: INFO: Pod "test-recreate-deployment-68cfcdb458-hndlf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-68cfcdb458-hndlf",
      GenerateName: (string) (len=36) "test-recreate-deployment-68cfcdb458-",
      Namespace: (string) (len=15) "deployment-7422",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "750d2635-8216-40ec-9d35-4bf3bf2aedde",
      ResourceVersion: (string) (len=5) "43870",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849896833,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68cfcdb458"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-68cfcdb458",
          UID: (types.UID) (len=36) "e7a629ef-cf9e-4b2b-b49f-dbbc48c58d76",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 37  61 36 32 39 65 66 2d 63  |d\":\"e7a629ef-c|
              00000090  66 39 65 2d 34 62 32 62  2d 62 34 39 66 2d 64 62  |f9e-4b2b-b49f-db|
              000000a0  62 63 34 38 63 35 38 64  37 36 5c 22 7d 22 3a 7b  |bc48c58d76\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dlrd4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dlrd4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849896833,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849896833,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 28 10:27:13.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7422" for this suite. @ 04/28/24 10:27:13.914
• [2.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 04/28/24 10:27:13.928
  Apr 28 10:27:13.928: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:27:13.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:27:13.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:27:13.948
  STEP: creating service multiprotocol-test in namespace services-6858 @ 04/28/24 10:27:13.951
  STEP: creating pod pod1 in namespace services-6858 @ 04/28/24 10:27:13.968
  STEP: Creating pod pod1 in namespace services-6858 @ 04/28/24 10:27:13.968
  E0428 10:27:14.257999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:15.258804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6858 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/28/24 10:27:15.992
  Apr 28 10:27:16.000: INFO: successfully validated that service multiprotocol-test in namespace services-6858 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/28/24 10:27:16
  Apr 28 10:27:16.000: INFO: Creating new exec pod
  E0428 10:27:16.259372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:17.259545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:18.011: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80'
  Apr 28 10:27:18.092: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.23.202 80\nConnection to 10.68.23.202 80 port [tcp/http] succeeded!\n"
  Apr 28 10:27:18.092: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:27:18.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80'
  E0428 10:27:18.260047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:19.260473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:20.261056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:21.261286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:22.184: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.23.202 80\nConnection to 10.68.23.202 80 port [udp/*] succeeded!\n"
  Apr 28 10:27:22.184: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/28/24 10:27:22.184
  Apr 28 10:27:22.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80'
  E0428 10:27:22.261337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:22.279: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.23.202 80\nConnection to 10.68.23.202 80 port [tcp/http] succeeded!\n"
  Apr 28 10:27:22.279: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:27:22.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80'
  Apr 28 10:27:22.367: INFO: rc: 1
  Apr 28 10:27:22.367: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.23.202 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0428 10:27:23.261728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:24.261930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:24.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80'
  Apr 28 10:27:24.359: INFO: rc: 1
  Apr 28 10:27:24.359: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.23.202 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0428 10:27:25.262853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:26.263175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:26.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80'
  Apr 28 10:27:26.368: INFO: rc: 1
  Apr 28 10:27:26.368: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.23.202 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0428 10:27:27.263928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:28.264036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:28.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80'
  Apr 28 10:27:28.362: INFO: rc: 1
  Apr 28 10:27:28.362: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.23.202 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  STEP: Checking if the Service forwards traffic to UDP only @ 04/28/24 10:27:28.362
  Apr 28 10:27:28.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80'
  Apr 28 10:27:28.482: INFO: rc: 1
  Apr 28 10:27:28.482: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.68.23.202 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0428 10:27:29.264555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:30.265604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:30.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.23.202 80'
  E0428 10:27:31.265922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:32.266198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:33.266414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:34.266644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:34.450: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.23.202 80\nConnection to 10.68.23.202 80 port [udp/*] succeeded!\n"
  Apr 28 10:27:34.450: INFO: stdout: "pod1"
  Apr 28 10:27:34.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80'
  Apr 28 10:27:34.522: INFO: rc: 1
  Apr 28 10:27:34.522: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.23.202 80
  nc: connect to 10.68.23.202 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0428 10:27:35.267168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:36.267204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:36.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80'
  Apr 28 10:27:36.526: INFO: rc: 1
  Apr 28 10:27:36.526: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.23.202 80
  nc: connect to 10.68.23.202 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0428 10:27:37.268210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:38.268269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:38.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80'
  Apr 28 10:27:38.525: INFO: rc: 1
  Apr 28 10:27:38.525: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.23.202 80
  nc: connect to 10.68.23.202 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0428 10:27:39.268399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:40.268695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:40.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80'
  Apr 28 10:27:40.526: INFO: rc: 1
  Apr 28 10:27:40.526: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-6858 exec execpodkzhxd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.23.202 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.23.202 80
  nc: connect to 10.68.23.202 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 28 10:27:40.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6858" for this suite. @ 04/28/24 10:27:40.531
• [26.608 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/28/24 10:27:40.537
  Apr 28 10:27:40.537: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/28/24 10:27:40.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:27:40.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:27:40.551
  STEP: creating @ 04/28/24 10:27:40.554
  STEP: getting @ 04/28/24 10:27:40.573
  STEP: listing in namespace @ 04/28/24 10:27:40.578
  STEP: patching @ 04/28/24 10:27:40.584
  STEP: deleting @ 04/28/24 10:27:40.591
  Apr 28 10:27:40.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2998" for this suite. @ 04/28/24 10:27:40.609
• [0.080 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 04/28/24 10:27:40.617
  Apr 28 10:27:40.617: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 10:27:40.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:27:40.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:27:40.629
  STEP: creating all guestbook components @ 04/28/24 10:27:40.632
  Apr 28 10:27:40.632: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Apr 28 10:27:40.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 create -f -'
  Apr 28 10:27:40.720: INFO: stderr: ""
  Apr 28 10:27:40.720: INFO: stdout: "service/agnhost-replica created\n"
  Apr 28 10:27:40.720: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Apr 28 10:27:40.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 create -f -'
  Apr 28 10:27:40.814: INFO: stderr: ""
  Apr 28 10:27:40.814: INFO: stdout: "service/agnhost-primary created\n"
  Apr 28 10:27:40.814: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Apr 28 10:27:40.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 create -f -'
  Apr 28 10:27:40.905: INFO: stderr: ""
  Apr 28 10:27:40.905: INFO: stdout: "service/frontend created\n"
  Apr 28 10:27:40.905: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Apr 28 10:27:40.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 create -f -'
  Apr 28 10:27:40.965: INFO: stderr: ""
  Apr 28 10:27:40.966: INFO: stdout: "deployment.apps/frontend created\n"
  Apr 28 10:27:40.966: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 28 10:27:40.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 create -f -'
  Apr 28 10:27:41.069: INFO: stderr: ""
  Apr 28 10:27:41.069: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Apr 28 10:27:41.069: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 28 10:27:41.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 create -f -'
  Apr 28 10:27:41.141: INFO: stderr: ""
  Apr 28 10:27:41.141: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/28/24 10:27:41.142
  Apr 28 10:27:41.142: INFO: Waiting for all frontend pods to be Running.
  E0428 10:27:41.269734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:42.270622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:43.271216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:44.272318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:45.273149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:46.193: INFO: Waiting for frontend to serve content.
  Apr 28 10:27:46.204: INFO: Trying to add a new entry to the guestbook.
  Apr 28 10:27:46.217: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/28/24 10:27:46.228
  Apr 28 10:27:46.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 delete --grace-period=0 --force -f -'
  E0428 10:27:46.273246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:27:46.289: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 28 10:27:46.289: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/28/24 10:27:46.289
  Apr 28 10:27:46.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 delete --grace-period=0 --force -f -'
  Apr 28 10:27:46.352: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 28 10:27:46.353: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/28/24 10:27:46.353
  Apr 28 10:27:46.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 delete --grace-period=0 --force -f -'
  Apr 28 10:27:46.412: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 28 10:27:46.412: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/28/24 10:27:46.412
  Apr 28 10:27:46.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 delete --grace-period=0 --force -f -'
  Apr 28 10:27:46.471: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 28 10:27:46.471: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/28/24 10:27:46.472
  Apr 28 10:27:46.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 delete --grace-period=0 --force -f -'
  Apr 28 10:27:46.557: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 28 10:27:46.557: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/28/24 10:27:46.557
  Apr 28 10:27:46.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-1546 delete --grace-period=0 --force -f -'
  Apr 28 10:27:46.661: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 28 10:27:46.661: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Apr 28 10:27:46.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1546" for this suite. @ 04/28/24 10:27:46.669
• [6.067 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/28/24 10:27:46.684
  Apr 28 10:27:46.684: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:27:46.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:27:46.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:27:46.708
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-0c4b4a5c-67a0-4d13-8502-2a776394afca @ 04/28/24 10:27:46.738
  STEP: Creating the pod @ 04/28/24 10:27:46.756
  E0428 10:27:47.273585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:48.274136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-0c4b4a5c-67a0-4d13-8502-2a776394afca @ 04/28/24 10:27:48.803
  STEP: waiting to observe update in volume @ 04/28/24 10:27:48.806
  E0428 10:27:49.275152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:50.276033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:51.276249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:52.276798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:53.276861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:54.277111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:55.277951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:56.278249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:57.278515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:58.278728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:27:59.278774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:00.279069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:01.279609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:02.279673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:03.279771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:04.280230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:05.281263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:06.281825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:07.281766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:08.281864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:09.282281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:10.282794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:11.283289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:12.284354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:13.284596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:14.284775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:15.285245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:16.285945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:17.287020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:18.288271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:19.288389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:20.288762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:21.289772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:22.289959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:23.290492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:24.290713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:25.291560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:26.292282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:27.293067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:28.293311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:29.294033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:30.294082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:31.294774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:32.294997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:33.295934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:34.296244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:35.296514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:36.296584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:37.297298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:38.297516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:39.297992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:40.298472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:41.298872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:42.299177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:43.299607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:44.299919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:45.300370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:46.300577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:47.300856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:48.301170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:49.301813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:50.302968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:51.303082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:52.303319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:53.303581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:54.304457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:55.305149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:56.305437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:57.306385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:58.306747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:28:59.307899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:00.308975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:01.309913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:02.310155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:03.310667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:04.310888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:05.311316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:06.312458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:07.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7464" for this suite. @ 04/28/24 10:29:07.117
• [80.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 04/28/24 10:29:07.123
  Apr 28 10:29:07.123: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename statefulset @ 04/28/24 10:29:07.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:29:07.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:29:07.137
  STEP: Creating service test in namespace statefulset-2808 @ 04/28/24 10:29:07.139
  STEP: Creating statefulset ss in namespace statefulset-2808 @ 04/28/24 10:29:07.149
  Apr 28 10:29:07.158: INFO: Found 0 stateful pods, waiting for 1
  E0428 10:29:07.312990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:08.313514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:09.313816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:10.315081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:11.315390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:12.315499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:13.316308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:14.316537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:15.316673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:16.317185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:17.158: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/28/24 10:29:17.164
  STEP: Getting /status @ 04/28/24 10:29:17.17
  Apr 28 10:29:17.174: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/28/24 10:29:17.175
  Apr 28 10:29:17.184: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/28/24 10:29:17.185
  Apr 28 10:29:17.189: INFO: Observed &StatefulSet event: ADDED
  Apr 28 10:29:17.189: INFO: Found Statefulset ss in namespace statefulset-2808 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 28 10:29:17.189: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/28/24 10:29:17.189
  Apr 28 10:29:17.189: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 28 10:29:17.198: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/28/24 10:29:17.199
  Apr 28 10:29:17.200: INFO: Observed &StatefulSet event: ADDED
  Apr 28 10:29:17.200: INFO: Deleting all statefulset in ns statefulset-2808
  Apr 28 10:29:17.203: INFO: Scaling statefulset ss to 0
  E0428 10:29:17.317784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:18.317904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:19.318031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:20.318143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:21.318375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:22.318555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:23.318630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:24.319028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:25.319727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:26.320305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:27.214: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 28 10:29:27.218: INFO: Deleting statefulset ss
  Apr 28 10:29:27.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2808" for this suite. @ 04/28/24 10:29:27.234
• [20.116 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 04/28/24 10:29:27.24
  Apr 28 10:29:27.240: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 10:29:27.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:29:27.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:29:27.253
  Apr 28 10:29:27.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4183 create -f -'
  E0428 10:29:27.320368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:27.328: INFO: stderr: ""
  Apr 28 10:29:27.328: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Apr 28 10:29:27.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4183 create -f -'
  Apr 28 10:29:27.452: INFO: stderr: ""
  Apr 28 10:29:27.452: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/28/24 10:29:27.452
  E0428 10:29:28.320715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:28.456: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 28 10:29:28.456: INFO: Found 1 / 1
  Apr 28 10:29:28.456: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 28 10:29:28.459: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 28 10:29:28.459: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 28 10:29:28.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4183 describe pod agnhost-primary-2xxw5'
  Apr 28 10:29:28.509: INFO: stderr: ""
  Apr 28 10:29:28.509: INFO: stdout: "Name:             agnhost-primary-2xxw5\nNamespace:        kubectl-4183\nPriority:         0\nService Account:  default\nNode:             worker2/192.168.227.138\nStart Time:       Sun, 28 Apr 2024 10:29:27 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               172.20.189.123\nIPs:\n  IP:           172.20.189.123\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://4cc6f396061cedf4e361d13ba325de237f3ddb1dd4e5a03868b4cf2d14ffd4c3\n    Image:          registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45\n    Image ID:       registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost@sha256:8f07c07228b54f5d644c14241ad3e483b999c5d3a78f7580a6252c8ab42f2b66\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 28 Apr 2024 10:29:27 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6h72p (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-6h72p:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-4183/agnhost-primary-2xxw5 to worker2\n  Normal  Pulled     1s    kubelet            Container image \"registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Apr 28 10:29:28.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4183 describe rc agnhost-primary'
  Apr 28 10:29:28.559: INFO: stderr: ""
  Apr 28 10:29:28.559: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4183\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-2xxw5\n"
  Apr 28 10:29:28.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4183 describe service agnhost-primary'
  Apr 28 10:29:28.610: INFO: stderr: ""
  Apr 28 10:29:28.610: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4183\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.68.218.155\nIPs:               10.68.218.155\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         172.20.189.123:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Apr 28 10:29:28.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4183 describe node master1'
  Apr 28 10:29:28.676: INFO: stderr: ""
  Apr 28 10:29:28.677: INFO: stdout: "Name:               master1\nRoles:              master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=master1\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=master\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 28 Apr 2024 06:44:11 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  master1\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 28 Apr 2024 10:29:20 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 28 Apr 2024 06:45:08 +0000   Sun, 28 Apr 2024 06:45:08 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sun, 28 Apr 2024 10:29:05 +0000   Sun, 28 Apr 2024 06:44:11 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 28 Apr 2024 10:29:05 +0000   Sun, 28 Apr 2024 06:44:11 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 28 Apr 2024 10:29:05 +0000   Sun, 28 Apr 2024 06:44:11 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 28 Apr 2024 10:29:05 +0000   Sun, 28 Apr 2024 06:45:13 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.227.136\n  Hostname:    master1\nCapacity:\n  cpu:                    4\n  ephemeral-storage:      102626232Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 8092016Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    4\n  ephemeral-storage:      94580335255\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7784816Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 8cf85a1ff1544e1aa833da44406f3c86\n  System UUID:                5ed04d56-720a-ef91-bf29-8e1f671c18ed\n  Boot ID:                    12fdabe7-9b2c-45c8-a2b8-7112825fdbfb\n  Kernel Version:             5.15.0-105-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.26\n  Kubelet Version:            v1.29.0\n  Kube-Proxy Version:         v1.29.0\nPodCIDR:                      172.20.0.0/24\nPodCIDRs:                     172.20.0.0/24\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-5994f46b69-6wms6                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         3h44m\n  kube-system                 calico-node-zq7zm                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         3h44m\n  kube-system                 dashboard-metrics-scraper-77b667b99d-pd58z                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         3h43m\n  kube-system                 node-local-dns-x5gk2                                       25m (0%)      0 (0%)      5Mi (0%)         0 (0%)         3h44m\n  sonobuoy                    sonobuoy-e2e-job-a7cb2e98a5034b0c                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         76m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-gfv6z    0 (0%)        0 (0%)      0 (0%)           0 (0%)         76m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests   Limits\n  --------               --------   ------\n  cpu                    275m (6%)  0 (0%)\n  memory                 5Mi (0%)   0 (0%)\n  ephemeral-storage      0 (0%)     0 (0%)\n  hugepages-1Gi          0 (0%)     0 (0%)\n  hugepages-2Mi          0 (0%)     0 (0%)\n  scheduling.k8s.io/foo  0          0\nEvents:                  <none>\n"
  Apr 28 10:29:28.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-4183 describe namespace kubectl-4183'
  Apr 28 10:29:28.729: INFO: stderr: ""
  Apr 28 10:29:28.729: INFO: stdout: "Name:         kubectl-4183\nLabels:       e2e-framework=kubectl\n              e2e-run=86c34a04-4490-4ced-8eb9-b845c034fb7b\n              kubernetes.io/metadata.name=kubectl-4183\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Apr 28 10:29:28.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4183" for this suite. @ 04/28/24 10:29:28.735
• [1.501 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 04/28/24 10:29:28.741
  Apr 28 10:29:28.741: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:29:28.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:29:28.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:29:28.757
  STEP: creating service nodeport-test with type=NodePort in namespace services-5016 @ 04/28/24 10:29:28.76
  STEP: creating replication controller nodeport-test in namespace services-5016 @ 04/28/24 10:29:28.777
  I0428 10:29:28.786422      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5016, replica count: 2
  E0428 10:29:29.321039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:30.321989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:31.321988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0428 10:29:31.837888      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 28 10:29:31.837: INFO: Creating new exec pod
  E0428 10:29:32.322322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:33.322502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:34.322632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:34.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-5016 exec execpod2xn4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 28 10:29:34.938: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 28 10:29:34.938: INFO: stdout: "nodeport-test-k8vlq"
  Apr 28 10:29:34.938: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-5016 exec execpod2xn4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.72.10 80'
  Apr 28 10:29:35.013: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.72.10 80\nConnection to 10.68.72.10 80 port [tcp/http] succeeded!\n"
  Apr 28 10:29:35.013: INFO: stdout: ""
  E0428 10:29:35.322861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:35.938: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-5016 exec execpod2xn4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.72.10 80'
  Apr 28 10:29:36.014: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 10.68.72.10 80\nConnection to 10.68.72.10 80 port [tcp/http] succeeded!\n"
  Apr 28 10:29:36.014: INFO: stdout: "nodeport-test-k8vlq"
  Apr 28 10:29:36.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-5016 exec execpod2xn4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.136 31618'
  Apr 28 10:29:36.088: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.136 31618\nConnection to 192.168.227.136 31618 port [tcp/*] succeeded!\n"
  Apr 28 10:29:36.088: INFO: stdout: "nodeport-test-k8vlq"
  Apr 28 10:29:36.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-5016 exec execpod2xn4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.138 31618'
  Apr 28 10:29:36.169: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.138 31618\nConnection to 192.168.227.138 31618 port [tcp/*] succeeded!\n"
  Apr 28 10:29:36.169: INFO: stdout: ""
  E0428 10:29:36.323852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:37.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-5016 exec execpod2xn4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.138 31618'
  Apr 28 10:29:37.170: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.138 31618\nConnection to 192.168.227.138 31618 port [tcp/*] succeeded!\n"
  Apr 28 10:29:37.170: INFO: stdout: ""
  E0428 10:29:37.323964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:38.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-5016 exec execpod2xn4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.138 31618'
  Apr 28 10:29:38.167: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.138 31618\nConnection to 192.168.227.138 31618 port [tcp/*] succeeded!\n"
  Apr 28 10:29:38.167: INFO: stdout: "nodeport-test-k8vlq"
  Apr 28 10:29:38.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5016" for this suite. @ 04/28/24 10:29:38.171
• [9.436 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/28/24 10:29:38.177
  Apr 28 10:29:38.177: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename endpointslice @ 04/28/24 10:29:38.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:29:38.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:29:38.19
  STEP: getting /apis @ 04/28/24 10:29:38.193
  STEP: getting /apis/discovery.k8s.io @ 04/28/24 10:29:38.195
  STEP: getting /apis/discovery.k8s.iov1 @ 04/28/24 10:29:38.196
  STEP: creating @ 04/28/24 10:29:38.197
  STEP: getting @ 04/28/24 10:29:38.209
  STEP: listing @ 04/28/24 10:29:38.212
  STEP: watching @ 04/28/24 10:29:38.214
  Apr 28 10:29:38.214: INFO: starting watch
  STEP: cluster-wide listing @ 04/28/24 10:29:38.215
  STEP: cluster-wide watching @ 04/28/24 10:29:38.22
  Apr 28 10:29:38.220: INFO: starting watch
  STEP: patching @ 04/28/24 10:29:38.22
  STEP: updating @ 04/28/24 10:29:38.224
  Apr 28 10:29:38.234: INFO: waiting for watch events with expected annotations
  Apr 28 10:29:38.234: INFO: saw patched and updated annotations
  STEP: deleting @ 04/28/24 10:29:38.234
  STEP: deleting a collection @ 04/28/24 10:29:38.247
  Apr 28 10:29:38.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9459" for this suite. @ 04/28/24 10:29:38.268
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 04/28/24 10:29:38.276
  Apr 28 10:29:38.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 10:29:38.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:29:38.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:29:38.29
  STEP: Creating a ResourceQuota with best effort scope @ 04/28/24 10:29:38.292
  STEP: Ensuring ResourceQuota status is calculated @ 04/28/24 10:29:38.295
  E0428 10:29:38.324016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:39.324097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 04/28/24 10:29:40.299
  STEP: Ensuring ResourceQuota status is calculated @ 04/28/24 10:29:40.304
  E0428 10:29:40.324768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:41.324899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 04/28/24 10:29:42.307
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/28/24 10:29:42.318
  E0428 10:29:42.325256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:43.325420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/28/24 10:29:44.322
  E0428 10:29:44.326062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:45.326176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:46.326388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/28/24 10:29:46.327
  STEP: Ensuring resource quota status released the pod usage @ 04/28/24 10:29:46.341
  E0428 10:29:47.327187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:48.327322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 04/28/24 10:29:48.345
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/28/24 10:29:48.353
  E0428 10:29:49.328313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:50.329113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/28/24 10:29:50.357
  E0428 10:29:51.329210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:52.330142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/28/24 10:29:52.361
  STEP: Ensuring resource quota status released the pod usage @ 04/28/24 10:29:52.372
  E0428 10:29:53.330261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:54.330407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:54.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3238" for this suite. @ 04/28/24 10:29:54.379
• [16.109 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/28/24 10:29:54.386
  Apr 28 10:29:54.386: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 10:29:54.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:29:54.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:29:54.402
  STEP: Setting up server cert @ 04/28/24 10:29:54.422
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 10:29:54.696
  STEP: Deploying the webhook pod @ 04/28/24 10:29:54.704
  STEP: Wait for the deployment to be ready @ 04/28/24 10:29:54.712
  Apr 28 10:29:54.721: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0428 10:29:55.330596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:56.331338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 10:29:56.731
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 10:29:56.739
  E0428 10:29:57.332260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:29:57.740: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/28/24 10:29:57.746
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/28/24 10:29:57.757
  Apr 28 10:29:57.757: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:29:57.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7507" for this suite. @ 04/28/24 10:29:57.812
  STEP: Destroying namespace "webhook-markers-5185" for this suite. @ 04/28/24 10:29:57.822
• [3.450 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/28/24 10:29:57.837
  Apr 28 10:29:57.837: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:29:57.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:29:57.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:29:57.854
  STEP: Creating the pod @ 04/28/24 10:29:57.857
  E0428 10:29:58.333061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:29:59.333329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:00.334145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:00.391: INFO: Successfully updated pod "annotationupdate10d4b99d-ead0-41d9-b60c-86c1f937d143"
  E0428 10:30:01.334403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:02.334638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:03.335093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:04.335448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:04.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8630" for this suite. @ 04/28/24 10:30:04.414
• [6.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 04/28/24 10:30:04.419
  Apr 28 10:30:04.419: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename statefulset @ 04/28/24 10:30:04.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:30:04.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:30:04.433
  STEP: Creating service test in namespace statefulset-8366 @ 04/28/24 10:30:04.436
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/28/24 10:30:04.442
  STEP: Creating stateful set ss in namespace statefulset-8366 @ 04/28/24 10:30:04.449
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8366 @ 04/28/24 10:30:04.454
  Apr 28 10:30:04.460: INFO: Found 0 stateful pods, waiting for 1
  E0428 10:30:05.335714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:06.336230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:07.336492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:08.336817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:09.337658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:10.337820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:11.338073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:12.338543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:13.338750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:14.338952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:14.459: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/28/24 10:30:14.459
  Apr 28 10:30:14.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-8366 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 10:30:14.543: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 10:30:14.543: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 10:30:14.543: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 28 10:30:14.546: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0428 10:30:15.339963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:16.340341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:17.340471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:18.341587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:19.342236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:20.342704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:21.343338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:22.344380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:23.344565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:24.345218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:24.547: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 28 10:30:24.547: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 28 10:30:24.559: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999826s
  E0428 10:30:25.345444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:25.564: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996722204s
  E0428 10:30:26.345696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:26.568: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.992631039s
  E0428 10:30:27.346024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:27.572: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.989257978s
  E0428 10:30:28.346714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:28.575: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.984530366s
  E0428 10:30:29.346954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:29.579: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.981537499s
  E0428 10:30:30.347657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:30.584: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.97749292s
  E0428 10:30:31.348244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:31.588: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.973024117s
  E0428 10:30:32.348679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:32.592: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.968587068s
  E0428 10:30:33.348784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:33.596: INFO: Verifying statefulset ss doesn't scale past 1 for another 964.515737ms
  E0428 10:30:34.349255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8366 @ 04/28/24 10:30:34.596
  Apr 28 10:30:34.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-8366 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 28 10:30:34.685: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 28 10:30:34.685: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 28 10:30:34.685: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 28 10:30:34.688: INFO: Found 1 stateful pods, waiting for 3
  E0428 10:30:35.350197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:36.351317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:37.352421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:38.352608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:39.352907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:40.353055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:41.353912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:42.354252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:43.354703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:44.354734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:44.690: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 10:30:44.690: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 10:30:44.690: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/28/24 10:30:44.69
  STEP: Scale down will halt with unhealthy stateful pod @ 04/28/24 10:30:44.69
  Apr 28 10:30:44.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-8366 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 10:30:44.778: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 10:30:44.778: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 10:30:44.778: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 28 10:30:44.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-8366 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 10:30:44.862: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 10:30:44.862: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 10:30:44.862: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 28 10:30:44.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-8366 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 10:30:44.941: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 10:30:44.942: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 10:30:44.942: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 28 10:30:44.942: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 28 10:30:44.944: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0428 10:30:45.355404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:46.356513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:47.357330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:48.357368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:49.357616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:50.358238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:51.358557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:52.358751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:53.359019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:30:54.359228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:54.949: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 28 10:30:54.949: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 28 10:30:54.949: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 28 10:30:54.961: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999705s
  E0428 10:30:55.360146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:55.964: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996936579s
  E0428 10:30:56.360337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:56.969: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993430981s
  E0428 10:30:57.360465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:57.972: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.9885837s
  E0428 10:30:58.361395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:58.976: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.98539489s
  E0428 10:30:59.362185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:30:59.980: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.981486935s
  E0428 10:31:00.362544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:31:00.984: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.978256323s
  E0428 10:31:01.362623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:31:01.988: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.974064264s
  E0428 10:31:02.363618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:31:02.991: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.970305307s
  E0428 10:31:03.363647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:31:03.996: INFO: Verifying statefulset ss doesn't scale past 3 for another 966.311537ms
  E0428 10:31:04.364095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8366 @ 04/28/24 10:31:04.997
  Apr 28 10:31:05.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-8366 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 28 10:31:05.075: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 28 10:31:05.075: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 28 10:31:05.075: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 28 10:31:05.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-8366 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 28 10:31:05.150: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 28 10:31:05.150: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 28 10:31:05.150: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 28 10:31:05.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-8366 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 28 10:31:05.228: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 28 10:31:05.228: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 28 10:31:05.228: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 28 10:31:05.228: INFO: Scaling statefulset ss to 0
  E0428 10:31:05.364154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:06.365000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:07.365329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:08.366250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:09.366846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:10.367162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:11.367227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:12.368283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:13.369406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:14.369563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/28/24 10:31:15.241
  Apr 28 10:31:15.241: INFO: Deleting all statefulset in ns statefulset-8366
  Apr 28 10:31:15.244: INFO: Scaling statefulset ss to 0
  Apr 28 10:31:15.253: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 28 10:31:15.255: INFO: Deleting statefulset ss
  Apr 28 10:31:15.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8366" for this suite. @ 04/28/24 10:31:15.271
• [70.857 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/28/24 10:31:15.277
  Apr 28 10:31:15.277: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:31:15.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:31:15.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:31:15.291
  STEP: Creating projection with secret that has name projected-secret-test-map-a613c231-2092-4bca-8898-1226af590c1f @ 04/28/24 10:31:15.293
  STEP: Creating a pod to test consume secrets @ 04/28/24 10:31:15.296
  E0428 10:31:15.370487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:16.370974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:17.370966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:18.371414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:31:19.324
  Apr 28 10:31:19.328: INFO: Trying to get logs from node worker2 pod pod-projected-secrets-5e711e1a-67b9-41e5-9d75-c4a63cbe560f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 10:31:19.334
  Apr 28 10:31:19.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5522" for this suite. @ 04/28/24 10:31:19.352
• [4.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 04/28/24 10:31:19.358
  Apr 28 10:31:19.358: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-pred @ 04/28/24 10:31:19.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:31:19.371
  E0428 10:31:19.371586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:31:19.373
  Apr 28 10:31:19.375: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 28 10:31:19.382: INFO: Waiting for terminating namespaces to be deleted...
  Apr 28 10:31:19.388: INFO: 
  Logging pods the apiserver thinks is on node master1 before test
  Apr 28 10:31:19.392: INFO: calico-kube-controllers-5994f46b69-6wms6 from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.392: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Apr 28 10:31:19.392: INFO: calico-node-zq7zm from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.392: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 10:31:19.392: INFO: dashboard-metrics-scraper-77b667b99d-pd58z from kube-system started at 2024-04-28 06:45:30 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.392: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Apr 28 10:31:19.392: INFO: node-local-dns-x5gk2 from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.392: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 10:31:19.392: INFO: sonobuoy-e2e-job-a7cb2e98a5034b0c from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 10:31:19.392: INFO: 	Container e2e ready: true, restart count 0
  Apr 28 10:31:19.392: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 10:31:19.392: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-gfv6z from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 10:31:19.392: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 10:31:19.392: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 28 10:31:19.392: INFO: 
  Logging pods the apiserver thinks is on node worker1 before test
  Apr 28 10:31:19.397: INFO: calico-node-t2nbk from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.397: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 10:31:19.397: INFO: coredns-6db9bd4cd7-zcglr from kube-system started at 2024-04-28 06:45:25 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.397: INFO: 	Container coredns ready: true, restart count 0
  Apr 28 10:31:19.397: INFO: kubernetes-dashboard-74fb9f77fb-gm25v from kube-system started at 2024-04-28 09:53:58 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.397: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Apr 28 10:31:19.397: INFO: metrics-server-dfb478476-tsjdl from kube-system started at 2024-04-28 09:53:58 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.397: INFO: 	Container metrics-server ready: true, restart count 0
  Apr 28 10:31:19.397: INFO: node-local-dns-k6xsh from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.397: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 10:31:19.397: INFO: sonobuoy from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.397: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 28 10:31:19.397: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xsb9b from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 10:31:19.397: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 10:31:19.397: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 28 10:31:19.397: INFO: 
  Logging pods the apiserver thinks is on node worker2 before test
  Apr 28 10:31:19.405: INFO: calico-node-8wjpm from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.405: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 10:31:19.405: INFO: node-local-dns-wggzj from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 10:31:19.405: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 10:31:19.405: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xkwx4 from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 10:31:19.405: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 10:31:19.405: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/28/24 10:31:19.405
  E0428 10:31:20.371789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:21.372255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/28/24 10:31:21.422
  STEP: Trying to apply a random label on the found node. @ 04/28/24 10:31:21.432
  STEP: verifying the node has the label kubernetes.io/e2e-31f43b0e-a5be-44c3-a027-ad7c2ed37483 42 @ 04/28/24 10:31:21.44
  STEP: Trying to relaunch the pod, now with labels. @ 04/28/24 10:31:21.444
  E0428 10:31:22.373255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:23.373496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-31f43b0e-a5be-44c3-a027-ad7c2ed37483 off the node worker2 @ 04/28/24 10:31:23.466
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-31f43b0e-a5be-44c3-a027-ad7c2ed37483 @ 04/28/24 10:31:23.476
  Apr 28 10:31:23.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9424" for this suite. @ 04/28/24 10:31:23.483
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 04/28/24 10:31:23.492
  Apr 28 10:31:23.492: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:31:23.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:31:23.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:31:23.509
  STEP: creating a ConfigMap @ 04/28/24 10:31:23.51
  STEP: fetching the ConfigMap @ 04/28/24 10:31:23.514
  STEP: patching the ConfigMap @ 04/28/24 10:31:23.518
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/28/24 10:31:23.525
  STEP: deleting the ConfigMap by collection with a label selector @ 04/28/24 10:31:23.528
  STEP: listing all ConfigMaps in test namespace @ 04/28/24 10:31:23.546
  Apr 28 10:31:23.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6230" for this suite. @ 04/28/24 10:31:23.556
• [0.076 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/28/24 10:31:23.568
  Apr 28 10:31:23.568: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename disruption @ 04/28/24 10:31:23.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:31:23.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:31:23.585
  STEP: Waiting for the pdb to be processed @ 04/28/24 10:31:23.59
  E0428 10:31:24.374164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:25.374930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/28/24 10:31:25.615
  Apr 28 10:31:25.621: INFO: running pods: 0 < 3
  E0428 10:31:26.375164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:27.375302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:31:27.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6371" for this suite. @ 04/28/24 10:31:27.628
• [4.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/28/24 10:31:27.636
  Apr 28 10:31:27.636: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 10:31:27.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:31:27.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:31:27.651
  STEP: Creating secret with name secret-test-92b4c2a7-fbda-44a4-88ae-ae4155f4eae3 @ 04/28/24 10:31:27.653
  STEP: Creating a pod to test consume secrets @ 04/28/24 10:31:27.657
  E0428 10:31:28.375635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:29.375683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:30.376151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:31.376811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:31:31.675
  Apr 28 10:31:31.677: INFO: Trying to get logs from node worker1 pod pod-secrets-b87e82c1-afdb-4da0-92c9-70c4eb806f27 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 10:31:31.687
  Apr 28 10:31:31.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-99" for this suite. @ 04/28/24 10:31:31.702
• [4.071 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/28/24 10:31:31.707
  Apr 28 10:31:31.707: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename runtimeclass @ 04/28/24 10:31:31.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:31:31.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:31:31.723
  E0428 10:31:32.377021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:33.377246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:31:33.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7637" for this suite. @ 04/28/24 10:31:33.754
• [2.052 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/28/24 10:31:33.759
  Apr 28 10:31:33.759: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:31:33.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:31:33.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:31:33.771
  STEP: Creating configMap with name cm-test-opt-del-358e4c91-39fe-4a89-b222-881929de94c7 @ 04/28/24 10:31:33.777
  STEP: Creating configMap with name cm-test-opt-upd-3e99fd2d-e081-4473-bd8c-d1f23d0ade4c @ 04/28/24 10:31:33.781
  STEP: Creating the pod @ 04/28/24 10:31:33.787
  E0428 10:31:34.377390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:35.377876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-358e4c91-39fe-4a89-b222-881929de94c7 @ 04/28/24 10:31:35.826
  STEP: Updating configmap cm-test-opt-upd-3e99fd2d-e081-4473-bd8c-d1f23d0ade4c @ 04/28/24 10:31:35.831
  STEP: Creating configMap with name cm-test-opt-create-1048dc3f-e9c7-4a27-a460-79766433d5ba @ 04/28/24 10:31:35.835
  STEP: waiting to observe update in volume @ 04/28/24 10:31:35.838
  E0428 10:31:36.378743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:37.378986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:38.379047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:39.379207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:40.380076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:41.380347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:42.381156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:43.381637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:44.381978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:45.382683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:46.383453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:47.384323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:48.384370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:49.385113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:50.386051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:51.386390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:52.386692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:53.387150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:54.387188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:55.387818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:56.387879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:57.388317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:58.389405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:31:59.390003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:00.390597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:01.391249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:02.391934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:03.392317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:04.392650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:05.393202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:06.394182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:07.394992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:08.395772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:09.396140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:10.396851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:11.397148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:12.397345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:13.397593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:14.398055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:15.398915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:16.399829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:17.400796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:18.401197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:19.401558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:20.401628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:21.402675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:22.403441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:23.403599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:24.403766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:25.404330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:26.405391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:27.405793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:28.406624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:29.406847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:30.407725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:31.408316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:32.409311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:33.409620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:34.410173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:35.410908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:36.411533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:37.412602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:38.413353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:39.413666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:40.414430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:41.414635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:42.415526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:43.416296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:44.416483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:45.416871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:46.417892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:47.418545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:48.419213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:49.420288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:50.420403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:51.420490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:32:52.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6473" for this suite. @ 04/28/24 10:32:52.182
• [78.433 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/28/24 10:32:52.192
  Apr 28 10:32:52.192: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:32:52.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:32:52.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:32:52.211
  STEP: Creating configMap with name projected-configmap-test-volume-map-786c054c-4436-4b2a-9f9b-142c0471e92d @ 04/28/24 10:32:52.214
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:32:52.218
  E0428 10:32:52.421550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:53.421684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:54.421898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:55.422318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:32:56.242
  Apr 28 10:32:56.246: INFO: Trying to get logs from node worker2 pod pod-projected-configmaps-75300218-5e26-4a34-9225-99b0c16837a0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:32:56.254
  Apr 28 10:32:56.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4000" for this suite. @ 04/28/24 10:32:56.271
• [4.083 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/28/24 10:32:56.276
  Apr 28 10:32:56.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:32:56.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:32:56.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:32:56.293
  STEP: Creating configMap with name projected-configmap-test-volume-e963148b-9b72-42bd-96cf-6fa085062faf @ 04/28/24 10:32:56.295
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:32:56.3
  E0428 10:32:56.422989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:57.423182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:58.423881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:32:59.424681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:33:00.322
  Apr 28 10:33:00.325: INFO: Trying to get logs from node worker2 pod pod-projected-configmaps-1f8d8529-6cab-4605-99c6-6d7fc7057ba3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:33:00.331
  Apr 28 10:33:00.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5874" for this suite. @ 04/28/24 10:33:00.35
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 04/28/24 10:33:00.356
  Apr 28 10:33:00.356: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:33:00.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:33:00.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:33:00.371
  STEP: creating service endpoint-test2 in namespace services-1256 @ 04/28/24 10:33:00.372
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1256 to expose endpoints map[] @ 04/28/24 10:33:00.383
  Apr 28 10:33:00.391: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0428 10:33:00.425354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:33:01.395: INFO: successfully validated that service endpoint-test2 in namespace services-1256 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1256 @ 04/28/24 10:33:01.395
  E0428 10:33:01.426322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:02.426559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1256 to expose endpoints map[pod1:[80]] @ 04/28/24 10:33:03.411
  Apr 28 10:33:03.420: INFO: successfully validated that service endpoint-test2 in namespace services-1256 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/28/24 10:33:03.42
  Apr 28 10:33:03.420: INFO: Creating new exec pod
  E0428 10:33:03.426798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:04.427163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:05.427714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:06.428710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:33:06.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1256 exec execpodscgfx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 28 10:33:06.517: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 28 10:33:06.517: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:33:06.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1256 exec execpodscgfx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.40.187 80'
  Apr 28 10:33:06.588: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.40.187 80\nConnection to 10.68.40.187 80 port [tcp/http] succeeded!\n"
  Apr 28 10:33:06.588: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1256 @ 04/28/24 10:33:06.588
  E0428 10:33:07.428967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:08.429275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1256 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/28/24 10:33:08.601
  Apr 28 10:33:08.611: INFO: successfully validated that service endpoint-test2 in namespace services-1256 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/28/24 10:33:08.611
  E0428 10:33:09.430244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:33:09.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1256 exec execpodscgfx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 28 10:33:09.690: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 28 10:33:09.690: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:33:09.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1256 exec execpodscgfx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.40.187 80'
  Apr 28 10:33:09.765: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.40.187 80\nConnection to 10.68.40.187 80 port [tcp/http] succeeded!\n"
  Apr 28 10:33:09.765: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1256 @ 04/28/24 10:33:09.765
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1256 to expose endpoints map[pod2:[80]] @ 04/28/24 10:33:09.778
  Apr 28 10:33:09.798: INFO: successfully validated that service endpoint-test2 in namespace services-1256 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/28/24 10:33:09.798
  E0428 10:33:10.430897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:33:10.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1256 exec execpodscgfx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 28 10:33:10.874: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 28 10:33:10.874: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 28 10:33:10.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-1256 exec execpodscgfx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.40.187 80'
  Apr 28 10:33:10.950: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.40.187 80\nConnection to 10.68.40.187 80 port [tcp/http] succeeded!\n"
  Apr 28 10:33:10.950: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1256 @ 04/28/24 10:33:10.95
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1256 to expose endpoints map[] @ 04/28/24 10:33:10.966
  E0428 10:33:11.431734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:33:11.978: INFO: successfully validated that service endpoint-test2 in namespace services-1256 exposes endpoints map[]
  Apr 28 10:33:11.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1256" for this suite. @ 04/28/24 10:33:12.003
• [11.654 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/28/24 10:33:12.01
  Apr 28 10:33:12.010: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename limitrange @ 04/28/24 10:33:12.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:33:12.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:33:12.032
  STEP: Creating LimitRange "e2e-limitrange-5mhqb" in namespace "limitrange-4139" @ 04/28/24 10:33:12.036
  STEP: Creating another limitRange in another namespace @ 04/28/24 10:33:12.041
  Apr 28 10:33:12.053: INFO: Namespace "e2e-limitrange-5mhqb-9525" created
  Apr 28 10:33:12.053: INFO: Creating LimitRange "e2e-limitrange-5mhqb" in namespace "e2e-limitrange-5mhqb-9525"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-5mhqb" @ 04/28/24 10:33:12.058
  Apr 28 10:33:12.061: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-5mhqb" in "limitrange-4139" namespace @ 04/28/24 10:33:12.062
  Apr 28 10:33:12.068: INFO: LimitRange "e2e-limitrange-5mhqb" has been patched
  STEP: Delete LimitRange "e2e-limitrange-5mhqb" by Collection with labelSelector: "e2e-limitrange-5mhqb=patched" @ 04/28/24 10:33:12.068
  STEP: Confirm that the limitRange "e2e-limitrange-5mhqb" has been deleted @ 04/28/24 10:33:12.083
  Apr 28 10:33:12.083: INFO: Requesting list of LimitRange to confirm quantity
  Apr 28 10:33:12.089: INFO: Found 0 LimitRange with label "e2e-limitrange-5mhqb=patched"
  Apr 28 10:33:12.089: INFO: LimitRange "e2e-limitrange-5mhqb" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-5mhqb" @ 04/28/24 10:33:12.089
  Apr 28 10:33:12.094: INFO: Found 1 limitRange
  Apr 28 10:33:12.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4139" for this suite. @ 04/28/24 10:33:12.098
  STEP: Destroying namespace "e2e-limitrange-5mhqb-9525" for this suite. @ 04/28/24 10:33:12.107
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/28/24 10:33:12.115
  Apr 28 10:33:12.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:33:12.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:33:12.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:33:12.132
  Apr 28 10:33:12.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1274" for this suite. @ 04/28/24 10:33:12.188
• [0.085 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 04/28/24 10:33:12.201
  Apr 28 10:33:12.201: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/28/24 10:33:12.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:33:12.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:33:12.22
  STEP: set up a multi version CRD @ 04/28/24 10:33:12.224
  Apr 28 10:33:12.224: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:33:12.432059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:13.432906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:14.433631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 04/28/24 10:33:15.129
  STEP: check the unserved version gets removed @ 04/28/24 10:33:15.14
  E0428 10:33:15.434429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/28/24 10:33:15.752
  E0428 10:33:16.434827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:17.435134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:33:18.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9946" for this suite. @ 04/28/24 10:33:18.085
• [5.891 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/28/24 10:33:18.092
  Apr 28 10:33:18.092: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename gc @ 04/28/24 10:33:18.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:33:18.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:33:18.106
  STEP: create the rc @ 04/28/24 10:33:18.113
  W0428 10:33:18.117331      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0428 10:33:18.435961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:19.437001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:20.437760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:21.437977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:22.439261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:23.440246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/28/24 10:33:24.134
  STEP: wait for the rc to be deleted @ 04/28/24 10:33:24.147
  E0428 10:33:24.440970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:25.441297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:26.441632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:27.441868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:28.442071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/28/24 10:33:29.152
  E0428 10:33:29.442638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:30.442914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:31.443233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:32.444263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:33.444482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:34.444721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:35.445181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:36.445887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:37.446126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:38.446657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:39.446893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:40.446983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:41.447213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:42.447635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:43.448317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:44.448508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:45.448742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:46.448963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:47.449137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:48.449306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:49.450250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:50.451376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:51.452313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:52.452430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:53.452610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:54.452710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:55.452866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:56.453113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:57.453211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:33:58.453973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/28/24 10:33:59.165
  W0428 10:33:59.168615      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 28 10:33:59.168: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 28 10:33:59.168: INFO: Deleting pod "simpletest.rc-2962v" in namespace "gc-8759"
  Apr 28 10:33:59.180: INFO: Deleting pod "simpletest.rc-2nl75" in namespace "gc-8759"
  Apr 28 10:33:59.193: INFO: Deleting pod "simpletest.rc-2xpf7" in namespace "gc-8759"
  Apr 28 10:33:59.209: INFO: Deleting pod "simpletest.rc-47dmm" in namespace "gc-8759"
  Apr 28 10:33:59.225: INFO: Deleting pod "simpletest.rc-4cnnf" in namespace "gc-8759"
  Apr 28 10:33:59.246: INFO: Deleting pod "simpletest.rc-4dhk8" in namespace "gc-8759"
  Apr 28 10:33:59.271: INFO: Deleting pod "simpletest.rc-52q9l" in namespace "gc-8759"
  Apr 28 10:33:59.283: INFO: Deleting pod "simpletest.rc-5b9wf" in namespace "gc-8759"
  Apr 28 10:33:59.305: INFO: Deleting pod "simpletest.rc-5g7bx" in namespace "gc-8759"
  Apr 28 10:33:59.333: INFO: Deleting pod "simpletest.rc-5lbxx" in namespace "gc-8759"
  Apr 28 10:33:59.351: INFO: Deleting pod "simpletest.rc-5rxq4" in namespace "gc-8759"
  Apr 28 10:33:59.374: INFO: Deleting pod "simpletest.rc-68r6r" in namespace "gc-8759"
  Apr 28 10:33:59.393: INFO: Deleting pod "simpletest.rc-6wrqh" in namespace "gc-8759"
  Apr 28 10:33:59.414: INFO: Deleting pod "simpletest.rc-7gfkn" in namespace "gc-8759"
  E0428 10:33:59.454123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:33:59.464: INFO: Deleting pod "simpletest.rc-7jgdh" in namespace "gc-8759"
  Apr 28 10:33:59.499: INFO: Deleting pod "simpletest.rc-7pt2k" in namespace "gc-8759"
  Apr 28 10:33:59.553: INFO: Deleting pod "simpletest.rc-7w4jv" in namespace "gc-8759"
  Apr 28 10:33:59.580: INFO: Deleting pod "simpletest.rc-8b4xf" in namespace "gc-8759"
  Apr 28 10:33:59.603: INFO: Deleting pod "simpletest.rc-8lmx7" in namespace "gc-8759"
  Apr 28 10:33:59.640: INFO: Deleting pod "simpletest.rc-9rv5d" in namespace "gc-8759"
  Apr 28 10:33:59.734: INFO: Deleting pod "simpletest.rc-b6brr" in namespace "gc-8759"
  Apr 28 10:33:59.755: INFO: Deleting pod "simpletest.rc-c28zl" in namespace "gc-8759"
  Apr 28 10:33:59.840: INFO: Deleting pod "simpletest.rc-c554t" in namespace "gc-8759"
  Apr 28 10:33:59.887: INFO: Deleting pod "simpletest.rc-c6hp6" in namespace "gc-8759"
  Apr 28 10:33:59.938: INFO: Deleting pod "simpletest.rc-cf95s" in namespace "gc-8759"
  Apr 28 10:33:59.984: INFO: Deleting pod "simpletest.rc-cz7pq" in namespace "gc-8759"
  Apr 28 10:34:00.018: INFO: Deleting pod "simpletest.rc-d4cc7" in namespace "gc-8759"
  Apr 28 10:34:00.069: INFO: Deleting pod "simpletest.rc-dhbzx" in namespace "gc-8759"
  Apr 28 10:34:00.131: INFO: Deleting pod "simpletest.rc-dhw7r" in namespace "gc-8759"
  Apr 28 10:34:00.153: INFO: Deleting pod "simpletest.rc-dhx7x" in namespace "gc-8759"
  Apr 28 10:34:00.188: INFO: Deleting pod "simpletest.rc-dkcwp" in namespace "gc-8759"
  Apr 28 10:34:00.234: INFO: Deleting pod "simpletest.rc-dxm86" in namespace "gc-8759"
  Apr 28 10:34:00.275: INFO: Deleting pod "simpletest.rc-f2sjn" in namespace "gc-8759"
  Apr 28 10:34:00.330: INFO: Deleting pod "simpletest.rc-ff2lx" in namespace "gc-8759"
  Apr 28 10:34:00.369: INFO: Deleting pod "simpletest.rc-fhm9j" in namespace "gc-8759"
  Apr 28 10:34:00.401: INFO: Deleting pod "simpletest.rc-gj8w9" in namespace "gc-8759"
  E0428 10:34:00.454948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:34:00.463: INFO: Deleting pod "simpletest.rc-gnm5v" in namespace "gc-8759"
  Apr 28 10:34:00.489: INFO: Deleting pod "simpletest.rc-gnndr" in namespace "gc-8759"
  Apr 28 10:34:00.522: INFO: Deleting pod "simpletest.rc-gnrds" in namespace "gc-8759"
  Apr 28 10:34:00.591: INFO: Deleting pod "simpletest.rc-h29bd" in namespace "gc-8759"
  Apr 28 10:34:00.673: INFO: Deleting pod "simpletest.rc-h7wg8" in namespace "gc-8759"
  Apr 28 10:34:00.725: INFO: Deleting pod "simpletest.rc-hcg9c" in namespace "gc-8759"
  Apr 28 10:34:00.773: INFO: Deleting pod "simpletest.rc-hgsc6" in namespace "gc-8759"
  Apr 28 10:34:00.850: INFO: Deleting pod "simpletest.rc-hk762" in namespace "gc-8759"
  Apr 28 10:34:00.928: INFO: Deleting pod "simpletest.rc-hnt8m" in namespace "gc-8759"
  Apr 28 10:34:01.031: INFO: Deleting pod "simpletest.rc-hpgfv" in namespace "gc-8759"
  Apr 28 10:34:01.067: INFO: Deleting pod "simpletest.rc-hvpxv" in namespace "gc-8759"
  Apr 28 10:34:01.099: INFO: Deleting pod "simpletest.rc-j7spz" in namespace "gc-8759"
  Apr 28 10:34:01.185: INFO: Deleting pod "simpletest.rc-jsfxs" in namespace "gc-8759"
  Apr 28 10:34:01.237: INFO: Deleting pod "simpletest.rc-jxtf5" in namespace "gc-8759"
  Apr 28 10:34:01.317: INFO: Deleting pod "simpletest.rc-kgnzg" in namespace "gc-8759"
  Apr 28 10:34:01.398: INFO: Deleting pod "simpletest.rc-klnsx" in namespace "gc-8759"
  Apr 28 10:34:01.442: INFO: Deleting pod "simpletest.rc-ksk7r" in namespace "gc-8759"
  E0428 10:34:01.455852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:34:01.493: INFO: Deleting pod "simpletest.rc-kzr8l" in namespace "gc-8759"
  Apr 28 10:34:01.534: INFO: Deleting pod "simpletest.rc-l8k9x" in namespace "gc-8759"
  Apr 28 10:34:01.581: INFO: Deleting pod "simpletest.rc-lcjb5" in namespace "gc-8759"
  Apr 28 10:34:01.627: INFO: Deleting pod "simpletest.rc-lfwx2" in namespace "gc-8759"
  Apr 28 10:34:01.668: INFO: Deleting pod "simpletest.rc-lgsxb" in namespace "gc-8759"
  Apr 28 10:34:01.732: INFO: Deleting pod "simpletest.rc-lrhmw" in namespace "gc-8759"
  Apr 28 10:34:01.766: INFO: Deleting pod "simpletest.rc-n4gxp" in namespace "gc-8759"
  Apr 28 10:34:01.811: INFO: Deleting pod "simpletest.rc-ngj49" in namespace "gc-8759"
  Apr 28 10:34:01.854: INFO: Deleting pod "simpletest.rc-nnxwx" in namespace "gc-8759"
  Apr 28 10:34:01.879: INFO: Deleting pod "simpletest.rc-pbfs8" in namespace "gc-8759"
  Apr 28 10:34:01.906: INFO: Deleting pod "simpletest.rc-pc76f" in namespace "gc-8759"
  Apr 28 10:34:01.959: INFO: Deleting pod "simpletest.rc-pjkbp" in namespace "gc-8759"
  Apr 28 10:34:01.996: INFO: Deleting pod "simpletest.rc-pkthc" in namespace "gc-8759"
  Apr 28 10:34:02.052: INFO: Deleting pod "simpletest.rc-pw5bt" in namespace "gc-8759"
  Apr 28 10:34:02.114: INFO: Deleting pod "simpletest.rc-qbdw4" in namespace "gc-8759"
  Apr 28 10:34:02.158: INFO: Deleting pod "simpletest.rc-qd5np" in namespace "gc-8759"
  Apr 28 10:34:02.198: INFO: Deleting pod "simpletest.rc-qpnk6" in namespace "gc-8759"
  Apr 28 10:34:02.264: INFO: Deleting pod "simpletest.rc-r28b7" in namespace "gc-8759"
  Apr 28 10:34:02.315: INFO: Deleting pod "simpletest.rc-rgmn9" in namespace "gc-8759"
  Apr 28 10:34:02.351: INFO: Deleting pod "simpletest.rc-rjtj9" in namespace "gc-8759"
  Apr 28 10:34:02.384: INFO: Deleting pod "simpletest.rc-rm69t" in namespace "gc-8759"
  Apr 28 10:34:02.433: INFO: Deleting pod "simpletest.rc-rmmtr" in namespace "gc-8759"
  E0428 10:34:02.456849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:34:02.484: INFO: Deleting pod "simpletest.rc-rtqf9" in namespace "gc-8759"
  Apr 28 10:34:02.534: INFO: Deleting pod "simpletest.rc-s5mvf" in namespace "gc-8759"
  Apr 28 10:34:02.576: INFO: Deleting pod "simpletest.rc-t94tk" in namespace "gc-8759"
  Apr 28 10:34:02.629: INFO: Deleting pod "simpletest.rc-tjp8q" in namespace "gc-8759"
  Apr 28 10:34:02.734: INFO: Deleting pod "simpletest.rc-tkqlz" in namespace "gc-8759"
  Apr 28 10:34:02.843: INFO: Deleting pod "simpletest.rc-tq2lq" in namespace "gc-8759"
  Apr 28 10:34:02.924: INFO: Deleting pod "simpletest.rc-ttdnv" in namespace "gc-8759"
  Apr 28 10:34:02.973: INFO: Deleting pod "simpletest.rc-tv9lc" in namespace "gc-8759"
  Apr 28 10:34:03.050: INFO: Deleting pod "simpletest.rc-vkmsv" in namespace "gc-8759"
  Apr 28 10:34:03.106: INFO: Deleting pod "simpletest.rc-vpzxr" in namespace "gc-8759"
  Apr 28 10:34:03.130: INFO: Deleting pod "simpletest.rc-vq526" in namespace "gc-8759"
  Apr 28 10:34:03.167: INFO: Deleting pod "simpletest.rc-w4rcz" in namespace "gc-8759"
  Apr 28 10:34:03.219: INFO: Deleting pod "simpletest.rc-wf5jn" in namespace "gc-8759"
  Apr 28 10:34:03.256: INFO: Deleting pod "simpletest.rc-wgq2n" in namespace "gc-8759"
  Apr 28 10:34:03.291: INFO: Deleting pod "simpletest.rc-wjdjr" in namespace "gc-8759"
  Apr 28 10:34:03.343: INFO: Deleting pod "simpletest.rc-wk7qc" in namespace "gc-8759"
  Apr 28 10:34:03.374: INFO: Deleting pod "simpletest.rc-wmwj8" in namespace "gc-8759"
  E0428 10:34:03.458304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:34:03.466: INFO: Deleting pod "simpletest.rc-wpt7s" in namespace "gc-8759"
  Apr 28 10:34:03.529: INFO: Deleting pod "simpletest.rc-wvmwb" in namespace "gc-8759"
  Apr 28 10:34:03.570: INFO: Deleting pod "simpletest.rc-xghds" in namespace "gc-8759"
  Apr 28 10:34:03.607: INFO: Deleting pod "simpletest.rc-xm949" in namespace "gc-8759"
  Apr 28 10:34:03.655: INFO: Deleting pod "simpletest.rc-xmh54" in namespace "gc-8759"
  Apr 28 10:34:03.703: INFO: Deleting pod "simpletest.rc-xp54x" in namespace "gc-8759"
  Apr 28 10:34:03.776: INFO: Deleting pod "simpletest.rc-z7zvw" in namespace "gc-8759"
  Apr 28 10:34:03.843: INFO: Deleting pod "simpletest.rc-zl6pd" in namespace "gc-8759"
  Apr 28 10:34:03.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8759" for this suite. @ 04/28/24 10:34:03.909
• [45.846 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 04/28/24 10:34:03.938
  Apr 28 10:34:03.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:34:03.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:04.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:04.015
  STEP: creating an Endpoint @ 04/28/24 10:34:04.033
  STEP: waiting for available Endpoint @ 04/28/24 10:34:04.038
  STEP: listing all Endpoints @ 04/28/24 10:34:04.041
  STEP: updating the Endpoint @ 04/28/24 10:34:04.064
  STEP: fetching the Endpoint @ 04/28/24 10:34:04.081
  STEP: patching the Endpoint @ 04/28/24 10:34:04.092
  STEP: fetching the Endpoint @ 04/28/24 10:34:04.119
  STEP: deleting the Endpoint by Collection @ 04/28/24 10:34:04.147
  STEP: waiting for Endpoint deletion @ 04/28/24 10:34:04.167
  STEP: fetching the Endpoint @ 04/28/24 10:34:04.169
  Apr 28 10:34:04.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6439" for this suite. @ 04/28/24 10:34:04.186
• [0.260 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/28/24 10:34:04.199
  Apr 28 10:34:04.199: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:34:04.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:04.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:04.241
  STEP: Creating configMap with name configmap-test-volume-map-8119f88d-d4cd-4bd1-b05c-7eef2c4011ca @ 04/28/24 10:34:04.248
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:34:04.259
  E0428 10:34:04.459302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:05.459472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:06.459587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:07.459714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:34:08.298
  Apr 28 10:34:08.300: INFO: Trying to get logs from node worker2 pod pod-configmaps-7dd3d0d1-a26d-4eed-af04-73d4ff033a15 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:34:08.306
  Apr 28 10:34:08.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3747" for this suite. @ 04/28/24 10:34:08.324
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/28/24 10:34:08.334
  Apr 28 10:34:08.334: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 10:34:08.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:08.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:08.348
  STEP: creating the pod @ 04/28/24 10:34:08.349
  STEP: submitting the pod to kubernetes @ 04/28/24 10:34:08.349
  E0428 10:34:08.460036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:09.460137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/28/24 10:34:10.372
  STEP: updating the pod @ 04/28/24 10:34:10.377
  E0428 10:34:10.460232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:34:10.887: INFO: Successfully updated pod "pod-update-7008ddfc-e5bf-46d5-a1ec-bf6f620fc2ce"
  STEP: verifying the updated pod is in kubernetes @ 04/28/24 10:34:10.894
  Apr 28 10:34:10.901: INFO: Pod update OK
  Apr 28 10:34:10.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-123" for this suite. @ 04/28/24 10:34:10.905
• [2.583 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/28/24 10:34:10.918
  Apr 28 10:34:10.918: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/28/24 10:34:10.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:10.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:10.938
  E0428 10:34:11.460820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:12.461010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 04/28/24 10:34:12.976
  STEP: Cleaning up the configmap @ 04/28/24 10:34:12.982
  STEP: Cleaning up the pod @ 04/28/24 10:34:12.989
  Apr 28 10:34:13.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6674" for this suite. @ 04/28/24 10:34:13.012
• [2.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 04/28/24 10:34:13.02
  Apr 28 10:34:13.020: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename statefulset @ 04/28/24 10:34:13.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:13.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:13.039
  STEP: Creating service test in namespace statefulset-1254 @ 04/28/24 10:34:13.041
  STEP: Creating statefulset ss in namespace statefulset-1254 @ 04/28/24 10:34:13.046
  Apr 28 10:34:13.057: INFO: Found 0 stateful pods, waiting for 1
  E0428 10:34:13.461558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:14.462261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:15.462455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:16.463448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:17.464274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:18.464474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:19.464775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:20.464866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:21.465546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:22.466311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:34:23.057: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/28/24 10:34:23.064
  STEP: updating a scale subresource @ 04/28/24 10:34:23.068
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/28/24 10:34:23.073
  STEP: Patch a scale subresource @ 04/28/24 10:34:23.075
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/28/24 10:34:23.084
  Apr 28 10:34:23.090: INFO: Deleting all statefulset in ns statefulset-1254
  Apr 28 10:34:23.096: INFO: Scaling statefulset ss to 0
  E0428 10:34:23.466388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:24.466619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:25.466791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:26.467016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:27.467173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:28.467292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:29.467452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:30.467942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:31.468513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:32.469057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:34:33.110: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 28 10:34:33.114: INFO: Deleting statefulset ss
  Apr 28 10:34:33.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1254" for this suite. @ 04/28/24 10:34:33.128
• [20.115 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 04/28/24 10:34:33.136
  Apr 28 10:34:33.136: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename security-context @ 04/28/24 10:34:33.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:33.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:33.15
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/28/24 10:34:33.152
  E0428 10:34:33.469865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:34.470299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:35.470558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:36.470681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:34:37.171
  Apr 28 10:34:37.174: INFO: Trying to get logs from node worker2 pod security-context-f2ee66bd-aecc-4f7b-aec0-05d8d4086008 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:34:37.183
  Apr 28 10:34:37.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-37" for this suite. @ 04/28/24 10:34:37.213
• [4.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/28/24 10:34:37.219
  Apr 28 10:34:37.219: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename endpointslice @ 04/28/24 10:34:37.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:37.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:37.237
  Apr 28 10:34:37.248: INFO: Endpoints addresses: [192.168.227.136] , ports: [6443]
  Apr 28 10:34:37.248: INFO: EndpointSlices addresses: [192.168.227.136] , ports: [6443]
  Apr 28 10:34:37.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3335" for this suite. @ 04/28/24 10:34:37.253
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/28/24 10:34:37.259
  Apr 28 10:34:37.259: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename gc @ 04/28/24 10:34:37.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:37.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:37.274
  STEP: create the deployment @ 04/28/24 10:34:37.278
  W0428 10:34:37.282022      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/28/24 10:34:37.282
  E0428 10:34:37.471358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 04/28/24 10:34:37.785
  STEP: wait for all rs to be garbage collected @ 04/28/24 10:34:37.791
  STEP: expected 0 rs, got 1 rs @ 04/28/24 10:34:37.796
  STEP: expected 0 pods, got 2 pods @ 04/28/24 10:34:37.8
  STEP: Gathering metrics @ 04/28/24 10:34:38.312
  W0428 10:34:38.328282      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 28 10:34:38.328: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 28 10:34:38.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1494" for this suite. @ 04/28/24 10:34:38.337
• [1.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/28/24 10:34:38.345
  Apr 28 10:34:38.345: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename containers @ 04/28/24 10:34:38.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:38.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:38.37
  E0428 10:34:38.471885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:39.472625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:34:40.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3767" for this suite. @ 04/28/24 10:34:40.44
• [2.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 04/28/24 10:34:40.448
  Apr 28 10:34:40.448: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 10:34:40.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:40.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:40.47
  E0428 10:34:40.473111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/28/24 10:34:40.474
  E0428 10:34:41.473979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:42.474940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:43.476049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:44.476363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:45.477058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/28/24 10:34:45.479
  STEP: Ensuring resource quota status is calculated @ 04/28/24 10:34:45.483
  E0428 10:34:46.477348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:47.477782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 04/28/24 10:34:47.487
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/28/24 10:34:47.498
  E0428 10:34:48.478062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:49.478251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/28/24 10:34:49.503
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/28/24 10:34:49.505
  STEP: Ensuring a pod cannot update its resource requirements @ 04/28/24 10:34:49.506
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/28/24 10:34:49.51
  E0428 10:34:50.479184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:51.479226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/28/24 10:34:51.512
  STEP: Ensuring resource quota status released the pod usage @ 04/28/24 10:34:51.524
  E0428 10:34:52.480234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:53.481009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:34:53.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8849" for this suite. @ 04/28/24 10:34:53.532
• [13.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 04/28/24 10:34:53.538
  Apr 28 10:34:53.538: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename job @ 04/28/24 10:34:53.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:34:53.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:34:53.555
  STEP: Creating a job @ 04/28/24 10:34:53.557
  STEP: Ensuring job reaches completions @ 04/28/24 10:34:53.563
  E0428 10:34:54.481613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:55.482181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:56.482385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:57.482635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:58.482677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:34:59.483294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:00.483977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:01.484582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:35:01.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9787" for this suite. @ 04/28/24 10:35:01.571
• [8.038 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/28/24 10:35:01.576
  Apr 28 10:35:01.576: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-runtime @ 04/28/24 10:35:01.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:35:01.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:35:01.59
  STEP: create the container @ 04/28/24 10:35:01.592
  W0428 10:35:01.599351      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/28/24 10:35:01.599
  E0428 10:35:02.484450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:03.485236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/28/24 10:35:03.608
  STEP: the container should be terminated @ 04/28/24 10:35:03.611
  STEP: the termination message should be set @ 04/28/24 10:35:03.611
  Apr 28 10:35:03.611: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/28/24 10:35:03.611
  Apr 28 10:35:03.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4029" for this suite. @ 04/28/24 10:35:03.63
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 04/28/24 10:35:03.635
  Apr 28 10:35:03.635: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename job @ 04/28/24 10:35:03.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:35:03.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:35:03.652
  STEP: Creating a suspended job @ 04/28/24 10:35:03.656
  STEP: Patching the Job @ 04/28/24 10:35:03.66
  STEP: Watching for Job to be patched @ 04/28/24 10:35:03.669
  Apr 28 10:35:03.670: INFO: Event ADDED observed for Job e2e-bhxv4 in namespace job-7028 with labels: map[e2e-job-label:e2e-bhxv4] and annotations: map[]
  Apr 28 10:35:03.670: INFO: Event MODIFIED found for Job e2e-bhxv4 in namespace job-7028 with labels: map[e2e-bhxv4:patched e2e-job-label:e2e-bhxv4] and annotations: map[]
  STEP: Updating the job @ 04/28/24 10:35:03.67
  STEP: Watching for Job to be updated @ 04/28/24 10:35:03.681
  Apr 28 10:35:03.681: INFO: Event MODIFIED found for Job e2e-bhxv4 in namespace job-7028 with labels: map[e2e-bhxv4:patched e2e-job-label:e2e-bhxv4] and annotations: map[updated:true]
  Apr 28 10:35:03.681: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/28/24 10:35:03.681
  Apr 28 10:35:03.688: INFO: Job: e2e-bhxv4 as labels: map[e2e-bhxv4:patched e2e-job-label:e2e-bhxv4]
  STEP: Waiting for job to complete @ 04/28/24 10:35:03.688
  E0428 10:35:04.485540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:05.486340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:06.486551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:07.486803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:08.487818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:09.488477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:10.488788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:11.489781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 04/28/24 10:35:11.693
  STEP: Watching for Job to be deleted @ 04/28/24 10:35:11.699
  Apr 28 10:35:11.700: INFO: Event MODIFIED observed for Job e2e-bhxv4 in namespace job-7028 with labels: map[e2e-bhxv4:patched e2e-job-label:e2e-bhxv4] and annotations: map[updated:true]
  Apr 28 10:35:11.700: INFO: Event MODIFIED observed for Job e2e-bhxv4 in namespace job-7028 with labels: map[e2e-bhxv4:patched e2e-job-label:e2e-bhxv4] and annotations: map[updated:true]
  Apr 28 10:35:11.700: INFO: Event MODIFIED observed for Job e2e-bhxv4 in namespace job-7028 with labels: map[e2e-bhxv4:patched e2e-job-label:e2e-bhxv4] and annotations: map[updated:true]
  Apr 28 10:35:11.700: INFO: Event MODIFIED observed for Job e2e-bhxv4 in namespace job-7028 with labels: map[e2e-bhxv4:patched e2e-job-label:e2e-bhxv4] and annotations: map[updated:true]
  Apr 28 10:35:11.700: INFO: Event MODIFIED observed for Job e2e-bhxv4 in namespace job-7028 with labels: map[e2e-bhxv4:patched e2e-job-label:e2e-bhxv4] and annotations: map[updated:true]
  Apr 28 10:35:11.701: INFO: Event DELETED found for Job e2e-bhxv4 in namespace job-7028 with labels: map[e2e-bhxv4:patched e2e-job-label:e2e-bhxv4] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/28/24 10:35:11.701
  Apr 28 10:35:11.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7028" for this suite. @ 04/28/24 10:35:11.706
• [8.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 04/28/24 10:35:11.712
  Apr 28 10:35:11.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 10:35:11.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:35:11.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:35:11.738
  STEP: creating a replication controller @ 04/28/24 10:35:11.74
  Apr 28 10:35:11.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 create -f -'
  Apr 28 10:35:11.814: INFO: stderr: ""
  Apr 28 10:35:11.814: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/28/24 10:35:11.814
  Apr 28 10:35:11.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 28 10:35:11.872: INFO: stderr: ""
  Apr 28 10:35:11.872: INFO: stdout: "update-demo-nautilus-9kbbw update-demo-nautilus-zftbq "
  Apr 28 10:35:11.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-9kbbw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 28 10:35:11.919: INFO: stderr: ""
  Apr 28 10:35:11.919: INFO: stdout: ""
  Apr 28 10:35:11.919: INFO: update-demo-nautilus-9kbbw is created but not running
  E0428 10:35:12.490694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:13.491497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:14.491659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:15.491849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:16.491945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:35:16.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 28 10:35:16.973: INFO: stderr: ""
  Apr 28 10:35:16.973: INFO: stdout: "update-demo-nautilus-9kbbw update-demo-nautilus-zftbq "
  Apr 28 10:35:16.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-9kbbw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 28 10:35:17.028: INFO: stderr: ""
  Apr 28 10:35:17.028: INFO: stdout: "true"
  Apr 28 10:35:17.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-9kbbw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 28 10:35:17.081: INFO: stderr: ""
  Apr 28 10:35:17.081: INFO: stdout: "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/nautilus:1.7"
  Apr 28 10:35:17.081: INFO: validating pod update-demo-nautilus-9kbbw
  Apr 28 10:35:17.088: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 28 10:35:17.088: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 28 10:35:17.088: INFO: update-demo-nautilus-9kbbw is verified up and running
  Apr 28 10:35:17.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-zftbq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 28 10:35:17.136: INFO: stderr: ""
  Apr 28 10:35:17.136: INFO: stdout: "true"
  Apr 28 10:35:17.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-zftbq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 28 10:35:17.205: INFO: stderr: ""
  Apr 28 10:35:17.205: INFO: stdout: "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/nautilus:1.7"
  Apr 28 10:35:17.205: INFO: validating pod update-demo-nautilus-zftbq
  Apr 28 10:35:17.211: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 28 10:35:17.211: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 28 10:35:17.211: INFO: update-demo-nautilus-zftbq is verified up and running
  STEP: scaling down the replication controller @ 04/28/24 10:35:17.211
  Apr 28 10:35:17.212: INFO: scanned /root for discovery docs: <nil>
  Apr 28 10:35:17.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0428 10:35:17.492992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:35:18.274: INFO: stderr: ""
  Apr 28 10:35:18.274: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/28/24 10:35:18.274
  Apr 28 10:35:18.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 28 10:35:18.314: INFO: stderr: ""
  Apr 28 10:35:18.314: INFO: stdout: "update-demo-nautilus-9kbbw "
  Apr 28 10:35:18.314: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-9kbbw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 28 10:35:18.352: INFO: stderr: ""
  Apr 28 10:35:18.352: INFO: stdout: "true"
  Apr 28 10:35:18.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-9kbbw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 28 10:35:18.391: INFO: stderr: ""
  Apr 28 10:35:18.391: INFO: stdout: "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/nautilus:1.7"
  Apr 28 10:35:18.391: INFO: validating pod update-demo-nautilus-9kbbw
  Apr 28 10:35:18.394: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 28 10:35:18.394: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 28 10:35:18.394: INFO: update-demo-nautilus-9kbbw is verified up and running
  STEP: scaling up the replication controller @ 04/28/24 10:35:18.394
  Apr 28 10:35:18.396: INFO: scanned /root for discovery docs: <nil>
  Apr 28 10:35:18.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0428 10:35:18.493053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:35:19.450: INFO: stderr: ""
  Apr 28 10:35:19.450: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/28/24 10:35:19.45
  Apr 28 10:35:19.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 28 10:35:19.491: INFO: stderr: ""
  Apr 28 10:35:19.491: INFO: stdout: "update-demo-nautilus-9kbbw update-demo-nautilus-vmhjz "
  Apr 28 10:35:19.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-9kbbw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0428 10:35:19.493484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:35:19.528: INFO: stderr: ""
  Apr 28 10:35:19.528: INFO: stdout: "true"
  Apr 28 10:35:19.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-9kbbw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 28 10:35:19.568: INFO: stderr: ""
  Apr 28 10:35:19.568: INFO: stdout: "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/nautilus:1.7"
  Apr 28 10:35:19.568: INFO: validating pod update-demo-nautilus-9kbbw
  Apr 28 10:35:19.572: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 28 10:35:19.572: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 28 10:35:19.572: INFO: update-demo-nautilus-9kbbw is verified up and running
  Apr 28 10:35:19.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-vmhjz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 28 10:35:19.610: INFO: stderr: ""
  Apr 28 10:35:19.610: INFO: stdout: "true"
  Apr 28 10:35:19.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods update-demo-nautilus-vmhjz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 28 10:35:19.653: INFO: stderr: ""
  Apr 28 10:35:19.653: INFO: stdout: "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/nautilus:1.7"
  Apr 28 10:35:19.653: INFO: validating pod update-demo-nautilus-vmhjz
  Apr 28 10:35:19.658: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 28 10:35:19.658: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 28 10:35:19.658: INFO: update-demo-nautilus-vmhjz is verified up and running
  STEP: using delete to clean up resources @ 04/28/24 10:35:19.658
  Apr 28 10:35:19.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 delete --grace-period=0 --force -f -'
  Apr 28 10:35:19.706: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 28 10:35:19.706: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 28 10:35:19.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get rc,svc -l name=update-demo --no-headers'
  Apr 28 10:35:19.755: INFO: stderr: "No resources found in kubectl-3118 namespace.\n"
  Apr 28 10:35:19.755: INFO: stdout: ""
  Apr 28 10:35:19.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-3118 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 28 10:35:19.804: INFO: stderr: ""
  Apr 28 10:35:19.804: INFO: stdout: ""
  Apr 28 10:35:19.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3118" for this suite. @ 04/28/24 10:35:19.808
• [8.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 04/28/24 10:35:19.814
  Apr 28 10:35:19.814: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename var-expansion @ 04/28/24 10:35:19.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:35:19.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:35:19.84
  STEP: creating the pod @ 04/28/24 10:35:19.842
  STEP: waiting for pod running @ 04/28/24 10:35:19.849
  E0428 10:35:20.494294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:21.494673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 04/28/24 10:35:21.859
  Apr 28 10:35:21.862: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1925 PodName:var-expansion-e43a770d-3c4a-4c41-bd75-de2562630bfe ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:35:21.862: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:35:21.862: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:35:21.862: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-1925/pods/var-expansion-e43a770d-3c4a-4c41-bd75-de2562630bfe/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/28/24 10:35:21.9
  Apr 28 10:35:21.904: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1925 PodName:var-expansion-e43a770d-3c4a-4c41-bd75-de2562630bfe ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:35:21.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:35:21.904: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:35:21.904: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-1925/pods/var-expansion-e43a770d-3c4a-4c41-bd75-de2562630bfe/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/28/24 10:35:21.943
  Apr 28 10:35:22.455: INFO: Successfully updated pod "var-expansion-e43a770d-3c4a-4c41-bd75-de2562630bfe"
  STEP: waiting for annotated pod running @ 04/28/24 10:35:22.455
  STEP: deleting the pod gracefully @ 04/28/24 10:35:22.457
  Apr 28 10:35:22.457: INFO: Deleting pod "var-expansion-e43a770d-3c4a-4c41-bd75-de2562630bfe" in namespace "var-expansion-1925"
  Apr 28 10:35:22.464: INFO: Wait up to 5m0s for pod "var-expansion-e43a770d-3c4a-4c41-bd75-de2562630bfe" to be fully deleted
  E0428 10:35:22.495538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:23.495707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:24.496460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:25.496897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:26.497469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:27.497861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:28.498289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:29.498434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:30.498959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:31.499289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:32.500203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:33.500442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:34.500965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:35.501367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:36.501752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:37.502041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:38.502217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:39.502636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:40.502988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:41.503181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:42.503631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:43.503813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:44.504429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:45.504737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:46.505008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:47.505155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:48.505292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:49.505539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:50.505956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:51.506193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:52.506709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:53.507263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:54.508351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:55.508448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:56.508760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:35:56.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1925" for this suite. @ 04/28/24 10:35:56.542
• [36.733 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/28/24 10:35:56.548
  Apr 28 10:35:56.548: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename podtemplate @ 04/28/24 10:35:56.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:35:56.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:35:56.564
  Apr 28 10:35:56.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4" for this suite. @ 04/28/24 10:35:56.596
• [0.055 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/28/24 10:35:56.603
  Apr 28 10:35:56.603: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename field-validation @ 04/28/24 10:35:56.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:35:56.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:35:56.616
  Apr 28 10:35:56.619: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:35:57.509718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:35:58.510413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0428 10:35:59.145161      21 warnings.go:70] unknown field "alpha"
  W0428 10:35:59.145189      21 warnings.go:70] unknown field "beta"
  W0428 10:35:59.145195      21 warnings.go:70] unknown field "delta"
  W0428 10:35:59.145201      21 warnings.go:70] unknown field "epsilon"
  W0428 10:35:59.145206      21 warnings.go:70] unknown field "gamma"
  E0428 10:35:59.511200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:35:59.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6299" for this suite. @ 04/28/24 10:35:59.678
• [3.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/28/24 10:35:59.683
  Apr 28 10:35:59.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename daemonsets @ 04/28/24 10:35:59.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:35:59.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:35:59.699
  STEP: Creating simple DaemonSet "daemon-set" @ 04/28/24 10:35:59.72
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/28/24 10:35:59.723
  Apr 28 10:35:59.729: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:35:59.729: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 10:36:00.511730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:00.730: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 28 10:36:00.730: INFO: Node worker1 is running 0 daemon pod, expected 1
  E0428 10:36:01.512370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:01.734: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 28 10:36:01.734: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/28/24 10:36:01.739
  Apr 28 10:36:01.759: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 28 10:36:01.759: INFO: Node worker2 is running 0 daemon pod, expected 1
  E0428 10:36:02.512866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:02.760: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 28 10:36:02.760: INFO: Node worker2 is running 0 daemon pod, expected 1
  E0428 10:36:03.512957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:03.760: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 28 10:36:03.760: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/28/24 10:36:03.763
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9418, will wait for the garbage collector to delete the pods @ 04/28/24 10:36:03.763
  Apr 28 10:36:03.822: INFO: Deleting DaemonSet.extensions daemon-set took: 5.125913ms
  Apr 28 10:36:03.923: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.93294ms
  E0428 10:36:04.513538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:05.513902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:05.527: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:36:05.527: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 28 10:36:05.530: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"49714"},"items":null}

  Apr 28 10:36:05.533: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"49714"},"items":null}

  Apr 28 10:36:05.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9418" for this suite. @ 04/28/24 10:36:05.547
• [5.870 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/28/24 10:36:05.553
  Apr 28 10:36:05.553: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 10:36:05.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:36:05.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:36:05.57
  STEP: Creating pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438 @ 04/28/24 10:36:05.572
  E0428 10:36:06.514694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:07.515145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/28/24 10:36:07.587
  Apr 28 10:36:07.590: INFO: Initial restart count of pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 is 0
  Apr 28 10:36:07.592: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:08.515214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:09.516262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:09.596: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:10.517343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:11.517579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:11.599: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:12.517811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:13.518139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:13.603: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:14.518357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:15.519249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:15.608: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:16.520409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:17.520724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:17.612: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:18.521169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:19.522129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:19.615: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:20.523073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:21.523391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:21.619: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:22.524249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:23.524425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:23.622: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:24.525161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:25.525905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:25.627: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:26.526033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:27.526286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:27.631: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:28.527137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:29.527273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:29.633: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:30.527798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:31.528252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:31.638: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:32.528390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:33.528606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:33.642: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:34.529162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:35.529776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:35.646: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:36.530857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:37.531296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:37.651: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:38.531516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:39.532254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:39.657: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:40.533123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:41.533864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:41.660: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:42.534675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:43.534934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:43.664: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:44.535298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:45.535625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:45.668: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:46.536274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:47.536474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:47.672: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:48.536563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:49.537523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:49.677: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:50.538397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:51.538518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:51.683: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:52.539236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:53.539257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:53.689: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:54.539778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:55.539969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:55.692: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  E0428 10:36:56.540829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:57.541733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:36:57.696: INFO: Get pod busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 in namespace container-probe-438
  Apr 28 10:36:57.696: INFO: Restart count of pod container-probe-438/busybox-ce3b5e52-22cb-4209-8e9a-588b9abf6733 is now 1 (50.106600686s elapsed)
  STEP: deleting the pod @ 04/28/24 10:36:57.696
  Apr 28 10:36:57.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-438" for this suite. @ 04/28/24 10:36:57.711
• [52.166 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/28/24 10:36:57.72
  Apr 28 10:36:57.720: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:36:57.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:36:57.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:36:57.736
  STEP: Creating configMap with name configmap-test-volume-549aca22-2153-47c7-8a7a-2bba317a2112 @ 04/28/24 10:36:57.737
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:36:57.742
  E0428 10:36:58.541849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:36:59.541983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:36:59.758
  Apr 28 10:36:59.761: INFO: Trying to get logs from node worker2 pod pod-configmaps-7251251a-6478-437f-8d5b-ff649b9db242 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:36:59.769
  Apr 28 10:36:59.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1158" for this suite. @ 04/28/24 10:36:59.786
• [2.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/28/24 10:36:59.792
  Apr 28 10:36:59.792: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:36:59.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:36:59.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:36:59.805
  STEP: Creating configMap with name configmap-projected-all-test-volume-6a8e918b-d643-4fdd-ad3e-03e35e545763 @ 04/28/24 10:36:59.806
  STEP: Creating secret with name secret-projected-all-test-volume-93e664e4-853a-48e3-b340-59b5939099b5 @ 04/28/24 10:36:59.81
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/28/24 10:36:59.82
  E0428 10:37:00.542956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:01.543074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:37:01.839
  Apr 28 10:37:01.842: INFO: Trying to get logs from node worker2 pod projected-volume-efc906af-0018-4b05-ba38-e49e7d656d98 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 10:37:01.847
  Apr 28 10:37:01.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6322" for this suite. @ 04/28/24 10:37:01.861
• [2.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/28/24 10:37:01.867
  Apr 28 10:37:01.867: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:37:01.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:37:01.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:37:01.882
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:37:01.884
  E0428 10:37:02.543208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:03.544300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:37:03.902
  Apr 28 10:37:03.906: INFO: Trying to get logs from node worker2 pod downwardapi-volume-673a40d8-03ad-4202-9a86-798039948c88 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:37:03.911
  Apr 28 10:37:03.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3114" for this suite. @ 04/28/24 10:37:03.927
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/28/24 10:37:03.938
  Apr 28 10:37:03.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 10:37:03.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:37:04.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:37:04.005
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/28/24 10:37:04.007
  E0428 10:37:04.544560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:05.544775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:06.545284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:07.545381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:37:08.025
  Apr 28 10:37:08.028: INFO: Trying to get logs from node worker2 pod pod-b1e3f2ad-788a-4ee0-a372-368c2d4b4f1f container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:37:08.034
  Apr 28 10:37:08.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6835" for this suite. @ 04/28/24 10:37:08.051
• [4.119 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/28/24 10:37:08.057
  Apr 28 10:37:08.057: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-preemption @ 04/28/24 10:37:08.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:37:08.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:37:08.069
  Apr 28 10:37:08.082: INFO: Waiting up to 1m0s for all nodes to be ready
  E0428 10:37:08.546373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:09.547341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:10.548451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:11.548448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:12.549114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:13.550095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:14.550241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:15.550585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:16.551525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:17.552371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:18.553444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:19.553857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:20.554739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:21.555741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:22.556645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:23.556980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:24.557416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:25.558317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:26.559364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:27.559421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:28.560329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:29.561375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:30.561542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:31.561961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:32.562728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:33.562892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:34.563263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:35.564136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:36.565024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:37.565749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:38.566689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:39.566955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:40.568107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:41.568322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:42.568411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:43.569444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:44.569936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:45.570435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:46.570691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:47.571092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:48.571225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:49.572719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:50.572796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:51.572962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:52.573376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:53.573609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:54.573957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:55.575061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:56.575855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:57.576357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:58.576841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:37:59.576972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:00.578092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:01.578912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:02.579798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:03.580635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:04.581357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:05.581698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:06.581980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:07.582123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:08.086: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/28/24 10:38:08.089
  Apr 28 10:38:08.103: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 28 10:38:08.112: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 28 10:38:08.127: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 28 10:38:08.134: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 28 10:38:08.151: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 28 10:38:08.158: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/28/24 10:38:08.159
  E0428 10:38:08.583233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:09.584258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/28/24 10:38:10.184
  E0428 10:38:10.585082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:11.585330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:12.586068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:13.586257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:14.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9391" for this suite. @ 04/28/24 10:38:14.253
• [66.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/28/24 10:38:14.26
  Apr 28 10:38:14.260: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 10:38:14.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:38:14.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:38:14.276
  STEP: Creating pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675 @ 04/28/24 10:38:14.278
  E0428 10:38:14.587003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:15.587696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:16.588474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:17.588840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/28/24 10:38:18.299
  Apr 28 10:38:18.303: INFO: Initial restart count of pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 is 0
  Apr 28 10:38:18.306: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:18.589325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:19.589443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:20.309: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:20.590204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:21.591234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:22.313: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:22.592276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:23.592495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:24.318: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:24.593212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:25.593502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:26.323: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:26.594355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:27.594670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:28.328: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:28.594738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:29.595122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:30.332: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:30.595159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:31.596257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:32.337: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:32.597287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:33.597484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:34.342: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:34.598008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:35.598430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:36.346: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:36.599114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:37.599260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:38.350: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  Apr 28 10:38:38.350: INFO: Restart count of pod container-probe-3675/liveness-3b929125-9976-4c3c-ae1f-562902d36280 is now 1 (20.046978772s elapsed)
  E0428 10:38:38.599826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:39.600074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:40.354: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:40.600169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:41.600968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:42.358: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:42.601145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:43.601593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:44.363: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:44.602383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:45.603268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:46.367: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:46.604059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:47.604278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:48.373: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:48.605029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:49.605391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:50.378: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:50.606041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:51.606325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:52.382: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:52.606945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:53.607244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:54.387: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:54.607774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:55.608075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:56.392: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:38:56.608191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:57.608488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:38:58.397: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  Apr 28 10:38:58.397: INFO: Restart count of pod container-probe-3675/liveness-3b929125-9976-4c3c-ae1f-562902d36280 is now 2 (40.094254183s elapsed)
  E0428 10:38:58.609032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:38:59.609231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:00.401: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:00.609810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:01.610000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:02.406: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:02.610473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:03.610652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:04.409: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:04.611412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:05.611891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:06.414: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:06.612464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:07.613003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:08.419: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:08.613402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:09.613797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:10.425: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:10.614311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:11.614784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:12.429: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:12.615155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:13.615189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:14.433: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:14.616398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:15.617047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:16.438: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:16.617316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:17.617562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:18.442: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  Apr 28 10:39:18.442: INFO: Restart count of pod container-probe-3675/liveness-3b929125-9976-4c3c-ae1f-562902d36280 is now 3 (1m0.139304611s elapsed)
  E0428 10:39:18.618106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:19.618330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:20.446: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:20.619338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:21.619598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:22.450: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:22.619674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:23.620580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:24.455: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:24.620843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:25.621121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:26.458: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:26.621861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:27.622919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:28.462: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:28.623854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:29.624921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:30.466: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:30.626023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:31.626109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:32.470: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:32.626173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:33.626307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:34.476: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:34.627230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:35.628319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:36.480: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:36.628356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:37.628589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:38.484: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  Apr 28 10:39:38.484: INFO: Restart count of pod container-probe-3675/liveness-3b929125-9976-4c3c-ae1f-562902d36280 is now 4 (1m20.180763643s elapsed)
  E0428 10:39:38.628659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:39.628760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:40.488: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:40.629811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:41.630012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:42.491: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:42.630193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:43.631167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:44.495: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:44.631411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:45.632152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:46.499: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:46.632896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:47.633702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:48.504: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:48.634282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:49.634495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:50.508: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:50.634670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:51.635307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:52.512: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:52.636056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:53.636190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:54.517: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:54.636655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:55.637628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:56.521: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:56.638360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:57.638601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:39:58.524: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:39:58.638618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:39:59.639004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:00.529: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:00.639731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:01.640579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:02.533: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:02.641527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:03.641659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:04.536: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:04.642322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:05.643096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:06.541: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:06.643725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:07.644245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:08.546: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:08.645278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:09.645418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:10.551: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:10.646467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:11.646584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:12.555: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:12.647292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:13.647336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:14.559: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:14.647472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:15.647612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:16.562: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:16.648259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:17.649255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:18.566: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:18.649441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:19.649588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:20.570: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:20.650390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:21.650624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:22.574: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:22.651113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:23.651214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:24.578: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:24.652173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:25.652564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:26.583: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:26.653369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:27.653614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:28.586: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:28.654266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:29.654512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:30.591: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:30.655343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:31.656253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:32.595: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:32.657271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:33.657528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:34.600: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:34.658135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:35.658562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:36.605: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:36.659248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:37.659403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:38.609: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:38.659965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:39.660257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:40.614: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:40.660373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:41.660563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:42.620: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:42.661487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:43.661637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:44.624: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  E0428 10:40:44.662650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:45.663164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:46.628: INFO: Get pod liveness-3b929125-9976-4c3c-ae1f-562902d36280 in namespace container-probe-3675
  Apr 28 10:40:46.628: INFO: Restart count of pod container-probe-3675/liveness-3b929125-9976-4c3c-ae1f-562902d36280 is now 5 (2m28.325154446s elapsed)
  STEP: deleting the pod @ 04/28/24 10:40:46.628
  Apr 28 10:40:46.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3675" for this suite. @ 04/28/24 10:40:46.646
• [152.394 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/28/24 10:40:46.654
  Apr 28 10:40:46.654: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename deployment @ 04/28/24 10:40:46.654
  E0428 10:40:46.663334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:40:46.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:40:46.668
  STEP: creating a Deployment @ 04/28/24 10:40:46.678
  STEP: waiting for Deployment to be created @ 04/28/24 10:40:46.682
  STEP: waiting for all Replicas to be Ready @ 04/28/24 10:40:46.683
  Apr 28 10:40:46.684: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 28 10:40:46.684: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 28 10:40:46.692: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 28 10:40:46.692: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 28 10:40:46.706: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 28 10:40:46.706: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 28 10:40:46.729: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 28 10:40:46.730: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0428 10:40:47.664113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:47.911: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 28 10:40:47.911: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 28 10:40:48.034: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/28/24 10:40:48.034
  Apr 28 10:40:48.040: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/28/24 10:40:48.04
  Apr 28 10:40:48.040: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0
  Apr 28 10:40:48.040: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0
  Apr 28 10:40:48.040: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0
  Apr 28 10:40:48.040: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 0
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:48.041: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:48.051: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:48.051: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:48.062: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:48.062: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:48.076: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  Apr 28 10:40:48.076: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  Apr 28 10:40:48.097: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  Apr 28 10:40:48.097: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  E0428 10:40:48.664836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:49.051: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:49.051: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:49.067: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  STEP: listing Deployments @ 04/28/24 10:40:49.067
  Apr 28 10:40:49.072: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/28/24 10:40:49.072
  Apr 28 10:40:49.092: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/28/24 10:40:49.092
  Apr 28 10:40:49.100: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 28 10:40:49.106: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 28 10:40:49.124: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 28 10:40:49.140: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0428 10:40:49.665790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:50.068: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 28 10:40:50.093: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 28 10:40:50.099: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0428 10:40:50.666112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:40:50.923: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/28/24 10:40:50.953
  STEP: fetching the DeploymentStatus @ 04/28/24 10:40:50.959
  Apr 28 10:40:50.963: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  Apr 28 10:40:50.963: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  Apr 28 10:40:50.963: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  Apr 28 10:40:50.964: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 1
  Apr 28 10:40:50.964: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:50.964: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:50.964: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 2
  Apr 28 10:40:50.964: INFO: observed Deployment test-deployment in namespace deployment-9758 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/28/24 10:40:50.964
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.974: INFO: observed event type MODIFIED
  Apr 28 10:40:50.976: INFO: Log out all the ReplicaSets if there is no deployment created
  Apr 28 10:40:50.980: INFO: ReplicaSet "test-deployment-5bcbcb6b7b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-5bcbcb6b7b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b94e2aa-3784-44c5-9f81-df144162ffc6",
      ResourceVersion: (string) (len=5) "50687",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897646,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bcbcb6b7b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "48e844ac-9d9c-478d-8b14-59423f94f7d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 38 65 38  34 34 61 63 2d 39 64 39  |":\"48e844ac-9d9|
              00000130  63 2d 34 37 38 64 2d 38  62 31 34 2d 35 39 34 32  |c-478d-8b14-5942|
              00000140  33 66 39 34 66 37 64 33  5c 22 7d 22 3a 7b 7d 7d  |3f94f7d3\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bcbcb6b7b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bcbcb6b7b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=72) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 28 10:40:50.985: INFO: ReplicaSet "test-deployment-697758f95f":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-697758f95f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0bb82946-57b9-4a86-9f10-6d47b5980473",
      ResourceVersion: (string) (len=5) "50781",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "697758f95f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "48e844ac-9d9c-478d-8b14-59423f94f7d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 38 65 38  34 34 61 63 2d 39 64 39  |":\"48e844ac-9d9|
              00000130  63 2d 34 37 38 64 2d 38  62 31 34 2d 35 39 34 32  |c-478d-8b14-5942|
              00000140  33 66 39 34 66 37 64 33  5c 22 7d 22 3a 7b 7d 7d  |3f94f7d3\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "697758f95f",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "697758f95f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=53) "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 28 10:40:50.992: INFO: pod: "test-deployment-697758f95f-bkwh4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-697758f95f-bkwh4",
      GenerateName: (string) (len=27) "test-deployment-697758f95f-",
      Namespace: (string) (len=15) "deployment-9758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00c05c65-cc1e-4a6f-a3fb-60ebdfb6f274",
      ResourceVersion: (string) (len=5) "50777",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897652,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "697758f95f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-697758f95f",
          UID: (types.UID) (len=36) "0bb82946-57b9-4a86-9f10-6d47b5980473",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 62 62 38 32 39 34 36  |uid\":\"0bb82946|
              000000a0  2d 35 37 62 39 2d 34 61  38 36 2d 39 66 31 30 2d  |-57b9-4a86-9f10-|
              000000b0  36 64 34 37 62 35 39 38  30 34 37 33 5c 22 7d 22  |6d47b5980473\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 38 39  2e 39 37 5c 22 7d 22 3a  |2.20.189.97\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ktmgm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=53) "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ktmgm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) (len=13) "172.20.189.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.189.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849897648,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=53) "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9",
          ImageID: (string) (len=121) "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause@sha256:0fc1f3b764be56f7c881a69cbd553ae25a2b5523c6901fbacb8270307c29d0c4",
          ContainerID: (string) (len=77) "containerd://2e0807d4c64713237e93e5928440a1f3d93d97a6e946ecba77f48b7e5f062651",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 28 10:40:50.994: INFO: pod: "test-deployment-697758f95f-kq6wd":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-697758f95f-kq6wd",
      GenerateName: (string) (len=27) "test-deployment-697758f95f-",
      Namespace: (string) (len=15) "deployment-9758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4028cbd-3830-462d-bb75-aaa0ae1ccee9",
      ResourceVersion: (string) (len=5) "50771",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897649,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897652,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "697758f95f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-697758f95f",
          UID: (types.UID) (len=36) "0bb82946-57b9-4a86-9f10-6d47b5980473",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 62 62 38 32 39 34 36  |uid\":\"0bb82946|
              000000a0  2d 35 37 62 39 2d 34 61  38 36 2d 39 66 31 30 2d  |-57b9-4a86-9f10-|
              000000b0  36 64 34 37 62 35 39 38  30 34 37 33 5c 22 7d 22  |6d47b5980473\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=621) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 73 74  |:phase":{},"f:st|
              00000260  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8nv9b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=53) "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8nv9b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.137"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897649,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849897649,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849897650,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://9309e3d01e19c4c91f1839b09f24e1a030c4a4fedea1319625dde4d5ae551c4d"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=53) "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause:3.9",
          ImageID: (string) (len=121) "registry.dev.rdev.tech:18093/sonobouy/v1.29/pause@sha256:0fc1f3b764be56f7c881a69cbd553ae25a2b5523c6901fbacb8270307c29d0c4",
          ContainerID: (string) (len=77) "containerd://9309e3d01e19c4c91f1839b09f24e1a030c4a4fedea1319625dde4d5ae551c4d",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 28 10:40:50.997: INFO: ReplicaSet "test-deployment-84549779bf":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-84549779bf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd942dfa-0bce-4cc9-87f3-bd35f9d69397",
      ResourceVersion: (string) (len=5) "50773",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897649,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "84549779bf",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "48e844ac-9d9c-478d-8b14-59423f94f7d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 38 65 38  34 34 61 63 2d 39 64 39  |":\"48e844ac-9d9|
              00000130  63 2d 34 37 38 64 2d 38  62 31 34 2d 35 39 34 32  |c-478d-8b14-5942|
              00000140  33 66 39 34 66 37 64 33  5c 22 7d 22 3a 7b 7d 7d  |3f94f7d3\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "84549779bf",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "84549779bf",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 28 10:40:51.006: INFO: pod: "test-deployment-84549779bf-5wpxm":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-84549779bf-5wpxm",
      GenerateName: (string) (len=27) "test-deployment-84549779bf-",
      Namespace: (string) (len=15) "deployment-9758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c025e68-4f53-4569-be21-acec307f29f8",
      ResourceVersion: (string) (len=5) "50772",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897650,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "84549779bf"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-84549779bf",
          UID: (types.UID) (len=36) "dd942dfa-0bce-4cc9-87f3-bd35f9d69397",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 64 39 34 32 64 66 61  |uid\":\"dd942dfa|
              000000a0  2d 30 62 63 65 2d 34 63  63 39 2d 38 37 66 33 2d  |-0bce-4cc9-87f3-|
              000000b0  62 64 33 35 66 39 64 36  39 33 39 37 5c 22 7d 22  |bd35f9d69397\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 31 39  2e 39 35 5c 22 7d 22 3a  |2.20.219.95\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9gr9v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9gr9v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "master1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.136"
        }
      },
      PodIP: (string) (len=13) "172.20.219.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.219.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897650,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849897650,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://8548d90e6c27ab965e32399190cbf1cfaa5ecc29ba6f9a1dbc22b9e311ca2e2c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 28 10:40:51.008: INFO: pod: "test-deployment-84549779bf-qp5gk":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-84549779bf-qp5gk",
      GenerateName: (string) (len=27) "test-deployment-84549779bf-",
      Namespace: (string) (len=15) "deployment-9758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c45655f-7506-4511-9299-9e2532e1b3dc",
      ResourceVersion: (string) (len=5) "50789",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897649,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897651,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "84549779bf",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-84549779bf",
          UID: (types.UID) (len=36) "dd942dfa-0bce-4cc9-87f3-bd35f9d69397",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 64 39 34 32 64 66 61  |uid\":\"dd942dfa|
              000000a0  2d 30 62 63 65 2d 34 63  63 39 2d 38 37 66 33 2d  |-0bce-4cc9-87f3-|
              000000b0  62 64 33 35 66 39 64 36  39 33 39 37 5c 22 7d 22  |bd35f9d69397\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 38 39  2e 31 32 35 5c 22 7d 22  |2.20.189.125\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6cnfq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6cnfq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "worker2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849897649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.138"
        }
      },
      PodIP: (string) (len=14) "172.20.189.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.189.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849897649,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849897649,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=74) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=137) "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://85053b22dcb374010657f2cf6e0e24b34b8827f99807521689775b2edfad392d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 28 10:40:51.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9758" for this suite. @ 04/28/24 10:40:51.017
• [4.371 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/28/24 10:40:51.025
  Apr 28 10:40:51.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 10:40:51.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:40:51.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:40:51.103
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/28/24 10:40:51.106
  E0428 10:40:51.666342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:52.666377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:53.666941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:54.667341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:40:55.125
  Apr 28 10:40:55.127: INFO: Trying to get logs from node worker2 pod pod-8387cc56-a53c-4c7c-8bba-58383bf8c401 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:40:55.132
  Apr 28 10:40:55.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8713" for this suite. @ 04/28/24 10:40:55.152
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/28/24 10:40:55.167
  Apr 28 10:40:55.167: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:40:55.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:40:55.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:40:55.185
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:40:55.187
  E0428 10:40:55.668318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:56.668461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:40:57.214
  Apr 28 10:40:57.219: INFO: Trying to get logs from node worker2 pod downwardapi-volume-f463876e-68f6-4f46-9ddf-12b932441ead container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:40:57.227
  Apr 28 10:40:57.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2280" for this suite. @ 04/28/24 10:40:57.247
• [2.087 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/28/24 10:40:57.254
  Apr 28 10:40:57.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename watch @ 04/28/24 10:40:57.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:40:57.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:40:57.271
  STEP: creating a new configmap @ 04/28/24 10:40:57.272
  STEP: modifying the configmap once @ 04/28/24 10:40:57.276
  STEP: modifying the configmap a second time @ 04/28/24 10:40:57.285
  STEP: deleting the configmap @ 04/28/24 10:40:57.302
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/28/24 10:40:57.309
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/28/24 10:40:57.31
  Apr 28 10:40:57.310: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-642  d7b2e512-2b30-4eff-92c3-a47963d49fcd 50945 0 2024-04-28 10:40:57 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-28 10:40:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 10:40:57.310: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-642  d7b2e512-2b30-4eff-92c3-a47963d49fcd 50946 0 2024-04-28 10:40:57 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-28 10:40:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 10:40:57.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-642" for this suite. @ 04/28/24 10:40:57.316
• [0.067 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/28/24 10:40:57.322
  Apr 28 10:40:57.322: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-probe @ 04/28/24 10:40:57.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:40:57.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:40:57.344
  STEP: Creating pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115 @ 04/28/24 10:40:57.346
  E0428 10:40:57.669309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:40:58.669800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/28/24 10:40:59.361
  Apr 28 10:40:59.364: INFO: Initial restart count of pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 is 0
  Apr 28 10:40:59.367: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:40:59.670600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:00.671130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:01.372: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:01.671799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:02.672305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:03.376: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:03.673043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:04.673368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:05.381: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:05.674369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:06.674563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:07.387: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:07.675680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:08.676320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:09.391: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:09.677027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:10.677359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:11.396: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:11.677776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:12.677851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:13.401: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:13.678085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:14.678747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:15.405: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:15.679529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:16.680301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:17.410: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:17.681278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:18.681461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:19.413: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:19.682123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:20.682468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:21.418: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:21.682636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:22.682770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:23.421: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:23.683899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:24.684478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:25.427: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:25.685047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:26.686013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:27.431: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:27.686769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:28.687180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:29.435: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:29.687965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:30.688170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:31.440: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:31.688881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:32.689161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:33.444: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:33.689861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:34.690149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:35.449: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:35.690374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:36.690521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:37.452: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:37.691294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:38.692323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:39.457: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:39.693086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:40.693204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:41.462: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:41.693310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:42.694267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:43.467: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:43.695261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:44.695683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:45.472: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:45.696627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:46.696829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:47.477: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:47.696910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:48.697262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:49.481: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:49.698354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:50.699315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:51.486: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:51.700215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:52.700296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:53.491: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:53.701274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:54.701679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:55.495: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:55.701825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:56.702209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:57.499: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:57.702517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:41:58.702990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:41:59.504: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:41:59.703201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:00.703813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:01.509: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:01.703925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:02.704085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:03.513: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:03.704850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:04.705620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:05.517: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:05.705789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:06.705923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:07.522: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:07.706820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:08.707075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:09.527: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:09.707251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:10.708359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:11.532: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:11.708870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:12.709134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:13.537: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:13.709522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:14.710401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:15.540: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:15.710848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:16.711121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:17.545: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:17.711555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:18.711658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:19.549: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:19.712493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:20.713254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:21.554: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:21.713415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:22.713577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:23.558: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:23.713624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:24.714071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:25.562: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:25.714130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:26.714568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:27.567: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:27.714709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:28.714852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:29.572: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:29.715245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:30.716279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:31.575: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:31.716793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:32.717005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:33.578: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:33.717698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:34.718537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:35.585: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:35.719289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:36.719497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:37.591: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:37.720303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:38.720540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:39.596: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:39.720945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:40.721103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:41.601: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:41.721894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:42.722161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:43.605: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:43.722307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:44.722909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:45.609: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:45.722945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:46.723195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:47.612: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:47.724056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:48.724425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:49.616: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:49.724877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:50.725231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:51.620: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:51.726233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:52.726502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:53.625: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:53.727509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:54.728276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:55.629: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:55.728688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:56.729025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:57.632: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:57.730110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:42:58.730271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:42:59.635: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:42:59.731367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:00.732045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:01.638: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:01.732877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:02.733110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:03.642: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:03.733407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:04.733929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:05.648: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:05.734716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:06.734938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:07.652: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:07.735264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:08.735845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:09.656: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:09.736330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:10.736527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:11.659: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:11.737157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:12.738087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:13.662: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:13.738958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:14.739397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:15.666: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:15.740150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:16.740748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:17.670: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:17.741024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:18.741132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:19.674: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:19.741548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:20.741767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:21.679: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:21.742252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:22.742445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:23.683: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:23.742511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:24.742694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:25.687: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:25.743180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:26.743180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:27.692: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:27.743903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:28.744129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:29.698: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:29.744563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:30.745284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:31.703: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:31.746348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:32.746555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:33.708: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:33.746977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:34.747556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:35.712: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:35.748222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:36.748479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:37.716: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:37.748832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:38.748956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:39.720: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:39.749528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:40.749620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:41.725: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:41.750664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:42.751634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:43.730: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:43.752383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:44.752779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:45.735: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:45.753357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:46.753616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:47.737: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:47.753882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:48.754363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:49.742: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:49.754442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:50.754662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:51.745: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:51.755537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:52.756307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:53.749: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:53.757082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:54.757464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:55.754: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:55.758025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:56.758265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:57.759197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:57.760: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:43:58.759197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:43:59.760379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:43:59.765: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:00.760443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:01.760628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:01.770: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:02.761315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:03.762162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:03.773: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:04.762585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:05.763065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:05.778: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:06.763351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:07.763351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:07.781: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:08.764290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:09.764526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:09.785: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:10.765076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:11.765313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:11.790: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:12.765786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:13.766296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:13.795: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:14.766784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:15.767199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:15.799: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:16.768939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:17.769530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:17.804: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:18.770119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:19.770242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:19.808: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:20.770545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:21.770713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:21.812: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:22.771273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:23.771336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:23.817: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:24.772237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:25.773115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:25.821: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:26.773310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:27.774051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:27.823: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:28.774876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:29.775147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:29.827: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:30.775848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:31.776379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:31.832: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:32.776517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:33.776840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:33.837: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:34.777458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:35.777878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:35.841: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:36.778797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:37.779746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:37.844: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:38.780412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:39.780645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:39.848: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:40.781404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:41.781770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:41.852: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:42.781924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:43.782137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:43.856: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:44.783012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:45.783209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:45.861: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:46.783230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:47.784424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:47.865: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:48.785045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:49.785289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:49.869: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:50.786305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:51.786559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:51.873: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:52.786623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:53.786808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:53.876: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:54.787740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:55.788183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:55.881: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:56.788510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:57.789152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:44:57.884: INFO: Get pod test-webserver-5107933f-d304-4bae-8cc3-6e58a9f710b4 in namespace container-probe-7115
  E0428 10:44:58.789306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:44:59.789536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/28/24 10:44:59.884
  Apr 28 10:44:59.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7115" for this suite. @ 04/28/24 10:44:59.908
• [242.594 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/28/24 10:44:59.916
  Apr 28 10:44:59.916: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename disruption @ 04/28/24 10:44:59.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:44:59.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:44:59.928
  STEP: creating the pdb @ 04/28/24 10:44:59.93
  STEP: Waiting for the pdb to be processed @ 04/28/24 10:44:59.935
  E0428 10:45:00.790124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:01.790885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 04/28/24 10:45:01.938
  STEP: Waiting for the pdb to be processed @ 04/28/24 10:45:01.945
  E0428 10:45:02.791150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:03.792226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 04/28/24 10:45:03.949
  STEP: Waiting for the pdb to be processed @ 04/28/24 10:45:03.956
  E0428 10:45:04.792245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:05.792507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 04/28/24 10:45:05.965
  Apr 28 10:45:05.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4412" for this suite. @ 04/28/24 10:45:05.969
• [6.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/28/24 10:45:05.975
  Apr 28 10:45:05.975: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 10:45:05.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:45:05.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:45:05.989
  STEP: Setting up server cert @ 04/28/24 10:45:06.006
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 10:45:06.14
  STEP: Deploying the webhook pod @ 04/28/24 10:45:06.146
  STEP: Wait for the deployment to be ready @ 04/28/24 10:45:06.156
  Apr 28 10:45:06.163: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0428 10:45:06.793584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:07.793954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 10:45:08.174
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 10:45:08.183
  E0428 10:45:08.794882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:45:09.184: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 28 10:45:09.189: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7657-crds.webhook.example.com via the AdmissionRegistration API @ 04/28/24 10:45:09.696
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/28/24 10:45:09.706
  E0428 10:45:09.795916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:10.796076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:11.796427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:45:12.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6148" for this suite. @ 04/28/24 10:45:12.29
  STEP: Destroying namespace "webhook-markers-114" for this suite. @ 04/28/24 10:45:12.295
• [6.326 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 04/28/24 10:45:12.301
  Apr 28 10:45:12.301: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename var-expansion @ 04/28/24 10:45:12.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:45:12.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:45:12.315
  STEP: creating the pod with failed condition @ 04/28/24 10:45:12.318
  E0428 10:45:12.797128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:13.798169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:14.799320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:15.800347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:16.800515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:17.800610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:18.800694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:19.800882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:20.801035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:21.801321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:22.802237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:23.802934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:24.803490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:25.804314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:26.804452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:27.804823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:28.805029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:29.805258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:30.805455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:31.805690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:32.805950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:33.806263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:34.807178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:35.807318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:36.808297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:37.808636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:38.809440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:39.810003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:40.810129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:41.810298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:42.810383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:43.810725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:44.811483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:45.811957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:46.812929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:47.813018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:48.813827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:49.814134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:50.814909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:51.815013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:52.815130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:53.815194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:54.815888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:55.816246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:56.816565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:57.816639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:58.817359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:45:59.817536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:00.818300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:01.819367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:02.819438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:03.819659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:04.820297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:05.820628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:06.821502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:07.822125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:08.822967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:09.823205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:10.824319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:11.824503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:12.825273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:13.825500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:14.826476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:15.826859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:16.827191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:17.828246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:18.828560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:19.828685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:20.829801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:21.829979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:22.830878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:23.831982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:24.832953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:25.833065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:26.833185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:27.833594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:28.834262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:29.834427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:30.835477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:31.835633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:32.836483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:33.836546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:34.837350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:35.837467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:36.837515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:37.837796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:38.838720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:39.838945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:40.839738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:41.839799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:42.840374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:43.841049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:44.841187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:45.841340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:46.842080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:47.842254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:48.843005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:49.843184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:50.843737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:51.843954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:52.844317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:53.844464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:54.845481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:55.845912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:56.846142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:57.846411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:58.847326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:46:59.848102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:00.848341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:01.848463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:02.848763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:03.848927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:04.849713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:05.849983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:06.850045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:07.850257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:08.850674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:09.851026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:10.851759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:11.852816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 04/28/24 10:47:12.327
  Apr 28 10:47:12.837: INFO: Successfully updated pod "var-expansion-8cdf7073-027f-4c0e-bfe2-2b438fae076a"
  STEP: waiting for pod running @ 04/28/24 10:47:12.837
  E0428 10:47:12.853674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:13.853938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/28/24 10:47:14.846
  Apr 28 10:47:14.846: INFO: Deleting pod "var-expansion-8cdf7073-027f-4c0e-bfe2-2b438fae076a" in namespace "var-expansion-4034"
  Apr 28 10:47:14.853: INFO: Wait up to 5m0s for pod "var-expansion-8cdf7073-027f-4c0e-bfe2-2b438fae076a" to be fully deleted
  E0428 10:47:14.854052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:15.855249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:16.856311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:17.856397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:18.856533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:19.856851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:20.857357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:21.857830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:22.858048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:23.858573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:24.859020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:25.859389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:26.859489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:27.860280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:28.860514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:29.860586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:30.860986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:31.861224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:32.862503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:33.863172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:34.864112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:35.864147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:36.864359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:37.864859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:38.865081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:39.865392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:40.865505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:41.866150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:42.866454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:43.866521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:44.867424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:45.868370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:46.868544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:47:46.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4034" for this suite. @ 04/28/24 10:47:46.924
• [154.629 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 04/28/24 10:47:46.93
  Apr 28 10:47:46.930: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename namespaces @ 04/28/24 10:47:46.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:47:46.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:47:46.994
  STEP: Updating Namespace "namespaces-8055" @ 04/28/24 10:47:46.995
  Apr 28 10:47:47.002: INFO: Namespace "namespaces-8055" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"86c34a04-4490-4ced-8eb9-b845c034fb7b", "kubernetes.io/metadata.name":"namespaces-8055", "namespaces-8055":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Apr 28 10:47:47.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8055" for this suite. @ 04/28/24 10:47:47.006
• [0.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/28/24 10:47:47.015
  Apr 28 10:47:47.015: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:47:47.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:47:47.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:47:47.032
  STEP: Creating projection with secret that has name projected-secret-test-73540a77-a1c2-41d2-86bc-2fbde0444d86 @ 04/28/24 10:47:47.034
  STEP: Creating a pod to test consume secrets @ 04/28/24 10:47:47.037
  E0428 10:47:47.868849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:48.869096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:47:49.054
  Apr 28 10:47:49.058: INFO: Trying to get logs from node worker2 pod pod-projected-secrets-71a50cc1-ddf5-48f3-99c9-2a402594dcfc container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/28/24 10:47:49.065
  Apr 28 10:47:49.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6857" for this suite. @ 04/28/24 10:47:49.08
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/28/24 10:47:49.086
  Apr 28 10:47:49.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pod-network-test @ 04/28/24 10:47:49.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:47:49.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:47:49.102
  STEP: Performing setup for networking test in namespace pod-network-test-8365 @ 04/28/24 10:47:49.103
  STEP: creating a selector @ 04/28/24 10:47:49.103
  STEP: Creating the service pods in kubernetes @ 04/28/24 10:47:49.103
  Apr 28 10:47:49.103: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0428 10:47:49.869465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:50.869834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:51.869945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:52.870706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:53.871383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:54.872251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:55.872504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:56.872714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:57.873604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:58.873810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:47:59.874251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:00.875014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/28/24 10:48:01.181
  E0428 10:48:01.875907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:02.876126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:03.207: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 28 10:48:03.207: INFO: Going to poll 172.20.219.82 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 28 10:48:03.209: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.219.82:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8365 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:48:03.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:48:03.209: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:48:03.210: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-8365/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.219.82%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 28 10:48:03.252: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 28 10:48:03.252: INFO: Going to poll 172.20.235.185 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 28 10:48:03.256: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.235.185:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8365 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:48:03.256: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:48:03.256: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:48:03.256: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-8365/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.235.185%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 28 10:48:03.292: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 28 10:48:03.292: INFO: Going to poll 172.20.189.84 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 28 10:48:03.296: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.189.84:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8365 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:48:03.296: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:48:03.296: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:48:03.296: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-8365/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.189.84%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 28 10:48:03.338: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 28 10:48:03.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8365" for this suite. @ 04/28/24 10:48:03.342
• [14.261 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/28/24 10:48:03.347
  Apr 28 10:48:03.347: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename init-container @ 04/28/24 10:48:03.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:03.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:03.36
  STEP: creating the pod @ 04/28/24 10:48:03.362
  Apr 28 10:48:03.362: INFO: PodSpec: initContainers in spec.initContainers
  E0428 10:48:03.876709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:04.877434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:05.877760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:06.878799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:07.879450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:07.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7957" for this suite. @ 04/28/24 10:48:07.954
• [4.611 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 04/28/24 10:48:07.959
  Apr 28 10:48:07.959: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 10:48:07.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:07.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:07.972
  STEP: Creating projection with secret that has name secret-emptykey-test-00fe6551-e533-44bd-91f1-67558149d72d @ 04/28/24 10:48:07.974
  Apr 28 10:48:07.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7679" for this suite. @ 04/28/24 10:48:07.982
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/28/24 10:48:07.996
  Apr 28 10:48:07.996: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename gc @ 04/28/24 10:48:07.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:08.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:08.012
  STEP: create the rc @ 04/28/24 10:48:08.014
  W0428 10:48:08.018971      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0428 10:48:08.880070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:09.880394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:10.880645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:11.881340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:12.881553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/28/24 10:48:13.023
  STEP: wait for all pods to be garbage collected @ 04/28/24 10:48:13.028
  E0428 10:48:13.881983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:14.882494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:15.883259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:16.883380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:17.883637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/28/24 10:48:18.036
  W0428 10:48:18.040437      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 28 10:48:18.040: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 28 10:48:18.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6205" for this suite. @ 04/28/24 10:48:18.043
• [10.051 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/28/24 10:48:18.048
  Apr 28 10:48:18.048: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename gc @ 04/28/24 10:48:18.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:18.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:18.064
  Apr 28 10:48:18.089: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"81028121-867f-4b8d-a4a7-f9ea28aeee2c", Controller:(*bool)(0xc001069c96), BlockOwnerDeletion:(*bool)(0xc001069c97)}}
  Apr 28 10:48:18.096: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"c723adcb-43f1-440e-a229-2495503d6d48", Controller:(*bool)(0xc0046a8a06), BlockOwnerDeletion:(*bool)(0xc0046a8a07)}}
  Apr 28 10:48:18.102: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"32e67ea3-80ee-4dff-861d-b7ab29d7c70c", Controller:(*bool)(0xc0046a8c16), BlockOwnerDeletion:(*bool)(0xc0046a8c17)}}
  E0428 10:48:18.883831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:19.883867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:20.884063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:21.884132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:22.884250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:23.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5224" for this suite. @ 04/28/24 10:48:23.118
• [5.076 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/28/24 10:48:23.124
  Apr 28 10:48:23.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pod-network-test @ 04/28/24 10:48:23.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:23.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:23.14
  STEP: Performing setup for networking test in namespace pod-network-test-9502 @ 04/28/24 10:48:23.143
  STEP: creating a selector @ 04/28/24 10:48:23.143
  STEP: Creating the service pods in kubernetes @ 04/28/24 10:48:23.143
  Apr 28 10:48:23.143: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0428 10:48:23.884587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:24.885179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:25.885369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:26.885612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:27.886222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:28.886597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:29.886979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:30.887184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:31.887304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:32.887345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:33.888297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:34.888590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/28/24 10:48:35.224
  E0428 10:48:35.888981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:36.889493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:37.238: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 28 10:48:37.238: INFO: Breadth first check of 172.20.219.91 on host 192.168.227.136...
  Apr 28 10:48:37.241: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.189.110:9080/dial?request=hostname&protocol=udp&host=172.20.219.91&port=8081&tries=1'] Namespace:pod-network-test-9502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:48:37.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:48:37.242: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:48:37.242: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.189.110%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.219.91%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 28 10:48:37.281: INFO: Waiting for responses: map[]
  Apr 28 10:48:37.281: INFO: reached 172.20.219.91 after 0/1 tries
  Apr 28 10:48:37.281: INFO: Breadth first check of 172.20.235.168 on host 192.168.227.137...
  Apr 28 10:48:37.284: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.189.110:9080/dial?request=hostname&protocol=udp&host=172.20.235.168&port=8081&tries=1'] Namespace:pod-network-test-9502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:48:37.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:48:37.284: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:48:37.284: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.189.110%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.235.168%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 28 10:48:37.323: INFO: Waiting for responses: map[]
  Apr 28 10:48:37.323: INFO: reached 172.20.235.168 after 0/1 tries
  Apr 28 10:48:37.323: INFO: Breadth first check of 172.20.189.105 on host 192.168.227.138...
  Apr 28 10:48:37.326: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.189.110:9080/dial?request=hostname&protocol=udp&host=172.20.189.105&port=8081&tries=1'] Namespace:pod-network-test-9502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:48:37.326: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:48:37.327: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:48:37.327: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.189.110%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.189.105%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 28 10:48:37.360: INFO: Waiting for responses: map[]
  Apr 28 10:48:37.360: INFO: reached 172.20.189.105 after 0/1 tries
  Apr 28 10:48:37.360: INFO: Going to retry 0 out of 3 pods....
  Apr 28 10:48:37.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9502" for this suite. @ 04/28/24 10:48:37.364
• [14.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/28/24 10:48:37.369
  Apr 28 10:48:37.369: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:48:37.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:37.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:37.383
  STEP: Creating configMap with name projected-configmap-test-volume-f1bf59b3-a5b0-411e-8445-f3f33782a9c1 @ 04/28/24 10:48:37.385
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:48:37.391
  E0428 10:48:37.889881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:38.890112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:39.890377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:40.891245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:48:41.413
  Apr 28 10:48:41.416: INFO: Trying to get logs from node worker2 pod pod-projected-configmaps-af3199f3-69e5-403a-9c18-c3dcb2791517 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:48:41.422
  Apr 28 10:48:41.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1820" for this suite. @ 04/28/24 10:48:41.448
• [4.086 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/28/24 10:48:41.455
  Apr 28 10:48:41.455: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 10:48:41.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:41.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:41.468
  STEP: creating the pod @ 04/28/24 10:48:41.47
  STEP: submitting the pod to kubernetes @ 04/28/24 10:48:41.47
  W0428 10:48:41.476706      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0428 10:48:41.891622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:42.891961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/28/24 10:48:43.488
  STEP: updating the pod @ 04/28/24 10:48:43.49
  E0428 10:48:43.892401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:43.998: INFO: Successfully updated pod "pod-update-activedeadlineseconds-d4c2b9da-4f64-4d8d-ab2d-a3cee5226b5f"
  E0428 10:48:44.892965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:45.893442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:46.894515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:47.895692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:48.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-996" for this suite. @ 04/28/24 10:48:48.015
• [6.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/28/24 10:48:48.024
  Apr 28 10:48:48.024: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 10:48:48.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:48.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:48.04
  STEP: Setting up server cert @ 04/28/24 10:48:48.059
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 10:48:48.143
  STEP: Deploying the webhook pod @ 04/28/24 10:48:48.149
  STEP: Wait for the deployment to be ready @ 04/28/24 10:48:48.157
  Apr 28 10:48:48.161: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0428 10:48:48.896366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:49.897212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 10:48:50.173
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 10:48:50.18
  E0428 10:48:50.897692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:51.181: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/28/24 10:48:51.186
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/28/24 10:48:51.198
  STEP: Creating a configMap that should not be mutated @ 04/28/24 10:48:51.203
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/28/24 10:48:51.211
  STEP: Creating a configMap that should be mutated @ 04/28/24 10:48:51.216
  Apr 28 10:48:51.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-12" for this suite. @ 04/28/24 10:48:51.287
  STEP: Destroying namespace "webhook-markers-6168" for this suite. @ 04/28/24 10:48:51.299
• [3.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 04/28/24 10:48:51.31
  Apr 28 10:48:51.310: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 10:48:51.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:51.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:51.338
  STEP: creating Agnhost RC @ 04/28/24 10:48:51.343
  Apr 28 10:48:51.343: INFO: namespace kubectl-6082
  Apr 28 10:48:51.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-6082 create -f -'
  Apr 28 10:48:51.424: INFO: stderr: ""
  Apr 28 10:48:51.424: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/28/24 10:48:51.425
  E0428 10:48:51.898671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:52.428: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 28 10:48:52.428: INFO: Found 0 / 1
  E0428 10:48:52.899246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:53.429: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 28 10:48:53.429: INFO: Found 1 / 1
  Apr 28 10:48:53.429: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 28 10:48:53.432: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 28 10:48:53.432: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 28 10:48:53.432: INFO: wait on agnhost-primary startup in kubectl-6082 
  Apr 28 10:48:53.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-6082 logs agnhost-primary-p82w2 agnhost-primary'
  Apr 28 10:48:53.483: INFO: stderr: ""
  Apr 28 10:48:53.483: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 04/28/24 10:48:53.483
  Apr 28 10:48:53.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-6082 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Apr 28 10:48:53.537: INFO: stderr: ""
  Apr 28 10:48:53.537: INFO: stdout: "service/rm2 exposed\n"
  Apr 28 10:48:53.543: INFO: Service rm2 in namespace kubectl-6082 found.
  E0428 10:48:53.900058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:54.900485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 04/28/24 10:48:55.55
  Apr 28 10:48:55.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-6082 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Apr 28 10:48:55.601: INFO: stderr: ""
  Apr 28 10:48:55.601: INFO: stdout: "service/rm3 exposed\n"
  Apr 28 10:48:55.605: INFO: Service rm3 in namespace kubectl-6082 found.
  E0428 10:48:55.900652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:48:56.900705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:57.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6082" for this suite. @ 04/28/24 10:48:57.615
• [6.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/28/24 10:48:57.621
  Apr 28 10:48:57.621: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename daemonsets @ 04/28/24 10:48:57.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:48:57.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:48:57.636
  Apr 28 10:48:57.659: INFO: Create a RollingUpdate DaemonSet
  Apr 28 10:48:57.666: INFO: Check that daemon pods launch on every node of the cluster
  Apr 28 10:48:57.674: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:48:57.674: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 10:48:57.900775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:58.674: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 28 10:48:58.674: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 10:48:58.900862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:48:59.672: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 28 10:48:59.673: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Apr 28 10:48:59.673: INFO: Update the DaemonSet to trigger a rollout
  Apr 28 10:48:59.679: INFO: Updating DaemonSet daemon-set
  E0428 10:48:59.901856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:00.689: INFO: Roll back the DaemonSet before rollout is complete
  Apr 28 10:49:00.696: INFO: Updating DaemonSet daemon-set
  Apr 28 10:49:00.696: INFO: Make sure DaemonSet rollback is complete
  Apr 28 10:49:00.700: INFO: Wrong image for pod: daemon-set-bt5cg. Expected: registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Apr 28 10:49:00.700: INFO: Pod daemon-set-bt5cg is not available
  E0428 10:49:00.902616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:01.903325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:02.904249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:03.904999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:04.905157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:05.700: INFO: Pod daemon-set-jrbth is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/28/24 10:49:05.711
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4776, will wait for the garbage collector to delete the pods @ 04/28/24 10:49:05.711
  Apr 28 10:49:05.770: INFO: Deleting DaemonSet.extensions daemon-set took: 6.416889ms
  Apr 28 10:49:05.871: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.75424ms
  E0428 10:49:05.905548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:06.906561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:07.574: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:49:07.574: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 28 10:49:07.577: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"52744"},"items":null}

  Apr 28 10:49:07.579: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"52744"},"items":null}

  Apr 28 10:49:07.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4776" for this suite. @ 04/28/24 10:49:07.593
• [9.978 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/28/24 10:49:07.599
  Apr 28 10:49:07.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:49:07.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:07.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:07.615
  STEP: Creating configMap with name configmap-test-volume-map-de21d20d-150a-446f-90c5-928a3cb07cc4 @ 04/28/24 10:49:07.617
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:49:07.622
  E0428 10:49:07.907138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:08.907286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:09.907850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:10.908237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:49:11.641
  Apr 28 10:49:11.644: INFO: Trying to get logs from node worker2 pod pod-configmaps-b1e52051-6ebb-42e7-80c2-316db1f6e91b container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:49:11.65
  Apr 28 10:49:11.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3985" for this suite. @ 04/28/24 10:49:11.667
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/28/24 10:49:11.672
  Apr 28 10:49:11.672: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 10:49:11.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:11.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:11.689
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/28/24 10:49:11.692
  E0428 10:49:11.909388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:12.909774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:13.909901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:14.910760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:49:15.712
  Apr 28 10:49:15.714: INFO: Trying to get logs from node worker2 pod pod-b5b5f062-e33f-4040-a6c2-c44f1cc0ef80 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:49:15.719
  Apr 28 10:49:15.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5320" for this suite. @ 04/28/24 10:49:15.737
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/28/24 10:49:15.744
  Apr 28 10:49:15.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename server-version @ 04/28/24 10:49:15.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:15.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:15.762
  STEP: Request ServerVersion @ 04/28/24 10:49:15.764
  STEP: Confirm major version @ 04/28/24 10:49:15.765
  Apr 28 10:49:15.765: INFO: Major version: 1
  STEP: Confirm minor version @ 04/28/24 10:49:15.765
  Apr 28 10:49:15.765: INFO: cleanMinorVersion: 29
  Apr 28 10:49:15.765: INFO: Minor version: 29
  Apr 28 10:49:15.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8284" for this suite. @ 04/28/24 10:49:15.769
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/28/24 10:49:15.778
  Apr 28 10:49:15.778: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:49:15.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:15.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:15.79
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:49:15.792
  E0428 10:49:15.911844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:16.911874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:17.912946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:18.913313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:49:19.814
  Apr 28 10:49:19.817: INFO: Trying to get logs from node worker2 pod downwardapi-volume-a71c8bed-29f2-4746-b7f6-1a1fd908f706 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:49:19.822
  Apr 28 10:49:19.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3730" for this suite. @ 04/28/24 10:49:19.836
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 04/28/24 10:49:19.842
  Apr 28 10:49:19.842: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:49:19.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:19.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:19.856
  STEP: Creating configMap that has name configmap-test-emptyKey-ddd75e93-9d98-4712-9d37-4e22de63554e @ 04/28/24 10:49:19.857
  Apr 28 10:49:19.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3498" for this suite. @ 04/28/24 10:49:19.865
• [0.029 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/28/24 10:49:19.872
  Apr 28 10:49:19.872: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:49:19.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:19.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:19.888
  STEP: Creating the pod @ 04/28/24 10:49:19.89
  E0428 10:49:19.913655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:20.914472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:21.915264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:22.420: INFO: Successfully updated pod "labelsupdate87763f4d-9f13-459d-8778-bac6e487e7fc"
  E0428 10:49:22.915840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:23.916447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:24.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4173" for this suite. @ 04/28/24 10:49:24.441
• [4.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/28/24 10:49:24.447
  Apr 28 10:49:24.447: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 10:49:24.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:24.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:24.46
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/28/24 10:49:24.463
  E0428 10:49:24.917357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:25.917801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:26.918143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:27.918380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:49:28.482
  Apr 28 10:49:28.485: INFO: Trying to get logs from node worker2 pod pod-3487d956-f3c9-4161-a4e8-ac4d516914b3 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:49:28.492
  Apr 28 10:49:28.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5867" for this suite. @ 04/28/24 10:49:28.51
• [4.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/28/24 10:49:28.518
  Apr 28 10:49:28.518: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:49:28.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:28.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:28.533
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:49:28.535
  E0428 10:49:28.918785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:29.919051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:30.919797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:31.920213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:49:32.557
  Apr 28 10:49:32.559: INFO: Trying to get logs from node worker2 pod downwardapi-volume-de090838-93f7-4113-a1c7-846221afb819 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:49:32.566
  Apr 28 10:49:32.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4671" for this suite. @ 04/28/24 10:49:32.584
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/28/24 10:49:32.591
  Apr 28 10:49:32.591: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 10:49:32.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:32.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:32.605
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/28/24 10:49:32.607
  E0428 10:49:32.920613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:33.920993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:34.921906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:35.922498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:49:36.628
  Apr 28 10:49:36.631: INFO: Trying to get logs from node worker2 pod pod-271b8456-6143-4697-90ef-5e26a94c164c container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:49:36.638
  Apr 28 10:49:36.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1404" for this suite. @ 04/28/24 10:49:36.658
• [4.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 04/28/24 10:49:36.663
  Apr 28 10:49:36.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename var-expansion @ 04/28/24 10:49:36.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:36.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:36.678
  E0428 10:49:36.929131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:37.929817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:38.692: INFO: Deleting pod "var-expansion-a45ff3bd-335d-4c74-ab01-a9519a55a257" in namespace "var-expansion-670"
  Apr 28 10:49:38.698: INFO: Wait up to 5m0s for pod "var-expansion-a45ff3bd-335d-4c74-ab01-a9519a55a257" to be fully deleted
  E0428 10:49:38.930945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:39.931291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:40.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-670" for this suite. @ 04/28/24 10:49:40.707
• [4.050 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/28/24 10:49:40.713
  Apr 28 10:49:40.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replication-controller @ 04/28/24 10:49:40.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:40.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:40.728
  STEP: Creating replication controller my-hostname-basic-f2e0ad29-7fec-49d7-bd92-1b02528990d6 @ 04/28/24 10:49:40.731
  Apr 28 10:49:40.744: INFO: Pod name my-hostname-basic-f2e0ad29-7fec-49d7-bd92-1b02528990d6: Found 1 pods out of 1
  Apr 28 10:49:40.744: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-f2e0ad29-7fec-49d7-bd92-1b02528990d6" are running
  E0428 10:49:40.931876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:41.932283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:42.753: INFO: Pod "my-hostname-basic-f2e0ad29-7fec-49d7-bd92-1b02528990d6-j29g7" is running and ready(conditions: [])
  Apr 28 10:49:42.753: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/28/24 10:49:42.753
  Apr 28 10:49:42.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-773" for this suite. @ 04/28/24 10:49:42.767
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/28/24 10:49:42.772
  Apr 28 10:49:42.772: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pods @ 04/28/24 10:49:42.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:42.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:42.789
  STEP: creating the pod @ 04/28/24 10:49:42.791
  STEP: setting up watch @ 04/28/24 10:49:42.791
  STEP: submitting the pod to kubernetes @ 04/28/24 10:49:42.897
  STEP: verifying the pod is in kubernetes @ 04/28/24 10:49:42.903
  STEP: verifying pod creation was observed @ 04/28/24 10:49:42.908
  E0428 10:49:42.932888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:43.933237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/28/24 10:49:44.918
  STEP: verifying pod deletion was observed @ 04/28/24 10:49:44.924
  E0428 10:49:44.934287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:45.934802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:46.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3792" for this suite. @ 04/28/24 10:49:46.124
• [3.356 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/28/24 10:49:46.129
  Apr 28 10:49:46.129: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:49:46.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:46.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:46.143
  STEP: Creating the pod @ 04/28/24 10:49:46.145
  E0428 10:49:46.935212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:47.935545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:48.692: INFO: Successfully updated pod "labelsupdate823ae569-9fff-4a55-9ab1-e2faa457e94b"
  E0428 10:49:48.935746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:49.936324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:50.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9221" for this suite. @ 04/28/24 10:49:50.71
• [4.588 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/28/24 10:49:50.717
  Apr 28 10:49:50.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:49:50.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:50.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:50.73
  STEP: Creating configMap with name projected-configmap-test-volume-map-686d02d9-2132-4755-acc6-92889bf36d45 @ 04/28/24 10:49:50.732
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:49:50.736
  E0428 10:49:50.936900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:51.936947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:52.937152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:53.937379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:49:54.754
  Apr 28 10:49:54.757: INFO: Trying to get logs from node worker2 pod pod-projected-configmaps-5c487846-d985-46c5-bbbb-a2b9dad9ff72 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:49:54.763
  Apr 28 10:49:54.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9023" for this suite. @ 04/28/24 10:49:54.781
• [4.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/28/24 10:49:54.786
  Apr 28 10:49:54.786: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename apf @ 04/28/24 10:49:54.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:54.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:54.801
  STEP: getting /apis @ 04/28/24 10:49:54.805
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/28/24 10:49:54.807
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/28/24 10:49:54.808
  STEP: creating @ 04/28/24 10:49:54.808
  STEP: getting @ 04/28/24 10:49:54.822
  STEP: listing @ 04/28/24 10:49:54.824
  STEP: watching @ 04/28/24 10:49:54.827
  Apr 28 10:49:54.827: INFO: starting watch
  STEP: patching @ 04/28/24 10:49:54.828
  STEP: updating @ 04/28/24 10:49:54.833
  Apr 28 10:49:54.838: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 04/28/24 10:49:54.838
  STEP: patching /status @ 04/28/24 10:49:54.842
  STEP: updating /status @ 04/28/24 10:49:54.846
  STEP: deleting @ 04/28/24 10:49:54.852
  STEP: deleting a collection @ 04/28/24 10:49:54.866
  Apr 28 10:49:54.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-367" for this suite. @ 04/28/24 10:49:54.887
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 04/28/24 10:49:54.894
  Apr 28 10:49:54.894: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename svcaccounts @ 04/28/24 10:49:54.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:54.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:54.912
  STEP: creating a ServiceAccount @ 04/28/24 10:49:54.913
  STEP: watching for the ServiceAccount to be added @ 04/28/24 10:49:54.92
  STEP: patching the ServiceAccount @ 04/28/24 10:49:54.925
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/28/24 10:49:54.931
  STEP: deleting the ServiceAccount @ 04/28/24 10:49:54.934
  E0428 10:49:54.937376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:49:54.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9767" for this suite. @ 04/28/24 10:49:54.96
• [0.075 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 04/28/24 10:49:54.969
  Apr 28 10:49:54.969: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename pv @ 04/28/24 10:49:54.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:49:54.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:49:54.99
  STEP: Creating initial PV and PVC @ 04/28/24 10:49:54.991
  Apr 28 10:49:54.991: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8762" @ 04/28/24 10:49:55.009
  STEP: Listing PVCs in namespace "pv-8762" @ 04/28/24 10:49:55.012
  STEP: Patching the PV "pv-8762-8s857" @ 04/28/24 10:49:55.016
  STEP: Patching the PVC "pvc-k2zcf" @ 04/28/24 10:49:55.027
  STEP: Getting PV "pv-8762-8s857" @ 04/28/24 10:49:55.039
  STEP: Getting PVC "pvc-k2zcf" @ 04/28/24 10:49:55.043
  STEP: Deleting PVC "pvc-k2zcf" @ 04/28/24 10:49:55.047
  STEP: Confirm deletion of PVC "pvc-k2zcf" @ 04/28/24 10:49:55.052
  E0428 10:49:55.937590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:56.937687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8762-8s857" @ 04/28/24 10:49:57.06
  STEP: Confirm deletion of PV "pv-8762-8s857" @ 04/28/24 10:49:57.065
  E0428 10:49:57.938093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:49:58.938369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 04/28/24 10:49:59.073
  Apr 28 10:49:59.073: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8762-knrdp" @ 04/28/24 10:49:59.081
  STEP: Updating the PVC "pvc-ztnwp" @ 04/28/24 10:49:59.091
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-ztnwp=updated" @ 04/28/24 10:49:59.098
  STEP: Deleting PVC "pvc-ztnwp" via DeleteCollection @ 04/28/24 10:49:59.101
  STEP: Confirm deletion of PVC "pvc-ztnwp" @ 04/28/24 10:49:59.109
  E0428 10:49:59.938698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:00.938910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8762-knrdp" via DeleteCollection @ 04/28/24 10:50:01.116
  STEP: Confirm deletion of PV "pv-8762-knrdp" @ 04/28/24 10:50:01.124
  E0428 10:50:01.939265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:02.939447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:50:03.131: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 28 10:50:03.131: INFO: Deleting PersistentVolumeClaim "pvc-ztnwp"
  Apr 28 10:50:03.134: INFO: Deleting PersistentVolume "pv-8762-knrdp"
  Apr 28 10:50:03.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8762" for this suite. @ 04/28/24 10:50:03.141
• [8.177 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/28/24 10:50:03.146
  Apr 28 10:50:03.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:50:03.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:03.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:03.162
  STEP: Creating a pod to test downward api env vars @ 04/28/24 10:50:03.163
  E0428 10:50:03.940360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:04.940546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:05.941340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:06.941440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:50:07.184
  Apr 28 10:50:07.190: INFO: Trying to get logs from node worker2 pod downward-api-b482e9ec-9b89-421a-b5fe-0093828fa4a0 container dapi-container: <nil>
  STEP: delete the pod @ 04/28/24 10:50:07.202
  Apr 28 10:50:07.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7500" for this suite. @ 04/28/24 10:50:07.225
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/28/24 10:50:07.232
  Apr 28 10:50:07.232: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename field-validation @ 04/28/24 10:50:07.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:07.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:07.248
  STEP: apply creating a deployment @ 04/28/24 10:50:07.249
  Apr 28 10:50:07.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9003" for this suite. @ 04/28/24 10:50:07.267
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/28/24 10:50:07.275
  Apr 28 10:50:07.275: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename proxy @ 04/28/24 10:50:07.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:07.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:07.293
  Apr 28 10:50:07.295: INFO: Creating pod...
  E0428 10:50:07.941655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:08.942044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:50:09.310: INFO: Creating service...
  Apr 28 10:50:09.324: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=DELETE
  Apr 28 10:50:09.332: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 28 10:50:09.332: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=OPTIONS
  Apr 28 10:50:09.338: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 28 10:50:09.338: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=PATCH
  Apr 28 10:50:09.343: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 28 10:50:09.343: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=POST
  Apr 28 10:50:09.349: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 28 10:50:09.349: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=PUT
  Apr 28 10:50:09.359: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 28 10:50:09.359: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=DELETE
  Apr 28 10:50:09.367: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 28 10:50:09.367: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Apr 28 10:50:09.379: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 28 10:50:09.379: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=PATCH
  Apr 28 10:50:09.387: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 28 10:50:09.387: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=POST
  Apr 28 10:50:09.395: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 28 10:50:09.395: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=PUT
  Apr 28 10:50:09.408: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 28 10:50:09.408: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=GET
  Apr 28 10:50:09.411: INFO: http.Client request:GET StatusCode:301
  Apr 28 10:50:09.411: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=GET
  Apr 28 10:50:09.414: INFO: http.Client request:GET StatusCode:301
  Apr 28 10:50:09.414: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=HEAD
  Apr 28 10:50:09.417: INFO: http.Client request:HEAD StatusCode:301
  Apr 28 10:50:09.417: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=HEAD
  Apr 28 10:50:09.422: INFO: http.Client request:HEAD StatusCode:301
  Apr 28 10:50:09.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7843" for this suite. @ 04/28/24 10:50:09.425
• [2.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/28/24 10:50:09.435
  Apr 28 10:50:09.435: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 10:50:09.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:09.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:09.455
  STEP: Setting up server cert @ 04/28/24 10:50:09.478
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 10:50:09.654
  STEP: Deploying the webhook pod @ 04/28/24 10:50:09.66
  STEP: Wait for the deployment to be ready @ 04/28/24 10:50:09.668
  Apr 28 10:50:09.675: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0428 10:50:09.942561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:10.943719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 10:50:11.686
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 10:50:11.694
  E0428 10:50:11.944577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:50:12.695: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/28/24 10:50:12.703
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/28/24 10:50:12.703
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/28/24 10:50:12.703
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/28/24 10:50:12.703
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/28/24 10:50:12.704
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/28/24 10:50:12.704
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/28/24 10:50:12.705
  Apr 28 10:50:12.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8714" for this suite. @ 04/28/24 10:50:12.758
  STEP: Destroying namespace "webhook-markers-6022" for this suite. @ 04/28/24 10:50:12.766
• [3.339 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/28/24 10:50:12.774
  Apr 28 10:50:12.774: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename containers @ 04/28/24 10:50:12.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:12.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:12.791
  STEP: Creating a pod to test override arguments @ 04/28/24 10:50:12.794
  E0428 10:50:12.945650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:13.946853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:14.947322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:15.948433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:50:16.816
  Apr 28 10:50:16.818: INFO: Trying to get logs from node worker2 pod client-containers-63e7b453-0465-4482-acde-5bfab3cecae9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/28/24 10:50:16.825
  Apr 28 10:50:16.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3402" for this suite. @ 04/28/24 10:50:16.841
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/28/24 10:50:16.847
  Apr 28 10:50:16.847: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replicaset @ 04/28/24 10:50:16.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:16.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:16.86
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/28/24 10:50:16.863
  Apr 28 10:50:16.870: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0428 10:50:16.948465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:17.949375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:18.949662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:19.949625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:20.950401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:50:21.874: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/28/24 10:50:21.874
  STEP: getting scale subresource @ 04/28/24 10:50:21.874
  STEP: updating a scale subresource @ 04/28/24 10:50:21.878
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/28/24 10:50:21.882
  STEP: Patch a scale subresource @ 04/28/24 10:50:21.884
  Apr 28 10:50:21.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8708" for this suite. @ 04/28/24 10:50:21.898
• [5.062 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 04/28/24 10:50:21.909
  Apr 28 10:50:21.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:50:21.91
  E0428 10:50:21.950940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:21.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:21.977
  STEP: Creating a pod to test downward api env vars @ 04/28/24 10:50:21.979
  E0428 10:50:22.951571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:23.952267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:24.953068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:25.953791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:50:26.004
  Apr 28 10:50:26.008: INFO: Trying to get logs from node worker2 pod downward-api-abfda02f-78ed-47f1-890d-0e8e4f728b3e container dapi-container: <nil>
  STEP: delete the pod @ 04/28/24 10:50:26.014
  Apr 28 10:50:26.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5751" for this suite. @ 04/28/24 10:50:26.033
• [4.131 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/28/24 10:50:26.041
  Apr 28 10:50:26.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename watch @ 04/28/24 10:50:26.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:26.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:26.058
  STEP: creating a watch on configmaps @ 04/28/24 10:50:26.06
  STEP: creating a new configmap @ 04/28/24 10:50:26.061
  STEP: modifying the configmap once @ 04/28/24 10:50:26.065
  STEP: closing the watch once it receives two notifications @ 04/28/24 10:50:26.077
  Apr 28 10:50:26.113: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7838  3cbe686c-6871-4d59-b801-c9d52fb07fda 53704 0 2024-04-28 10:50:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-28 10:50:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 10:50:26.114: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7838  3cbe686c-6871-4d59-b801-c9d52fb07fda 53705 0 2024-04-28 10:50:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-28 10:50:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/28/24 10:50:26.114
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/28/24 10:50:26.12
  STEP: deleting the configmap @ 04/28/24 10:50:26.121
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/28/24 10:50:26.13
  Apr 28 10:50:26.130: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7838  3cbe686c-6871-4d59-b801-c9d52fb07fda 53706 0 2024-04-28 10:50:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-28 10:50:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 10:50:26.130: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7838  3cbe686c-6871-4d59-b801-c9d52fb07fda 53707 0 2024-04-28 10:50:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-28 10:50:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 28 10:50:26.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7838" for this suite. @ 04/28/24 10:50:26.133
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 04/28/24 10:50:26.138
  Apr 28 10:50:26.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 10:50:26.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:26.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:26.152
  STEP: validating cluster-info @ 04/28/24 10:50:26.154
  Apr 28 10:50:26.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-7921 cluster-info'
  Apr 28 10:50:26.197: INFO: stderr: ""
  Apr 28 10:50:26.197: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.68.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Apr 28 10:50:26.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7921" for this suite. @ 04/28/24 10:50:26.201
• [0.068 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/28/24 10:50:26.207
  Apr 28 10:50:26.207: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename subpath @ 04/28/24 10:50:26.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:26.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:26.221
  STEP: Setting up data @ 04/28/24 10:50:26.223
  STEP: Creating pod pod-subpath-test-configmap-9hv8 @ 04/28/24 10:50:26.23
  STEP: Creating a pod to test atomic-volume-subpath @ 04/28/24 10:50:26.23
  E0428 10:50:26.954418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:27.955415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:28.955424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:29.955552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:30.956287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:31.956404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:32.957057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:33.957161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:34.957445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:35.957675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:36.958705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:37.959187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:38.959238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:39.959823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:40.960269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:41.960340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:42.960491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:43.960603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:44.960940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:45.961049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:46.961106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:47.961859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:48.962578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:49.963565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:50:50.293
  Apr 28 10:50:50.296: INFO: Trying to get logs from node worker2 pod pod-subpath-test-configmap-9hv8 container test-container-subpath-configmap-9hv8: <nil>
  STEP: delete the pod @ 04/28/24 10:50:50.303
  STEP: Deleting pod pod-subpath-test-configmap-9hv8 @ 04/28/24 10:50:50.318
  Apr 28 10:50:50.318: INFO: Deleting pod "pod-subpath-test-configmap-9hv8" in namespace "subpath-4386"
  Apr 28 10:50:50.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4386" for this suite. @ 04/28/24 10:50:50.323
• [24.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/28/24 10:50:50.331
  Apr 28 10:50:50.331: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-watch @ 04/28/24 10:50:50.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:50:50.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:50:50.343
  Apr 28 10:50:50.345: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:50:50.964275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:51.964463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 04/28/24 10:50:52.871
  Apr 28 10:50:52.876: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-28T10:50:52Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-28T10:50:52Z]] name:name1 resourceVersion:53839 uid:da1f3a2a-9734-446f-9232-69a63b5f66c2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0428 10:50:52.965361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:53.966254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:54.966334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:55.966412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:56.966629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:57.967554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:58.968269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:50:59.968900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:00.969114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:01.969356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 04/28/24 10:51:02.877
  Apr 28 10:51:02.882: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-28T10:51:02Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-28T10:51:02Z]] name:name2 resourceVersion:53866 uid:3fb131a0-8fda-4a7d-b98a-3f78d7efcfce] num:map[num1:9223372036854775807 num2:1000000]]}
  E0428 10:51:02.970244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:03.970762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:04.971071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:05.971195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:06.972279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:07.972420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:08.972626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:09.973652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:10.973894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:11.974042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 04/28/24 10:51:12.883
  Apr 28 10:51:12.889: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-28T10:50:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-28T10:51:12Z]] name:name1 resourceVersion:53882 uid:da1f3a2a-9734-446f-9232-69a63b5f66c2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0428 10:51:12.975069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:13.975262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:14.975817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:15.976353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:16.976541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:17.976690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:18.976843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:19.977548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:20.977672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:21.977974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 04/28/24 10:51:22.89
  Apr 28 10:51:22.896: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-28T10:51:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-28T10:51:22Z]] name:name2 resourceVersion:53898 uid:3fb131a0-8fda-4a7d-b98a-3f78d7efcfce] num:map[num1:9223372036854775807 num2:1000000]]}
  E0428 10:51:22.978985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:23.979324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:24.979976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:25.980271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:26.981291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:27.981593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:28.981819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:29.982556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:30.982759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:31.982926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 04/28/24 10:51:32.897
  Apr 28 10:51:32.904: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-28T10:50:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-28T10:51:12Z]] name:name1 resourceVersion:53914 uid:da1f3a2a-9734-446f-9232-69a63b5f66c2] num:map[num1:9223372036854775807 num2:1000000]]}
  E0428 10:51:32.983053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:33.983308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:34.983894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:35.984155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:36.984430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:37.985315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:38.985971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:39.986609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:40.986891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:41.987169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 04/28/24 10:51:42.905
  Apr 28 10:51:42.912: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-28T10:51:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-28T10:51:22Z]] name:name2 resourceVersion:53931 uid:3fb131a0-8fda-4a7d-b98a-3f78d7efcfce] num:map[num1:9223372036854775807 num2:1000000]]}
  E0428 10:51:42.987605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:43.988297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:44.988876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:45.989057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:46.989424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:47.989886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:48.990495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:49.990963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:50.991223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:51.991318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:52.992249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:51:53.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7913" for this suite. @ 04/28/24 10:51:53.426
• [63.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/28/24 10:51:53.432
  Apr 28 10:51:53.432: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 10:51:53.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:51:53.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:51:53.446
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/28/24 10:51:53.448
  E0428 10:51:53.992439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:54.992542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:55.993576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:56.993812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:51:57.47
  Apr 28 10:51:57.473: INFO: Trying to get logs from node worker2 pod pod-62002eb1-7a4f-4ba9-b3b3-5e81b6319b43 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:51:57.478
  Apr 28 10:51:57.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1460" for this suite. @ 04/28/24 10:51:57.494
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/28/24 10:51:57.5
  Apr 28 10:51:57.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename runtimeclass @ 04/28/24 10:51:57.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:51:57.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:51:57.518
  Apr 28 10:51:57.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7331" for this suite. @ 04/28/24 10:51:57.536
• [0.046 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/28/24 10:51:57.545
  Apr 28 10:51:57.545: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:51:57.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:51:57.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:51:57.561
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:51:57.564
  E0428 10:51:57.994738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:51:58.995675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:51:59.578
  Apr 28 10:51:59.581: INFO: Trying to get logs from node worker2 pod downwardapi-volume-62938ae9-5e61-4b37-95f0-5eba7ed3ce13 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:51:59.586
  Apr 28 10:51:59.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9621" for this suite. @ 04/28/24 10:51:59.602
• [2.065 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/28/24 10:51:59.61
  Apr 28 10:51:59.610: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-preemption @ 04/28/24 10:51:59.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:51:59.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:51:59.623
  Apr 28 10:51:59.637: INFO: Waiting up to 1m0s for all nodes to be ready
  E0428 10:51:59.996160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:00.997028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:01.997345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:02.997564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:03.997765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:04.998375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:05.998814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:06.999174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:08.000066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:09.000149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:10.000596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:11.001140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:12.001417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:13.001923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:14.003035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:15.003884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:16.004774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:17.005080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:18.006036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:19.006161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:20.006656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:21.007057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:22.008122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:23.008276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:24.008400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:25.008918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:26.009625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:27.010572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:28.010982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:29.011111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:30.011290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:31.012246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:32.012990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:33.013164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:34.014079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:35.014494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:36.015304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:37.015628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:38.015914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:39.016267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:40.016927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:41.017033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:42.017166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:43.017463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:44.018503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:45.019091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:46.020146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:47.021087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:48.021839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:49.022618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:50.023516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:51.024332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:52.024964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:53.025791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:54.026755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:55.027322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:56.028095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:57.028216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:58.028783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:52:59.029014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:52:59.641: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/28/24 10:52:59.645
  Apr 28 10:52:59.645: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/28/24 10:52:59.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:52:59.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:52:59.661
  Apr 28 10:52:59.673: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Apr 28 10:52:59.675: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Apr 28 10:52:59.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5256" for this suite. @ 04/28/24 10:52:59.75
  Apr 28 10:52:59.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2490" for this suite. @ 04/28/24 10:52:59.763
• [60.159 seconds]
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 04/28/24 10:52:59.769
  Apr 28 10:52:59.769: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:52:59.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:52:59.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:52:59.784
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4873 @ 04/28/24 10:52:59.786
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/28/24 10:52:59.798
  STEP: creating service externalsvc in namespace services-4873 @ 04/28/24 10:52:59.798
  STEP: creating replication controller externalsvc in namespace services-4873 @ 04/28/24 10:52:59.813
  I0428 10:52:59.819239      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4873, replica count: 2
  E0428 10:53:00.029809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:01.030014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:02.030144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0428 10:53:02.870850      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/28/24 10:53:02.874
  Apr 28 10:53:02.885: INFO: Creating new exec pod
  E0428 10:53:03.030521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:04.030881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:53:04.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=services-4873 exec execpod72sm2 -- /bin/sh -x -c nslookup clusterip-service.services-4873.svc.cluster.local'
  E0428 10:53:05.031626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:53:05.034: INFO: stderr: "+ nslookup clusterip-service.services-4873.svc.cluster.local\n"
  Apr 28 10:53:05.034: INFO: stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-4873.svc.cluster.local\tcanonical name = externalsvc.services-4873.svc.cluster.local.\nName:\texternalsvc.services-4873.svc.cluster.local\nAddress: 10.68.15.154\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4873, will wait for the garbage collector to delete the pods @ 04/28/24 10:53:05.034
  Apr 28 10:53:05.100: INFO: Deleting ReplicationController externalsvc took: 5.438297ms
  Apr 28 10:53:05.201: INFO: Terminating ReplicationController externalsvc pods took: 100.738942ms
  E0428 10:53:06.032285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:07.032677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:08.033565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:53:08.327: INFO: Cleaning up the ClusterIP to ExternalName test service
  Apr 28 10:53:08.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4873" for this suite. @ 04/28/24 10:53:08.347
• [8.588 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/28/24 10:53:08.358
  Apr 28 10:53:08.358: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename conformance-tests @ 04/28/24 10:53:08.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:53:08.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:53:08.377
  STEP: Getting node addresses @ 04/28/24 10:53:08.38
  Apr 28 10:53:08.380: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Apr 28 10:53:08.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5670" for this suite. @ 04/28/24 10:53:08.391
• [0.039 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/28/24 10:53:08.397
  Apr 28 10:53:08.397: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 10:53:08.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:53:08.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:53:08.414
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:53:08.417
  E0428 10:53:09.033763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:10.034543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:11.035563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:12.035736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:53:12.438
  Apr 28 10:53:12.440: INFO: Trying to get logs from node worker2 pod downwardapi-volume-07010dde-1949-4687-aea6-fae92dba66d7 container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:53:12.45
  Apr 28 10:53:12.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6644" for this suite. @ 04/28/24 10:53:12.467
• [4.075 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/28/24 10:53:12.472
  Apr 28 10:53:12.472: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:53:12.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:53:12.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:53:12.489
  STEP: Creating the pod @ 04/28/24 10:53:12.493
  E0428 10:53:13.036629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:14.036880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:53:15.027: INFO: Successfully updated pod "annotationupdate903c06ec-b426-43d0-a474-7f12e6f24a4c"
  E0428 10:53:15.037864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:16.038032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:17.039012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:18.039353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:19.039619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:53:19.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3608" for this suite. @ 04/28/24 10:53:19.055
• [6.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/28/24 10:53:19.061
  Apr 28 10:53:19.061: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:53:19.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:53:19.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:53:19.074
  STEP: Creating configMap with name configmap-test-upd-c2464839-04dd-4e0b-8730-23f1fdd21989 @ 04/28/24 10:53:19.08
  STEP: Creating the pod @ 04/28/24 10:53:19.085
  E0428 10:53:20.040668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:21.040730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-c2464839-04dd-4e0b-8730-23f1fdd21989 @ 04/28/24 10:53:21.108
  STEP: waiting to observe update in volume @ 04/28/24 10:53:21.111
  E0428 10:53:22.041155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:23.042092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:24.043001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:25.044031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:26.044341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:27.044511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:28.045361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:29.046157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:30.046520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:31.046810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:32.047524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:33.048227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:34.049227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:35.049596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:36.050331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:37.050431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:38.050743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:39.051297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:40.051382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:41.052226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:42.053347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:43.053628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:44.054375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:45.054885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:46.055243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:47.055739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:48.056286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:49.056445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:50.056522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:51.056945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:52.057450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:53.057730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:54.058470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:55.058820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:56.059167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:57.060222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:58.060438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:53:59.060610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:00.060978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:01.061098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:02.062164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:03.062376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:04.062504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:05.063176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:06.063203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:07.063327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:08.063750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:09.063939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:10.065010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:11.065063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:12.065942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:13.066243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:14.066839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:15.067602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:16.067720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:17.067863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:18.068202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:19.069003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:20.069742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:21.070708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:22.071174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:23.072242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:24.072366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:25.073143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:26.073919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:27.074119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:28.074783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:29.074911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:30.075653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:31.076569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:32.076761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:33.076892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:34.077060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:35.077722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:36.078379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:37.078496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:38.078796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:39.079297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:40.079944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:41.081154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:42.082003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:43.082575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:44.082856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:45.083744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:46.083944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:47.084394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:48.085361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:49.085546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:54:49.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-563" for this suite. @ 04/28/24 10:54:49.486
• [90.429 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/28/24 10:54:49.491
  Apr 28 10:54:49.491: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename webhook @ 04/28/24 10:54:49.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:54:49.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:54:49.506
  STEP: Setting up server cert @ 04/28/24 10:54:49.529
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/28/24 10:54:49.764
  STEP: Deploying the webhook pod @ 04/28/24 10:54:49.771
  STEP: Wait for the deployment to be ready @ 04/28/24 10:54:49.779
  Apr 28 10:54:49.785: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0428 10:54:50.086376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:51.086610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/28/24 10:54:51.795
  STEP: Verifying the service has paired with the endpoint @ 04/28/24 10:54:51.805
  E0428 10:54:52.087304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:54:52.806: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/28/24 10:54:52.813
  STEP: create a namespace for the webhook @ 04/28/24 10:54:52.822
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/28/24 10:54:52.832
  Apr 28 10:54:52.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1774" for this suite. @ 04/28/24 10:54:52.898
  STEP: Destroying namespace "webhook-markers-23" for this suite. @ 04/28/24 10:54:52.906
  STEP: Destroying namespace "fail-closed-namespace-8363" for this suite. @ 04/28/24 10:54:52.919
• [3.439 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 04/28/24 10:54:52.931
  Apr 28 10:54:52.931: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename statefulset @ 04/28/24 10:54:52.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:54:52.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:54:52.949
  STEP: Creating service test in namespace statefulset-2046 @ 04/28/24 10:54:52.951
  STEP: Looking for a node to schedule stateful set and pod @ 04/28/24 10:54:52.955
  STEP: Creating pod with conflicting port in namespace statefulset-2046 @ 04/28/24 10:54:52.96
  STEP: Waiting until pod test-pod will start running in namespace statefulset-2046 @ 04/28/24 10:54:52.974
  E0428 10:54:53.087717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:54.087890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-2046 @ 04/28/24 10:54:54.983
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2046 @ 04/28/24 10:54:54.988
  Apr 28 10:54:54.997: INFO: Observed stateful pod in namespace: statefulset-2046, name: ss-0, uid: 696223ac-ec6d-4196-ade6-74216a3b008d, status phase: Pending. Waiting for statefulset controller to delete.
  Apr 28 10:54:55.009: INFO: Observed stateful pod in namespace: statefulset-2046, name: ss-0, uid: 696223ac-ec6d-4196-ade6-74216a3b008d, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 28 10:54:55.027: INFO: Observed stateful pod in namespace: statefulset-2046, name: ss-0, uid: 696223ac-ec6d-4196-ade6-74216a3b008d, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 28 10:54:55.031: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2046
  STEP: Removing pod with conflicting port in namespace statefulset-2046 @ 04/28/24 10:54:55.031
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2046 and will be in running state @ 04/28/24 10:54:55.056
  E0428 10:54:55.088198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:56.088659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:54:57.065: INFO: Deleting all statefulset in ns statefulset-2046
  Apr 28 10:54:57.068: INFO: Scaling statefulset ss to 0
  E0428 10:54:57.088823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:58.089494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:54:59.089611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:00.090076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:01.090436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:02.090559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:03.090933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:04.091185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:05.091384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:06.091626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:55:07.079: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 28 10:55:07.081: INFO: Deleting statefulset ss
  E0428 10:55:07.092867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:55:07.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2046" for this suite. @ 04/28/24 10:55:07.098
• [14.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/28/24 10:55:07.108
  Apr 28 10:55:07.108: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename replication-controller @ 04/28/24 10:55:07.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:55:07.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:55:07.124
  STEP: Creating ReplicationController "e2e-rc-sffqv" @ 04/28/24 10:55:07.126
  Apr 28 10:55:07.134: INFO: Get Replication Controller "e2e-rc-sffqv" to confirm replicas
  E0428 10:55:08.093893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:55:08.135: INFO: Get Replication Controller "e2e-rc-sffqv" to confirm replicas
  Apr 28 10:55:08.138: INFO: Found 1 replicas for "e2e-rc-sffqv" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-sffqv" @ 04/28/24 10:55:08.138
  STEP: Updating a scale subresource @ 04/28/24 10:55:08.142
  STEP: Verifying replicas where modified for replication controller "e2e-rc-sffqv" @ 04/28/24 10:55:08.146
  Apr 28 10:55:08.146: INFO: Get Replication Controller "e2e-rc-sffqv" to confirm replicas
  E0428 10:55:09.094504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:55:09.147: INFO: Get Replication Controller "e2e-rc-sffqv" to confirm replicas
  Apr 28 10:55:09.150: INFO: Found 2 replicas for "e2e-rc-sffqv" replication controller
  Apr 28 10:55:09.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-467" for this suite. @ 04/28/24 10:55:09.153
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 04/28/24 10:55:09.159
  Apr 28 10:55:09.159: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename job @ 04/28/24 10:55:09.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:55:09.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:55:09.174
  STEP: Creating a job @ 04/28/24 10:55:09.176
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/28/24 10:55:09.183
  E0428 10:55:10.094950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:11.095208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/28/24 10:55:11.186
  STEP: updating /status @ 04/28/24 10:55:11.19
  STEP: get /status @ 04/28/24 10:55:11.197
  Apr 28 10:55:11.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5122" for this suite. @ 04/28/24 10:55:11.203
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/28/24 10:55:11.208
  Apr 28 10:55:11.208: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sysctl @ 04/28/24 10:55:11.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:55:11.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:55:11.221
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/28/24 10:55:11.224
  Apr 28 10:55:11.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-546" for this suite. @ 04/28/24 10:55:11.236
• [0.037 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/28/24 10:55:11.245
  Apr 28 10:55:11.245: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/28/24 10:55:11.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:55:11.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:55:11.262
  Apr 28 10:55:11.264: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:55:12.096232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:13.097203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:14.098006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:55:14.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6771" for this suite. @ 04/28/24 10:55:14.424
• [3.186 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 04/28/24 10:55:14.431
  Apr 28 10:55:14.431: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 10:55:14.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:55:14.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:55:14.45
  E0428 10:55:15.098640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:16.099283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:17.100198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:18.100418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:19.101432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:20.102630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:21.102891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:22.103413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:23.104272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:24.105338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:25.106247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:26.107145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:27.107248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:28.107934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:29.108039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:30.108642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:31.109189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/28/24 10:55:31.465
  E0428 10:55:32.109218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:33.110320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:34.110460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:35.111209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:36.112263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/28/24 10:55:36.469
  STEP: Ensuring resource quota status is calculated @ 04/28/24 10:55:36.474
  E0428 10:55:37.113143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:38.113411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 04/28/24 10:55:38.478
  STEP: Ensuring resource quota status captures configMap creation @ 04/28/24 10:55:38.486
  E0428 10:55:39.114533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:40.114764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 04/28/24 10:55:40.491
  STEP: Ensuring resource quota status released usage @ 04/28/24 10:55:40.498
  E0428 10:55:41.115348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:42.116314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:55:42.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6374" for this suite. @ 04/28/24 10:55:42.507
• [28.082 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 04/28/24 10:55:42.513
  Apr 28 10:55:42.513: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/28/24 10:55:42.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:55:42.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:55:42.526
  Apr 28 10:55:42.528: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  E0428 10:55:43.116831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/28/24 10:55:43.654
  Apr 28 10:55:43.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4611 --namespace=crd-publish-openapi-4611 create -f -'
  E0428 10:55:44.117664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:45.118097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:55:45.716: INFO: stderr: ""
  Apr 28 10:55:45.717: INFO: stdout: "e2e-test-crd-publish-openapi-4551-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 28 10:55:45.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4611 --namespace=crd-publish-openapi-4611 delete e2e-test-crd-publish-openapi-4551-crds test-cr'
  Apr 28 10:55:45.768: INFO: stderr: ""
  Apr 28 10:55:45.768: INFO: stdout: "e2e-test-crd-publish-openapi-4551-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Apr 28 10:55:45.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4611 --namespace=crd-publish-openapi-4611 apply -f -'
  Apr 28 10:55:45.817: INFO: stderr: ""
  Apr 28 10:55:45.817: INFO: stdout: "e2e-test-crd-publish-openapi-4551-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 28 10:55:45.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4611 --namespace=crd-publish-openapi-4611 delete e2e-test-crd-publish-openapi-4551-crds test-cr'
  Apr 28 10:55:45.862: INFO: stderr: ""
  Apr 28 10:55:45.862: INFO: stdout: "e2e-test-crd-publish-openapi-4551-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/28/24 10:55:45.862
  Apr 28 10:55:45.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=crd-publish-openapi-4611 explain e2e-test-crd-publish-openapi-4551-crds'
  Apr 28 10:55:45.901: INFO: stderr: ""
  Apr 28 10:55:45.901: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4551-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0428 10:55:46.118262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:55:47.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4611" for this suite. @ 04/28/24 10:55:47.045
• [4.538 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/28/24 10:55:47.052
  Apr 28 10:55:47.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 10:55:47.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:55:47.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:55:47.067
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 10:55:47.069
  E0428 10:55:47.118336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:48.118543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:55:49.082
  Apr 28 10:55:49.084: INFO: Trying to get logs from node worker2 pod downwardapi-volume-e6dec8f0-1845-4fdf-b079-7af922d7c4cc container client-container: <nil>
  STEP: delete the pod @ 04/28/24 10:55:49.091
  Apr 28 10:55:49.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5059" for this suite. @ 04/28/24 10:55:49.108
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/28/24 10:55:49.115
  Apr 28 10:55:49.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/28/24 10:55:49.115
  E0428 10:55:49.119208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:55:49.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:55:49.141
  STEP: Setting up the test @ 04/28/24 10:55:49.142
  STEP: Creating hostNetwork=false pod @ 04/28/24 10:55:49.142
  E0428 10:55:50.119809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:51.120669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 04/28/24 10:55:51.162
  E0428 10:55:52.121547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:53.121798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 04/28/24 10:55:53.176
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/28/24 10:55:53.176
  Apr 28 10:55:53.176: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.176: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.177: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.177: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 28 10:55:53.214: INFO: Exec stderr: ""
  Apr 28 10:55:53.214: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.214: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.215: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.215: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 28 10:55:53.251: INFO: Exec stderr: ""
  Apr 28 10:55:53.251: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.251: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.251: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 28 10:55:53.286: INFO: Exec stderr: ""
  Apr 28 10:55:53.286: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.287: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.287: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 28 10:55:53.321: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/28/24 10:55:53.321
  Apr 28 10:55:53.321: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.322: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.322: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.322: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 28 10:55:53.366: INFO: Exec stderr: ""
  Apr 28 10:55:53.366: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.367: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.367: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 28 10:55:53.399: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/28/24 10:55:53.399
  Apr 28 10:55:53.399: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.399: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.400: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.400: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 28 10:55:53.440: INFO: Exec stderr: ""
  Apr 28 10:55:53.440: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.440: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.441: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.441: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 28 10:55:53.489: INFO: Exec stderr: ""
  Apr 28 10:55:53.489: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.489: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.489: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.489: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 28 10:55:53.527: INFO: Exec stderr: ""
  Apr 28 10:55:53.527: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4004 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 28 10:55:53.527: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  Apr 28 10:55:53.528: INFO: ExecWithOptions: Clientset creation
  Apr 28 10:55:53.528: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4004/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 28 10:55:53.566: INFO: Exec stderr: ""
  Apr 28 10:55:53.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4004" for this suite. @ 04/28/24 10:55:53.57
• [4.463 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/28/24 10:55:53.578
  Apr 28 10:55:53.578: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename dns @ 04/28/24 10:55:53.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:55:53.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:55:53.595
  STEP: Creating a test headless service @ 04/28/24 10:55:53.597
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-977.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-977.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local;sleep 1; done
   @ 04/28/24 10:55:53.601
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-977.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-977.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-977.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local;sleep 1; done
   @ 04/28/24 10:55:53.601
  STEP: creating a pod to probe DNS @ 04/28/24 10:55:53.602
  STEP: submitting the pod to kubernetes @ 04/28/24 10:55:53.602
  E0428 10:55:54.122128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:55.123036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/28/24 10:55:55.622
  STEP: looking for the results for each expected name from probers @ 04/28/24 10:55:55.625
  Apr 28 10:55:55.628: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:55:55.632: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:55:55.635: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:55:55.638: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:55:55.641: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:55:55.645: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:55:55.647: INFO: Unable to read jessie_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:55:55.651: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:55:55.651: INFO: Lookups using dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local]

  Apr 28 10:55:55.658: INFO: Pod client logs for webserver: 
  Apr 28 10:55:55.663: INFO: Pod client logs for querier: 
  Apr 28 10:55:55.676: INFO: Pod client logs for jessie-querier: 
  E0428 10:55:56.123821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:57.123913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:58.124504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:55:59.124774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:00.125683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:00.630: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:00.633: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:00.637: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:00.640: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:00.645: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:00.647: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:00.651: INFO: Unable to read jessie_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:00.655: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:00.655: INFO: Lookups using dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local]

  Apr 28 10:56:00.661: INFO: Pod client logs for webserver: 
  Apr 28 10:56:00.667: INFO: Pod client logs for querier: 
  Apr 28 10:56:00.675: INFO: Pod client logs for jessie-querier: 
  E0428 10:56:01.125878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:02.125989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:03.126224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:04.127140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:05.127618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:05.629: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:05.633: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:05.637: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:05.639: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:05.643: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:05.646: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:05.648: INFO: Unable to read jessie_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:05.652: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:05.652: INFO: Lookups using dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local]

  Apr 28 10:56:05.659: INFO: Pod client logs for webserver: 
  Apr 28 10:56:05.665: INFO: Pod client logs for querier: 
  Apr 28 10:56:05.670: INFO: Pod client logs for jessie-querier: 
  E0428 10:56:06.127750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:07.127972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:08.128072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:09.128236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:10.128978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:10.630: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:10.634: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:10.639: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:10.642: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:10.645: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:10.648: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:10.653: INFO: Unable to read jessie_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:10.660: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:10.660: INFO: Lookups using dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local]

  Apr 28 10:56:10.669: INFO: Pod client logs for webserver: 
  Apr 28 10:56:10.679: INFO: Pod client logs for querier: 
  Apr 28 10:56:10.687: INFO: Pod client logs for jessie-querier: 
  E0428 10:56:11.129435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:12.129722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:13.130710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:14.130840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:15.131821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:15.631: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:15.634: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:15.637: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:15.641: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:15.644: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:15.647: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:15.651: INFO: Unable to read jessie_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:15.654: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:15.654: INFO: Lookups using dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local]

  Apr 28 10:56:15.660: INFO: Pod client logs for webserver: 
  Apr 28 10:56:15.669: INFO: Pod client logs for querier: 
  Apr 28 10:56:15.676: INFO: Pod client logs for jessie-querier: 
  E0428 10:56:16.132073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:17.132450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:18.132818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:19.133631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:20.133680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:20.628: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:20.632: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:20.636: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:20.638: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:20.642: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:20.645: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:20.648: INFO: Unable to read jessie_udp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:20.651: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local from pod dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6: the server could not find the requested resource (get pods dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6)
  Apr 28 10:56:20.651: INFO: Lookups using dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local wheezy_udp@dns-test-service-2.dns-977.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-977.svc.cluster.local jessie_udp@dns-test-service-2.dns-977.svc.cluster.local jessie_tcp@dns-test-service-2.dns-977.svc.cluster.local]

  Apr 28 10:56:20.657: INFO: Pod client logs for webserver: 
  Apr 28 10:56:20.663: INFO: Pod client logs for querier: 
  Apr 28 10:56:20.669: INFO: Pod client logs for jessie-querier: 
  E0428 10:56:21.134421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:22.134669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:23.134852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:24.135798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:25.136376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:25.651: INFO: DNS probes using dns-977/dns-test-0e3ea81a-b037-472a-aa20-f1611c616ff6 succeeded

  STEP: deleting the pod @ 04/28/24 10:56:25.651
  STEP: deleting the test headless service @ 04/28/24 10:56:25.666
  Apr 28 10:56:25.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-977" for this suite. @ 04/28/24 10:56:25.69
• [32.119 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/28/24 10:56:25.697
  Apr 28 10:56:25.697: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sysctl @ 04/28/24 10:56:25.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:25.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:25.717
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/28/24 10:56:25.722
  STEP: Watching for error events or started pod @ 04/28/24 10:56:25.731
  E0428 10:56:26.137031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:27.137324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 04/28/24 10:56:27.736
  E0428 10:56:28.137497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:29.137719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 04/28/24 10:56:29.744
  STEP: Getting logs from the pod @ 04/28/24 10:56:29.744
  STEP: Checking that the sysctl is actually updated @ 04/28/24 10:56:29.751
  Apr 28 10:56:29.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8513" for this suite. @ 04/28/24 10:56:29.754
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/28/24 10:56:29.759
  Apr 28 10:56:29.759: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename podtemplate @ 04/28/24 10:56:29.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:29.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:29.772
  STEP: Create set of pod templates @ 04/28/24 10:56:29.775
  Apr 28 10:56:29.779: INFO: created test-podtemplate-1
  Apr 28 10:56:29.783: INFO: created test-podtemplate-2
  Apr 28 10:56:29.787: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/28/24 10:56:29.787
  STEP: delete collection of pod templates @ 04/28/24 10:56:29.79
  Apr 28 10:56:29.790: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/28/24 10:56:29.809
  Apr 28 10:56:29.809: INFO: requesting list of pod templates to confirm quantity
  Apr 28 10:56:29.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7207" for this suite. @ 04/28/24 10:56:29.818
• [0.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/28/24 10:56:29.826
  Apr 28 10:56:29.826: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename daemonsets @ 04/28/24 10:56:29.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:29.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:29.842
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/28/24 10:56:29.868
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/28/24 10:56:29.872
  Apr 28 10:56:29.877: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:56:29.877: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 10:56:30.138266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:30.878: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 28 10:56:30.878: INFO: Node worker1 is running 0 daemon pod, expected 1
  E0428 10:56:31.138362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:31.882: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 28 10:56:31.882: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/28/24 10:56:31.885
  Apr 28 10:56:31.906: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 28 10:56:31.906: INFO: Node master1 is running 0 daemon pod, expected 1
  E0428 10:56:32.139178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:32.904: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 28 10:56:32.904: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/28/24 10:56:32.904
  STEP: Deleting DaemonSet "daemon-set" @ 04/28/24 10:56:32.91
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-27, will wait for the garbage collector to delete the pods @ 04/28/24 10:56:32.91
  Apr 28 10:56:32.969: INFO: Deleting DaemonSet.extensions daemon-set took: 5.47268ms
  Apr 28 10:56:33.070: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.073564ms
  E0428 10:56:33.139581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:34.139904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:34.674: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 28 10:56:34.674: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 28 10:56:34.677: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"55454"},"items":null}

  Apr 28 10:56:34.679: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"55454"},"items":null}

  Apr 28 10:56:34.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-27" for this suite. @ 04/28/24 10:56:34.694
• [4.874 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/28/24 10:56:34.7
  Apr 28 10:56:34.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename tables @ 04/28/24 10:56:34.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:34.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:34.723
  Apr 28 10:56:34.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1928" for this suite. @ 04/28/24 10:56:34.731
• [0.041 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/28/24 10:56:34.741
  Apr 28 10:56:34.741: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename proxy @ 04/28/24 10:56:34.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:34.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:34.758
  Apr 28 10:56:34.759: INFO: Creating pod...
  E0428 10:56:35.140030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:36.140432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:36.779: INFO: Creating service...
  Apr 28 10:56:36.790: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/pods/agnhost/proxy/some/path/with/DELETE
  Apr 28 10:56:36.795: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 28 10:56:36.795: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/pods/agnhost/proxy/some/path/with/GET
  Apr 28 10:56:36.801: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 28 10:56:36.801: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/pods/agnhost/proxy/some/path/with/HEAD
  Apr 28 10:56:36.809: INFO: http.Client request:HEAD | StatusCode:200
  Apr 28 10:56:36.809: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/pods/agnhost/proxy/some/path/with/OPTIONS
  Apr 28 10:56:36.812: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 28 10:56:36.812: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/pods/agnhost/proxy/some/path/with/PATCH
  Apr 28 10:56:36.819: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 28 10:56:36.819: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/pods/agnhost/proxy/some/path/with/POST
  Apr 28 10:56:36.824: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 28 10:56:36.824: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/pods/agnhost/proxy/some/path/with/PUT
  Apr 28 10:56:36.827: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 28 10:56:36.828: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/services/test-service/proxy/some/path/with/DELETE
  Apr 28 10:56:36.833: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 28 10:56:36.833: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/services/test-service/proxy/some/path/with/GET
  Apr 28 10:56:36.843: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 28 10:56:36.843: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/services/test-service/proxy/some/path/with/HEAD
  Apr 28 10:56:36.850: INFO: http.Client request:HEAD | StatusCode:200
  Apr 28 10:56:36.850: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/services/test-service/proxy/some/path/with/OPTIONS
  Apr 28 10:56:36.858: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 28 10:56:36.858: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/services/test-service/proxy/some/path/with/PATCH
  Apr 28 10:56:36.870: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 28 10:56:36.870: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/services/test-service/proxy/some/path/with/POST
  Apr 28 10:56:36.877: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 28 10:56:36.877: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8889/services/test-service/proxy/some/path/with/PUT
  Apr 28 10:56:36.883: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 28 10:56:36.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8889" for this suite. @ 04/28/24 10:56:36.887
• [2.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 04/28/24 10:56:36.895
  Apr 28 10:56:36.895: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename configmap @ 04/28/24 10:56:36.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:36.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:36.913
  STEP: Creating configMap configmap-2732/configmap-test-f7a5e20d-0d75-4015-8d37-267c17850bb4 @ 04/28/24 10:56:36.915
  STEP: Creating a pod to test consume configMaps @ 04/28/24 10:56:36.922
  E0428 10:56:37.140982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:38.141283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:39.141874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:40.142090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:56:40.949
  Apr 28 10:56:40.952: INFO: Trying to get logs from node worker2 pod pod-configmaps-1b202992-93bb-4966-8bf5-c7b6cd2bb3c1 container env-test: <nil>
  STEP: delete the pod @ 04/28/24 10:56:40.958
  Apr 28 10:56:40.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2732" for this suite. @ 04/28/24 10:56:40.975
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 04/28/24 10:56:40.983
  Apr 28 10:56:40.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename kubectl @ 04/28/24 10:56:40.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:41.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:41.045
  STEP: creating a replication controller @ 04/28/24 10:56:41.047
  Apr 28 10:56:41.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 create -f -'
  Apr 28 10:56:41.122: INFO: stderr: ""
  Apr 28 10:56:41.122: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/28/24 10:56:41.122
  Apr 28 10:56:41.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0428 10:56:41.144121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:41.181: INFO: stderr: ""
  Apr 28 10:56:41.181: INFO: stdout: "update-demo-nautilus-hnttk update-demo-nautilus-rf6x5 "
  Apr 28 10:56:41.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 get pods update-demo-nautilus-hnttk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 28 10:56:41.223: INFO: stderr: ""
  Apr 28 10:56:41.223: INFO: stdout: ""
  Apr 28 10:56:41.223: INFO: update-demo-nautilus-hnttk is created but not running
  E0428 10:56:42.144715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:43.144936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:44.145136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:45.145669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:46.146376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:46.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 28 10:56:46.272: INFO: stderr: ""
  Apr 28 10:56:46.272: INFO: stdout: "update-demo-nautilus-hnttk update-demo-nautilus-rf6x5 "
  Apr 28 10:56:46.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 get pods update-demo-nautilus-hnttk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 28 10:56:46.312: INFO: stderr: ""
  Apr 28 10:56:46.312: INFO: stdout: "true"
  Apr 28 10:56:46.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 get pods update-demo-nautilus-hnttk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 28 10:56:46.357: INFO: stderr: ""
  Apr 28 10:56:46.357: INFO: stdout: "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/nautilus:1.7"
  Apr 28 10:56:46.357: INFO: validating pod update-demo-nautilus-hnttk
  Apr 28 10:56:46.362: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 28 10:56:46.362: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 28 10:56:46.362: INFO: update-demo-nautilus-hnttk is verified up and running
  Apr 28 10:56:46.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 get pods update-demo-nautilus-rf6x5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 28 10:56:46.403: INFO: stderr: ""
  Apr 28 10:56:46.403: INFO: stdout: "true"
  Apr 28 10:56:46.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 get pods update-demo-nautilus-rf6x5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 28 10:56:46.442: INFO: stderr: ""
  Apr 28 10:56:46.442: INFO: stdout: "registry.dev.rdev.tech:18093/sonobouy/v1.29/e2e-test-images/nautilus:1.7"
  Apr 28 10:56:46.442: INFO: validating pod update-demo-nautilus-rf6x5
  Apr 28 10:56:46.446: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 28 10:56:46.446: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 28 10:56:46.446: INFO: update-demo-nautilus-rf6x5 is verified up and running
  STEP: using delete to clean up resources @ 04/28/24 10:56:46.446
  Apr 28 10:56:46.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 delete --grace-period=0 --force -f -'
  Apr 28 10:56:46.493: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 28 10:56:46.493: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 28 10:56:46.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 get rc,svc -l name=update-demo --no-headers'
  Apr 28 10:56:46.551: INFO: stderr: "No resources found in kubectl-2183 namespace.\n"
  Apr 28 10:56:46.551: INFO: stdout: ""
  Apr 28 10:56:46.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=kubectl-2183 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 28 10:56:46.596: INFO: stderr: ""
  Apr 28 10:56:46.596: INFO: stdout: ""
  Apr 28 10:56:46.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2183" for this suite. @ 04/28/24 10:56:46.601
• [5.630 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 04/28/24 10:56:46.614
  Apr 28 10:56:46.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename services @ 04/28/24 10:56:46.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:46.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:46.628
  STEP: creating a collection of services @ 04/28/24 10:56:46.631
  Apr 28 10:56:46.631: INFO: Creating e2e-svc-a-xjjnb
  Apr 28 10:56:46.646: INFO: Creating e2e-svc-b-qglzc
  Apr 28 10:56:46.680: INFO: Creating e2e-svc-c-7647s
  STEP: deleting service collection @ 04/28/24 10:56:46.699
  Apr 28 10:56:46.755: INFO: Collection of services has been deleted
  Apr 28 10:56:46.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1508" for this suite. @ 04/28/24 10:56:46.763
• [0.160 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/28/24 10:56:46.774
  Apr 28 10:56:46.774: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename lease-test @ 04/28/24 10:56:46.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:46.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:46.796
  Apr 28 10:56:46.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6911" for this suite. @ 04/28/24 10:56:46.88
• [0.113 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 04/28/24 10:56:46.887
  Apr 28 10:56:46.887: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename statefulset @ 04/28/24 10:56:46.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:56:46.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:56:46.904
  STEP: Creating service test in namespace statefulset-3007 @ 04/28/24 10:56:46.906
  STEP: Creating stateful set ss in namespace statefulset-3007 @ 04/28/24 10:56:46.911
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3007 @ 04/28/24 10:56:46.919
  Apr 28 10:56:46.925: INFO: Found 0 stateful pods, waiting for 1
  E0428 10:56:47.146675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:48.146820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:49.147654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:50.148262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:51.148561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:52.149576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:53.149783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:54.150129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:55.150683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:56.150904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:56:56.924: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/28/24 10:56:56.924
  Apr 28 10:56:56.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-3007 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 10:56:57.006: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 10:56:57.006: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 10:56:57.006: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 28 10:56:57.009: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0428 10:56:57.151728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:58.151878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:56:59.152055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:00.152773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:01.153045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:02.153322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:03.153552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:04.153782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:05.153833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:06.154120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:07.011: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 28 10:57:07.011: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 28 10:57:07.025: INFO: POD   NODE     PHASE    GRACE  CONDITIONS
  Apr 28 10:57:07.025: INFO: ss-0  worker2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:56:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:56:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:56:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:56:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:56:46 +0000 UTC  }]
  Apr 28 10:57:07.025: INFO: 
  Apr 28 10:57:07.025: INFO: StatefulSet ss has not reached scale 3, at 1
  E0428 10:57:07.155131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:08.028: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996985609s
  E0428 10:57:08.155464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:09.032: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993585803s
  E0428 10:57:09.155786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:10.036: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.988587302s
  E0428 10:57:10.155927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:11.041: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.984807678s
  E0428 10:57:11.156296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:12.046: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.979843098s
  E0428 10:57:12.156912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:13.050: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.975351703s
  E0428 10:57:13.157361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:14.054: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.971874502s
  E0428 10:57:14.157536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:15.059: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.967351938s
  E0428 10:57:15.158340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:16.063: INFO: Verifying statefulset ss doesn't scale past 3 for another 962.939134ms
  E0428 10:57:16.159111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3007 @ 04/28/24 10:57:17.064
  Apr 28 10:57:17.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-3007 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 28 10:57:17.148: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 28 10:57:17.148: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 28 10:57:17.148: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 28 10:57:17.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-3007 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0428 10:57:17.160160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:17.276: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 28 10:57:17.276: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 28 10:57:17.276: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 28 10:57:17.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-3007 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 28 10:57:17.351: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 28 10:57:17.351: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 28 10:57:17.351: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 28 10:57:17.354: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 10:57:17.354: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 28 10:57:17.354: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/28/24 10:57:17.354
  Apr 28 10:57:17.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-3007 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 10:57:17.430: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 10:57:17.430: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 10:57:17.430: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 28 10:57:17.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-3007 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 10:57:17.506: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 10:57:17.506: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 10:57:17.506: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 28 10:57:17.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1121174464 --namespace=statefulset-3007 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 28 10:57:17.583: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 28 10:57:17.583: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 28 10:57:17.583: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 28 10:57:17.583: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 28 10:57:17.586: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0428 10:57:18.161222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:19.161443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:20.161613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:21.162655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:22.162836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:23.163735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:24.164396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:25.164575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:26.165513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:27.165613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:27.591: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 28 10:57:27.591: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 28 10:57:27.591: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 28 10:57:27.602: INFO: POD   NODE     PHASE    GRACE  CONDITIONS
  Apr 28 10:57:27.602: INFO: ss-0  worker2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:56:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:56:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:56:46 +0000 UTC  }]
  Apr 28 10:57:27.602: INFO: ss-1  worker1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:08 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:07 +0000 UTC  }]
  Apr 28 10:57:27.602: INFO: ss-2  master1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:07 +0000 UTC  }]
  Apr 28 10:57:27.602: INFO: 
  Apr 28 10:57:27.602: INFO: StatefulSet ss has not reached scale 0, at 3
  E0428 10:57:28.165914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:28.606: INFO: POD   NODE     PHASE      GRACE  CONDITIONS
  Apr 28 10:57:28.606: INFO: ss-2  master1  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:27 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:07 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:18 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:18 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-28 10:57:07 +0000 UTC  }]
  Apr 28 10:57:28.606: INFO: 
  Apr 28 10:57:28.606: INFO: StatefulSet ss has not reached scale 0, at 1
  E0428 10:57:29.166026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:29.610: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991027763s
  E0428 10:57:30.167079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:30.615: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986889458s
  E0428 10:57:31.167228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:31.620: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.981813217s
  E0428 10:57:32.168028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:32.622: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.978327063s
  E0428 10:57:33.168430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:33.626: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.975124331s
  E0428 10:57:34.169542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:34.630: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.971447888s
  E0428 10:57:35.170498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:35.634: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.967708682s
  E0428 10:57:36.171273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 10:57:36.637: INFO: Verifying statefulset ss doesn't scale past 0 for another 963.750832ms
  E0428 10:57:37.172274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3007 @ 04/28/24 10:57:37.637
  Apr 28 10:57:37.641: INFO: Scaling statefulset ss to 0
  Apr 28 10:57:37.650: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 28 10:57:37.652: INFO: Deleting all statefulset in ns statefulset-3007
  Apr 28 10:57:37.656: INFO: Scaling statefulset ss to 0
  Apr 28 10:57:37.663: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 28 10:57:37.666: INFO: Deleting statefulset ss
  Apr 28 10:57:37.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3007" for this suite. @ 04/28/24 10:57:37.68
• [50.798 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 04/28/24 10:57:37.687
  Apr 28 10:57:37.687: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename secrets @ 04/28/24 10:57:37.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:57:37.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:57:37.703
  STEP: creating a secret @ 04/28/24 10:57:37.705
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/28/24 10:57:37.709
  STEP: patching the secret @ 04/28/24 10:57:37.712
  STEP: deleting the secret using a LabelSelector @ 04/28/24 10:57:37.719
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/28/24 10:57:37.733
  Apr 28 10:57:37.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6653" for this suite. @ 04/28/24 10:57:37.744
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/28/24 10:57:37.749
  Apr 28 10:57:37.749: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir @ 04/28/24 10:57:37.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:57:37.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:57:37.764
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/28/24 10:57:37.766
  E0428 10:57:38.173460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:39.173764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:40.174500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:41.174696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 10:57:41.788
  Apr 28 10:57:41.792: INFO: Trying to get logs from node worker2 pod pod-5b98eb45-7f43-4ccd-9141-415e75155a37 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 10:57:41.8
  Apr 28 10:57:41.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3232" for this suite. @ 04/28/24 10:57:41.819
• [4.077 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 04/28/24 10:57:41.825
  Apr 28 10:57:41.825: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename sched-pred @ 04/28/24 10:57:41.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 10:57:41.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 10:57:41.84
  Apr 28 10:57:41.842: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 28 10:57:41.849: INFO: Waiting for terminating namespaces to be deleted...
  Apr 28 10:57:41.851: INFO: 
  Logging pods the apiserver thinks is on node master1 before test
  Apr 28 10:57:41.858: INFO: calico-kube-controllers-5994f46b69-6wms6 from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.858: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Apr 28 10:57:41.858: INFO: calico-node-zq7zm from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.858: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 10:57:41.858: INFO: dashboard-metrics-scraper-77b667b99d-pd58z from kube-system started at 2024-04-28 06:45:30 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.858: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Apr 28 10:57:41.858: INFO: node-local-dns-x5gk2 from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.858: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 10:57:41.858: INFO: sonobuoy-e2e-job-a7cb2e98a5034b0c from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 10:57:41.858: INFO: 	Container e2e ready: true, restart count 0
  Apr 28 10:57:41.858: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 10:57:41.858: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-gfv6z from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 10:57:41.858: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 10:57:41.858: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 28 10:57:41.858: INFO: 
  Logging pods the apiserver thinks is on node worker1 before test
  Apr 28 10:57:41.861: INFO: calico-node-t2nbk from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.861: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 10:57:41.861: INFO: coredns-6db9bd4cd7-zcglr from kube-system started at 2024-04-28 06:45:25 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.861: INFO: 	Container coredns ready: true, restart count 0
  Apr 28 10:57:41.861: INFO: kubernetes-dashboard-74fb9f77fb-gm25v from kube-system started at 2024-04-28 09:53:58 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.861: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Apr 28 10:57:41.861: INFO: metrics-server-dfb478476-tsjdl from kube-system started at 2024-04-28 09:53:58 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.861: INFO: 	Container metrics-server ready: true, restart count 0
  Apr 28 10:57:41.861: INFO: node-local-dns-k6xsh from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.861: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 10:57:41.861: INFO: sonobuoy from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.861: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 28 10:57:41.861: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xsb9b from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 10:57:41.861: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 10:57:41.861: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 28 10:57:41.861: INFO: 
  Logging pods the apiserver thinks is on node worker2 before test
  Apr 28 10:57:41.867: INFO: calico-node-8wjpm from kube-system started at 2024-04-28 06:44:56 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.867: INFO: 	Container calico-node ready: true, restart count 0
  Apr 28 10:57:41.867: INFO: node-local-dns-wggzj from kube-system started at 2024-04-28 06:45:26 +0000 UTC (1 container statuses recorded)
  Apr 28 10:57:41.867: INFO: 	Container node-cache ready: true, restart count 0
  Apr 28 10:57:41.867: INFO: sonobuoy-systemd-logs-daemon-set-4b5103363ab04ec4-xkwx4 from sonobuoy started at 2024-04-28 09:13:13 +0000 UTC (2 container statuses recorded)
  Apr 28 10:57:41.867: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 28 10:57:41.867: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/28/24 10:57:41.867
  E0428 10:57:42.175170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:43.175225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/28/24 10:57:43.884
  STEP: Trying to apply a random label on the found node. @ 04/28/24 10:57:43.896
  STEP: verifying the node has the label kubernetes.io/e2e-33693a5f-cb5c-406f-875b-dee1796892a0 95 @ 04/28/24 10:57:43.902
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/28/24 10:57:43.907
  E0428 10:57:44.175301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:45.176058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.227.138 on the node which pod4 resides and expect not scheduled @ 04/28/24 10:57:45.924
  E0428 10:57:46.176278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:47.176826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:48.177463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:49.177668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:50.178373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:51.178731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:52.179663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:53.179797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:54.179943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:55.180734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:56.181376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:57.182265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:58.182357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:57:59.182810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:00.183065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:01.183445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:02.184043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:03.184295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:04.184470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:05.185003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:06.185222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:07.189258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:08.189515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:09.189957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:10.190194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:11.190435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:12.191507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:13.192239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:14.192948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:15.193620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:16.194452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:17.197809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:18.198330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:19.198404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:20.199164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:21.200261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:22.201051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:23.201878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:24.202384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:25.202505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:26.203659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:27.204631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:28.205045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:29.205706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:30.206043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:31.206355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:32.206827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:33.207140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:34.207632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:35.208229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:36.209278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:37.209948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:38.210363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:39.211243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:40.211573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:41.212265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:42.213115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:43.213326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:44.213895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:45.214479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:46.214670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:47.214800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:48.214931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:49.215249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:50.215843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:51.216230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:52.217181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:53.217283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:54.217350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:55.217516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:56.218387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:57.218559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:58.219631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:58:59.220536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:00.221444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:01.221610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:02.222373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:03.222552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:04.223017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:05.223848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:06.224173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:07.224378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:08.225182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:09.225533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:10.225593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:11.225811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:12.225948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:13.226079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:14.226772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:15.227585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:16.228221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:17.228629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:18.229199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:19.229428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:20.230446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:21.230520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:22.231552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:23.231644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:24.232275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:25.232423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:26.232539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:27.232727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:28.233230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:29.233502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:30.234111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:31.234260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:32.234716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:33.234956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:34.235524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:35.236281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:36.237282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:37.237763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:38.238801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:39.238947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:40.239336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:41.239669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:42.240391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:43.241153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:44.241544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:45.241645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:46.242540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:47.242805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:48.243512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:49.243717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:50.243839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:51.244074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:52.244982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:53.245721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:54.246707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:55.247392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:56.248268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:57.248546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:58.249250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 10:59:59.249479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:00.249815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:01.250116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:02.250223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:03.250432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:04.250970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:05.251616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:06.252494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:07.252692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:08.253675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:09.253875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:10.254848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:11.255290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:12.255930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:13.256347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:14.257070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:15.257350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:16.258117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:17.258423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:18.258616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:19.258817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:20.259786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:21.259969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:22.260880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:23.261527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:24.261722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:25.262263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:26.263328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:27.264272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:28.264854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:29.265050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:30.265533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:31.265817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:32.266106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:33.266284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:34.266766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:35.267367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:36.267736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:37.268261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:38.268352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:39.268711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:40.269851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:41.270663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:42.271680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:43.272377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:44.272624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:45.272908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:46.273196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:47.273203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:48.273452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:49.274402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:50.274547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:51.275373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:52.275321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:53.276285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:54.276526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:55.276743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:56.277077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:57.277746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:58.277915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:00:59.278943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:00.279023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:01.279304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:02.279499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:03.280460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:04.280792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:05.281627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:06.281922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:07.282348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:08.282792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:09.282988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:10.283201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:11.283347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:12.284318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:13.285276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:14.285295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:15.285840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:16.286519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:17.286523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:18.287248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:19.287619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:20.287719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:21.288242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:22.288548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:23.288920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:24.289507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:25.290633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:26.291559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:27.292328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:28.292676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:29.293156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:30.294226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:31.294393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:32.294588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:33.294682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:34.294950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:35.295563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:36.295603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:37.295752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:38.296604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:39.296703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:40.297764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:41.297913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:42.298077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:43.298206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:44.298339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:45.298640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:46.298899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:47.298955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:48.299247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:49.299354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:50.300088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:51.300234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:52.300387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:53.300527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:54.300761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:55.300857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:56.301120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:57.301302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:58.301423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:01:59.302546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:00.302638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:01.303211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:02.303392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:03.304197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:04.304441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:05.304766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:06.304983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:07.305631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:08.305894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:09.305993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:10.306347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:11.306612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:12.306899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:13.307278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:14.308302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:15.308425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:16.308690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:17.308720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:18.308994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:19.309181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:20.309464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:21.309683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:22.309886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:23.309984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:24.310745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:25.311417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:26.311723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:27.312259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:28.312450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:29.312714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:30.312860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:31.313495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:32.313643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:33.313980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:34.314186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:35.314508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:36.314603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:37.314770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:38.314859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:39.314953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:40.315936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:41.316038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:42.316202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:43.316444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:44.316609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:45.316816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-33693a5f-cb5c-406f-875b-dee1796892a0 off the node worker2 @ 04/28/24 11:02:45.929
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-33693a5f-cb5c-406f-875b-dee1796892a0 @ 04/28/24 11:02:45.938
  Apr 28 11:02:45.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2842" for this suite. @ 04/28/24 11:02:45.947
• [304.128 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/28/24 11:02:45.953
  Apr 28 11:02:45.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/28/24 11:02:45.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 11:02:45.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 11:02:45.969
  STEP: Creating 50 configmaps @ 04/28/24 11:02:45.972
  STEP: Creating RC which spawns configmap-volume pods @ 04/28/24 11:02:46.207
  E0428 11:02:46.317480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 11:02:46.324: INFO: Pod name wrapped-volume-race-f03270bc-fedc-4aa9-a4a7-0ad374dfafe8: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/28/24 11:02:46.324
  E0428 11:02:47.318315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:48.318546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 04/28/24 11:02:48.379
  Apr 28 11:02:48.387: INFO: Pod name wrapped-volume-race-161bc973-de0b-4f46-af0f-ea80edb6478c: Found 0 pods out of 5
  E0428 11:02:49.319233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:50.320284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:51.320443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:52.320577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:53.321455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 11:02:53.392: INFO: Pod name wrapped-volume-race-161bc973-de0b-4f46-af0f-ea80edb6478c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/28/24 11:02:53.392
  STEP: Creating RC which spawns configmap-volume pods @ 04/28/24 11:02:53.411
  Apr 28 11:02:53.422: INFO: Pod name wrapped-volume-race-1ef7db6d-0071-4080-a3d8-22205c8349f9: Found 0 pods out of 5
  E0428 11:02:54.322338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:55.322844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:56.323221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:57.323245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:02:58.324249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 11:02:58.429: INFO: Pod name wrapped-volume-race-1ef7db6d-0071-4080-a3d8-22205c8349f9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/28/24 11:02:58.429
  STEP: deleting ReplicationController wrapped-volume-race-1ef7db6d-0071-4080-a3d8-22205c8349f9 in namespace emptydir-wrapper-6614, will wait for the garbage collector to delete the pods @ 04/28/24 11:02:58.443
  Apr 28 11:02:58.503: INFO: Deleting ReplicationController wrapped-volume-race-1ef7db6d-0071-4080-a3d8-22205c8349f9 took: 6.256938ms
  Apr 28 11:02:58.604: INFO: Terminating ReplicationController wrapped-volume-race-1ef7db6d-0071-4080-a3d8-22205c8349f9 pods took: 100.573868ms
  E0428 11:02:59.324621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-161bc973-de0b-4f46-af0f-ea80edb6478c in namespace emptydir-wrapper-6614, will wait for the garbage collector to delete the pods @ 04/28/24 11:02:59.805
  Apr 28 11:02:59.864: INFO: Deleting ReplicationController wrapped-volume-race-161bc973-de0b-4f46-af0f-ea80edb6478c took: 4.970897ms
  Apr 28 11:02:59.965: INFO: Terminating ReplicationController wrapped-volume-race-161bc973-de0b-4f46-af0f-ea80edb6478c pods took: 100.262108ms
  E0428 11:03:00.324907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:01.325124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-f03270bc-fedc-4aa9-a4a7-0ad374dfafe8 in namespace emptydir-wrapper-6614, will wait for the garbage collector to delete the pods @ 04/28/24 11:03:01.465
  Apr 28 11:03:01.525: INFO: Deleting ReplicationController wrapped-volume-race-f03270bc-fedc-4aa9-a4a7-0ad374dfafe8 took: 5.354662ms
  Apr 28 11:03:01.626: INFO: Terminating ReplicationController wrapped-volume-race-f03270bc-fedc-4aa9-a4a7-0ad374dfafe8 pods took: 101.110701ms
  E0428 11:03:02.325876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 04/28/24 11:03:03.127
  E0428 11:03:03.326339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 28 11:03:03.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6614" for this suite. @ 04/28/24 11:03:03.444
• [17.495 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/28/24 11:03:03.454
  Apr 28 11:03:03.454: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename subpath @ 04/28/24 11:03:03.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 11:03:03.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 11:03:03.471
  STEP: Setting up data @ 04/28/24 11:03:03.473
  STEP: Creating pod pod-subpath-test-secret-4p2l @ 04/28/24 11:03:03.482
  STEP: Creating a pod to test atomic-volume-subpath @ 04/28/24 11:03:03.482
  E0428 11:03:04.326929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:05.327786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:06.328393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:07.329467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:08.329515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:09.329716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:10.329797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:11.330145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:12.330278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:13.330509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:14.330739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:15.330972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:16.331865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:17.332238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:18.332435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:19.332690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:20.332716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:21.332835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:22.333049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:23.333360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:24.333685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:25.334005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:26.334198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:27.334429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 11:03:27.551
  Apr 28 11:03:27.554: INFO: Trying to get logs from node worker2 pod pod-subpath-test-secret-4p2l container test-container-subpath-secret-4p2l: <nil>
  STEP: delete the pod @ 04/28/24 11:03:27.562
  STEP: Deleting pod pod-subpath-test-secret-4p2l @ 04/28/24 11:03:27.574
  Apr 28 11:03:27.574: INFO: Deleting pod "pod-subpath-test-secret-4p2l" in namespace "subpath-1"
  Apr 28 11:03:27.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1" for this suite. @ 04/28/24 11:03:27.58
• [24.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 04/28/24 11:03:27.585
  Apr 28 11:03:27.585: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename resourcequota @ 04/28/24 11:03:27.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 11:03:27.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 11:03:27.607
  STEP: Creating a ResourceQuota @ 04/28/24 11:03:27.609
  STEP: Getting a ResourceQuota @ 04/28/24 11:03:27.616
  STEP: Updating a ResourceQuota @ 04/28/24 11:03:27.625
  STEP: Verifying a ResourceQuota was modified @ 04/28/24 11:03:27.632
  STEP: Deleting a ResourceQuota @ 04/28/24 11:03:27.635
  STEP: Verifying the deleted ResourceQuota @ 04/28/24 11:03:27.64
  Apr 28 11:03:27.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2489" for this suite. @ 04/28/24 11:03:27.646
• [0.066 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 04/28/24 11:03:27.652
  Apr 28 11:03:27.652: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename security-context @ 04/28/24 11:03:27.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 11:03:27.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 11:03:27.667
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/28/24 11:03:27.67
  E0428 11:03:28.335093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:29.335264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:30.336031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:31.336205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 11:03:31.69
  Apr 28 11:03:31.692: INFO: Trying to get logs from node worker2 pod security-context-b5c56ded-01d1-4e8b-8a7e-22dc3fe15110 container test-container: <nil>
  STEP: delete the pod @ 04/28/24 11:03:31.698
  Apr 28 11:03:31.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1189" for this suite. @ 04/28/24 11:03:31.715
• [4.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/28/24 11:03:31.722
  Apr 28 11:03:31.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename downward-api @ 04/28/24 11:03:31.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 11:03:31.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 11:03:31.737
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 11:03:31.739
  E0428 11:03:32.336460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:33.337566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:34.338085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:35.338794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 11:03:35.762
  Apr 28 11:03:35.765: INFO: Trying to get logs from node worker2 pod downwardapi-volume-d4f61ace-20f8-46a8-b8f4-deba9cf2c8dd container client-container: <nil>
  STEP: delete the pod @ 04/28/24 11:03:35.771
  Apr 28 11:03:35.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8561" for this suite. @ 04/28/24 11:03:35.784
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/28/24 11:03:35.789
  Apr 28 11:03:35.789: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename projected @ 04/28/24 11:03:35.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 11:03:35.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 11:03:35.806
  STEP: Creating a pod to test downward API volume plugin @ 04/28/24 11:03:35.807
  E0428 11:03:36.339689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:37.339761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/28/24 11:03:37.824
  Apr 28 11:03:37.827: INFO: Trying to get logs from node worker2 pod downwardapi-volume-7ace2cf5-edb4-4583-90af-6ca6cf03185f container client-container: <nil>
  STEP: delete the pod @ 04/28/24 11:03:37.834
  Apr 28 11:03:37.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7054" for this suite. @ 04/28/24 11:03:37.852
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 04/28/24 11:03:37.859
  Apr 28 11:03:37.859: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename ingress @ 04/28/24 11:03:37.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 11:03:37.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 11:03:37.875
  STEP: getting /apis @ 04/28/24 11:03:37.877
  STEP: getting /apis/networking.k8s.io @ 04/28/24 11:03:37.879
  STEP: getting /apis/networking.k8s.iov1 @ 04/28/24 11:03:37.88
  STEP: creating @ 04/28/24 11:03:37.881
  STEP: getting @ 04/28/24 11:03:37.893
  STEP: listing @ 04/28/24 11:03:37.897
  STEP: watching @ 04/28/24 11:03:37.9
  Apr 28 11:03:37.900: INFO: starting watch
  STEP: cluster-wide listing @ 04/28/24 11:03:37.901
  STEP: cluster-wide watching @ 04/28/24 11:03:37.903
  Apr 28 11:03:37.903: INFO: starting watch
  STEP: patching @ 04/28/24 11:03:37.904
  STEP: updating @ 04/28/24 11:03:37.912
  Apr 28 11:03:37.918: INFO: waiting for watch events with expected annotations
  Apr 28 11:03:37.918: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/28/24 11:03:37.919
  STEP: updating /status @ 04/28/24 11:03:37.924
  STEP: get /status @ 04/28/24 11:03:37.93
  STEP: deleting @ 04/28/24 11:03:37.934
  STEP: deleting a collection @ 04/28/24 11:03:37.949
  Apr 28 11:03:37.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4910" for this suite. @ 04/28/24 11:03:37.973
• [0.125 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/28/24 11:03:37.984
  Apr 28 11:03:37.984: INFO: >>> kubeConfig: /tmp/kubeconfig-1121174464
  STEP: Building a namespace api object, basename container-runtime @ 04/28/24 11:03:37.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/28/24 11:03:37.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/28/24 11:03:37.997
  STEP: create the container @ 04/28/24 11:03:38
  W0428 11:03:38.010761      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/28/24 11:03:38.01
  E0428 11:03:38.339914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0428 11:03:39.340038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/28/24 11:03:40.023
  STEP: the container should be terminated @ 04/28/24 11:03:40.026
  STEP: the termination message should be set @ 04/28/24 11:03:40.026
  Apr 28 11:03:40.026: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/28/24 11:03:40.026
  Apr 28 11:03:40.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3451" for this suite. @ 04/28/24 11:03:40.044
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Apr 28 11:03:40.050: INFO: Running AfterSuite actions on node 1
  Apr 28 11:03:40.050: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.039 seconds]
------------------------------

Ran 388 of 7407 Specs in 6625.005 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h50m25.540309538s
Test Suite Passed
