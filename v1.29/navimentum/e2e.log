  I0103 03:26:27.142058      20 e2e.go:117] Starting e2e run "8d1f4953-5ea5-46af-800a-acc0fe6dada8" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1704252384 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Jan  3 03:26:27.772: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 03:26:27.778: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jan  3 03:26:27.877: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jan  3 03:26:27.889: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jan  3 03:26:27.889: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Jan  3 03:26:27.889: INFO: e2e test version: v1.29.0
  Jan  3 03:26:27.891: INFO: kube-apiserver version: v1.29.0
  Jan  3 03:26:27.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 03:26:27.901: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.129 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/03/24 03:26:28.194
  Jan  3 03:26:28.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename ingressclass @ 01/03/24 03:26:28.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:26:28.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:26:28.232
  STEP: getting /apis @ 01/03/24 03:26:28.241
  STEP: getting /apis/networking.k8s.io @ 01/03/24 03:26:28.254
  STEP: getting /apis/networking.k8s.iov1 @ 01/03/24 03:26:28.257
  STEP: creating @ 01/03/24 03:26:28.261
  STEP: getting @ 01/03/24 03:26:28.29
  STEP: listing @ 01/03/24 03:26:28.295
  STEP: watching @ 01/03/24 03:26:28.3
  Jan  3 03:26:28.301: INFO: starting watch
  STEP: patching @ 01/03/24 03:26:28.304
  STEP: updating @ 01/03/24 03:26:28.312
  Jan  3 03:26:28.321: INFO: waiting for watch events with expected annotations
  Jan  3 03:26:28.321: INFO: saw patched and updated annotations
  STEP: deleting @ 01/03/24 03:26:28.322
  STEP: deleting a collection @ 01/03/24 03:26:28.34
  Jan  3 03:26:28.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3402" for this suite. @ 01/03/24 03:26:28.369
• [0.187 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/03/24 03:26:28.381
  Jan  3 03:26:28.381: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sysctl @ 01/03/24 03:26:28.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:26:28.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:26:28.415
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/03/24 03:26:28.423
  Jan  3 03:26:28.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1316" for this suite. @ 01/03/24 03:26:28.444
• [0.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/03/24 03:26:28.454
  Jan  3 03:26:28.454: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename gc @ 01/03/24 03:26:28.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:26:28.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:26:28.491
  STEP: create the rc @ 01/03/24 03:26:28.501
  W0103 03:26:28.515040      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/03/24 03:26:33.531
  STEP: wait for all pods to be garbage collected @ 01/03/24 03:26:33.551
  STEP: Gathering metrics @ 01/03/24 03:26:38.572
  Jan  3 03:26:38.845: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan  3 03:26:38.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6195" for this suite. @ 01/03/24 03:26:38.857
• [10.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/03/24 03:26:38.867
  Jan  3 03:26:38.867: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename namespaces @ 01/03/24 03:26:38.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:26:38.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:26:38.9
  STEP: Creating a test namespace @ 01/03/24 03:26:38.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:26:38.929
  STEP: Creating a pod in the namespace @ 01/03/24 03:26:38.936
  STEP: Waiting for the pod to have running status @ 01/03/24 03:26:38.951
  STEP: Deleting the namespace @ 01/03/24 03:26:40.968
  STEP: Waiting for the namespace to be removed. @ 01/03/24 03:26:40.978
  STEP: Recreating the namespace @ 01/03/24 03:26:51.986
  STEP: Verifying there are no pods in the namespace @ 01/03/24 03:26:52.01
  Jan  3 03:26:52.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9847" for this suite. @ 01/03/24 03:26:52.028
  STEP: Destroying namespace "nsdeletetest-2348" for this suite. @ 01/03/24 03:26:52.036
  Jan  3 03:26:52.042: INFO: Namespace nsdeletetest-2348 was already deleted
  STEP: Destroying namespace "nsdeletetest-2247" for this suite. @ 01/03/24 03:26:52.042
• [13.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/03/24 03:26:52.053
  Jan  3 03:26:52.053: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 03:26:52.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:26:52.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:26:52.085
  STEP: Creating the pod @ 01/03/24 03:26:52.092
  Jan  3 03:26:54.670: INFO: Successfully updated pod "annotationupdate2542ebb8-d0fa-45d0-8f22-bcdcbcdf0dff"
  Jan  3 03:26:58.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5319" for this suite. @ 01/03/24 03:26:58.735
• [6.694 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/03/24 03:26:58.747
  Jan  3 03:26:58.747: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename tables @ 01/03/24 03:26:58.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:26:58.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:26:58.785
  Jan  3 03:26:58.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9281" for this suite. @ 01/03/24 03:26:58.813
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/03/24 03:26:58.825
  Jan  3 03:26:58.825: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 03:26:58.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:26:58.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:26:58.861
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/03/24 03:26:58.868
  STEP: Saw pod success @ 01/03/24 03:27:02.909
  Jan  3 03:27:02.914: INFO: Trying to get logs from node 192.168.18.92 pod pod-3ceeeee3-32f0-40bf-91da-36a5f203b8bd container test-container: <nil>
  STEP: delete the pod @ 01/03/24 03:27:02.927
  Jan  3 03:27:02.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1939" for this suite. @ 01/03/24 03:27:02.958
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 01/03/24 03:27:02.97
  Jan  3 03:27:02.970: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename var-expansion @ 01/03/24 03:27:02.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:02.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:03.007
  Jan  3 03:27:05.050: INFO: Deleting pod "var-expansion-be02b0aa-905c-41a9-972a-dca7d5c4b232" in namespace "var-expansion-625"
  Jan  3 03:27:05.062: INFO: Wait up to 5m0s for pod "var-expansion-be02b0aa-905c-41a9-972a-dca7d5c4b232" to be fully deleted
  Jan  3 03:27:09.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-625" for this suite. @ 01/03/24 03:27:09.092
• [6.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/03/24 03:27:09.109
  Jan  3 03:27:09.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 03:27:09.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:09.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:09.151
  STEP: Creating projection with secret that has name projected-secret-test-ed0aa5d8-2304-475f-aecb-76872824d636 @ 01/03/24 03:27:09.159
  STEP: Creating a pod to test consume secrets @ 01/03/24 03:27:09.172
  STEP: Saw pod success @ 01/03/24 03:27:13.216
  Jan  3 03:27:13.222: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-secrets-160491ea-d3b5-4368-8b14-734fcd1d3627 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 03:27:13.233
  Jan  3 03:27:13.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9236" for this suite. @ 01/03/24 03:27:13.27
• [4.170 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 01/03/24 03:27:13.28
  Jan  3 03:27:13.280: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-webhook @ 01/03/24 03:27:13.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:13.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:13.319
  STEP: Setting up server cert @ 01/03/24 03:27:13.329
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/03/24 03:27:14.56
  STEP: Deploying the custom resource conversion webhook pod @ 01/03/24 03:27:14.577
  STEP: Wait for the deployment to be ready @ 01/03/24 03:27:14.597
  Jan  3 03:27:14.606: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  Jan  3 03:27:16.627: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 3, 27, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 3, 27, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 3, 27, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 3, 27, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/03/24 03:27:18.635
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 03:27:18.654
  Jan  3 03:27:19.654: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jan  3 03:27:19.670: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Creating a v1 custom resource @ 01/03/24 03:27:22.334
  STEP: Create a v2 custom resource @ 01/03/24 03:27:22.364
  STEP: List CRs in v1 @ 01/03/24 03:27:22.447
  STEP: List CRs in v2 @ 01/03/24 03:27:22.458
  Jan  3 03:27:23.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6384" for this suite. @ 01/03/24 03:27:23.071
• [9.811 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 01/03/24 03:27:23.091
  Jan  3 03:27:23.091: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 03:27:23.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:23.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:23.128
  STEP: Setting up server cert @ 01/03/24 03:27:23.168
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 03:27:23.895
  STEP: Deploying the webhook pod @ 01/03/24 03:27:23.904
  STEP: Wait for the deployment to be ready @ 01/03/24 03:27:23.922
  Jan  3 03:27:23.934: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/03/24 03:27:25.955
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 03:27:25.967
  Jan  3 03:27:26.967: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan  3 03:27:26.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/03/24 03:27:27.502
  STEP: Creating a custom resource that should be denied by the webhook @ 01/03/24 03:27:27.54
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/03/24 03:27:29.603
  STEP: Updating the custom resource with disallowed data should be denied @ 01/03/24 03:27:29.619
  STEP: Deleting the custom resource should be denied @ 01/03/24 03:27:29.642
  STEP: Remove the offending key and value from the custom resource data @ 01/03/24 03:27:29.656
  STEP: Deleting the updated custom resource should be successful @ 01/03/24 03:27:29.676
  Jan  3 03:27:30.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1067" for this suite. @ 01/03/24 03:27:30.29
  STEP: Destroying namespace "webhook-markers-2615" for this suite. @ 01/03/24 03:27:30.297
• [7.218 seconds]
------------------------------
SSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 01/03/24 03:27:30.31
  Jan  3 03:27:30.310: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename ingress @ 01/03/24 03:27:30.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:30.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:30.35
  STEP: getting /apis @ 01/03/24 03:27:30.357
  STEP: getting /apis/networking.k8s.io @ 01/03/24 03:27:30.367
  STEP: getting /apis/networking.k8s.iov1 @ 01/03/24 03:27:30.369
  STEP: creating @ 01/03/24 03:27:30.371
  STEP: getting @ 01/03/24 03:27:30.389
  STEP: listing @ 01/03/24 03:27:30.393
  STEP: watching @ 01/03/24 03:27:30.398
  Jan  3 03:27:30.398: INFO: starting watch
  STEP: cluster-wide listing @ 01/03/24 03:27:30.401
  STEP: cluster-wide watching @ 01/03/24 03:27:30.41
  Jan  3 03:27:30.410: INFO: starting watch
  STEP: patching @ 01/03/24 03:27:30.412
  STEP: updating @ 01/03/24 03:27:30.434
  Jan  3 03:27:30.465: INFO: waiting for watch events with expected annotations
  Jan  3 03:27:30.465: INFO: saw patched and updated annotations
  STEP: patching /status @ 01/03/24 03:27:30.465
  STEP: updating /status @ 01/03/24 03:27:30.473
  STEP: get /status @ 01/03/24 03:27:30.482
  STEP: deleting @ 01/03/24 03:27:30.486
  STEP: deleting a collection @ 01/03/24 03:27:30.499
  Jan  3 03:27:30.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9171" for this suite. @ 01/03/24 03:27:30.517
• [0.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/03/24 03:27:30.541
  Jan  3 03:27:30.541: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 03:27:30.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:30.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:30.564
  STEP: creating a Pod with a static label @ 01/03/24 03:27:30.578
  STEP: watching for Pod to be ready @ 01/03/24 03:27:30.589
  Jan  3 03:27:30.595: INFO: observed Pod pod-test in namespace pods-9287 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jan  3 03:27:30.595: INFO: observed Pod pod-test in namespace pods-9287 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:29 +0000 UTC  }]
  Jan  3 03:27:30.613: INFO: observed Pod pod-test in namespace pods-9287 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:29 +0000 UTC  }]
  Jan  3 03:27:31.331: INFO: observed Pod pod-test in namespace pods-9287 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:29 +0000 UTC  }]
  Jan  3 03:27:32.869: INFO: Found Pod pod-test in namespace pods-9287 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:30 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:32 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 03:27:29 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/03/24 03:27:32.883
  STEP: getting the Pod and ensuring that it's patched @ 01/03/24 03:27:32.911
  STEP: replacing the Pod's status Ready condition to False @ 01/03/24 03:27:32.917
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/03/24 03:27:32.943
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/03/24 03:27:32.943
  STEP: watching for the Pod to be deleted @ 01/03/24 03:27:32.954
  Jan  3 03:27:32.958: INFO: observed event type MODIFIED
  Jan  3 03:27:33.503: INFO: observed event type MODIFIED
  Jan  3 03:27:35.265: INFO: observed event type MODIFIED
  Jan  3 03:27:35.528: INFO: observed event type MODIFIED
  Jan  3 03:27:35.885: INFO: observed event type MODIFIED
  Jan  3 03:27:35.903: INFO: observed event type MODIFIED
  Jan  3 03:27:35.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9287" for this suite. @ 01/03/24 03:27:35.918
• [5.383 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/03/24 03:27:35.924
  Jan  3 03:27:35.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename watch @ 01/03/24 03:27:35.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:35.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:35.946
  STEP: creating a watch on configmaps @ 01/03/24 03:27:35.952
  STEP: creating a new configmap @ 01/03/24 03:27:35.955
  STEP: modifying the configmap once @ 01/03/24 03:27:35.96
  STEP: closing the watch once it receives two notifications @ 01/03/24 03:27:35.969
  Jan  3 03:27:35.969: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7865  7e0b668f-adc0-45fd-9047-36fe497f583a 84796 0 2024-01-03 03:27:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-03 03:27:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:27:35.971: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7865  7e0b668f-adc0-45fd-9047-36fe497f583a 84797 0 2024-01-03 03:27:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-03 03:27:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/03/24 03:27:35.972
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/03/24 03:27:35.981
  STEP: deleting the configmap @ 01/03/24 03:27:35.984
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/03/24 03:27:35.991
  Jan  3 03:27:35.991: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7865  7e0b668f-adc0-45fd-9047-36fe497f583a 84798 0 2024-01-03 03:27:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-03 03:27:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:27:35.991: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7865  7e0b668f-adc0-45fd-9047-36fe497f583a 84799 0 2024-01-03 03:27:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-03 03:27:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:27:35.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7865" for this suite. @ 01/03/24 03:27:35.999
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 01/03/24 03:27:36.01
  Jan  3 03:27:36.010: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 03:27:36.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:36.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:36.036
  STEP: Creating a pod to test downward api env vars @ 01/03/24 03:27:36.043
  STEP: Saw pod success @ 01/03/24 03:27:40.079
  Jan  3 03:27:40.086: INFO: Trying to get logs from node 192.168.18.92 pod downward-api-8f2ca74d-9ddc-4398-8b16-4118c2c50d1c container dapi-container: <nil>
  STEP: delete the pod @ 01/03/24 03:27:40.103
  Jan  3 03:27:40.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5703" for this suite. @ 01/03/24 03:27:40.134
• [4.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/03/24 03:27:40.15
  Jan  3 03:27:40.150: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replication-controller @ 01/03/24 03:27:40.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:40.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:40.189
  STEP: Given a ReplicationController is created @ 01/03/24 03:27:40.196
  STEP: When the matched label of one of its pods change @ 01/03/24 03:27:40.205
  Jan  3 03:27:40.212: INFO: Pod name pod-release: Found 0 pods out of 1
  Jan  3 03:27:45.221: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/03/24 03:27:45.243
  Jan  3 03:27:46.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-960" for this suite. @ 01/03/24 03:27:46.27
• [6.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 01/03/24 03:27:46.279
  Jan  3 03:27:46.279: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename dns @ 01/03/24 03:27:46.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:27:46.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:27:46.309
  STEP: Creating a test headless service @ 01/03/24 03:27:46.316
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7754 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7754;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7754 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7754;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7754.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7754.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7754.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7754.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7754.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7754.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7754.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7754.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7754.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7754.svc;check="$$(dig +notcp +noall +answer +search 224.25.169.169.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/169.169.25.224_udp@PTR;check="$$(dig +tcp +noall +answer +search 224.25.169.169.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/169.169.25.224_tcp@PTR;sleep 1; done
   @ 01/03/24 03:27:46.34
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7754 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7754;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7754 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7754;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7754.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7754.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7754.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7754.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7754.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7754.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7754.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7754.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7754.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7754.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7754.svc;check="$$(dig +notcp +noall +answer +search 224.25.169.169.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/169.169.25.224_udp@PTR;check="$$(dig +tcp +noall +answer +search 224.25.169.169.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/169.169.25.224_tcp@PTR;sleep 1; done
   @ 01/03/24 03:27:46.34
  STEP: creating a pod to probe DNS @ 01/03/24 03:27:46.34
  STEP: submitting the pod to kubernetes @ 01/03/24 03:27:46.34
  STEP: retrieving the pod @ 01/03/24 03:27:50.386
  STEP: looking for the results for each expected name from probers @ 01/03/24 03:27:50.391
  Jan  3 03:27:50.400: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.406: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.412: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.418: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.426: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.432: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.438: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.447: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.481: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.488: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.494: INFO: Unable to read jessie_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.499: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.506: INFO: Unable to read jessie_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.513: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.519: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.525: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:50.548: INFO: Lookups using dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7754 wheezy_tcp@dns-test-service.dns-7754 wheezy_udp@dns-test-service.dns-7754.svc wheezy_tcp@dns-test-service.dns-7754.svc wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7754 jessie_tcp@dns-test-service.dns-7754 jessie_udp@dns-test-service.dns-7754.svc jessie_tcp@dns-test-service.dns-7754.svc jessie_udp@_http._tcp.dns-test-service.dns-7754.svc jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc]

  Jan  3 03:27:50.560: INFO: Pod client logs for webserver: 
  Jan  3 03:27:50.573: INFO: Pod client logs for querier: 
  Jan  3 03:27:50.584: INFO: Pod client logs for jessie-querier: 
  Jan  3 03:27:55.402: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.409: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.416: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.423: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.430: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.437: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.443: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.449: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.481: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.488: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.495: INFO: Unable to read jessie_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.501: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.507: INFO: Unable to read jessie_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.513: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.520: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.526: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:27:55.557: INFO: Lookups using dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7754 wheezy_tcp@dns-test-service.dns-7754 wheezy_udp@dns-test-service.dns-7754.svc wheezy_tcp@dns-test-service.dns-7754.svc wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7754 jessie_tcp@dns-test-service.dns-7754 jessie_udp@dns-test-service.dns-7754.svc jessie_tcp@dns-test-service.dns-7754.svc jessie_udp@_http._tcp.dns-test-service.dns-7754.svc jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc]

  Jan  3 03:27:55.568: INFO: Pod client logs for webserver: 
  Jan  3 03:27:55.578: INFO: Pod client logs for querier: 
  Jan  3 03:27:55.589: INFO: Pod client logs for jessie-querier: 
  Jan  3 03:28:00.401: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.409: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.416: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.423: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.431: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.439: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.448: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.455: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.498: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.506: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.515: INFO: Unable to read jessie_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.523: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.530: INFO: Unable to read jessie_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.536: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.541: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.549: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:00.579: INFO: Lookups using dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7754 wheezy_tcp@dns-test-service.dns-7754 wheezy_udp@dns-test-service.dns-7754.svc wheezy_tcp@dns-test-service.dns-7754.svc wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7754 jessie_tcp@dns-test-service.dns-7754 jessie_udp@dns-test-service.dns-7754.svc jessie_tcp@dns-test-service.dns-7754.svc jessie_udp@_http._tcp.dns-test-service.dns-7754.svc jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc]

  Jan  3 03:28:00.593: INFO: Pod client logs for webserver: 
  Jan  3 03:28:00.606: INFO: Pod client logs for querier: 
  Jan  3 03:28:00.616: INFO: Pod client logs for jessie-querier: 
  Jan  3 03:28:05.401: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.411: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.418: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.426: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.433: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.439: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.447: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.453: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.491: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.499: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.506: INFO: Unable to read jessie_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.513: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.522: INFO: Unable to read jessie_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.528: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.534: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.541: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:05.567: INFO: Lookups using dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7754 wheezy_tcp@dns-test-service.dns-7754 wheezy_udp@dns-test-service.dns-7754.svc wheezy_tcp@dns-test-service.dns-7754.svc wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7754 jessie_tcp@dns-test-service.dns-7754 jessie_udp@dns-test-service.dns-7754.svc jessie_tcp@dns-test-service.dns-7754.svc jessie_udp@_http._tcp.dns-test-service.dns-7754.svc jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc]

  Jan  3 03:28:05.589: INFO: Pod client logs for webserver: 
  Jan  3 03:28:05.600: INFO: Pod client logs for querier: 
  Jan  3 03:28:05.614: INFO: Pod client logs for jessie-querier: 
  Jan  3 03:28:10.400: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.406: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.412: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.418: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.425: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.431: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.438: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.445: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.476: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.483: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.488: INFO: Unable to read jessie_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.494: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.499: INFO: Unable to read jessie_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.506: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.512: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.518: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:10.543: INFO: Lookups using dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7754 wheezy_tcp@dns-test-service.dns-7754 wheezy_udp@dns-test-service.dns-7754.svc wheezy_tcp@dns-test-service.dns-7754.svc wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7754 jessie_tcp@dns-test-service.dns-7754 jessie_udp@dns-test-service.dns-7754.svc jessie_tcp@dns-test-service.dns-7754.svc jessie_udp@_http._tcp.dns-test-service.dns-7754.svc jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc]

  Jan  3 03:28:10.554: INFO: Pod client logs for webserver: 
  Jan  3 03:28:10.564: INFO: Pod client logs for querier: 
  Jan  3 03:28:10.576: INFO: Pod client logs for jessie-querier: 
  Jan  3 03:28:15.400: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.410: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.421: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.429: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.435: INFO: Unable to read wheezy_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.444: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.450: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.458: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.497: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.504: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.510: INFO: Unable to read jessie_udp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.517: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754 from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.524: INFO: Unable to read jessie_udp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.532: INFO: Unable to read jessie_tcp@dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.537: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.544: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc from pod dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37: the server could not find the requested resource (get pods dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37)
  Jan  3 03:28:15.570: INFO: Lookups using dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7754 wheezy_tcp@dns-test-service.dns-7754 wheezy_udp@dns-test-service.dns-7754.svc wheezy_tcp@dns-test-service.dns-7754.svc wheezy_udp@_http._tcp.dns-test-service.dns-7754.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7754.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7754 jessie_tcp@dns-test-service.dns-7754 jessie_udp@dns-test-service.dns-7754.svc jessie_tcp@dns-test-service.dns-7754.svc jessie_udp@_http._tcp.dns-test-service.dns-7754.svc jessie_tcp@_http._tcp.dns-test-service.dns-7754.svc]

  Jan  3 03:28:15.583: INFO: Pod client logs for webserver: 
  Jan  3 03:28:15.595: INFO: Pod client logs for querier: 
  Jan  3 03:28:15.616: INFO: Pod client logs for jessie-querier: 
  Jan  3 03:28:20.575: INFO: DNS probes using dns-7754/dns-test-a86e6e31-9041-4e12-9fd5-63219be49f37 succeeded

  STEP: deleting the pod @ 01/03/24 03:28:20.576
  STEP: deleting the test service @ 01/03/24 03:28:20.617
  STEP: deleting the test headless service @ 01/03/24 03:28:20.66
  Jan  3 03:28:20.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7754" for this suite. @ 01/03/24 03:28:20.699
• [34.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/03/24 03:28:20.712
  Jan  3 03:28:20.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename subpath @ 01/03/24 03:28:20.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:28:20.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:28:20.745
  STEP: Setting up data @ 01/03/24 03:28:20.75
  STEP: Creating pod pod-subpath-test-downwardapi-c8pc @ 01/03/24 03:28:20.771
  STEP: Creating a pod to test atomic-volume-subpath @ 01/03/24 03:28:20.772
  STEP: Saw pod success @ 01/03/24 03:28:44.911
  Jan  3 03:28:44.917: INFO: Trying to get logs from node 192.168.18.92 pod pod-subpath-test-downwardapi-c8pc container test-container-subpath-downwardapi-c8pc: <nil>
  STEP: delete the pod @ 01/03/24 03:28:44.933
  STEP: Deleting pod pod-subpath-test-downwardapi-c8pc @ 01/03/24 03:28:44.956
  Jan  3 03:28:44.956: INFO: Deleting pod "pod-subpath-test-downwardapi-c8pc" in namespace "subpath-9471"
  Jan  3 03:28:44.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9471" for this suite. @ 01/03/24 03:28:44.973
• [24.271 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 01/03/24 03:28:44.983
  Jan  3 03:28:44.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename disruption @ 01/03/24 03:28:44.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:28:45.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:28:45.017
  STEP: creating the pdb @ 01/03/24 03:28:45.027
  STEP: Waiting for the pdb to be processed @ 01/03/24 03:28:45.039
  STEP: updating the pdb @ 01/03/24 03:28:47.052
  STEP: Waiting for the pdb to be processed @ 01/03/24 03:28:47.066
  STEP: patching the pdb @ 01/03/24 03:28:49.075
  STEP: Waiting for the pdb to be processed @ 01/03/24 03:28:49.095
  STEP: Waiting for the pdb to be deleted @ 01/03/24 03:28:51.114
  Jan  3 03:28:51.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5596" for this suite. @ 01/03/24 03:28:51.128
• [6.153 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 01/03/24 03:28:51.136
  Jan  3 03:28:51.136: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 03:28:51.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:28:51.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:28:51.166
  Jan  3 03:28:51.176: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9773 create -f -'
  Jan  3 03:28:51.654: INFO: stderr: ""
  Jan  3 03:28:51.655: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jan  3 03:28:51.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9773 create -f -'
  Jan  3 03:28:51.977: INFO: stderr: ""
  Jan  3 03:28:51.977: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/03/24 03:28:51.977
  Jan  3 03:28:52.988: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 03:28:52.988: INFO: Found 0 / 1
  Jan  3 03:28:53.986: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 03:28:53.986: INFO: Found 1 / 1
  Jan  3 03:28:53.986: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jan  3 03:28:53.991: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 03:28:53.992: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan  3 03:28:53.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9773 describe pod agnhost-primary-4bcfj'
  Jan  3 03:28:54.198: INFO: stderr: ""
  Jan  3 03:28:54.198: INFO: stdout: "Name:             agnhost-primary-4bcfj\nNamespace:        kubectl-9773\nPriority:         0\nService Account:  default\nNode:             192.168.18.92/192.168.18.92\nStart Time:       Wed, 03 Jan 2024 03:28:51 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 04e69b2428e817018c925634de04ce4ee648a88faa35c977cf1e92a51657a9d0\n                  cni.projectcalico.org/podIP: 10.1.155.12/32\n                  cni.projectcalico.org/podIPs: 10.1.155.12/32\nStatus:           Running\nIP:               10.1.155.12\nIPs:\n  IP:           10.1.155.12\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://4b29e9b3f80fa0f55ce89310492782c0134f7ae96006046f7bc3fde1920abfdd\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 03 Jan 2024 03:28:52 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-tlpz6 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-tlpz6:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-9773/agnhost-primary-4bcfj to 192.168.18.92\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Jan  3 03:28:54.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9773 describe rc agnhost-primary'
  Jan  3 03:28:54.414: INFO: stderr: ""
  Jan  3 03:28:54.414: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9773\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-4bcfj\n"
  Jan  3 03:28:54.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9773 describe service agnhost-primary'
  Jan  3 03:28:54.605: INFO: stderr: ""
  Jan  3 03:28:54.605: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9773\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                169.169.28.33\nIPs:               169.169.28.33\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.1.155.12:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jan  3 03:28:54.614: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9773 describe node 192.168.18.91'
  Jan  3 03:28:54.869: INFO: stderr: ""
  Jan  3 03:28:54.869: INFO: stdout: "Name:               192.168.18.91\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=192.168.18.91\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.18.91/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.1.213.64\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 24 Dec 2023 15:51:40 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  192.168.18.91\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 03 Jan 2024 03:28:50 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 03 Jan 2024 03:19:14 +0000   Wed, 03 Jan 2024 03:19:14 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Wed, 03 Jan 2024 03:24:13 +0000   Sun, 24 Dec 2023 15:51:37 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 03 Jan 2024 03:24:13 +0000   Sun, 24 Dec 2023 15:51:37 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 03 Jan 2024 03:24:13 +0000   Sun, 24 Dec 2023 15:51:37 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 03 Jan 2024 03:24:13 +0000   Sun, 24 Dec 2023 15:51:40 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.18.91\n  Hostname:    192.168.18.91\nCapacity:\n  cpu:                4\n  ephemeral-storage:  36805060Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3861080Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  33919543240\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3758680Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 9775ad9f9c044c2db724ae42a433f8f6\n  System UUID:                E6F54D56-8E2E-F548-8D2E-6372CD8B09EF\n  Boot ID:                    0b750902-748b-46b1-af1c-b39ac7bdc8a2\n  Kernel Version:             3.10.0-1160.95.1.el7.x86_64\n  OS Image:                   CentOS Linux 7 (Core)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.23\n  Kubelet Version:            v1.29.0\n  Kube-Proxy Version:         v1.29.0\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-7ddc4f45bc-svj88                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         9d\n  kube-system                 calico-node-drgqp                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         9d\n  kube-system                 coredns-76f75df574-6qkhz                                   100m (2%)     0 (0%)      70Mi (1%)        170Mi (4%)     9d\n  kube-system                 etcd-192.168.18.91                                         100m (2%)     0 (0%)      100Mi (2%)       0 (0%)         9d\n  kube-system                 kube-apiserver-192.168.18.91                               250m (6%)     0 (0%)      0 (0%)           0 (0%)         9d\n  kube-system                 kube-controller-manager-192.168.18.91                      200m (5%)     0 (0%)      0 (0%)           0 (0%)         9d\n  kube-system                 kube-proxy-96snq                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         9d\n  kube-system                 kube-scheduler-192.168.18.91                               100m (2%)     0 (0%)      0 (0%)           0 (0%)         9d\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-l24d8    0 (0%)        0 (0%)      0 (0%)           0 (0%)         2m32s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                1 (25%)     0 (0%)\n  memory             170Mi (4%)  170Mi (4%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                    From             Message\n  ----     ------                   ----                   ----             -------\n  Normal   Starting                 9m46s                  kube-proxy       \n  Normal   Starting                 9m54s                  kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      9m54s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  9m53s (x8 over 9m53s)  kubelet          Node 192.168.18.91 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    9m53s (x7 over 9m53s)  kubelet          Node 192.168.18.91 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     9m53s (x7 over 9m53s)  kubelet          Node 192.168.18.91 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  9m53s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           8m39s                  node-controller  Node 192.168.18.91 event: Registered Node 192.168.18.91 in Controller\n"
  Jan  3 03:28:54.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9773 describe namespace kubectl-9773'
  Jan  3 03:28:55.056: INFO: stderr: ""
  Jan  3 03:28:55.057: INFO: stdout: "Name:         kubectl-9773\nLabels:       e2e-framework=kubectl\n              e2e-run=8d1f4953-5ea5-46af-800a-acc0fe6dada8\n              kubernetes.io/metadata.name=kubectl-9773\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jan  3 03:28:55.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9773" for this suite. @ 01/03/24 03:28:55.067
• [3.941 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 01/03/24 03:28:55.078
  Jan  3 03:28:55.079: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename disruption @ 01/03/24 03:28:55.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:28:55.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:28:55.121
  STEP: Creating a kubernetes client @ 01/03/24 03:28:55.128
  Jan  3 03:28:55.128: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename disruption-2 @ 01/03/24 03:28:55.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:28:55.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:28:55.16
  STEP: Waiting for the pdb to be processed @ 01/03/24 03:28:55.173
  STEP: Waiting for the pdb to be processed @ 01/03/24 03:28:57.191
  STEP: Waiting for the pdb to be processed @ 01/03/24 03:28:59.208
  STEP: listing a collection of PDBs across all namespaces @ 01/03/24 03:29:01.215
  STEP: listing a collection of PDBs in namespace disruption-6523 @ 01/03/24 03:29:01.219
  STEP: deleting a collection of PDBs @ 01/03/24 03:29:01.224
  STEP: Waiting for the PDB collection to be deleted @ 01/03/24 03:29:01.233
  Jan  3 03:29:01.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3642" for this suite. @ 01/03/24 03:29:01.25
  Jan  3 03:29:01.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6523" for this suite. @ 01/03/24 03:29:01.264
• [6.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/03/24 03:29:01.271
  Jan  3 03:29:01.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename apf @ 01/03/24 03:29:01.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:29:01.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:29:01.297
  STEP: getting /apis @ 01/03/24 03:29:01.304
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/03/24 03:29:01.314
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/03/24 03:29:01.316
  STEP: creating @ 01/03/24 03:29:01.318
  STEP: getting @ 01/03/24 03:29:01.339
  STEP: listing @ 01/03/24 03:29:01.345
  STEP: watching @ 01/03/24 03:29:01.351
  Jan  3 03:29:01.351: INFO: starting watch
  STEP: patching @ 01/03/24 03:29:01.355
  STEP: updating @ 01/03/24 03:29:01.361
  Jan  3 03:29:01.378: INFO: waiting for watch events with expected annotations
  Jan  3 03:29:01.378: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 01/03/24 03:29:01.379
  STEP: patching /status @ 01/03/24 03:29:01.383
  STEP: updating /status @ 01/03/24 03:29:01.39
  STEP: deleting @ 01/03/24 03:29:01.429
  STEP: deleting a collection @ 01/03/24 03:29:01.451
  Jan  3 03:29:01.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6232" for this suite. @ 01/03/24 03:29:01.477
• [0.212 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 01/03/24 03:29:01.483
  Jan  3 03:29:01.484: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 03:29:01.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:29:01.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:29:01.508
  STEP: creating a replication controller @ 01/03/24 03:29:01.513
  Jan  3 03:29:01.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 create -f -'
  Jan  3 03:29:01.830: INFO: stderr: ""
  Jan  3 03:29:01.830: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/03/24 03:29:01.831
  Jan  3 03:29:01.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan  3 03:29:02.025: INFO: stderr: ""
  Jan  3 03:29:02.025: INFO: stdout: "update-demo-nautilus-8z5rk update-demo-nautilus-gcpcz "
  Jan  3 03:29:02.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 get pods update-demo-nautilus-8z5rk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan  3 03:29:02.229: INFO: stderr: ""
  Jan  3 03:29:02.229: INFO: stdout: ""
  Jan  3 03:29:02.229: INFO: update-demo-nautilus-8z5rk is created but not running
  Jan  3 03:29:07.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan  3 03:29:07.431: INFO: stderr: ""
  Jan  3 03:29:07.431: INFO: stdout: "update-demo-nautilus-8z5rk update-demo-nautilus-gcpcz "
  Jan  3 03:29:07.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 get pods update-demo-nautilus-8z5rk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan  3 03:29:07.618: INFO: stderr: ""
  Jan  3 03:29:07.618: INFO: stdout: "true"
  Jan  3 03:29:07.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 get pods update-demo-nautilus-8z5rk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan  3 03:29:07.807: INFO: stderr: ""
  Jan  3 03:29:07.807: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan  3 03:29:07.807: INFO: validating pod update-demo-nautilus-8z5rk
  Jan  3 03:29:07.817: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan  3 03:29:07.817: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan  3 03:29:07.817: INFO: update-demo-nautilus-8z5rk is verified up and running
  Jan  3 03:29:07.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 get pods update-demo-nautilus-gcpcz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan  3 03:29:08.007: INFO: stderr: ""
  Jan  3 03:29:08.007: INFO: stdout: "true"
  Jan  3 03:29:08.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 get pods update-demo-nautilus-gcpcz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan  3 03:29:08.167: INFO: stderr: ""
  Jan  3 03:29:08.167: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan  3 03:29:08.167: INFO: validating pod update-demo-nautilus-gcpcz
  Jan  3 03:29:08.180: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan  3 03:29:08.180: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan  3 03:29:08.180: INFO: update-demo-nautilus-gcpcz is verified up and running
  STEP: using delete to clean up resources @ 01/03/24 03:29:08.18
  Jan  3 03:29:08.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 delete --grace-period=0 --force -f -'
  Jan  3 03:29:08.346: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan  3 03:29:08.346: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jan  3 03:29:08.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 get rc,svc -l name=update-demo --no-headers'
  Jan  3 03:29:08.552: INFO: stderr: "No resources found in kubectl-5025 namespace.\n"
  Jan  3 03:29:08.552: INFO: stdout: ""
  Jan  3 03:29:08.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5025 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jan  3 03:29:08.748: INFO: stderr: ""
  Jan  3 03:29:08.748: INFO: stdout: ""
  Jan  3 03:29:08.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5025" for this suite. @ 01/03/24 03:29:08.754
• [7.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 01/03/24 03:29:08.764
  Jan  3 03:29:08.764: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 03:29:08.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:29:08.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:29:08.792
  STEP: Counting existing ResourceQuota @ 01/03/24 03:29:08.8
  STEP: Creating a ResourceQuota @ 01/03/24 03:29:13.808
  STEP: Ensuring resource quota status is calculated @ 01/03/24 03:29:13.82
  STEP: Creating a Pod that fits quota @ 01/03/24 03:29:15.83
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/03/24 03:29:15.856
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/03/24 03:29:17.868
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/03/24 03:29:17.875
  STEP: Ensuring a pod cannot update its resource requirements @ 01/03/24 03:29:17.881
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/03/24 03:29:17.889
  STEP: Deleting the pod @ 01/03/24 03:29:19.898
  STEP: Ensuring resource quota status released the pod usage @ 01/03/24 03:29:19.92
  Jan  3 03:29:21.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6385" for this suite. @ 01/03/24 03:29:21.938
• [13.182 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 01/03/24 03:29:21.948
  Jan  3 03:29:21.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename field-validation @ 01/03/24 03:29:21.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:29:21.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:29:21.977
  Jan  3 03:29:21.985: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  W0103 03:29:24.589345      20 warnings.go:70] unknown field "alpha"
  W0103 03:29:24.589483      20 warnings.go:70] unknown field "beta"
  W0103 03:29:24.589501      20 warnings.go:70] unknown field "delta"
  W0103 03:29:24.589518      20 warnings.go:70] unknown field "epsilon"
  W0103 03:29:24.589532      20 warnings.go:70] unknown field "gamma"
  Jan  3 03:29:25.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4989" for this suite. @ 01/03/24 03:29:25.175
• [3.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 01/03/24 03:29:25.187
  Jan  3 03:29:25.187: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-preemption @ 01/03/24 03:29:25.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:29:25.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:29:25.22
  Jan  3 03:29:25.258: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan  3 03:30:25.269: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/03/24 03:30:25.276
  Jan  3 03:30:25.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/03/24 03:30:25.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:30:25.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:30:25.309
  Jan  3 03:30:25.338: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jan  3 03:30:25.345: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jan  3 03:30:25.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1741" for this suite. @ 01/03/24 03:30:25.46
  Jan  3 03:30:25.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2831" for this suite. @ 01/03/24 03:30:25.48
• [60.302 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/03/24 03:30:25.49
  Jan  3 03:30:25.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 03:30:25.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:30:25.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:30:25.518
  STEP: Creating configMap with name configmap-test-volume-3214f939-423d-4097-943c-c555d6515886 @ 01/03/24 03:30:25.525
  STEP: Creating a pod to test consume configMaps @ 01/03/24 03:30:25.533
  STEP: Saw pod success @ 01/03/24 03:30:29.572
  Jan  3 03:30:29.577: INFO: Trying to get logs from node 192.168.18.92 pod pod-configmaps-fbf8498a-c5cd-433c-be9d-f0785cc7252c container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 03:30:29.61
  Jan  3 03:30:29.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4780" for this suite. @ 01/03/24 03:30:29.642
• [4.161 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/03/24 03:30:29.653
  Jan  3 03:30:29.653: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename endpointslice @ 01/03/24 03:30:29.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:30:29.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:30:29.682
  Jan  3 03:30:29.706: INFO: Endpoints addresses: [192.168.18.91] , ports: [6443]
  Jan  3 03:30:29.706: INFO: EndpointSlices addresses: [192.168.18.91] , ports: [6443]
  Jan  3 03:30:29.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8411" for this suite. @ 01/03/24 03:30:29.713
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 01/03/24 03:30:29.723
  Jan  3 03:30:29.723: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 03:30:29.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:30:29.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:30:29.758
  STEP: Creating a ResourceQuota @ 01/03/24 03:30:29.765
  STEP: Getting a ResourceQuota @ 01/03/24 03:30:29.773
  STEP: Updating a ResourceQuota @ 01/03/24 03:30:29.783
  STEP: Verifying a ResourceQuota was modified @ 01/03/24 03:30:29.79
  STEP: Deleting a ResourceQuota @ 01/03/24 03:30:29.795
  STEP: Verifying the deleted ResourceQuota @ 01/03/24 03:30:29.803
  Jan  3 03:30:29.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4305" for this suite. @ 01/03/24 03:30:29.815
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/03/24 03:30:29.825
  Jan  3 03:30:29.825: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename svcaccounts @ 01/03/24 03:30:29.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:30:29.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:30:29.857
  STEP: reading a file in the container @ 01/03/24 03:30:31.899
  Jan  3 03:30:31.899: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9975 pod-service-account-88be44f6-a329-47ab-a11e-7a3cd62c6d0e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/03/24 03:30:32.245
  Jan  3 03:30:32.246: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9975 pod-service-account-88be44f6-a329-47ab-a11e-7a3cd62c6d0e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/03/24 03:30:32.538
  Jan  3 03:30:32.539: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9975 pod-service-account-88be44f6-a329-47ab-a11e-7a3cd62c6d0e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jan  3 03:30:32.867: INFO: Got root ca configmap in namespace "svcaccounts-9975"
  Jan  3 03:30:32.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9975" for this suite. @ 01/03/24 03:30:32.886
• [3.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/03/24 03:30:32.897
  Jan  3 03:30:32.897: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/03/24 03:30:32.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:30:32.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:30:32.934
  STEP: fetching the /apis discovery document @ 01/03/24 03:30:32.94
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/03/24 03:30:32.944
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/03/24 03:30:32.944
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/03/24 03:30:32.944
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/03/24 03:30:32.947
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/03/24 03:30:32.947
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/03/24 03:30:32.949
  Jan  3 03:30:32.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8837" for this suite. @ 01/03/24 03:30:32.958
• [0.070 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/03/24 03:30:32.967
  Jan  3 03:30:32.967: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename gc @ 01/03/24 03:30:32.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:30:32.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:30:32.995
  STEP: create the rc @ 01/03/24 03:30:33.009
  W0103 03:30:33.017425      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/03/24 03:30:37.031
  STEP: wait for the rc to be deleted @ 01/03/24 03:30:37.05
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/03/24 03:30:42.099
  STEP: Gathering metrics @ 01/03/24 03:31:12.151
  Jan  3 03:31:12.389: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan  3 03:31:12.389: INFO: Deleting pod "simpletest.rc-2dzzl" in namespace "gc-2222"
  Jan  3 03:31:12.415: INFO: Deleting pod "simpletest.rc-2qwc5" in namespace "gc-2222"
  Jan  3 03:31:12.430: INFO: Deleting pod "simpletest.rc-4qtnh" in namespace "gc-2222"
  Jan  3 03:31:12.446: INFO: Deleting pod "simpletest.rc-5885c" in namespace "gc-2222"
  Jan  3 03:31:12.482: INFO: Deleting pod "simpletest.rc-5ff7z" in namespace "gc-2222"
  Jan  3 03:31:12.500: INFO: Deleting pod "simpletest.rc-5mm9j" in namespace "gc-2222"
  Jan  3 03:31:12.519: INFO: Deleting pod "simpletest.rc-5qz9t" in namespace "gc-2222"
  Jan  3 03:31:12.568: INFO: Deleting pod "simpletest.rc-5rg89" in namespace "gc-2222"
  Jan  3 03:31:12.598: INFO: Deleting pod "simpletest.rc-5wqls" in namespace "gc-2222"
  Jan  3 03:31:12.627: INFO: Deleting pod "simpletest.rc-62dcg" in namespace "gc-2222"
  Jan  3 03:31:12.641: INFO: Deleting pod "simpletest.rc-6jdkx" in namespace "gc-2222"
  Jan  3 03:31:12.702: INFO: Deleting pod "simpletest.rc-6jp4n" in namespace "gc-2222"
  Jan  3 03:31:12.724: INFO: Deleting pod "simpletest.rc-75zfm" in namespace "gc-2222"
  Jan  3 03:31:12.780: INFO: Deleting pod "simpletest.rc-7bmfd" in namespace "gc-2222"
  Jan  3 03:31:12.811: INFO: Deleting pod "simpletest.rc-7lvk4" in namespace "gc-2222"
  Jan  3 03:31:12.833: INFO: Deleting pod "simpletest.rc-7ptq8" in namespace "gc-2222"
  Jan  3 03:31:12.867: INFO: Deleting pod "simpletest.rc-7pvkg" in namespace "gc-2222"
  Jan  3 03:31:12.908: INFO: Deleting pod "simpletest.rc-7rbts" in namespace "gc-2222"
  Jan  3 03:31:12.938: INFO: Deleting pod "simpletest.rc-8hjls" in namespace "gc-2222"
  Jan  3 03:31:12.959: INFO: Deleting pod "simpletest.rc-8k7nv" in namespace "gc-2222"
  Jan  3 03:31:12.993: INFO: Deleting pod "simpletest.rc-95kvx" in namespace "gc-2222"
  Jan  3 03:31:13.020: INFO: Deleting pod "simpletest.rc-9kjkn" in namespace "gc-2222"
  Jan  3 03:31:13.049: INFO: Deleting pod "simpletest.rc-9tbff" in namespace "gc-2222"
  Jan  3 03:31:13.095: INFO: Deleting pod "simpletest.rc-9xg75" in namespace "gc-2222"
  Jan  3 03:31:13.129: INFO: Deleting pod "simpletest.rc-bfspx" in namespace "gc-2222"
  Jan  3 03:31:13.155: INFO: Deleting pod "simpletest.rc-bt67p" in namespace "gc-2222"
  Jan  3 03:31:13.186: INFO: Deleting pod "simpletest.rc-btx7g" in namespace "gc-2222"
  Jan  3 03:31:13.208: INFO: Deleting pod "simpletest.rc-c8bj7" in namespace "gc-2222"
  Jan  3 03:31:13.246: INFO: Deleting pod "simpletest.rc-csz6d" in namespace "gc-2222"
  Jan  3 03:31:13.270: INFO: Deleting pod "simpletest.rc-d4frv" in namespace "gc-2222"
  Jan  3 03:31:13.308: INFO: Deleting pod "simpletest.rc-d5w54" in namespace "gc-2222"
  Jan  3 03:31:13.349: INFO: Deleting pod "simpletest.rc-ddckl" in namespace "gc-2222"
  Jan  3 03:31:13.375: INFO: Deleting pod "simpletest.rc-dwlv9" in namespace "gc-2222"
  Jan  3 03:31:13.412: INFO: Deleting pod "simpletest.rc-dxwmd" in namespace "gc-2222"
  Jan  3 03:31:13.432: INFO: Deleting pod "simpletest.rc-fhnjn" in namespace "gc-2222"
  Jan  3 03:31:13.470: INFO: Deleting pod "simpletest.rc-fs9bm" in namespace "gc-2222"
  Jan  3 03:31:13.488: INFO: Deleting pod "simpletest.rc-ftwgj" in namespace "gc-2222"
  Jan  3 03:31:13.512: INFO: Deleting pod "simpletest.rc-fvl9g" in namespace "gc-2222"
  Jan  3 03:31:13.548: INFO: Deleting pod "simpletest.rc-fzmcb" in namespace "gc-2222"
  Jan  3 03:31:13.575: INFO: Deleting pod "simpletest.rc-g9vwq" in namespace "gc-2222"
  Jan  3 03:31:13.611: INFO: Deleting pod "simpletest.rc-gdq5c" in namespace "gc-2222"
  Jan  3 03:31:13.625: INFO: Deleting pod "simpletest.rc-gjnqv" in namespace "gc-2222"
  Jan  3 03:31:13.650: INFO: Deleting pod "simpletest.rc-hjnj2" in namespace "gc-2222"
  Jan  3 03:31:13.660: INFO: Deleting pod "simpletest.rc-hjrfw" in namespace "gc-2222"
  Jan  3 03:31:13.680: INFO: Deleting pod "simpletest.rc-ht5rs" in namespace "gc-2222"
  Jan  3 03:31:13.699: INFO: Deleting pod "simpletest.rc-j7bvx" in namespace "gc-2222"
  Jan  3 03:31:13.752: INFO: Deleting pod "simpletest.rc-j98ln" in namespace "gc-2222"
  Jan  3 03:31:13.784: INFO: Deleting pod "simpletest.rc-jvc2m" in namespace "gc-2222"
  Jan  3 03:31:13.826: INFO: Deleting pod "simpletest.rc-jx7qp" in namespace "gc-2222"
  Jan  3 03:31:13.863: INFO: Deleting pod "simpletest.rc-kc6g4" in namespace "gc-2222"
  Jan  3 03:31:13.893: INFO: Deleting pod "simpletest.rc-kj9p8" in namespace "gc-2222"
  Jan  3 03:31:13.919: INFO: Deleting pod "simpletest.rc-kmrd6" in namespace "gc-2222"
  Jan  3 03:31:13.942: INFO: Deleting pod "simpletest.rc-kqjrd" in namespace "gc-2222"
  Jan  3 03:31:13.975: INFO: Deleting pod "simpletest.rc-ks8mm" in namespace "gc-2222"
  Jan  3 03:31:14.006: INFO: Deleting pod "simpletest.rc-lgnxp" in namespace "gc-2222"
  Jan  3 03:31:14.034: INFO: Deleting pod "simpletest.rc-lj2xk" in namespace "gc-2222"
  Jan  3 03:31:14.058: INFO: Deleting pod "simpletest.rc-lr4gs" in namespace "gc-2222"
  Jan  3 03:31:14.076: INFO: Deleting pod "simpletest.rc-mng44" in namespace "gc-2222"
  Jan  3 03:31:14.095: INFO: Deleting pod "simpletest.rc-mnsb7" in namespace "gc-2222"
  Jan  3 03:31:14.112: INFO: Deleting pod "simpletest.rc-mpplw" in namespace "gc-2222"
  Jan  3 03:31:14.135: INFO: Deleting pod "simpletest.rc-n5bxv" in namespace "gc-2222"
  Jan  3 03:31:14.188: INFO: Deleting pod "simpletest.rc-ncdqv" in namespace "gc-2222"
  Jan  3 03:31:14.233: INFO: Deleting pod "simpletest.rc-njqrt" in namespace "gc-2222"
  Jan  3 03:31:14.309: INFO: Deleting pod "simpletest.rc-p4488" in namespace "gc-2222"
  Jan  3 03:31:14.347: INFO: Deleting pod "simpletest.rc-p4glm" in namespace "gc-2222"
  Jan  3 03:31:14.408: INFO: Deleting pod "simpletest.rc-pchtl" in namespace "gc-2222"
  Jan  3 03:31:14.451: INFO: Deleting pod "simpletest.rc-pnxn7" in namespace "gc-2222"
  Jan  3 03:31:14.470: INFO: Deleting pod "simpletest.rc-pr58s" in namespace "gc-2222"
  Jan  3 03:31:14.510: INFO: Deleting pod "simpletest.rc-pr8fn" in namespace "gc-2222"
  Jan  3 03:31:14.545: INFO: Deleting pod "simpletest.rc-q9v9j" in namespace "gc-2222"
  Jan  3 03:31:14.562: INFO: Deleting pod "simpletest.rc-qcgcf" in namespace "gc-2222"
  Jan  3 03:31:14.578: INFO: Deleting pod "simpletest.rc-qnmzv" in namespace "gc-2222"
  Jan  3 03:31:14.598: INFO: Deleting pod "simpletest.rc-qpnw8" in namespace "gc-2222"
  Jan  3 03:31:14.636: INFO: Deleting pod "simpletest.rc-r5c7s" in namespace "gc-2222"
  Jan  3 03:31:14.651: INFO: Deleting pod "simpletest.rc-rbltr" in namespace "gc-2222"
  Jan  3 03:31:14.692: INFO: Deleting pod "simpletest.rc-rcp88" in namespace "gc-2222"
  Jan  3 03:31:14.733: INFO: Deleting pod "simpletest.rc-rntkd" in namespace "gc-2222"
  Jan  3 03:31:14.762: INFO: Deleting pod "simpletest.rc-s5xbn" in namespace "gc-2222"
  Jan  3 03:31:14.793: INFO: Deleting pod "simpletest.rc-sbclp" in namespace "gc-2222"
  Jan  3 03:31:14.820: INFO: Deleting pod "simpletest.rc-skjcj" in namespace "gc-2222"
  Jan  3 03:31:14.837: INFO: Deleting pod "simpletest.rc-ss2d8" in namespace "gc-2222"
  Jan  3 03:31:14.868: INFO: Deleting pod "simpletest.rc-stjs5" in namespace "gc-2222"
  Jan  3 03:31:14.896: INFO: Deleting pod "simpletest.rc-t262g" in namespace "gc-2222"
  Jan  3 03:31:14.916: INFO: Deleting pod "simpletest.rc-t6xdh" in namespace "gc-2222"
  Jan  3 03:31:14.948: INFO: Deleting pod "simpletest.rc-tc29d" in namespace "gc-2222"
  Jan  3 03:31:14.969: INFO: Deleting pod "simpletest.rc-tkhkx" in namespace "gc-2222"
  Jan  3 03:31:14.987: INFO: Deleting pod "simpletest.rc-twdq8" in namespace "gc-2222"
  Jan  3 03:31:15.006: INFO: Deleting pod "simpletest.rc-vgfvg" in namespace "gc-2222"
  Jan  3 03:31:15.025: INFO: Deleting pod "simpletest.rc-vsh9j" in namespace "gc-2222"
  Jan  3 03:31:15.045: INFO: Deleting pod "simpletest.rc-w7xdq" in namespace "gc-2222"
  Jan  3 03:31:15.062: INFO: Deleting pod "simpletest.rc-wjpdf" in namespace "gc-2222"
  Jan  3 03:31:15.094: INFO: Deleting pod "simpletest.rc-wrksg" in namespace "gc-2222"
  Jan  3 03:31:15.119: INFO: Deleting pod "simpletest.rc-wsp4d" in namespace "gc-2222"
  Jan  3 03:31:15.138: INFO: Deleting pod "simpletest.rc-xcm6v" in namespace "gc-2222"
  Jan  3 03:31:15.159: INFO: Deleting pod "simpletest.rc-xgj5s" in namespace "gc-2222"
  Jan  3 03:31:15.186: INFO: Deleting pod "simpletest.rc-xnwp8" in namespace "gc-2222"
  Jan  3 03:31:15.200: INFO: Deleting pod "simpletest.rc-xtvbm" in namespace "gc-2222"
  Jan  3 03:31:15.228: INFO: Deleting pod "simpletest.rc-z74lv" in namespace "gc-2222"
  Jan  3 03:31:15.249: INFO: Deleting pod "simpletest.rc-zsbww" in namespace "gc-2222"
  Jan  3 03:31:15.285: INFO: Deleting pod "simpletest.rc-zt9gs" in namespace "gc-2222"
  Jan  3 03:31:15.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2222" for this suite. @ 01/03/24 03:31:15.32
• [42.375 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/03/24 03:31:15.347
  Jan  3 03:31:15.347: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename daemonsets @ 01/03/24 03:31:15.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:31:15.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:31:15.383
  Jan  3 03:31:15.433: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/03/24 03:31:15.464
  Jan  3 03:31:15.473: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:15.473: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/03/24 03:31:15.473
  Jan  3 03:31:15.520: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:15.520: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 03:31:16.515: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:16.515: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 03:31:17.528: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:17.528: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 03:31:18.518: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:18.518: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 03:31:19.527: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:19.527: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 03:31:20.516: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 03:31:20.516: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/03/24 03:31:20.52
  Jan  3 03:31:20.563: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 03:31:20.563: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jan  3 03:31:21.565: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:21.565: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/03/24 03:31:21.565
  Jan  3 03:31:21.607: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:21.607: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 03:31:22.613: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:22.613: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 03:31:23.606: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:23.606: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 03:31:24.610: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 03:31:24.611: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/03/24 03:31:24.622
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9440, will wait for the garbage collector to delete the pods @ 01/03/24 03:31:24.623
  Jan  3 03:31:24.689: INFO: Deleting DaemonSet.extensions daemon-set took: 10.132326ms
  Jan  3 03:31:24.790: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.792526ms
  Jan  3 03:31:27.200: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:31:27.200: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan  3 03:31:27.208: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"88117"},"items":null}

  Jan  3 03:31:27.213: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"88117"},"items":null}

  Jan  3 03:31:27.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9440" for this suite. @ 01/03/24 03:31:27.272
• [11.933 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/03/24 03:31:27.28
  Jan  3 03:31:27.280: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 03:31:27.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:31:27.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:31:27.325
  STEP: Creating projection with secret that has name projected-secret-test-dba4da7d-17d9-4c76-841f-f496d3df069d @ 01/03/24 03:31:27.33
  STEP: Creating a pod to test consume secrets @ 01/03/24 03:31:27.336
  STEP: Saw pod success @ 01/03/24 03:31:31.369
  Jan  3 03:31:31.375: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-secrets-a624bf70-cd67-4a69-b1ba-032c26a934af container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 03:31:31.388
  Jan  3 03:31:31.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8924" for this suite. @ 01/03/24 03:31:31.435
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/03/24 03:31:31.447
  Jan  3 03:31:31.447: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename deployment @ 01/03/24 03:31:31.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:31:31.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:31:31.49
  STEP: creating a Deployment @ 01/03/24 03:31:31.503
  Jan  3 03:31:31.504: INFO: Creating simple deployment test-deployment-ch92v
  Jan  3 03:31:31.524: INFO: deployment "test-deployment-ch92v" doesn't have the required revision set
  STEP: Getting /status @ 01/03/24 03:31:33.549
  Jan  3 03:31:33.556: INFO: Deployment test-deployment-ch92v has Conditions: [{Available True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ch92v-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/03/24 03:31:33.556
  Jan  3 03:31:33.575: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 3, 31, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 3, 31, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 3, 31, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 3, 31, 30, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-ch92v-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/03/24 03:31:33.575
  Jan  3 03:31:33.581: INFO: Observed &Deployment event: ADDED
  Jan  3 03:31:33.581: INFO: Observed Deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ch92v-5d576bd769"}
  Jan  3 03:31:33.581: INFO: Observed &Deployment event: MODIFIED
  Jan  3 03:31:33.581: INFO: Observed Deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ch92v-5d576bd769"}
  Jan  3 03:31:33.581: INFO: Observed Deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan  3 03:31:33.581: INFO: Observed &Deployment event: MODIFIED
  Jan  3 03:31:33.582: INFO: Observed Deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan  3 03:31:33.582: INFO: Observed Deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ch92v-5d576bd769" is progressing.}
  Jan  3 03:31:33.583: INFO: Observed &Deployment event: MODIFIED
  Jan  3 03:31:33.583: INFO: Observed Deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan  3 03:31:33.583: INFO: Observed Deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ch92v-5d576bd769" has successfully progressed.}
  Jan  3 03:31:33.584: INFO: Observed &Deployment event: MODIFIED
  Jan  3 03:31:33.584: INFO: Observed Deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan  3 03:31:33.584: INFO: Observed Deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ch92v-5d576bd769" has successfully progressed.}
  Jan  3 03:31:33.584: INFO: Found Deployment test-deployment-ch92v in namespace deployment-2054 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan  3 03:31:33.584: INFO: Deployment test-deployment-ch92v has an updated status
  STEP: patching the Statefulset Status @ 01/03/24 03:31:33.584
  Jan  3 03:31:33.584: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jan  3 03:31:33.599: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/03/24 03:31:33.599
  Jan  3 03:31:33.605: INFO: Observed &Deployment event: ADDED
  Jan  3 03:31:33.605: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ch92v-5d576bd769"}
  Jan  3 03:31:33.605: INFO: Observed &Deployment event: MODIFIED
  Jan  3 03:31:33.606: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ch92v-5d576bd769"}
  Jan  3 03:31:33.606: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan  3 03:31:33.606: INFO: Observed &Deployment event: MODIFIED
  Jan  3 03:31:33.606: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan  3 03:31:33.606: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:30 +0000 UTC 2024-01-03 03:31:30 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ch92v-5d576bd769" is progressing.}
  Jan  3 03:31:33.606: INFO: Observed &Deployment event: MODIFIED
  Jan  3 03:31:33.606: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan  3 03:31:33.606: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ch92v-5d576bd769" has successfully progressed.}
  Jan  3 03:31:33.606: INFO: Observed &Deployment event: MODIFIED
  Jan  3 03:31:33.606: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan  3 03:31:33.606: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-03 03:31:32 +0000 UTC 2024-01-03 03:31:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ch92v-5d576bd769" has successfully progressed.}
  Jan  3 03:31:33.606: INFO: Observed deployment test-deployment-ch92v in namespace deployment-2054 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan  3 03:31:33.607: INFO: Observed &Deployment event: MODIFIED
  Jan  3 03:31:33.607: INFO: Found deployment test-deployment-ch92v in namespace deployment-2054 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jan  3 03:31:33.607: INFO: Deployment test-deployment-ch92v has a patched status
  Jan  3 03:31:33.613: INFO: Deployment "test-deployment-ch92v":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-ch92v",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0d31443-275c-4b93-9120-dd179dae5eb6",
      ResourceVersion: (string) (len=5) "88197",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839849490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-ch92v-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan  3 03:31:33.623: INFO: New ReplicaSet "test-deployment-ch92v-5d576bd769" of Deployment "test-deployment-ch92v":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-ch92v-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fc75b28-2c33-42da-8088-91513c3b3838",
      ResourceVersion: (string) (len=5) "88191",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839849490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-ch92v",
          UID: (types.UID) (len=36) "f0d31443-275c-4b93-9120-dd179dae5eb6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 66 30 64  |k:{\"uid\":\"f0d|
              00000120  33 31 34 34 33 2d 32 37  35 63 2d 34 62 39 33 2d  |31443-275c-4b93-|
              00000130  39 31 32 30 2d 64 64 31  37 39 64 61 65 35 65 62  |9120-dd179dae5eb|
              00000140  36 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |6\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 03:31:33.631: INFO: Pod "test-deployment-ch92v-5d576bd769-dmrjc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-ch92v-5d576bd769-dmrjc",
      GenerateName: (string) (len=33) "test-deployment-ch92v-5d576bd769-",
      Namespace: (string) (len=15) "deployment-2054",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b7c1e16-f128-4d8e-9898-5fd99eaa1d16",
      ResourceVersion: (string) (len=5) "88190",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839849490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "62013ff3416e4cc44b8077b900d52c314625601f80c213c43e33b0a113c051a2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.62/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.62/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-ch92v-5d576bd769",
          UID: (types.UID) (len=36) "8fc75b28-2c33-42da-8088-91513c3b3838",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 38 66 63 37 35 62 32  38 2d 32 63 33 33 2d 34  |"8fc75b28-2c33-4|
              000000a0  32 64 61 2d 38 30 38 38  2d 39 31 35 31 33 63 33  |2da-8088-91513c3|
              000000b0  62 33 38 33 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b3838\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 36  32 5c 22 7d 22 3a 7b 22  |.1.155.62\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4kf2p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4kf2p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839849490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=11) "10.1.155.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.155.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839849491,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839849492,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d5167a21eb43335deb9eebed64612f0d654697c5fe10ebbfb483164e85ed0c93",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 03:31:33.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2054" for this suite. @ 01/03/24 03:31:33.642
• [2.209 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 01/03/24 03:31:33.657
  Jan  3 03:31:33.657: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 03:31:33.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:31:33.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:31:33.698
  Jan  3 03:31:55.836: INFO: Container started at 2024-01-03 03:31:34 +0000 UTC, pod became ready at 2024-01-03 03:31:54 +0000 UTC
  Jan  3 03:31:55.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2229" for this suite. @ 01/03/24 03:31:55.846
• [22.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 01/03/24 03:31:55.857
  Jan  3 03:31:55.857: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename security-context-test @ 01/03/24 03:31:55.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:31:55.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:31:55.891
  Jan  3 03:31:59.961: INFO: Got logs for pod "busybox-privileged-false-10c911a7-fa4c-4c13-ab36-e5af643b9782": "ip: RTNETLINK answers: Operation not permitted\n"
  Jan  3 03:31:59.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5593" for this suite. @ 01/03/24 03:31:59.972
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/03/24 03:31:59.983
  Jan  3 03:31:59.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename discovery @ 01/03/24 03:31:59.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:00.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:00.033
  STEP: Setting up server cert @ 01/03/24 03:32:00.045
  Jan  3 03:32:00.828: INFO: Checking APIGroup: apiregistration.k8s.io
  Jan  3 03:32:00.831: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jan  3 03:32:00.831: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jan  3 03:32:00.831: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jan  3 03:32:00.831: INFO: Checking APIGroup: apps
  Jan  3 03:32:00.834: INFO: PreferredVersion.GroupVersion: apps/v1
  Jan  3 03:32:00.834: INFO: Versions found [{apps/v1 v1}]
  Jan  3 03:32:00.834: INFO: apps/v1 matches apps/v1
  Jan  3 03:32:00.834: INFO: Checking APIGroup: events.k8s.io
  Jan  3 03:32:00.836: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jan  3 03:32:00.836: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jan  3 03:32:00.836: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jan  3 03:32:00.836: INFO: Checking APIGroup: authentication.k8s.io
  Jan  3 03:32:00.839: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jan  3 03:32:00.839: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jan  3 03:32:00.839: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jan  3 03:32:00.839: INFO: Checking APIGroup: authorization.k8s.io
  Jan  3 03:32:00.842: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jan  3 03:32:00.842: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jan  3 03:32:00.842: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jan  3 03:32:00.842: INFO: Checking APIGroup: autoscaling
  Jan  3 03:32:00.845: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jan  3 03:32:00.845: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jan  3 03:32:00.845: INFO: autoscaling/v2 matches autoscaling/v2
  Jan  3 03:32:00.845: INFO: Checking APIGroup: batch
  Jan  3 03:32:00.847: INFO: PreferredVersion.GroupVersion: batch/v1
  Jan  3 03:32:00.848: INFO: Versions found [{batch/v1 v1}]
  Jan  3 03:32:00.848: INFO: batch/v1 matches batch/v1
  Jan  3 03:32:00.848: INFO: Checking APIGroup: certificates.k8s.io
  Jan  3 03:32:00.850: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jan  3 03:32:00.851: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jan  3 03:32:00.851: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jan  3 03:32:00.851: INFO: Checking APIGroup: networking.k8s.io
  Jan  3 03:32:00.854: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jan  3 03:32:00.854: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jan  3 03:32:00.854: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jan  3 03:32:00.854: INFO: Checking APIGroup: policy
  Jan  3 03:32:00.857: INFO: PreferredVersion.GroupVersion: policy/v1
  Jan  3 03:32:00.857: INFO: Versions found [{policy/v1 v1}]
  Jan  3 03:32:00.857: INFO: policy/v1 matches policy/v1
  Jan  3 03:32:00.857: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jan  3 03:32:00.859: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jan  3 03:32:00.859: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jan  3 03:32:00.859: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jan  3 03:32:00.859: INFO: Checking APIGroup: storage.k8s.io
  Jan  3 03:32:00.861: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jan  3 03:32:00.862: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jan  3 03:32:00.862: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jan  3 03:32:00.862: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jan  3 03:32:00.864: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jan  3 03:32:00.864: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jan  3 03:32:00.864: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jan  3 03:32:00.864: INFO: Checking APIGroup: apiextensions.k8s.io
  Jan  3 03:32:00.866: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jan  3 03:32:00.866: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jan  3 03:32:00.867: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jan  3 03:32:00.867: INFO: Checking APIGroup: scheduling.k8s.io
  Jan  3 03:32:00.869: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jan  3 03:32:00.869: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jan  3 03:32:00.869: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jan  3 03:32:00.869: INFO: Checking APIGroup: coordination.k8s.io
  Jan  3 03:32:00.873: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jan  3 03:32:00.873: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jan  3 03:32:00.873: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jan  3 03:32:00.873: INFO: Checking APIGroup: node.k8s.io
  Jan  3 03:32:00.876: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jan  3 03:32:00.876: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jan  3 03:32:00.876: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jan  3 03:32:00.876: INFO: Checking APIGroup: discovery.k8s.io
  Jan  3 03:32:00.878: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jan  3 03:32:00.879: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jan  3 03:32:00.879: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jan  3 03:32:00.879: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jan  3 03:32:00.881: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jan  3 03:32:00.881: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jan  3 03:32:00.881: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jan  3 03:32:00.881: INFO: Checking APIGroup: crd.projectcalico.org
  Jan  3 03:32:00.883: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Jan  3 03:32:00.883: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Jan  3 03:32:00.883: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Jan  3 03:32:00.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3633" for this suite. @ 01/03/24 03:32:00.892
• [0.919 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/03/24 03:32:00.902
  Jan  3 03:32:00.903: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename namespaces @ 01/03/24 03:32:00.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:00.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:00.95
  STEP: Updating Namespace "namespaces-2142" @ 01/03/24 03:32:00.957
  Jan  3 03:32:00.972: INFO: Namespace "namespaces-2142" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"8d1f4953-5ea5-46af-800a-acc0fe6dada8", "kubernetes.io/metadata.name":"namespaces-2142", "namespaces-2142":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jan  3 03:32:00.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2142" for this suite. @ 01/03/24 03:32:00.978
• [0.087 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 01/03/24 03:32:00.989
  Jan  3 03:32:00.989: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/03/24 03:32:00.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:01.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:01.033
  STEP: create the container to handle the HTTPGet hook request. @ 01/03/24 03:32:01.047
  STEP: create the pod with lifecycle hook @ 01/03/24 03:32:05.093
  STEP: delete the pod with lifecycle hook @ 01/03/24 03:32:09.135
  STEP: check prestop hook @ 01/03/24 03:32:11.161
  Jan  3 03:32:11.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9900" for this suite. @ 01/03/24 03:32:11.183
• [10.203 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/03/24 03:32:11.193
  Jan  3 03:32:11.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replicaset @ 01/03/24 03:32:11.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:11.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:11.23
  Jan  3 03:32:11.259: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan  3 03:32:16.268: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/03/24 03:32:16.268
  STEP: Scaling up "test-rs" replicaset @ 01/03/24 03:32:16.268
  Jan  3 03:32:16.286: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/03/24 03:32:16.286
  Jan  3 03:32:16.316: INFO: observed ReplicaSet test-rs in namespace replicaset-7267 with ReadyReplicas 1, AvailableReplicas 1
  Jan  3 03:32:16.353: INFO: observed ReplicaSet test-rs in namespace replicaset-7267 with ReadyReplicas 1, AvailableReplicas 1
  Jan  3 03:32:16.388: INFO: observed ReplicaSet test-rs in namespace replicaset-7267 with ReadyReplicas 1, AvailableReplicas 1
  Jan  3 03:32:16.410: INFO: observed ReplicaSet test-rs in namespace replicaset-7267 with ReadyReplicas 1, AvailableReplicas 1
  Jan  3 03:32:17.733: INFO: observed ReplicaSet test-rs in namespace replicaset-7267 with ReadyReplicas 2, AvailableReplicas 2
  Jan  3 03:32:18.525: INFO: observed Replicaset test-rs in namespace replicaset-7267 with ReadyReplicas 3 found true
  Jan  3 03:32:18.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7267" for this suite. @ 01/03/24 03:32:18.541
• [7.360 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 01/03/24 03:32:18.553
  Jan  3 03:32:18.553: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubelet-test @ 01/03/24 03:32:18.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:18.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:18.59
  Jan  3 03:32:20.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4856" for this suite. @ 01/03/24 03:32:20.674
• [2.130 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 01/03/24 03:32:20.684
  Jan  3 03:32:20.684: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 03:32:20.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:20.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:20.719
  STEP: create deployment with httpd image @ 01/03/24 03:32:20.727
  Jan  3 03:32:20.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-8155 create -f -'
  Jan  3 03:32:21.023: INFO: stderr: ""
  Jan  3 03:32:21.024: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/03/24 03:32:21.024
  Jan  3 03:32:21.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-8155 diff -f -'
  Jan  3 03:32:21.395: INFO: rc: 1
  Jan  3 03:32:21.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-8155 delete -f -'
  Jan  3 03:32:21.586: INFO: stderr: ""
  Jan  3 03:32:21.586: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jan  3 03:32:21.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8155" for this suite. @ 01/03/24 03:32:21.595
• [0.931 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/03/24 03:32:21.615
  Jan  3 03:32:21.615: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 03:32:21.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:21.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:21.644
  STEP: Create set of pods @ 01/03/24 03:32:21.65
  Jan  3 03:32:21.662: INFO: created test-pod-1
  Jan  3 03:32:21.669: INFO: created test-pod-2
  Jan  3 03:32:21.680: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/03/24 03:32:21.68
  STEP: waiting for all pods to be deleted @ 01/03/24 03:32:25.817
  Jan  3 03:32:25.846: INFO: Pod quantity 3 is different from expected quantity 0
  Jan  3 03:32:26.825: INFO: Pod quantity 3 is different from expected quantity 0
  Jan  3 03:32:27.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4860" for this suite. @ 01/03/24 03:32:27.832
• [6.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/03/24 03:32:27.842
  Jan  3 03:32:27.842: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 03:32:27.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:27.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:27.881
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 03:32:27.889
  STEP: Saw pod success @ 01/03/24 03:32:31.927
  Jan  3 03:32:31.933: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-7b0e359e-8c2d-4ecf-8614-f20078901b13 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 03:32:31.945
  Jan  3 03:32:31.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3579" for this suite. @ 01/03/24 03:32:31.976
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/03/24 03:32:31.987
  Jan  3 03:32:31.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 03:32:31.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:32.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:32.028
  STEP: Creating secret with name secret-test-map-cc459258-6c5d-4b7a-8ef6-4ba99f73db8c @ 01/03/24 03:32:32.036
  STEP: Creating a pod to test consume secrets @ 01/03/24 03:32:32.046
  STEP: Saw pod success @ 01/03/24 03:32:36.088
  Jan  3 03:32:36.094: INFO: Trying to get logs from node 192.168.18.92 pod pod-secrets-3d6a1c6d-a111-415c-8708-e51e87117d34 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 03:32:36.108
  Jan  3 03:32:36.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2787" for this suite. @ 01/03/24 03:32:36.141
• [4.164 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/03/24 03:32:36.15
  Jan  3 03:32:36.150: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 03:32:36.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:36.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:36.178
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 03:32:36.185
  STEP: Saw pod success @ 01/03/24 03:32:40.225
  Jan  3 03:32:40.232: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-2ba7fb1d-617b-4655-b648-e482824ef247 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 03:32:40.249
  Jan  3 03:32:40.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-146" for this suite. @ 01/03/24 03:32:40.28
• [4.139 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/03/24 03:32:40.29
  Jan  3 03:32:40.290: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename gc @ 01/03/24 03:32:40.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:40.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:40.319
  STEP: create the deployment @ 01/03/24 03:32:40.329
  W0103 03:32:40.339240      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/03/24 03:32:40.339
  STEP: delete the deployment @ 01/03/24 03:32:40.455
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/03/24 03:32:40.461
  STEP: Gathering metrics @ 01/03/24 03:32:40.991
  Jan  3 03:32:41.267: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan  3 03:32:41.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3997" for this suite. @ 01/03/24 03:32:41.273
• [0.990 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/03/24 03:32:41.281
  Jan  3 03:32:41.281: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 03:32:41.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:41.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:41.31
  Jan  3 03:32:41.314: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: creating the pod @ 01/03/24 03:32:41.317
  STEP: submitting the pod to kubernetes @ 01/03/24 03:32:41.317
  Jan  3 03:32:43.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7424" for this suite. @ 01/03/24 03:32:43.561
• [2.290 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 01/03/24 03:32:43.572
  Jan  3 03:32:43.572: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/03/24 03:32:43.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:43.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:43.61
  STEP: set up a multi version CRD @ 01/03/24 03:32:43.616
  Jan  3 03:32:43.618: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: mark a version not serverd @ 01/03/24 03:32:48.355
  STEP: check the unserved version gets removed @ 01/03/24 03:32:48.402
  STEP: check the other version is not changed @ 01/03/24 03:32:49.466
  Jan  3 03:32:53.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8687" for this suite. @ 01/03/24 03:32:53.128
• [9.566 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/03/24 03:32:53.138
  Jan  3 03:32:53.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename gc @ 01/03/24 03:32:53.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:53.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:53.175
  STEP: create the deployment @ 01/03/24 03:32:53.185
  W0103 03:32:53.194997      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/03/24 03:32:53.195
  STEP: delete the deployment @ 01/03/24 03:32:53.701
  STEP: wait for all rs to be garbage collected @ 01/03/24 03:32:53.712
  STEP: expected 0 rs, got 1 rs @ 01/03/24 03:32:53.726
  STEP: expected 0 pods, got 2 pods @ 01/03/24 03:32:53.755
  STEP: Gathering metrics @ 01/03/24 03:32:54.226
  Jan  3 03:32:54.387: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan  3 03:32:54.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5714" for this suite. @ 01/03/24 03:32:54.395
• [1.265 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 01/03/24 03:32:54.405
  Jan  3 03:32:54.405: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-pred @ 01/03/24 03:32:54.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:32:54.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:32:54.437
  Jan  3 03:32:54.445: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan  3 03:32:54.459: INFO: Waiting for terminating namespaces to be deleted...
  Jan  3 03:32:54.467: INFO: 
  Logging pods the apiserver thinks is on node 192.168.18.91 before test
  Jan  3 03:32:54.479: INFO: calico-kube-controllers-7ddc4f45bc-svj88 from kube-system started at 2023-12-24 15:52:08 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.479: INFO: 	Container calico-kube-controllers ready: true, restart count 3
  Jan  3 03:32:54.480: INFO: calico-node-drgqp from kube-system started at 2023-12-24 15:52:08 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.480: INFO: 	Container calico-node ready: true, restart count 4
  Jan  3 03:32:54.480: INFO: coredns-76f75df574-6qkhz from kube-system started at 2023-12-24 15:51:48 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.480: INFO: 	Container coredns ready: true, restart count 3
  Jan  3 03:32:54.480: INFO: etcd-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.480: INFO: 	Container etcd ready: true, restart count 4
  Jan  3 03:32:54.480: INFO: kube-apiserver-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.480: INFO: 	Container kube-apiserver ready: true, restart count 0
  Jan  3 03:32:54.480: INFO: kube-controller-manager-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.480: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Jan  3 03:32:54.480: INFO: kube-proxy-96snq from kube-system started at 2023-12-24 15:51:47 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.480: INFO: 	Container kube-proxy ready: true, restart count 4
  Jan  3 03:32:54.480: INFO: kube-scheduler-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.480: INFO: 	Container kube-scheduler ready: true, restart count 0
  Jan  3 03:32:54.480: INFO: sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-l24d8 from sonobuoy started at 2024-01-03 03:26:22 +0000 UTC (2 container statuses recorded)
  Jan  3 03:32:54.480: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 03:32:54.480: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan  3 03:32:54.480: INFO: 
  Logging pods the apiserver thinks is on node 192.168.18.92 before test
  Jan  3 03:32:54.492: INFO: calico-node-cdwkb from kube-system started at 2023-12-24 15:53:04 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.492: INFO: 	Container calico-node ready: true, restart count 3
  Jan  3 03:32:54.492: INFO: kube-proxy-95zdw from kube-system started at 2023-12-24 15:53:04 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.492: INFO: 	Container kube-proxy ready: true, restart count 3
  Jan  3 03:32:54.492: INFO: busybox-scheduling-77708fa7-4928-49dd-9479-ea167e0af4b9 from kubelet-test-4856 started at 2024-01-03 03:32:18 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.492: INFO: 	Container busybox-scheduling-77708fa7-4928-49dd-9479-ea167e0af4b9 ready: true, restart count 0
  Jan  3 03:32:54.492: INFO: pod-exec-websocket-e50204be-f822-4d6e-98d1-4ddf7b6547d0 from pods-7424 started at 2024-01-03 03:32:41 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.492: INFO: 	Container main ready: true, restart count 0
  Jan  3 03:32:54.492: INFO: sonobuoy from sonobuoy started at 2024-01-03 03:26:21 +0000 UTC (1 container statuses recorded)
  Jan  3 03:32:54.492: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan  3 03:32:54.492: INFO: sonobuoy-e2e-job-4b415b506d534fb8 from sonobuoy started at 2024-01-03 03:26:23 +0000 UTC (2 container statuses recorded)
  Jan  3 03:32:54.492: INFO: 	Container e2e ready: true, restart count 0
  Jan  3 03:32:54.493: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 03:32:54.493: INFO: sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-gswct from sonobuoy started at 2024-01-03 03:26:23 +0000 UTC (2 container statuses recorded)
  Jan  3 03:32:54.493: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 03:32:54.493: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/03/24 03:32:54.493
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/03/24 03:32:56.531
  STEP: Trying to apply a random label on the found node. @ 01/03/24 03:32:56.558
  STEP: verifying the node has the label kubernetes.io/e2e-0d2b67eb-d530-414f-bbe1-d38060ad1d77 95 @ 01/03/24 03:32:56.579
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/03/24 03:32:56.587
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.18.92 on the node which pod4 resides and expect not scheduled @ 01/03/24 03:33:00.623
  STEP: removing the label kubernetes.io/e2e-0d2b67eb-d530-414f-bbe1-d38060ad1d77 off the node 192.168.18.92 @ 01/03/24 03:38:00.642
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-0d2b67eb-d530-414f-bbe1-d38060ad1d77 @ 01/03/24 03:38:00.67
  Jan  3 03:38:00.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8250" for this suite. @ 01/03/24 03:38:00.684
• [306.289 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/03/24 03:38:00.694
  Jan  3 03:38:00.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 03:38:00.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:38:00.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:38:00.73
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 03:38:00.736
  STEP: Saw pod success @ 01/03/24 03:38:04.772
  Jan  3 03:38:04.777: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-40ceb897-3ed9-45ec-a9a6-42e8f054c345 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 03:38:04.818
  Jan  3 03:38:04.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7027" for this suite. @ 01/03/24 03:38:04.849
• [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/03/24 03:38:04.866
  Jan  3 03:38:04.866: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 03:38:04.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:38:04.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:38:04.899
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 03:38:04.906
  STEP: Saw pod success @ 01/03/24 03:38:08.951
  Jan  3 03:38:08.956: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-d4fac6dd-b144-47d8-b084-c69e54092368 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 03:38:08.971
  Jan  3 03:38:08.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7649" for this suite. @ 01/03/24 03:38:09.008
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/03/24 03:38:09.028
  Jan  3 03:38:09.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename runtimeclass @ 01/03/24 03:38:09.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:38:09.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:38:09.07
  STEP: getting /apis @ 01/03/24 03:38:09.078
  STEP: getting /apis/node.k8s.io @ 01/03/24 03:38:09.091
  STEP: getting /apis/node.k8s.io/v1 @ 01/03/24 03:38:09.094
  STEP: creating @ 01/03/24 03:38:09.097
  STEP: watching @ 01/03/24 03:38:09.121
  Jan  3 03:38:09.121: INFO: starting watch
  STEP: getting @ 01/03/24 03:38:09.132
  STEP: listing @ 01/03/24 03:38:09.137
  STEP: patching @ 01/03/24 03:38:09.144
  STEP: updating @ 01/03/24 03:38:09.155
  Jan  3 03:38:09.167: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 01/03/24 03:38:09.167
  STEP: deleting a collection @ 01/03/24 03:38:09.197
  Jan  3 03:38:09.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7950" for this suite. @ 01/03/24 03:38:09.253
• [0.256 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/03/24 03:38:09.28
  Jan  3 03:38:09.280: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-runtime @ 01/03/24 03:38:09.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:38:09.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:38:09.323
  STEP: create the container @ 01/03/24 03:38:09.329
  W0103 03:38:09.338614      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/03/24 03:38:09.338
  STEP: get the container status @ 01/03/24 03:38:13.376
  STEP: the container should be terminated @ 01/03/24 03:38:13.382
  STEP: the termination message should be set @ 01/03/24 03:38:13.382
  Jan  3 03:38:13.382: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/03/24 03:38:13.382
  Jan  3 03:38:13.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6111" for this suite. @ 01/03/24 03:38:13.41
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/03/24 03:38:13.421
  Jan  3 03:38:13.421: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename watch @ 01/03/24 03:38:13.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:38:13.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:38:13.453
  STEP: creating a watch on configmaps with a certain label @ 01/03/24 03:38:13.46
  STEP: creating a new configmap @ 01/03/24 03:38:13.463
  STEP: modifying the configmap once @ 01/03/24 03:38:13.469
  STEP: changing the label value of the configmap @ 01/03/24 03:38:13.48
  STEP: Expecting to observe a delete notification for the watched object @ 01/03/24 03:38:13.492
  Jan  3 03:38:13.492: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2700  daa0fb16-d3df-4cda-8a44-526b950980e9 89578 0 2024-01-03 03:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-03 03:38:12 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:38:13.493: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2700  daa0fb16-d3df-4cda-8a44-526b950980e9 89579 0 2024-01-03 03:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-03 03:38:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:38:13.493: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2700  daa0fb16-d3df-4cda-8a44-526b950980e9 89580 0 2024-01-03 03:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-03 03:38:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/03/24 03:38:13.493
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/03/24 03:38:13.505
  STEP: changing the label value of the configmap back @ 01/03/24 03:38:23.506
  STEP: modifying the configmap a third time @ 01/03/24 03:38:23.522
  STEP: deleting the configmap @ 01/03/24 03:38:23.535
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/03/24 03:38:23.543
  Jan  3 03:38:23.543: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2700  daa0fb16-d3df-4cda-8a44-526b950980e9 89616 0 2024-01-03 03:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-03 03:38:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:38:23.544: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2700  daa0fb16-d3df-4cda-8a44-526b950980e9 89617 0 2024-01-03 03:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-03 03:38:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:38:23.544: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2700  daa0fb16-d3df-4cda-8a44-526b950980e9 89618 0 2024-01-03 03:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-03 03:38:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:38:23.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2700" for this suite. @ 01/03/24 03:38:23.554
• [10.141 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 01/03/24 03:38:23.563
  Jan  3 03:38:23.563: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename statefulset @ 01/03/24 03:38:23.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:38:23.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:38:23.599
  STEP: Creating service test in namespace statefulset-8784 @ 01/03/24 03:38:23.607
  STEP: Creating a new StatefulSet @ 01/03/24 03:38:23.616
  Jan  3 03:38:23.635: INFO: Found 0 stateful pods, waiting for 3
  Jan  3 03:38:33.646: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 03:38:33.646: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 03:38:33.646: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 03:38:33.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8784 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 03:38:34.008: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 03:38:34.008: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 03:38:34.008: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/03/24 03:38:44.029
  Jan  3 03:38:44.064: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 01/03/24 03:38:44.066
  STEP: Updating Pods in reverse ordinal order @ 01/03/24 03:38:54.085
  Jan  3 03:38:54.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8784 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 03:38:54.396: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan  3 03:38:54.396: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan  3 03:38:54.396: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 01/03/24 03:39:04.427
  Jan  3 03:39:04.427: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8784 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 03:39:04.744: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 03:39:04.744: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 03:39:04.744: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan  3 03:39:14.793: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 01/03/24 03:39:24.816
  Jan  3 03:39:24.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8784 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 03:39:25.144: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan  3 03:39:25.144: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan  3 03:39:25.144: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan  3 03:39:35.175: INFO: Deleting all statefulset in ns statefulset-8784
  Jan  3 03:39:35.181: INFO: Scaling statefulset ss2 to 0
  Jan  3 03:39:45.205: INFO: Waiting for statefulset status.replicas updated to 0
  Jan  3 03:39:45.210: INFO: Deleting statefulset ss2
  Jan  3 03:39:45.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8784" for this suite. @ 01/03/24 03:39:45.239
• [81.688 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/03/24 03:39:45.251
  Jan  3 03:39:45.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 03:39:45.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:39:45.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:39:45.293
  STEP: Creating secret with name s-test-opt-del-eb54b9bb-dafe-4133-a097-a4d1a4db8e81 @ 01/03/24 03:39:45.309
  STEP: Creating secret with name s-test-opt-upd-ca787505-3ce2-4c0f-a693-2d205ec33ccc @ 01/03/24 03:39:45.317
  STEP: Creating the pod @ 01/03/24 03:39:45.325
  STEP: Deleting secret s-test-opt-del-eb54b9bb-dafe-4133-a097-a4d1a4db8e81 @ 01/03/24 03:39:47.432
  STEP: Updating secret s-test-opt-upd-ca787505-3ce2-4c0f-a693-2d205ec33ccc @ 01/03/24 03:39:47.444
  STEP: Creating secret with name s-test-opt-create-81caa4e1-1266-4aa0-a727-976506cb9a22 @ 01/03/24 03:39:47.454
  STEP: waiting to observe update in volume @ 01/03/24 03:39:47.461
  Jan  3 03:39:49.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8317" for this suite. @ 01/03/24 03:39:49.528
• [4.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 01/03/24 03:39:49.54
  Jan  3 03:39:49.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 03:39:49.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:39:49.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:39:49.571
  STEP: Creating projection with secret that has name secret-emptykey-test-192c1412-fbd4-41ed-8d3a-007da6ce28dc @ 01/03/24 03:39:49.578
  Jan  3 03:39:49.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9342" for this suite. @ 01/03/24 03:39:49.59
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/03/24 03:39:49.599
  Jan  3 03:39:49.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/03/24 03:39:49.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:39:49.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:39:49.626
  STEP: mirroring a new custom Endpoint @ 01/03/24 03:39:49.65
  Jan  3 03:39:49.667: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 01/03/24 03:39:51.675
  Jan  3 03:39:51.688: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 01/03/24 03:39:53.696
  Jan  3 03:39:53.715: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Jan  3 03:39:55.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6927" for this suite. @ 01/03/24 03:39:55.732
• [6.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 01/03/24 03:39:55.742
  Jan  3 03:39:55.742: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/03/24 03:39:55.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:39:55.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:39:55.776
  Jan  3 03:39:55.790: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/03/24 03:39:57.541
  Jan  3 03:39:57.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-9113 --namespace=crd-publish-openapi-9113 create -f -'
  Jan  3 03:39:57.791: INFO: stderr: ""
  Jan  3 03:39:57.791: INFO: stdout: "e2e-test-crd-publish-openapi-8921-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jan  3 03:39:57.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-9113 --namespace=crd-publish-openapi-9113 delete e2e-test-crd-publish-openapi-8921-crds test-cr'
  Jan  3 03:39:57.956: INFO: stderr: ""
  Jan  3 03:39:57.956: INFO: stdout: "e2e-test-crd-publish-openapi-8921-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jan  3 03:39:57.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-9113 --namespace=crd-publish-openapi-9113 apply -f -'
  Jan  3 03:39:58.130: INFO: stderr: ""
  Jan  3 03:39:58.130: INFO: stdout: "e2e-test-crd-publish-openapi-8921-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jan  3 03:39:58.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-9113 --namespace=crd-publish-openapi-9113 delete e2e-test-crd-publish-openapi-8921-crds test-cr'
  Jan  3 03:39:58.297: INFO: stderr: ""
  Jan  3 03:39:58.297: INFO: stdout: "e2e-test-crd-publish-openapi-8921-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/03/24 03:39:58.297
  Jan  3 03:39:58.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-9113 explain e2e-test-crd-publish-openapi-8921-crds'
  Jan  3 03:39:58.482: INFO: stderr: ""
  Jan  3 03:39:58.482: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8921-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jan  3 03:40:00.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9113" for this suite. @ 01/03/24 03:40:00.163
• [4.432 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/03/24 03:40:00.179
  Jan  3 03:40:00.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 03:40:00.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:40:00.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:40:00.22
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/03/24 03:40:00.228
  STEP: Saw pod success @ 01/03/24 03:40:04.27
  Jan  3 03:40:04.275: INFO: Trying to get logs from node 192.168.18.92 pod pod-3b9f6348-e736-4db9-a315-8c6862d876c8 container test-container: <nil>
  STEP: delete the pod @ 01/03/24 03:40:04.288
  Jan  3 03:40:04.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9034" for this suite. @ 01/03/24 03:40:04.313
• [4.143 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 01/03/24 03:40:04.322
  Jan  3 03:40:04.322: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-preemption @ 01/03/24 03:40:04.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:40:04.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:40:04.356
  Jan  3 03:40:04.384: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan  3 03:41:04.397: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/03/24 03:41:04.403
  Jan  3 03:41:04.450: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jan  3 03:41:04.461: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jan  3 03:41:04.514: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jan  3 03:41:04.528: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/03/24 03:41:04.529
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/03/24 03:41:06.568
  Jan  3 03:41:12.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6417" for this suite. @ 01/03/24 03:41:12.709
• [68.396 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 01/03/24 03:41:12.718
  Jan  3 03:41:12.719: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/03/24 03:41:12.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:41:12.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:41:12.746
  STEP: set up a multi version CRD @ 01/03/24 03:41:12.753
  Jan  3 03:41:12.754: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: rename a version @ 01/03/24 03:41:17.362
  STEP: check the new version name is served @ 01/03/24 03:41:17.395
  STEP: check the old version name is removed @ 01/03/24 03:41:18.508
  STEP: check the other version is not changed @ 01/03/24 03:41:19.381
  Jan  3 03:41:22.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6437" for this suite. @ 01/03/24 03:41:23.003
• [10.293 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 01/03/24 03:41:23.012
  Jan  3 03:41:23.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 03:41:23.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:41:23.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:41:23.041
  STEP: Setting up server cert @ 01/03/24 03:41:23.074
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 03:41:24.074
  STEP: Deploying the webhook pod @ 01/03/24 03:41:24.091
  STEP: Wait for the deployment to be ready @ 01/03/24 03:41:24.109
  Jan  3 03:41:24.118: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/03/24 03:41:26.138
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 03:41:26.153
  Jan  3 03:41:27.154: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan  3 03:41:27.167: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7963-crds.webhook.example.com via the AdmissionRegistration API @ 01/03/24 03:41:27.695
  STEP: Creating a custom resource while v1 is storage version @ 01/03/24 03:41:27.732
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/03/24 03:41:29.832
  STEP: Patching the custom resource while v2 is storage version @ 01/03/24 03:41:29.868
  Jan  3 03:41:30.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3355" for this suite. @ 01/03/24 03:41:30.568
  STEP: Destroying namespace "webhook-markers-6240" for this suite. @ 01/03/24 03:41:30.578
• [7.579 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/03/24 03:41:30.592
  Jan  3 03:41:30.592: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename cronjob @ 01/03/24 03:41:30.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:41:30.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:41:30.624
  STEP: Creating a suspended cronjob @ 01/03/24 03:41:30.632
  STEP: Ensuring no jobs are scheduled @ 01/03/24 03:41:30.643
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/03/24 03:46:30.659
  STEP: Removing cronjob @ 01/03/24 03:46:30.665
  Jan  3 03:46:30.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6850" for this suite. @ 01/03/24 03:46:30.685
• [300.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/03/24 03:46:30.696
  Jan  3 03:46:30.696: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replication-controller @ 01/03/24 03:46:30.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:46:30.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:46:30.733
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/03/24 03:46:30.741
  STEP: When a replication controller with a matching selector is created @ 01/03/24 03:46:34.79
  STEP: Then the orphan pod is adopted @ 01/03/24 03:46:34.801
  Jan  3 03:46:35.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7498" for this suite. @ 01/03/24 03:46:35.824
• [5.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 01/03/24 03:46:35.835
  Jan  3 03:46:35.835: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 03:46:35.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:46:35.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:46:35.865
  Jan  3 03:47:35.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6330" for this suite. @ 01/03/24 03:47:35.903
• [60.078 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/03/24 03:47:35.913
  Jan  3 03:47:35.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 03:47:35.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:47:35.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:47:35.942
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 03:47:35.95
  STEP: Saw pod success @ 01/03/24 03:47:39.989
  Jan  3 03:47:39.995: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-ec40f685-eaf7-43e2-93dc-b4fb1083dd9b container client-container: <nil>
  STEP: delete the pod @ 01/03/24 03:47:40.031
  Jan  3 03:47:40.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4903" for this suite. @ 01/03/24 03:47:40.057
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/03/24 03:47:40.066
  Jan  3 03:47:40.066: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename deployment @ 01/03/24 03:47:40.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:47:40.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:47:40.095
  Jan  3 03:47:40.101: INFO: Creating deployment "test-recreate-deployment"
  Jan  3 03:47:40.110: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jan  3 03:47:40.119: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Jan  3 03:47:42.135: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jan  3 03:47:42.141: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 3, 47, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 3, 47, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 3, 47, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 3, 47, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-dd4bc9d6d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 03:47:44.148: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jan  3 03:47:44.166: INFO: Updating deployment test-recreate-deployment
  Jan  3 03:47:44.166: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jan  3 03:47:44.292: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5255",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "743199b5-ec31-4399-abfb-27be64421826",
      ResourceVersion: (string) (len=5) "91453",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839850459,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan  3 03:47:44.303: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5255",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92dc4fec-2936-49cb-9952-9fb456469b03",
      ResourceVersion: (string) (len=5) "91450",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839850463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "743199b5-ec31-4399-abfb-27be64421826",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 34 33 31 39 39  62 35 2d 65 63 33 31 2d  |\"743199b5-ec31-|
              00000120  34 33 39 39 2d 61 62 66  62 2d 32 37 62 65 36 34  |4399-abfb-27be64|
              00000130  34 32 31 38 32 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |421826\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 03:47:44.306: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jan  3 03:47:44.307: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5255",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c91a2762-8850-4cb6-a1f3-138523373bf8",
      ResourceVersion: (string) (len=5) "91442",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839850459,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "743199b5-ec31-4399-abfb-27be64421826",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 34 33 31 39 39  62 35 2d 65 63 33 31 2d  |\"743199b5-ec31-|
              00000120  34 33 39 39 2d 61 62 66  62 2d 32 37 62 65 36 34  |4399-abfb-27be64|
              00000130  34 32 31 38 32 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |421826\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 03:47:44.316: INFO: Pod "test-recreate-deployment-76fb77d45-925mh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-925mh",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-5255",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b116166-1cde-4028-b019-3d80b10150ae",
      ResourceVersion: (string) (len=5) "91454",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839850463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "92dc4fec-2936-49cb-9952-9fb456469b03",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 63 34 66 65 63 2d 32  |d\":\"92dc4fec-2|
              00000090  39 33 36 2d 34 39 63 62  2d 39 39 35 32 2d 39 66  |936-49cb-9952-9f|
              000000a0  62 34 35 36 34 36 39 62  30 33 5c 22 7d 22 3a 7b  |b456469b03\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tpsc5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tpsc5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839850463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839850464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 03:47:44.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5255" for this suite. @ 01/03/24 03:47:44.329
• [4.270 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 01/03/24 03:47:44.337
  Jan  3 03:47:44.337: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 03:47:44.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:47:44.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:47:44.363
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9246 @ 01/03/24 03:47:44.371
  STEP: changing the ExternalName service to type=ClusterIP @ 01/03/24 03:47:44.378
  STEP: creating replication controller externalname-service in namespace services-9246 @ 01/03/24 03:47:44.464
  I0103 03:47:44.475767      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9246, replica count: 2
  I0103 03:47:47.528042      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan  3 03:47:47.528: INFO: Creating new exec pod
  Jan  3 03:47:50.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-9246 exec execpod5bn49 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jan  3 03:47:50.921: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jan  3 03:47:50.921: INFO: stdout: "externalname-service-r4kkd"
  Jan  3 03:47:50.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-9246 exec execpod5bn49 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.66.97 80'
  Jan  3 03:47:51.221: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.66.97 80\nConnection to 169.169.66.97 80 port [tcp/http] succeeded!\n"
  Jan  3 03:47:51.221: INFO: stdout: ""
  Jan  3 03:47:51.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-9246 exec execpod5bn49 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.66.97 80'
  Jan  3 03:47:52.253: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.66.97 80\nConnection to 169.169.66.97 80 port [tcp/http] succeeded!\n"
  Jan  3 03:47:52.253: INFO: stdout: ""
  Jan  3 03:47:52.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-9246 exec execpod5bn49 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.66.97 80'
  Jan  3 03:47:53.250: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.66.97 80\nConnection to 169.169.66.97 80 port [tcp/http] succeeded!\n"
  Jan  3 03:47:53.250: INFO: stdout: "externalname-service-r4kkd"
  Jan  3 03:47:53.250: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jan  3 03:47:53.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9246" for this suite. @ 01/03/24 03:47:53.287
• [8.962 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/03/24 03:47:53.299
  Jan  3 03:47:53.299: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/03/24 03:47:53.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:47:53.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:47:53.336
  STEP: Creating two CSIDrivers @ 01/03/24 03:47:53.343
  STEP: Getting "inline-driver-0421169d-18c0-4db3-a115-08dd51ba7fc2" & "inline-driver-2f1c5ce8-abba-46fa-ad71-d4580427145d" @ 01/03/24 03:47:53.366
  STEP: Patching the CSIDriver "inline-driver-2f1c5ce8-abba-46fa-ad71-d4580427145d" @ 01/03/24 03:47:53.375
  STEP: Updating the CSIDriver "inline-driver-2f1c5ce8-abba-46fa-ad71-d4580427145d" @ 01/03/24 03:47:53.386
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2456" @ 01/03/24 03:47:53.398
  STEP: Deleting CSIDriver "inline-driver-0421169d-18c0-4db3-a115-08dd51ba7fc2" @ 01/03/24 03:47:53.403
  STEP: Confirm deletion of CSIDriver "inline-driver-0421169d-18c0-4db3-a115-08dd51ba7fc2" @ 01/03/24 03:47:53.412
  STEP: Deleting CSIDriver "inline-driver-2f1c5ce8-abba-46fa-ad71-d4580427145d" via DeleteCollection @ 01/03/24 03:47:53.419
  STEP: Confirm deletion of CSIDriver "inline-driver-2f1c5ce8-abba-46fa-ad71-d4580427145d" @ 01/03/24 03:47:53.429
  Jan  3 03:47:53.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2456" for this suite. @ 01/03/24 03:47:53.441
• [0.150 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 01/03/24 03:47:53.45
  Jan  3 03:47:53.450: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 03:47:53.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:47:53.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:47:53.477
  STEP: creating service endpoint-test2 in namespace services-3506 @ 01/03/24 03:47:53.484
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3506 to expose endpoints map[] @ 01/03/24 03:47:53.498
  Jan  3 03:47:53.521: INFO: successfully validated that service endpoint-test2 in namespace services-3506 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3506 @ 01/03/24 03:47:53.521
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3506 to expose endpoints map[pod1:[80]] @ 01/03/24 03:47:55.559
  Jan  3 03:47:55.581: INFO: successfully validated that service endpoint-test2 in namespace services-3506 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/03/24 03:47:55.581
  Jan  3 03:47:55.581: INFO: Creating new exec pod
  Jan  3 03:47:58.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3506 exec execpodpn4hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jan  3 03:47:58.953: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jan  3 03:47:58.953: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 03:47:58.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3506 exec execpodpn4hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.59.119 80'
  Jan  3 03:47:59.227: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.59.119 80\nConnection to 169.169.59.119 80 port [tcp/http] succeeded!\n"
  Jan  3 03:47:59.227: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3506 @ 01/03/24 03:47:59.227
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3506 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/03/24 03:48:01.263
  Jan  3 03:48:01.286: INFO: successfully validated that service endpoint-test2 in namespace services-3506 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/03/24 03:48:01.286
  Jan  3 03:48:02.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3506 exec execpodpn4hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jan  3 03:48:02.575: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jan  3 03:48:02.575: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 03:48:02.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3506 exec execpodpn4hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.59.119 80'
  Jan  3 03:48:02.847: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.59.119 80\nConnection to 169.169.59.119 80 port [tcp/http] succeeded!\n"
  Jan  3 03:48:02.847: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3506 @ 01/03/24 03:48:02.847
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3506 to expose endpoints map[pod2:[80]] @ 01/03/24 03:48:02.876
  Jan  3 03:48:02.904: INFO: successfully validated that service endpoint-test2 in namespace services-3506 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/03/24 03:48:02.905
  Jan  3 03:48:03.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3506 exec execpodpn4hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jan  3 03:48:04.232: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jan  3 03:48:04.232: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 03:48:04.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3506 exec execpodpn4hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.59.119 80'
  Jan  3 03:48:04.569: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.59.119 80\nConnection to 169.169.59.119 80 port [tcp/http] succeeded!\n"
  Jan  3 03:48:04.569: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3506 @ 01/03/24 03:48:04.569
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3506 to expose endpoints map[] @ 01/03/24 03:48:04.599
  Jan  3 03:48:05.650: INFO: successfully validated that service endpoint-test2 in namespace services-3506 exposes endpoints map[]
  Jan  3 03:48:05.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3506" for this suite. @ 01/03/24 03:48:05.688
• [12.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/03/24 03:48:05.701
  Jan  3 03:48:05.701: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 03:48:05.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:48:05.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:48:05.731
  STEP: Creating configMap with name cm-test-opt-del-abd0bc54-114e-4eca-8a8b-f433e34f0091 @ 01/03/24 03:48:05.744
  STEP: Creating configMap with name cm-test-opt-upd-2d38d9cd-aff0-47f0-8996-982a417fb41c @ 01/03/24 03:48:05.75
  STEP: Creating the pod @ 01/03/24 03:48:05.756
  STEP: Deleting configmap cm-test-opt-del-abd0bc54-114e-4eca-8a8b-f433e34f0091 @ 01/03/24 03:48:07.832
  STEP: Updating configmap cm-test-opt-upd-2d38d9cd-aff0-47f0-8996-982a417fb41c @ 01/03/24 03:48:07.841
  STEP: Creating configMap with name cm-test-opt-create-56b3b0d3-4ee0-4846-a157-e0bc751baf1d @ 01/03/24 03:48:07.851
  STEP: waiting to observe update in volume @ 01/03/24 03:48:07.859
  Jan  3 03:48:09.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4590" for this suite. @ 01/03/24 03:48:09.923
• [4.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/03/24 03:48:09.936
  Jan  3 03:48:09.936: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 03:48:09.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:48:09.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:48:09.973
  STEP: Creating secret with name projected-secret-test-7300e06a-12b8-4502-be74-b2751830ff7d @ 01/03/24 03:48:09.981
  STEP: Creating a pod to test consume secrets @ 01/03/24 03:48:09.992
  STEP: Saw pod success @ 01/03/24 03:48:14.037
  Jan  3 03:48:14.044: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-secrets-eaeea31d-1ad0-475e-99dc-9148340724ef container secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 03:48:14.059
  Jan  3 03:48:14.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6344" for this suite. @ 01/03/24 03:48:14.106
• [4.179 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 01/03/24 03:48:14.116
  Jan  3 03:48:14.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename dns @ 01/03/24 03:48:14.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:48:14.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:48:14.146
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8505.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8505.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 01/03/24 03:48:14.155
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8505.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8505.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/03/24 03:48:14.155
  STEP: creating a pod to probe /etc/hosts @ 01/03/24 03:48:14.155
  STEP: submitting the pod to kubernetes @ 01/03/24 03:48:14.155
  STEP: retrieving the pod @ 01/03/24 03:48:18.198
  STEP: looking for the results for each expected name from probers @ 01/03/24 03:48:18.203
  Jan  3 03:48:18.234: INFO: DNS probes using dns-8505/dns-test-735af0c2-bd67-40f6-9514-81e41de69040 succeeded

  STEP: deleting the pod @ 01/03/24 03:48:18.234
  Jan  3 03:48:18.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8505" for this suite. @ 01/03/24 03:48:18.263
• [4.156 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/03/24 03:48:18.272
  Jan  3 03:48:18.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 03:48:18.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:48:18.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:48:18.314
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 03:48:18.322
  STEP: Saw pod success @ 01/03/24 03:48:22.37
  Jan  3 03:48:22.377: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-775eac15-d801-4c00-9c6c-f949fac29663 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 03:48:22.39
  Jan  3 03:48:22.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-643" for this suite. @ 01/03/24 03:48:22.423
• [4.160 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 01/03/24 03:48:22.433
  Jan  3 03:48:22.433: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 03:48:22.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:48:22.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:48:22.464
  STEP: Setting up server cert @ 01/03/24 03:48:22.503
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 03:48:22.8
  STEP: Deploying the webhook pod @ 01/03/24 03:48:22.814
  STEP: Wait for the deployment to be ready @ 01/03/24 03:48:22.832
  Jan  3 03:48:22.846: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/03/24 03:48:24.864
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 03:48:24.892
  Jan  3 03:48:25.893: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/03/24 03:48:26.032
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/03/24 03:48:26.099
  STEP: Deleting the collection of validation webhooks @ 01/03/24 03:48:26.139
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/03/24 03:48:26.184
  Jan  3 03:48:26.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9994" for this suite. @ 01/03/24 03:48:26.247
  STEP: Destroying namespace "webhook-markers-2472" for this suite. @ 01/03/24 03:48:26.257
• [3.837 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 01/03/24 03:48:26.271
  Jan  3 03:48:26.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-preemption @ 01/03/24 03:48:26.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:48:26.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:48:26.319
  Jan  3 03:48:26.344: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan  3 03:49:26.358: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/03/24 03:49:26.366
  Jan  3 03:49:26.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/03/24 03:49:26.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:49:26.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:49:26.419
  STEP: Finding an available node @ 01/03/24 03:49:26.426
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/03/24 03:49:26.426
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/03/24 03:49:28.46
  Jan  3 03:49:28.478: INFO: found a healthy node: 192.168.18.92
  Jan  3 03:49:34.625: INFO: pods created so far: [1 1 1]
  Jan  3 03:49:34.625: INFO: length of pods created so far: 3
  Jan  3 03:49:36.647: INFO: pods created so far: [2 2 1]
  Jan  3 03:49:43.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4720" for this suite. @ 01/03/24 03:49:43.78
  Jan  3 03:49:43.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5224" for this suite. @ 01/03/24 03:49:43.801
• [77.540 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 01/03/24 03:49:43.811
  Jan  3 03:49:43.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename daemonsets @ 01/03/24 03:49:43.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:49:43.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:49:43.843
  STEP: Creating simple DaemonSet "daemon-set" @ 01/03/24 03:49:43.884
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/03/24 03:49:43.895
  Jan  3 03:49:43.917: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:49:43.917: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 03:49:44.916: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:49:44.916: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 03:49:45.916: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 03:49:45.916: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 03:49:46.914: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan  3 03:49:46.914: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/03/24 03:49:46.92
  STEP: DeleteCollection of the DaemonSets @ 01/03/24 03:49:46.926
  STEP: Verify that ReplicaSets have been deleted @ 01/03/24 03:49:46.937
  Jan  3 03:49:46.962: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"92286"},"items":null}

  Jan  3 03:49:46.973: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"92286"},"items":[{"metadata":{"name":"daemon-set-5b2c7","generateName":"daemon-set-","namespace":"daemonsets-9602","uid":"9b9f77f8-4491-4521-9138-ba4202d9e11e","resourceVersion":"92280","creationTimestamp":"2024-01-03T03:49:43Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"a88d844e67569bce33d8f3cef9060d6b1ebb4c527fb17a4134a5ffffba3a7f5f","cni.projectcalico.org/podIP":"10.1.213.73/32","cni.projectcalico.org/podIPs":"10.1.213.73/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"6803fa40-b632-4b2b-93e0-3520c976ba60","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-01-03T03:49:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6803fa40-b632-4b2b-93e0-3520c976ba60\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-01-03T03:49:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-01-03T03:49:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.213.73\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rgv2w","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rgv2w","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"192.168.18.91","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["192.168.18.91"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:43Z"}],"hostIP":"192.168.18.91","hostIPs":[{"ip":"192.168.18.91"}],"podIP":"10.1.213.73","podIPs":[{"ip":"10.1.213.73"}],"startTime":"2024-01-03T03:49:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-01-03T03:49:44Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://38958a0f4fd0bee5a7be0697f3907f8850db063ac6a2e02ae7ca6fa4900146bb","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-8plkz","generateName":"daemon-set-","namespace":"daemonsets-9602","uid":"d5a2c824-28e1-4e88-aa59-4d754c803fec","resourceVersion":"92282","creationTimestamp":"2024-01-03T03:49:43Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"886919df6bb8ff819d71f88f34a39d123fc8c49c16e82347fd469983fb4746d3","cni.projectcalico.org/podIP":"10.1.155.13/32","cni.projectcalico.org/podIPs":"10.1.155.13/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"6803fa40-b632-4b2b-93e0-3520c976ba60","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-01-03T03:49:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6803fa40-b632-4b2b-93e0-3520c976ba60\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-01-03T03:49:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-01-03T03:49:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.155.13\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5zhg5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5zhg5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"192.168.18.92","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["192.168.18.92"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:46Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-03T03:49:43Z"}],"hostIP":"192.168.18.92","hostIPs":[{"ip":"192.168.18.92"}],"podIP":"10.1.155.13","podIPs":[{"ip":"10.1.155.13"}],"startTime":"2024-01-03T03:49:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-01-03T03:49:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://866d97aa144108b980e2e59f13de8e9dafd399a9f49a393f90f361c38a7db675","started":true}],"qosClass":"BestEffort"}}]}

  Jan  3 03:49:47.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9602" for this suite. @ 01/03/24 03:49:47.006
• [3.206 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 01/03/24 03:49:47.017
  Jan  3 03:49:47.017: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 03:49:47.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:49:47.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:49:47.054
  STEP: creating Agnhost RC @ 01/03/24 03:49:47.062
  Jan  3 03:49:47.062: INFO: namespace kubectl-5760
  Jan  3 03:49:47.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5760 create -f -'
  Jan  3 03:49:47.422: INFO: stderr: ""
  Jan  3 03:49:47.422: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/03/24 03:49:47.422
  Jan  3 03:49:48.431: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 03:49:48.431: INFO: Found 0 / 1
  Jan  3 03:49:49.427: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 03:49:49.427: INFO: Found 1 / 1
  Jan  3 03:49:49.427: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jan  3 03:49:49.431: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 03:49:49.431: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan  3 03:49:49.431: INFO: wait on agnhost-primary startup in kubectl-5760 
  Jan  3 03:49:49.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5760 logs agnhost-primary-mtb6x agnhost-primary'
  Jan  3 03:49:49.572: INFO: stderr: ""
  Jan  3 03:49:49.572: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 01/03/24 03:49:49.572
  Jan  3 03:49:49.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5760 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jan  3 03:49:49.733: INFO: stderr: ""
  Jan  3 03:49:49.733: INFO: stdout: "service/rm2 exposed\n"
  Jan  3 03:49:49.746: INFO: Service rm2 in namespace kubectl-5760 found.
  STEP: exposing service @ 01/03/24 03:49:51.759
  Jan  3 03:49:51.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-5760 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jan  3 03:49:51.962: INFO: stderr: ""
  Jan  3 03:49:51.963: INFO: stdout: "service/rm3 exposed\n"
  Jan  3 03:49:51.972: INFO: Service rm3 in namespace kubectl-5760 found.
  Jan  3 03:49:53.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5760" for this suite. @ 01/03/24 03:49:53.993
• [6.985 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 01/03/24 03:49:54.002
  Jan  3 03:49:54.002: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename containers @ 01/03/24 03:49:54.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:49:54.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:49:54.034
  STEP: Creating a pod to test override command @ 01/03/24 03:49:54.041
  STEP: Saw pod success @ 01/03/24 03:49:58.08
  Jan  3 03:49:58.086: INFO: Trying to get logs from node 192.168.18.92 pod client-containers-0bbc1359-b8d1-403b-b52b-3dd2ce771fac container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 03:49:58.099
  Jan  3 03:49:58.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4526" for this suite. @ 01/03/24 03:49:58.134
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/03/24 03:49:58.142
  Jan  3 03:49:58.142: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 03:49:58.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:49:58.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:49:58.175
  STEP: Creating configMap with name projected-configmap-test-volume-444c71d3-a9ac-4bb2-93b3-9040de477468 @ 01/03/24 03:49:58.183
  STEP: Creating a pod to test consume configMaps @ 01/03/24 03:49:58.194
  STEP: Saw pod success @ 01/03/24 03:50:02.244
  Jan  3 03:50:02.251: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-configmaps-f146cdc7-7fcb-45c0-bc76-6a2b76a11942 container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 03:50:02.271
  Jan  3 03:50:02.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2177" for this suite. @ 01/03/24 03:50:02.307
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 01/03/24 03:50:02.318
  Jan  3 03:50:02.318: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename taint-single-pod @ 01/03/24 03:50:02.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:50:02.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:50:02.353
  Jan  3 03:50:02.361: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan  3 03:51:02.362: INFO: Waiting for terminating namespaces to be deleted...
  Jan  3 03:51:02.370: INFO: Starting informer...
  STEP: Starting pod... @ 01/03/24 03:51:02.37
  Jan  3 03:51:02.612: INFO: Pod is running on 192.168.18.92. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/03/24 03:51:02.612
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/03/24 03:51:02.642
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/03/24 03:51:02.656
  Jan  3 03:51:02.657: INFO: Pod wasn't evicted. Proceeding
  Jan  3 03:51:02.657: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/03/24 03:51:02.683
  STEP: Waiting some time to make sure that toleration time passed. @ 01/03/24 03:51:02.692
  Jan  3 03:52:17.693: INFO: Pod wasn't evicted. Test successful
  Jan  3 03:52:17.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5275" for this suite. @ 01/03/24 03:52:17.708
• [135.405 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/03/24 03:52:17.723
  Jan  3 03:52:17.723: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pod-network-test @ 01/03/24 03:52:17.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:52:17.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:52:17.772
  STEP: Performing setup for networking test in namespace pod-network-test-5801 @ 01/03/24 03:52:17.779
  STEP: creating a selector @ 01/03/24 03:52:17.78
  STEP: Creating the service pods in kubernetes @ 01/03/24 03:52:17.78
  Jan  3 03:52:17.780: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/03/24 03:52:39.957
  Jan  3 03:52:44.022: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan  3 03:52:44.023: INFO: Going to poll 10.1.213.91 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Jan  3 03:52:44.028: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.213.91 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5801 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 03:52:44.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 03:52:44.031: INFO: ExecWithOptions: Clientset creation
  Jan  3 03:52:44.031: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/pod-network-test-5801/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.213.91+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan  3 03:52:45.193: INFO: Found all 1 expected endpoints: [netserver-0]
  Jan  3 03:52:45.193: INFO: Going to poll 10.1.155.51 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Jan  3 03:52:45.199: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.155.51 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5801 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 03:52:45.199: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 03:52:45.200: INFO: ExecWithOptions: Clientset creation
  Jan  3 03:52:45.200: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/pod-network-test-5801/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.155.51+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan  3 03:52:46.340: INFO: Found all 1 expected endpoints: [netserver-1]
  Jan  3 03:52:46.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5801" for this suite. @ 01/03/24 03:52:46.359
• [28.646 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 01/03/24 03:52:46.37
  Jan  3 03:52:46.370: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 03:52:46.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:52:46.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:52:46.404
  STEP: Setting up server cert @ 01/03/24 03:52:46.448
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 03:52:47.656
  STEP: Deploying the webhook pod @ 01/03/24 03:52:47.673
  STEP: Wait for the deployment to be ready @ 01/03/24 03:52:47.695
  Jan  3 03:52:47.712: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/03/24 03:52:49.734
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 03:52:49.751
  Jan  3 03:52:50.751: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/03/24 03:52:50.768
  STEP: create a configmap that should be updated by the webhook @ 01/03/24 03:52:50.804
  Jan  3 03:52:50.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8835" for this suite. @ 01/03/24 03:52:50.925
  STEP: Destroying namespace "webhook-markers-5478" for this suite. @ 01/03/24 03:52:50.936
• [4.576 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 01/03/24 03:52:50.946
  Jan  3 03:52:50.946: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename containers @ 01/03/24 03:52:50.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:52:50.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:52:50.977
  Jan  3 03:52:55.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7486" for this suite. @ 01/03/24 03:52:55.07
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 01/03/24 03:52:55.08
  Jan  3 03:52:55.080: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename svcaccounts @ 01/03/24 03:52:55.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:52:55.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:52:55.114
  Jan  3 03:52:55.148: INFO: created pod pod-service-account-defaultsa
  Jan  3 03:52:55.148: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jan  3 03:52:55.155: INFO: created pod pod-service-account-mountsa
  Jan  3 03:52:55.155: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jan  3 03:52:55.164: INFO: created pod pod-service-account-nomountsa
  Jan  3 03:52:55.164: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jan  3 03:52:55.183: INFO: created pod pod-service-account-defaultsa-mountspec
  Jan  3 03:52:55.183: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jan  3 03:52:55.197: INFO: created pod pod-service-account-mountsa-mountspec
  Jan  3 03:52:55.197: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jan  3 03:52:55.207: INFO: created pod pod-service-account-nomountsa-mountspec
  Jan  3 03:52:55.207: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jan  3 03:52:55.220: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jan  3 03:52:55.220: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jan  3 03:52:55.233: INFO: created pod pod-service-account-mountsa-nomountspec
  Jan  3 03:52:55.233: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jan  3 03:52:55.248: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jan  3 03:52:55.248: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jan  3 03:52:55.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5938" for this suite. @ 01/03/24 03:52:55.265
• [0.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 01/03/24 03:52:55.284
  Jan  3 03:52:55.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename field-validation @ 01/03/24 03:52:55.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:52:55.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:52:55.321
  Jan  3 03:52:55.325: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  W0103 03:52:57.932316      20 warnings.go:70] unknown field "alpha"
  W0103 03:52:57.933435      20 warnings.go:70] unknown field "beta"
  W0103 03:52:57.933476      20 warnings.go:70] unknown field "delta"
  W0103 03:52:57.933498      20 warnings.go:70] unknown field "epsilon"
  W0103 03:52:57.933521      20 warnings.go:70] unknown field "gamma"
  Jan  3 03:52:58.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8870" for this suite. @ 01/03/24 03:52:58.524
• [3.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/03/24 03:52:58.539
  Jan  3 03:52:58.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sysctl @ 01/03/24 03:52:58.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:52:58.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:52:58.596
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/03/24 03:52:58.604
  STEP: Watching for error events or started pod @ 01/03/24 03:52:58.624
  STEP: Waiting for pod completion @ 01/03/24 03:53:00.637
  STEP: Checking that the pod succeeded @ 01/03/24 03:53:02.653
  STEP: Getting logs from the pod @ 01/03/24 03:53:02.653
  STEP: Checking that the sysctl is actually updated @ 01/03/24 03:53:02.665
  Jan  3 03:53:02.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2736" for this suite. @ 01/03/24 03:53:02.673
• [4.143 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/03/24 03:53:02.683
  Jan  3 03:53:02.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename server-version @ 01/03/24 03:53:02.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:53:02.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:53:02.715
  STEP: Request ServerVersion @ 01/03/24 03:53:02.723
  STEP: Confirm major version @ 01/03/24 03:53:02.725
  Jan  3 03:53:02.726: INFO: Major version: 1
  STEP: Confirm minor version @ 01/03/24 03:53:02.726
  Jan  3 03:53:02.726: INFO: cleanMinorVersion: 29
  Jan  3 03:53:02.726: INFO: Minor version: 29
  Jan  3 03:53:02.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7793" for this suite. @ 01/03/24 03:53:02.734
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 01/03/24 03:53:02.745
  Jan  3 03:53:02.745: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 03:53:02.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:53:02.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:53:02.771
  STEP: Setting up server cert @ 01/03/24 03:53:02.807
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 03:53:03.739
  STEP: Deploying the webhook pod @ 01/03/24 03:53:03.751
  STEP: Wait for the deployment to be ready @ 01/03/24 03:53:03.773
  Jan  3 03:53:03.784: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/03/24 03:53:05.801
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 03:53:05.816
  Jan  3 03:53:06.816: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/03/24 03:53:06.83
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/03/24 03:53:06.83
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/03/24 03:53:06.864
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/03/24 03:53:07.879
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/03/24 03:53:07.88
  STEP: Having no error when timeout is longer than webhook latency @ 01/03/24 03:53:08.923
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/03/24 03:53:08.923
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/03/24 03:53:13.986
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/03/24 03:53:13.986
  Jan  3 03:53:19.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1320" for this suite. @ 01/03/24 03:53:19.153
  STEP: Destroying namespace "webhook-markers-1132" for this suite. @ 01/03/24 03:53:19.162
• [16.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 01/03/24 03:53:19.182
  Jan  3 03:53:19.182: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename field-validation @ 01/03/24 03:53:19.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:53:19.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:53:19.216
  Jan  3 03:53:19.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 03:53:22.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2763" for this suite. @ 01/03/24 03:53:22.398
• [3.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/03/24 03:53:22.413
  Jan  3 03:53:22.413: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 03:53:22.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:53:22.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:53:22.447
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/03/24 03:53:22.455
  STEP: Saw pod success @ 01/03/24 03:53:26.489
  Jan  3 03:53:26.496: INFO: Trying to get logs from node 192.168.18.92 pod pod-5a75931b-a5aa-4c62-83b9-656da78fcbbe container test-container: <nil>
  STEP: delete the pod @ 01/03/24 03:53:26.512
  Jan  3 03:53:26.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3432" for this suite. @ 01/03/24 03:53:26.554
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/03/24 03:53:26.563
  Jan  3 03:53:26.563: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 03:53:26.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:53:26.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:53:26.589
  STEP: Creating projection with secret that has name projected-secret-test-map-2bcb0d76-97ea-45af-859b-f600f514bab3 @ 01/03/24 03:53:26.595
  STEP: Creating a pod to test consume secrets @ 01/03/24 03:53:26.603
  STEP: Saw pod success @ 01/03/24 03:53:30.638
  Jan  3 03:53:30.643: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-secrets-bac7d975-f8cc-46a9-9b00-e47dd78a447a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 03:53:30.657
  Jan  3 03:53:30.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8891" for this suite. @ 01/03/24 03:53:30.692
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 01/03/24 03:53:30.702
  Jan  3 03:53:30.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 03:53:30.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:53:30.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:53:30.74
  STEP: Creating a ResourceQuota with terminating scope @ 01/03/24 03:53:30.747
  STEP: Ensuring ResourceQuota status is calculated @ 01/03/24 03:53:30.755
  STEP: Creating a ResourceQuota with not terminating scope @ 01/03/24 03:53:32.763
  STEP: Ensuring ResourceQuota status is calculated @ 01/03/24 03:53:32.772
  STEP: Creating a long running pod @ 01/03/24 03:53:34.782
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/03/24 03:53:34.807
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/03/24 03:53:36.817
  STEP: Deleting the pod @ 01/03/24 03:53:38.826
  STEP: Ensuring resource quota status released the pod usage @ 01/03/24 03:53:38.844
  STEP: Creating a terminating pod @ 01/03/24 03:53:40.856
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/03/24 03:53:40.875
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/03/24 03:53:42.883
  STEP: Deleting the pod @ 01/03/24 03:53:44.896
  STEP: Ensuring resource quota status released the pod usage @ 01/03/24 03:53:44.918
  Jan  3 03:53:46.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1569" for this suite. @ 01/03/24 03:53:46.936
• [16.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/03/24 03:53:46.953
  Jan  3 03:53:46.953: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename watch @ 01/03/24 03:53:46.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:53:46.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:53:46.996
  STEP: creating a watch on configmaps with label A @ 01/03/24 03:53:47.003
  STEP: creating a watch on configmaps with label B @ 01/03/24 03:53:47.006
  STEP: creating a watch on configmaps with label A or B @ 01/03/24 03:53:47.009
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/03/24 03:53:47.013
  Jan  3 03:53:47.022: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9329  ab3fff12-16eb-40d4-a83a-f494b3ae5775 93462 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:53:47.022: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9329  ab3fff12-16eb-40d4-a83a-f494b3ae5775 93462 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/03/24 03:53:47.023
  Jan  3 03:53:47.038: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9329  ab3fff12-16eb-40d4-a83a-f494b3ae5775 93463 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:53:47.038: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9329  ab3fff12-16eb-40d4-a83a-f494b3ae5775 93463 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/03/24 03:53:47.038
  Jan  3 03:53:47.050: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9329  ab3fff12-16eb-40d4-a83a-f494b3ae5775 93464 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:53:47.050: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9329  ab3fff12-16eb-40d4-a83a-f494b3ae5775 93464 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/03/24 03:53:47.05
  Jan  3 03:53:47.059: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9329  ab3fff12-16eb-40d4-a83a-f494b3ae5775 93465 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:53:47.059: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9329  ab3fff12-16eb-40d4-a83a-f494b3ae5775 93465 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/03/24 03:53:47.059
  Jan  3 03:53:47.066: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9329  d0f66eb2-b65d-43f3-b58c-3d9f2d961846 93466 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:53:47.066: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9329  d0f66eb2-b65d-43f3-b58c-3d9f2d961846 93466 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/03/24 03:53:57.069
  Jan  3 03:53:57.083: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9329  d0f66eb2-b65d-43f3-b58c-3d9f2d961846 93491 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:53:57.083: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9329  d0f66eb2-b65d-43f3-b58c-3d9f2d961846 93491 0 2024-01-03 03:53:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-03 03:53:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 03:54:07.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9329" for this suite. @ 01/03/24 03:54:07.095
• [20.156 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/03/24 03:54:07.111
  Jan  3 03:54:07.111: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename runtimeclass @ 01/03/24 03:54:07.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:54:07.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:54:07.145
  STEP: Deleting RuntimeClass runtimeclass-6313-delete-me @ 01/03/24 03:54:07.161
  STEP: Waiting for the RuntimeClass to disappear @ 01/03/24 03:54:07.169
  Jan  3 03:54:07.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6313" for this suite. @ 01/03/24 03:54:07.196
• [0.095 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/03/24 03:54:07.206
  Jan  3 03:54:07.206: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 03:54:07.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:54:07.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:54:07.244
  Jan  3 03:54:07.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3961" for this suite. @ 01/03/24 03:54:07.319
• [0.131 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 01/03/24 03:54:07.337
  Jan  3 03:54:07.337: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/03/24 03:54:07.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:54:07.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:54:07.371
  Jan  3 03:54:07.379: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/03/24 03:54:09.095
  Jan  3 03:54:09.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-8888 --namespace=crd-publish-openapi-8888 create -f -'
  Jan  3 03:54:09.333: INFO: stderr: ""
  Jan  3 03:54:09.333: INFO: stdout: "e2e-test-crd-publish-openapi-7984-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jan  3 03:54:09.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-8888 --namespace=crd-publish-openapi-8888 delete e2e-test-crd-publish-openapi-7984-crds test-cr'
  Jan  3 03:54:09.503: INFO: stderr: ""
  Jan  3 03:54:09.503: INFO: stdout: "e2e-test-crd-publish-openapi-7984-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jan  3 03:54:09.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-8888 --namespace=crd-publish-openapi-8888 apply -f -'
  Jan  3 03:54:09.712: INFO: stderr: ""
  Jan  3 03:54:09.712: INFO: stdout: "e2e-test-crd-publish-openapi-7984-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jan  3 03:54:09.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-8888 --namespace=crd-publish-openapi-8888 delete e2e-test-crd-publish-openapi-7984-crds test-cr'
  Jan  3 03:54:09.902: INFO: stderr: ""
  Jan  3 03:54:09.902: INFO: stdout: "e2e-test-crd-publish-openapi-7984-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/03/24 03:54:09.902
  Jan  3 03:54:09.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-8888 explain e2e-test-crd-publish-openapi-7984-crds'
  Jan  3 03:54:10.078: INFO: stderr: ""
  Jan  3 03:54:10.078: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7984-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jan  3 03:54:11.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8888" for this suite. @ 01/03/24 03:54:11.831
• [4.502 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/03/24 03:54:11.84
  Jan  3 03:54:11.840: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 03:54:11.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:54:11.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:54:11.876
  STEP: Creating configMap with name configmap-test-volume-99f74cda-93d0-4e65-ac37-4abc812d7db4 @ 01/03/24 03:54:11.883
  STEP: Creating a pod to test consume configMaps @ 01/03/24 03:54:11.89
  STEP: Saw pod success @ 01/03/24 03:54:15.936
  Jan  3 03:54:15.943: INFO: Trying to get logs from node 192.168.18.92 pod pod-configmaps-1b6b46f4-87ea-4367-83b3-497a24c5f9d7 container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 03:54:15.957
  Jan  3 03:54:15.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7733" for this suite. @ 01/03/24 03:54:15.989
• [4.158 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/03/24 03:54:15.999
  Jan  3 03:54:15.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename subpath @ 01/03/24 03:54:16.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:54:16.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:54:16.033
  STEP: Setting up data @ 01/03/24 03:54:16.039
  STEP: Creating pod pod-subpath-test-projected-plv8 @ 01/03/24 03:54:16.053
  STEP: Creating a pod to test atomic-volume-subpath @ 01/03/24 03:54:16.053
  STEP: Saw pod success @ 01/03/24 03:54:40.188
  Jan  3 03:54:40.195: INFO: Trying to get logs from node 192.168.18.92 pod pod-subpath-test-projected-plv8 container test-container-subpath-projected-plv8: <nil>
  STEP: delete the pod @ 01/03/24 03:54:40.212
  STEP: Deleting pod pod-subpath-test-projected-plv8 @ 01/03/24 03:54:40.246
  Jan  3 03:54:40.246: INFO: Deleting pod "pod-subpath-test-projected-plv8" in namespace "subpath-9769"
  Jan  3 03:54:40.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9769" for this suite. @ 01/03/24 03:54:40.259
• [24.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 01/03/24 03:54:40.272
  Jan  3 03:54:40.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename security-context-test @ 01/03/24 03:54:40.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:54:40.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:54:40.318
  Jan  3 03:54:44.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5522" for this suite. @ 01/03/24 03:54:44.376
• [4.114 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/03/24 03:54:44.387
  Jan  3 03:54:44.387: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename init-container @ 01/03/24 03:54:44.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:54:44.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:54:44.423
  STEP: creating the pod @ 01/03/24 03:54:44.43
  Jan  3 03:54:44.431: INFO: PodSpec: initContainers in spec.initContainers
  Jan  3 03:55:23.182: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-8ba509b4-0dcf-48fa-8451-ef45fd507e3a", GenerateName:"", Namespace:"init-container-6563", SelfLink:"", UID:"b596d7da-7b5a-4c87-a4bf-82870ea39707", ResourceVersion:"93793", Generation:0, CreationTimestamp:time.Date(2024, time.January, 3, 3, 54, 43, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"431286818"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"e7507c3dba1fbf37f04700888e383b3bee8ad4a676910ebc5a89408a6fb08e64", "cni.projectcalico.org/podIP":"10.1.155.19/32", "cni.projectcalico.org/podIPs":"10.1.155.19/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 3, 54, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a59770), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 3, 54, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a597b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 3, 55, 22, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a59800), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-qclfd", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0072a5a80), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qclfd", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qclfd", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qclfd", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0041105e8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"192.168.18.92", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00029fc70), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004110670)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004110690)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004110698), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00411069c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0047b8460), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 3, 3, 54, 45, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 3, 3, 54, 44, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 3, 3, 54, 44, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 3, 3, 54, 44, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 3, 3, 54, 43, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.18.92", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.18.92"}}, PodIP:"10.1.155.19", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.1.155.19"}}, StartTime:time.Date(2024, time.January, 3, 3, 54, 44, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00029fd50)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00029fe30)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://4bbcf2453cef73a37717a8a007b022ca0df79d74e7dd3e3ebc2dbdb0ebfc5a21", Started:(*bool)(0xc00411073a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0072a5ae0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00411074f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0072a5ac0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00411071f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jan  3 03:55:23.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6563" for this suite. @ 01/03/24 03:55:23.192
• [38.816 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/03/24 03:55:23.204
  Jan  3 03:55:23.204: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 03:55:23.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:55:23.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:55:23.257
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/03/24 03:55:23.264
  STEP: Saw pod success @ 01/03/24 03:55:27.301
  Jan  3 03:55:27.307: INFO: Trying to get logs from node 192.168.18.92 pod pod-b3648919-121a-419d-8031-b6636d94162b container test-container: <nil>
  STEP: delete the pod @ 01/03/24 03:55:27.32
  Jan  3 03:55:27.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5871" for this suite. @ 01/03/24 03:55:27.35
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/03/24 03:55:27.361
  Jan  3 03:55:27.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 03:55:27.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:55:27.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:55:27.405
  Jan  3 03:55:27.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4376" for this suite. @ 01/03/24 03:55:27.485
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 01/03/24 03:55:27.494
  Jan  3 03:55:27.494: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 03:55:27.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:55:27.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:55:27.521
  STEP: Creating pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224 @ 01/03/24 03:55:27.528
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/03/24 03:55:29.559
  Jan  3 03:55:29.565: INFO: Initial restart count of pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 is 0
  Jan  3 03:55:29.570: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:31.578: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:33.587: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:35.599: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:37.607: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:39.618: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:41.628: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:43.642: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:45.652: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:47.661: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:49.670: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:51.684: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:53.695: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:55.704: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:57.716: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:55:59.725: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:01.734: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:03.742: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:05.753: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:07.761: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:09.773: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:11.781: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:13.794: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:15.803: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:17.817: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:19.826: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:21.836: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:23.845: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:25.854: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:27.865: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:29.873: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:31.882: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:33.895: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:35.904: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:37.914: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:39.923: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:41.933: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:43.942: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:45.952: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:47.961: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:49.971: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:51.981: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:53.992: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:56.003: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:56:58.013: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:00.023: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:02.032: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:04.041: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:06.052: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:08.061: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:10.068: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:12.080: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:14.093: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:16.102: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:18.112: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:20.120: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:22.129: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:24.139: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:26.150: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:28.158: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:30.166: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:32.174: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:34.183: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:36.194: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:38.202: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:40.210: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:42.221: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:44.233: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:46.243: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:48.254: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:50.262: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:52.270: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:54.279: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:56.290: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:57:58.300: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:00.310: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:02.320: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:04.329: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:06.341: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:08.351: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:10.361: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:12.370: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:14.384: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:16.399: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:18.407: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:20.415: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:22.429: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:24.438: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:26.448: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:28.457: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:30.467: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:32.481: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:34.492: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:36.501: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:38.511: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:40.521: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:42.530: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:44.540: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:46.549: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:48.559: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:50.570: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:52.580: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:54.590: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:56.600: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:58:58.613: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:00.621: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:02.632: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:04.641: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:06.653: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:08.662: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:10.673: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:12.680: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:14.689: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:16.702: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:18.710: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:20.721: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:22.729: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:24.744: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:26.757: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  Jan  3 03:59:28.766: INFO: Get pod busybox-05c1a586-ee43-4e4b-8788-9eac5d8b4de6 in namespace container-probe-6224
  STEP: deleting the pod @ 01/03/24 03:59:30.769
  Jan  3 03:59:30.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6224" for this suite. @ 01/03/24 03:59:30.807
• [243.324 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/03/24 03:59:30.818
  Jan  3 03:59:30.818: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 03:59:30.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:59:30.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:59:30.853
  STEP: Creating configMap with name projected-configmap-test-volume-24eeefd6-2e2f-4a8b-9754-431b95413f0f @ 01/03/24 03:59:30.863
  STEP: Creating a pod to test consume configMaps @ 01/03/24 03:59:30.874
  STEP: Saw pod success @ 01/03/24 03:59:34.912
  Jan  3 03:59:34.919: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-configmaps-6689d763-38f5-4108-88a7-6556c4ecc7ff container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 03:59:34.959
  Jan  3 03:59:34.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4707" for this suite. @ 01/03/24 03:59:34.99
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 01/03/24 03:59:35.001
  Jan  3 03:59:35.001: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 03:59:35.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:59:35.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:59:35.041
  STEP: Setting up server cert @ 01/03/24 03:59:35.074
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 03:59:35.438
  STEP: Deploying the webhook pod @ 01/03/24 03:59:35.453
  STEP: Wait for the deployment to be ready @ 01/03/24 03:59:35.472
  Jan  3 03:59:35.486: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jan  3 03:59:37.510: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 3, 59, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 3, 59, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 3, 59, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 3, 59, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/03/24 03:59:39.522
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 03:59:39.54
  Jan  3 03:59:40.541: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan  3 03:59:40.561: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-48-crds.webhook.example.com via the AdmissionRegistration API @ 01/03/24 03:59:41.088
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/03/24 03:59:41.134
  Jan  3 03:59:43.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1177" for this suite. @ 01/03/24 03:59:43.866
  STEP: Destroying namespace "webhook-markers-1677" for this suite. @ 01/03/24 03:59:43.874
• [8.883 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 01/03/24 03:59:43.885
  Jan  3 03:59:43.885: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename dns @ 01/03/24 03:59:43.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 03:59:43.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 03:59:43.922
  STEP: Creating a test headless service @ 01/03/24 03:59:43.928
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3188.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3188.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3188.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3188.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3188.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3188.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3188.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3188.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3188.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 150.70.169.169.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/169.169.70.150_udp@PTR;check="$$(dig +tcp +noall +answer +search 150.70.169.169.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/169.169.70.150_tcp@PTR;sleep 1; done
   @ 01/03/24 03:59:43.951
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3188.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3188.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3188.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3188.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3188.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3188.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3188.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3188.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3188.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3188.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 150.70.169.169.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/169.169.70.150_udp@PTR;check="$$(dig +tcp +noall +answer +search 150.70.169.169.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/169.169.70.150_tcp@PTR;sleep 1; done
   @ 01/03/24 03:59:43.953
  STEP: creating a pod to probe DNS @ 01/03/24 03:59:43.953
  STEP: submitting the pod to kubernetes @ 01/03/24 03:59:43.955
  STEP: retrieving the pod @ 01/03/24 03:59:48
  STEP: looking for the results for each expected name from probers @ 01/03/24 03:59:48.008
  Jan  3 03:59:48.018: INFO: Unable to read wheezy_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:48.025: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:48.033: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:48.040: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:48.072: INFO: Unable to read jessie_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:48.079: INFO: Unable to read jessie_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:48.085: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:48.091: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:48.129: INFO: Lookups using dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756 failed for: [wheezy_udp@dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_udp@dns-test-service.dns-3188.svc.cluster.local jessie_tcp@dns-test-service.dns-3188.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local]

  Jan  3 03:59:48.144: INFO: Pod client logs for webserver: 
  Jan  3 03:59:48.156: INFO: Pod client logs for querier: 
  Jan  3 03:59:48.173: INFO: Pod client logs for jessie-querier: 
  Jan  3 03:59:53.018: INFO: Unable to read wheezy_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:53.024: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:53.033: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:53.039: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:53.073: INFO: Unable to read jessie_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:53.079: INFO: Unable to read jessie_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:53.086: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:53.092: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:53.117: INFO: Lookups using dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756 failed for: [wheezy_udp@dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_udp@dns-test-service.dns-3188.svc.cluster.local jessie_tcp@dns-test-service.dns-3188.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local]

  Jan  3 03:59:53.128: INFO: Pod client logs for webserver: 
  Jan  3 03:59:53.138: INFO: Pod client logs for querier: 
  Jan  3 03:59:53.147: INFO: Pod client logs for jessie-querier: 
  Jan  3 03:59:58.019: INFO: Unable to read wheezy_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:58.027: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:58.034: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:58.040: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:58.075: INFO: Unable to read jessie_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:58.083: INFO: Unable to read jessie_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:58.089: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:58.096: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 03:59:58.124: INFO: Lookups using dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756 failed for: [wheezy_udp@dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_udp@dns-test-service.dns-3188.svc.cluster.local jessie_tcp@dns-test-service.dns-3188.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local]

  Jan  3 03:59:58.138: INFO: Pod client logs for webserver: 
  Jan  3 03:59:58.150: INFO: Pod client logs for querier: 
  Jan  3 03:59:58.160: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:00:03.018: INFO: Unable to read wheezy_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:03.024: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:03.030: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:03.036: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:03.070: INFO: Unable to read jessie_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:03.079: INFO: Unable to read jessie_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:03.089: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:03.097: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:03.126: INFO: Lookups using dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756 failed for: [wheezy_udp@dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_udp@dns-test-service.dns-3188.svc.cluster.local jessie_tcp@dns-test-service.dns-3188.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local]

  Jan  3 04:00:03.137: INFO: Pod client logs for webserver: 
  Jan  3 04:00:03.147: INFO: Pod client logs for querier: 
  Jan  3 04:00:03.157: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:00:08.018: INFO: Unable to read wheezy_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:08.026: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:08.033: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:08.039: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:08.075: INFO: Unable to read jessie_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:08.081: INFO: Unable to read jessie_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:08.088: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:08.096: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:08.122: INFO: Lookups using dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756 failed for: [wheezy_udp@dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_udp@dns-test-service.dns-3188.svc.cluster.local jessie_tcp@dns-test-service.dns-3188.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local]

  Jan  3 04:00:08.134: INFO: Pod client logs for webserver: 
  Jan  3 04:00:08.146: INFO: Pod client logs for querier: 
  Jan  3 04:00:08.157: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:00:13.018: INFO: Unable to read wheezy_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:13.025: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:13.032: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:13.039: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:13.072: INFO: Unable to read jessie_udp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:13.079: INFO: Unable to read jessie_tcp@dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:13.087: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:13.093: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local from pod dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756: the server could not find the requested resource (get pods dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756)
  Jan  3 04:00:13.126: INFO: Lookups using dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756 failed for: [wheezy_udp@dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@dns-test-service.dns-3188.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_udp@dns-test-service.dns-3188.svc.cluster.local jessie_tcp@dns-test-service.dns-3188.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3188.svc.cluster.local]

  Jan  3 04:00:13.138: INFO: Pod client logs for webserver: 
  Jan  3 04:00:13.148: INFO: Pod client logs for querier: 
  Jan  3 04:00:13.158: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:00:18.123: INFO: DNS probes using dns-3188/dns-test-95c1a396-1936-4af8-a67d-1012c4cdf756 succeeded

  STEP: deleting the pod @ 01/03/24 04:00:18.123
  STEP: deleting the test service @ 01/03/24 04:00:18.151
  STEP: deleting the test headless service @ 01/03/24 04:00:18.187
  Jan  3 04:00:18.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3188" for this suite. @ 01/03/24 04:00:18.237
• [34.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 01/03/24 04:00:18.246
  Jan  3 04:00:18.246: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:00:18.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:18.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:18.279
  STEP: creating Agnhost RC @ 01/03/24 04:00:18.284
  Jan  3 04:00:18.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-7909 create -f -'
  Jan  3 04:00:18.601: INFO: stderr: ""
  Jan  3 04:00:18.601: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/03/24 04:00:18.601
  Jan  3 04:00:19.611: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 04:00:19.611: INFO: Found 0 / 1
  Jan  3 04:00:20.608: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 04:00:20.608: INFO: Found 0 / 1
  Jan  3 04:00:21.609: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 04:00:21.609: INFO: Found 1 / 1
  Jan  3 04:00:21.609: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/03/24 04:00:21.609
  Jan  3 04:00:21.615: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 04:00:21.616: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan  3 04:00:21.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-7909 patch pod agnhost-primary-kwwpp -p {"metadata":{"annotations":{"x":"y"}}}'
  Jan  3 04:00:21.825: INFO: stderr: ""
  Jan  3 04:00:21.825: INFO: stdout: "pod/agnhost-primary-kwwpp patched\n"
  STEP: checking annotations @ 01/03/24 04:00:21.825
  Jan  3 04:00:21.833: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan  3 04:00:21.833: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan  3 04:00:21.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7909" for this suite. @ 01/03/24 04:00:21.843
• [3.607 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/03/24 04:00:21.854
  Jan  3 04:00:21.854: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename deployment @ 01/03/24 04:00:21.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:21.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:21.896
  Jan  3 04:00:21.903: INFO: Creating deployment "webserver-deployment"
  Jan  3 04:00:21.913: INFO: Waiting for observed generation 1
  Jan  3 04:00:23.922: INFO: Waiting for all required pods to come up
  Jan  3 04:00:23.928: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/03/24 04:00:23.928
  Jan  3 04:00:25.947: INFO: Waiting for deployment "webserver-deployment" to complete
  Jan  3 04:00:25.959: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jan  3 04:00:25.977: INFO: Updating deployment webserver-deployment
  Jan  3 04:00:25.977: INFO: Waiting for observed generation 2
  Jan  3 04:00:27.990: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jan  3 04:00:27.998: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jan  3 04:00:28.004: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jan  3 04:00:28.017: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jan  3 04:00:28.018: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jan  3 04:00:28.022: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jan  3 04:00:28.032: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jan  3 04:00:28.032: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jan  3 04:00:28.046: INFO: Updating deployment webserver-deployment
  Jan  3 04:00:28.046: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jan  3 04:00:28.054: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jan  3 04:00:28.059: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jan  3 04:00:30.080: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73d82f40-9a48-4570-9b42-32eb104d9e2c",
      ResourceVersion: (string) (len=5) "94935",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      UnavailableReplicas: (int32) 24,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan  3 04:00:30.108: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
      ResourceVersion: (string) (len=5) "94830",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "73d82f40-9a48-4570-9b42-32eb104d9e2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 33 64 38 32 66  34 30 2d 39 61 34 38 2d  |\"73d82f40-9a48-|
              00000120  34 35 37 30 2d 39 62 34  32 2d 33 32 65 62 31 30  |4570-9b42-32eb10|
              00000130  34 64 39 65 32 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4d9e2c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 04:00:30.112: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jan  3 04:00:30.112: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
      ResourceVersion: (string) (len=5) "94932",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "73d82f40-9a48-4570-9b42-32eb104d9e2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 33 64 38 32 66  34 30 2d 39 61 34 38 2d  |\"73d82f40-9a48-|
              00000120  34 35 37 30 2d 39 62 34  32 2d 33 32 65 62 31 30  |4570-9b42-32eb10|
              00000130  34 64 39 65 32 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4d9e2c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 04:00:30.159: INFO: Pod "webserver-deployment-557759b7c7-89d52" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-89d52",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "438a1794-6972-4c54-80a3-7a81440e2eda",
      ResourceVersion: (string) (len=5) "94656",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6eb3ce2ac80ca2d7696e9bdbfb247cfad6536cb8ebcde400760795e668903129",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.81/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.81/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 31 33 2e 38  31 5c 22 7d 22 3a 7b 22  |.1.213.81\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bs288",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bs288",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) (len=11) "10.1.213.81",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.213.81"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ae9ebe50395d242d0adde2f6e877bfd283a14b3b01f4c834a09321192c302eb8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.162: INFO: Pod "webserver-deployment-557759b7c7-99pg7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-99pg7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e73d22b5-8edc-4500-9681-306c170c836c",
      ResourceVersion: (string) (len=5) "94931",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "34b4a818ab5b5698db07b0eaac56b3ed56bcc34b79f1bf5079f9fc02eda31dbb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.155.6/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.155.6/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 36  5c 22 7d 22 3a 7b 22 2e  |.1.155.6\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s5x86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s5x86",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=10) "10.1.155.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.1.155.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851229,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1065a72516dd4ad37a5b625a7712ff58959c0f22203f4b09942b505daf832b62",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.166: INFO: Pod "webserver-deployment-557759b7c7-bhk9l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bhk9l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfcab123-a61b-4548-b2a4-df9ed00492d5",
      ResourceVersion: (string) (len=5) "94923",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "964e75820fb8e8fe88fd1c5430fc61de958b4d639b1dff2fac8016cf7d2754bc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.21/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.21/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p5xqv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p5xqv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.171: INFO: Pod "webserver-deployment-557759b7c7-f5wjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f5wjb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "185fd223-b517-4866-ba85-57edff577324",
      ResourceVersion: (string) (len=5) "94850",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vj29n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vj29n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.175: INFO: Pod "webserver-deployment-557759b7c7-f7rf9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f7rf9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fabfa3b4-c608-4cf4-8c11-632b1362d8b0",
      ResourceVersion: (string) (len=5) "94916",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cbe8da71ec3670329376a939925f8e2883c2eb917fdd7f8e823e2900dc8ece26",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.213.116/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.213.116/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4k2vl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4k2vl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.180: INFO: Pod "webserver-deployment-557759b7c7-jc7g7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jc7g7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "413de694-5ce8-4211-b6fb-e7a1dea2019f",
      ResourceVersion: (string) (len=5) "94659",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ce4cb7c6b518aa0cfd3dd2386397493c9707103a635e4a9411c036a602f4e716",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.78/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.78/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 31 33 2e 37  38 5c 22 7d 22 3a 7b 22  |.1.213.78\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cfrhr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cfrhr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) (len=11) "10.1.213.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.213.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d8f92152abef12c7cbd3c07fd74ccbe6475cf91056aaeb5294ea4d254ecbd01e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.188: INFO: Pod "webserver-deployment-557759b7c7-k5wn2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k5wn2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3de98a96-8154-4a6c-80a6-ec4874f26364",
      ResourceVersion: (string) (len=5) "94653",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c627eab0af2477e84a40a7e3f390c32d6e6ad99f4c8953125b2188f83a2faf92",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.213.106/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.213.106/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 31 33 2e 31  30 36 5c 22 7d 22 3a 7b  |.1.213.106\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lb5qr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lb5qr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) (len=12) "10.1.213.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.213.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2ae5798a2d8fd0e977037bc1bce74a1a8f0379baa4003707eab1fa8f29b12d2f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.193: INFO: Pod "webserver-deployment-557759b7c7-mdnwg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mdnwg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3beeda36-1c2c-42ac-b35f-e6482753fa00",
      ResourceVersion: (string) (len=5) "94640",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ba1d4e72ff4bd2a5cd2769d094f96eab8cb5eb5c7c7624f4c2dcafded1e9ddff",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.25/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 32  35 5c 22 7d 22 3a 7b 22  |.1.155.25\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cvs7t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cvs7t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=11) "10.1.155.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.155.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1a4008560e6b0a3c69b4c9ca4a5ab1057e897e3e313a819e6f779158ca84ed97",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.198: INFO: Pod "webserver-deployment-557759b7c7-nrvk9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nrvk9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b3262ea-285e-4425-89c7-d42d1fd99d3f",
      ResourceVersion: (string) (len=5) "94944",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a5a8a0d198dbffbb671078dd1267f6646909fa625252823e73d9251f3d197083",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.155.2/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.155.2/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-456v7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-456v7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.202: INFO: Pod "webserver-deployment-557759b7c7-pp448" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pp448",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f48962c9-f052-4b1f-ade3-084eb9aa652c",
      ResourceVersion: (string) (len=5) "94889",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4d68cae4615b8e002fab062327307732462378a389d1876c31a2c9b9c1d7e2b7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.68/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.68/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m24gs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m24gs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.206: INFO: Pod "webserver-deployment-557759b7c7-pr2cw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pr2cw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78642cbd-00b1-4679-b9da-414ad7944f11",
      ResourceVersion: (string) (len=5) "94868",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ht9qm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ht9qm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.210: INFO: Pod "webserver-deployment-557759b7c7-q9nfd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q9nfd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90aa056e-2148-4cef-abca-49d4d35ecf2a",
      ResourceVersion: (string) (len=5) "94894",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2652d4a00b20976329f6a9bbecfb5d5d2703add52b897e2fef9255c8a955712c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.155.7/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.155.7/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hcsmh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hcsmh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.237: INFO: Pod "webserver-deployment-557759b7c7-qfvqp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qfvqp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4cf0efa0-7a83-474c-89b2-8dc2fd3479d8",
      ResourceVersion: (string) (len=5) "94888",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "70824a00fd3b8e20814ad1f17b17db61841e717444050aead2cefb9fa71ae06c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.22/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v45zk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v45zk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.244: INFO: Pod "webserver-deployment-557759b7c7-r46xm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-r46xm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "974a6cac-8ddf-41c3-98a2-b6b431cf6aa5",
      ResourceVersion: (string) (len=5) "94631",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.28/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "80ffd582fac472901478517bfe4cd403091d8eba1073ba3ccca6896f52289d7b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 32  38 5c 22 7d 22 3a 7b 22  |.1.155.28\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q5jj5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q5jj5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=11) "10.1.155.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.155.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cc3cbb7bdce32d2dd6bdc13eab99fbca8efa62e07587e635d9184e048765467d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.251: INFO: Pod "webserver-deployment-557759b7c7-r7vbk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-r7vbk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88aa48aa-4d4b-4d05-a493-77e7b69f791c",
      ResourceVersion: (string) (len=5) "94651",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2b31fc915e1bfeb3d20ba7a2e5dccd2e07b36f7fb9dcc09950b861fe2eca0290",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.213.121/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.213.121/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 31 33 2e 31  32 31 5c 22 7d 22 3a 7b  |.1.213.121\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-px8q8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-px8q8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) (len=12) "10.1.213.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.213.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://df6ba2ce85426aaa9284d82eabb8767c0f846427897088d71069b0cc3ece7af9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.256: INFO: Pod "webserver-deployment-557759b7c7-tq88q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tq88q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed864752-e53e-40f2-ae73-b5ace2bbab88",
      ResourceVersion: (string) (len=5) "94626",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "851a7b3ce5e7d83463ca3555f0d2b6f54df478f095e7d45283806babf74e84b6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.15/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 31  35 5c 22 7d 22 3a 7b 22  |.1.155.15\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sq8qh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sq8qh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=11) "10.1.155.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.155.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5e1797f2988bac391502536c44afb2e4145b6f0f002cbba9be045e0e042e41ba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.259: INFO: Pod "webserver-deployment-557759b7c7-x2759" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-x2759",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "adb6598a-2fce-4f0b-a079-c88c2e006ad8",
      ResourceVersion: (string) (len=5) "94837",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bjghv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bjghv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.268: INFO: Pod "webserver-deployment-557759b7c7-xblpf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xblpf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f80cb35c-58b2-4f34-bba3-8c5f13369333",
      ResourceVersion: (string) (len=5) "94954",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "80b4794ee368efd08004ece4608bdea4d55649fefb16b247c4e4d7df8b1708a2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.95/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.95/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-278jm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-278jm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.271: INFO: Pod "webserver-deployment-557759b7c7-xfwft" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xfwft",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "080de597-6e5a-419e-a2d7-b00b5f5e78b1",
      ResourceVersion: (string) (len=5) "94634",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6f82b016ab5c20b42c0981ccf6e23962fa745e28f8cf3d1b6ea6bd90628cfae7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.46/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.46/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 34  36 5c 22 7d 22 3a 7b 22  |.1.155.46\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jb678",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jb678",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=11) "10.1.155.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.155.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://07c78ed059f41f62dcb2b09814c0df598e12199cdf75d0ee963c35df042e4280",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.279: INFO: Pod "webserver-deployment-557759b7c7-xvf5j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xvf5j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43fc16d1-e993-4c76-8cdb-44746b8f755b",
      ResourceVersion: (string) (len=5) "94857",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "ae007252-40bd-47c7-9932-a5c7e6e634a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  30 30 37 32 35 32 2d 34  |d\":\"ae007252-4|
              00000090  30 62 64 2d 34 37 63 37  2d 39 39 33 32 2d 61 35  |0bd-47c7-9932-a5|
              000000a0  63 37 65 36 65 36 33 34  61 36 5c 22 7d 22 3a 7b  |c7e6e634a6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-42m62",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-42m62",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.282: INFO: Pod "webserver-deployment-9b4f5bf69-6js44" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6js44",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e2a0866-93c1-4865-a724-960874771c60",
      ResourceVersion: (string) (len=5) "94900",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6bd6eb6f22425f5a8a4921c2cd99b1c8f5ec050cffb5bfc80ae167e4d80c9f88",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.52/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.52/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-78645",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-78645",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.287: INFO: Pod "webserver-deployment-9b4f5bf69-8ljzl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8ljzl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c280d57-f212-4252-97eb-76f72ba04eb1",
      ResourceVersion: (string) (len=5) "94914",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.63/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cc0577523691335857a3b796f645ff2e6505b42a10db1184aaef519b426a6047",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.63/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5zgqx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5zgqx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.296: INFO: Pod "webserver-deployment-9b4f5bf69-8nhw9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8nhw9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9521fc16-d380-4350-8b46-e50464f841b5",
      ResourceVersion: (string) (len=5) "94740",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f90797eaa95e7b43761b8cd002f4ba15dee47079a1563912c191097d183380d5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.55/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.55/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l6bbq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l6bbq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851226,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.309: INFO: Pod "webserver-deployment-9b4f5bf69-9dhzc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9dhzc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4d1795b-0467-438d-8b83-5bd595bac86c",
      ResourceVersion: (string) (len=5) "94907",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "68beec40a12409c89f78b41109ffb73fed7845e9bf39d59b5081f73f79720d2e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.39/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.39/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44v4m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44v4m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.319: INFO: Pod "webserver-deployment-9b4f5bf69-c2bqb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-c2bqb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "516a23d5-97d8-4107-90ac-2a1d38169c58",
      ResourceVersion: (string) (len=5) "94927",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9b7b2b052e14b22227da8f7916747aadfad4b7ebc265e3072007e670fbc88b77",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.213.102/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.213.102/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-srnt6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-srnt6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.326: INFO: Pod "webserver-deployment-9b4f5bf69-cnx49" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cnx49",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66ee11e0-6afa-4e25-94b5-784d594ea7da",
      ResourceVersion: (string) (len=5) "94911",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.96/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bbb45397594cd9505394f75be1eecd925a2892eeec12b4fcba2916c63e3a5b2c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.96/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ptfx6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ptfx6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.340: INFO: Pod "webserver-deployment-9b4f5bf69-ldc47" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ldc47",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7bc257e9-9605-4da3-bb80-acfc838c2f16",
      ResourceVersion: (string) (len=5) "94730",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fb71b857249e893123d4a264a8044891a2fe64d3ede9f1d5dd155dbc957827f6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.72/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.72/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jhz9d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jhz9d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.344: INFO: Pod "webserver-deployment-9b4f5bf69-mlcwz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mlcwz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2da1c2d-7a04-4433-8615-2f8e6275be9d",
      ResourceVersion: (string) (len=5) "94722",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8a1e55617d39942005b478750b41b73a6464cebce046ef8b9a0eebcddd41f2f5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.33/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.33/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s84gr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s84gr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851226,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.349: INFO: Pod "webserver-deployment-9b4f5bf69-pbjxk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pbjxk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86d9a669-3b9a-4b95-b9e4-304de0bff3b2",
      ResourceVersion: (string) (len=5) "94953",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.38/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.38/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0d53298ea60aba4c0794902ebb027859e0e55c15b33b50a792c05bef2ce3a695"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xck82",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xck82",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.358: INFO: Pod "webserver-deployment-9b4f5bf69-qssjt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qssjt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "370214f9-01d4-4000-a263-5833cc74800c",
      ResourceVersion: (string) (len=5) "94946",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8a8e58c30518c175e4c5735b15736a8e594199c04089d6452cd6818d5f913e98",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.75/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.75/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sxv2n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sxv2n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.377: INFO: Pod "webserver-deployment-9b4f5bf69-tknnw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tknnw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6de31c6e-ccd3-4afd-9879-8ea83eea3a2d",
      ResourceVersion: (string) (len=5) "94728",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8aa39df4264d68858d652a2a48e73dea2c8e7fd4717f04db49b27ccdb4127ad9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.11/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.11/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hxftm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hxftm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851226,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.384: INFO: Pod "webserver-deployment-9b4f5bf69-vzld4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vzld4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35b46392-2c84-4d32-951a-068a03884317",
      ResourceVersion: (string) (len=5) "94734",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "37d7aa93450a3803c11efb1fd39ab7791e6027fab30a80cb8ea143a2b37a4f15",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.82/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.82/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qqw4c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qqw4c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.388: INFO: Pod "webserver-deployment-9b4f5bf69-w5m6n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-w5m6n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb292f70-b643-410f-a114-9017b4c52a97",
      ResourceVersion: (string) (len=5) "94896",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.70/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9e719e7dfa2103b0a98d1e19d49d1c4e33b0360af6821433fa1228d41a99cc65",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.70/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2130d168-30b3-4b56-9036-24c9f9c531cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  33 30 64 31 36 38 2d 33  |d\":\"2130d168-3|
              00000090  30 62 33 2d 34 62 35 36  2d 39 30 33 36 2d 32 34  |0b3-4b56-9036-24|
              000000a0  63 39 66 39 63 35 33 31  63 64 5c 22 7d 22 3a 7b  |c9f9c531cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hf7gl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hf7gl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851227,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:00:30.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7485" for this suite. @ 01/03/24 04:00:30.405
• [8.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 01/03/24 04:00:30.415
  Jan  3 04:00:30.415: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 04:00:30.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:30.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:30.45
  STEP: creating a secret @ 01/03/24 04:00:30.455
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/03/24 04:00:30.461
  STEP: patching the secret @ 01/03/24 04:00:30.471
  STEP: deleting the secret using a LabelSelector @ 01/03/24 04:00:30.483
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/03/24 04:00:30.489
  Jan  3 04:00:30.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4489" for this suite. @ 01/03/24 04:00:30.502
• [0.093 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 01/03/24 04:00:30.508
  Jan  3 04:00:30.508: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename var-expansion @ 01/03/24 04:00:30.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:30.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:30.536
  STEP: Creating a pod to test substitution in volume subpath @ 01/03/24 04:00:30.545
  STEP: Saw pod success @ 01/03/24 04:00:34.584
  Jan  3 04:00:34.589: INFO: Trying to get logs from node 192.168.18.92 pod var-expansion-a9a0aaf3-92c8-41cf-ad60-eacfcefca401 container dapi-container: <nil>
  STEP: delete the pod @ 01/03/24 04:00:34.601
  Jan  3 04:00:34.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4513" for this suite. @ 01/03/24 04:00:34.638
• [4.142 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 01/03/24 04:00:34.651
  Jan  3 04:00:34.651: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:00:34.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:34.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:34.696
  STEP: validating api versions @ 01/03/24 04:00:34.704
  Jan  3 04:00:34.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3334 api-versions'
  Jan  3 04:00:34.869: INFO: stderr: ""
  Jan  3 04:00:34.869: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jan  3 04:00:34.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3334" for this suite. @ 01/03/24 04:00:34.88
• [0.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 01/03/24 04:00:34.895
  Jan  3 04:00:34.895: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/03/24 04:00:34.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:34.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:34.928
  STEP: create the container to handle the HTTPGet hook request. @ 01/03/24 04:00:34.941
  STEP: create the pod with lifecycle hook @ 01/03/24 04:00:38.984
  STEP: check poststart hook @ 01/03/24 04:00:41.013
  STEP: delete the pod with lifecycle hook @ 01/03/24 04:00:41.05
  Jan  3 04:00:45.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7352" for this suite. @ 01/03/24 04:00:45.099
• [10.223 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 01/03/24 04:00:45.118
  Jan  3 04:00:45.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/03/24 04:00:45.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:45.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:45.194
  Jan  3 04:00:45.201: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/03/24 04:00:46.822
  Jan  3 04:00:46.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-2621 --namespace=crd-publish-openapi-2621 create -f -'
  Jan  3 04:00:47.080: INFO: stderr: ""
  Jan  3 04:00:47.080: INFO: stdout: "e2e-test-crd-publish-openapi-7159-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jan  3 04:00:47.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-2621 --namespace=crd-publish-openapi-2621 delete e2e-test-crd-publish-openapi-7159-crds test-cr'
  Jan  3 04:00:47.245: INFO: stderr: ""
  Jan  3 04:00:47.246: INFO: stdout: "e2e-test-crd-publish-openapi-7159-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jan  3 04:00:47.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-2621 --namespace=crd-publish-openapi-2621 apply -f -'
  Jan  3 04:00:47.416: INFO: stderr: ""
  Jan  3 04:00:47.416: INFO: stdout: "e2e-test-crd-publish-openapi-7159-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jan  3 04:00:47.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-2621 --namespace=crd-publish-openapi-2621 delete e2e-test-crd-publish-openapi-7159-crds test-cr'
  Jan  3 04:00:47.595: INFO: stderr: ""
  Jan  3 04:00:47.595: INFO: stdout: "e2e-test-crd-publish-openapi-7159-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/03/24 04:00:47.595
  Jan  3 04:00:47.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-2621 explain e2e-test-crd-publish-openapi-7159-crds'
  Jan  3 04:00:47.761: INFO: stderr: ""
  Jan  3 04:00:47.761: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7159-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jan  3 04:00:49.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2621" for this suite. @ 01/03/24 04:00:49.459
• [4.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 01/03/24 04:00:49.468
  Jan  3 04:00:49.468: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename security-context-test @ 01/03/24 04:00:49.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:49.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:49.498
  Jan  3 04:00:53.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7629" for this suite. @ 01/03/24 04:00:53.549
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 01/03/24 04:00:53.578
  Jan  3 04:00:53.578: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename cronjob @ 01/03/24 04:00:53.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:53.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:53.617
  STEP: Creating a cronjob @ 01/03/24 04:00:53.623
  STEP: creating @ 01/03/24 04:00:53.623
  STEP: getting @ 01/03/24 04:00:53.631
  STEP: listing @ 01/03/24 04:00:53.637
  STEP: watching @ 01/03/24 04:00:53.641
  Jan  3 04:00:53.641: INFO: starting watch
  STEP: cluster-wide listing @ 01/03/24 04:00:53.644
  STEP: cluster-wide watching @ 01/03/24 04:00:53.65
  Jan  3 04:00:53.650: INFO: starting watch
  STEP: patching @ 01/03/24 04:00:53.653
  STEP: updating @ 01/03/24 04:00:53.666
  Jan  3 04:00:53.682: INFO: waiting for watch events with expected annotations
  Jan  3 04:00:53.682: INFO: saw patched and updated annotations
  STEP: patching /status @ 01/03/24 04:00:53.683
  STEP: updating /status @ 01/03/24 04:00:53.693
  STEP: get /status @ 01/03/24 04:00:53.707
  STEP: deleting @ 01/03/24 04:00:53.714
  STEP: deleting a collection @ 01/03/24 04:00:53.737
  Jan  3 04:00:53.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7167" for this suite. @ 01/03/24 04:00:53.769
• [0.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 01/03/24 04:00:53.781
  Jan  3 04:00:53.781: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:00:53.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:00:53.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:00:53.821
  STEP: creating all guestbook components @ 01/03/24 04:00:53.828
  Jan  3 04:00:53.828: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jan  3 04:00:53.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 create -f -'
  Jan  3 04:00:54.136: INFO: stderr: ""
  Jan  3 04:00:54.136: INFO: stdout: "service/agnhost-replica created\n"
  Jan  3 04:00:54.136: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jan  3 04:00:54.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 create -f -'
  Jan  3 04:00:54.469: INFO: stderr: ""
  Jan  3 04:00:54.469: INFO: stdout: "service/agnhost-primary created\n"
  Jan  3 04:00:54.469: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jan  3 04:00:54.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 create -f -'
  Jan  3 04:00:54.815: INFO: stderr: ""
  Jan  3 04:00:54.815: INFO: stdout: "service/frontend created\n"
  Jan  3 04:00:54.816: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jan  3 04:00:54.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 create -f -'
  Jan  3 04:00:55.053: INFO: stderr: ""
  Jan  3 04:00:55.054: INFO: stdout: "deployment.apps/frontend created\n"
  Jan  3 04:00:55.054: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jan  3 04:00:55.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 create -f -'
  Jan  3 04:00:55.293: INFO: stderr: ""
  Jan  3 04:00:55.293: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jan  3 04:00:55.293: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jan  3 04:00:55.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 create -f -'
  Jan  3 04:00:55.519: INFO: stderr: ""
  Jan  3 04:00:55.519: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/03/24 04:00:55.519
  Jan  3 04:00:55.519: INFO: Waiting for all frontend pods to be Running.
  Jan  3 04:01:00.574: INFO: Waiting for frontend to serve content.
  Jan  3 04:01:00.598: INFO: Trying to add a new entry to the guestbook.
  Jan  3 04:01:00.624: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/03/24 04:01:00.641
  Jan  3 04:01:00.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 delete --grace-period=0 --force -f -'
  Jan  3 04:01:00.857: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan  3 04:01:00.857: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/03/24 04:01:00.857
  Jan  3 04:01:00.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 delete --grace-period=0 --force -f -'
  Jan  3 04:01:01.043: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan  3 04:01:01.043: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/03/24 04:01:01.043
  Jan  3 04:01:01.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 delete --grace-period=0 --force -f -'
  Jan  3 04:01:01.194: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan  3 04:01:01.194: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/03/24 04:01:01.194
  Jan  3 04:01:01.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 delete --grace-period=0 --force -f -'
  Jan  3 04:01:01.345: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan  3 04:01:01.345: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/03/24 04:01:01.346
  Jan  3 04:01:01.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 delete --grace-period=0 --force -f -'
  Jan  3 04:01:01.549: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan  3 04:01:01.549: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/03/24 04:01:01.55
  Jan  3 04:01:01.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9280 delete --grace-period=0 --force -f -'
  Jan  3 04:01:01.739: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan  3 04:01:01.739: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jan  3 04:01:01.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9280" for this suite. @ 01/03/24 04:01:01.747
• [8.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/03/24 04:01:01.789
  Jan  3 04:01:01.789: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 04:01:01.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:01.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:01.836
  STEP: Creating Pod @ 01/03/24 04:01:01.849
  STEP: Reading file content from the nginx-container @ 01/03/24 04:01:03.891
  Jan  3 04:01:03.891: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8101 PodName:pod-sharedvolume-e829fd3b-3f64-406a-b93d-e3783c50510b ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:01:03.891: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:01:03.893: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:01:03.893: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/emptydir-8101/pods/pod-sharedvolume-e829fd3b-3f64-406a-b93d-e3783c50510b/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jan  3 04:01:04.038: INFO: Exec stderr: ""
  Jan  3 04:01:04.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8101" for this suite. @ 01/03/24 04:01:04.045
• [2.263 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 01/03/24 04:01:04.053
  Jan  3 04:01:04.053: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename job @ 01/03/24 04:01:04.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:04.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:04.076
  STEP: Creating a job @ 01/03/24 04:01:04.082
  STEP: Ensuring active pods == parallelism @ 01/03/24 04:01:04.093
  STEP: delete a job @ 01/03/24 04:01:08.103
  STEP: deleting Job.batch foo in namespace job-9892, will wait for the garbage collector to delete the pods @ 01/03/24 04:01:08.104
  Jan  3 04:01:08.176: INFO: Deleting Job.batch foo took: 10.111953ms
  Jan  3 04:01:08.277: INFO: Terminating Job.batch foo pods took: 101.366907ms
  STEP: Ensuring job was deleted @ 01/03/24 04:01:09.578
  Jan  3 04:01:09.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9892" for this suite. @ 01/03/24 04:01:09.592
• [5.549 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/03/24 04:01:09.602
  Jan  3 04:01:09.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 04:01:09.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:09.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:09.631
  STEP: Saw pod success @ 01/03/24 04:01:15.724
  Jan  3 04:01:15.732: INFO: Trying to get logs from node 192.168.18.92 pod client-envvars-6e359b5a-2593-4d6c-a41c-8e931b194b20 container env3cont: <nil>
  STEP: delete the pod @ 01/03/24 04:01:15.749
  Jan  3 04:01:15.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3947" for this suite. @ 01/03/24 04:01:15.784
• [6.191 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/03/24 04:01:15.793
  Jan  3 04:01:15.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename csi-storageclass @ 01/03/24 04:01:15.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:15.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:15.825
  STEP: Creating a StorageClass @ 01/03/24 04:01:15.833
  STEP: Get StorageClass "e2e-6wp86" @ 01/03/24 04:01:15.843
  STEP: Patching the StorageClass "e2e-6wp86" @ 01/03/24 04:01:15.847
  STEP: Delete StorageClass "e2e-6wp86" @ 01/03/24 04:01:15.858
  STEP: Confirm deletion of StorageClass "e2e-6wp86" @ 01/03/24 04:01:15.866
  STEP: Create a replacement StorageClass @ 01/03/24 04:01:15.873
  STEP: Updating StorageClass "e2e-v2-p6bfk" @ 01/03/24 04:01:15.879
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-p6bfk=updated" @ 01/03/24 04:01:15.891
  STEP: Deleting StorageClass "e2e-v2-p6bfk" via DeleteCollection @ 01/03/24 04:01:15.896
  STEP: Confirm deletion of StorageClass "e2e-v2-p6bfk" @ 01/03/24 04:01:15.906
  Jan  3 04:01:15.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1022" for this suite. @ 01/03/24 04:01:15.919
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 01/03/24 04:01:15.929
  Jan  3 04:01:15.929: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubelet-test @ 01/03/24 04:01:15.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:15.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:15.957
  STEP: Waiting for pod completion @ 01/03/24 04:01:15.979
  Jan  3 04:01:20.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6593" for this suite. @ 01/03/24 04:01:20.028
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/03/24 04:01:20.041
  Jan  3 04:01:20.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 04:01:20.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:20.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:20.071
  STEP: creating the pod @ 01/03/24 04:01:20.079
  STEP: submitting the pod to kubernetes @ 01/03/24 04:01:20.079
  W0103 04:01:20.091795      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 01/03/24 04:01:22.121
  STEP: updating the pod @ 01/03/24 04:01:22.126
  Jan  3 04:01:22.650: INFO: Successfully updated pod "pod-update-activedeadlineseconds-28a53dd5-3ed0-49f7-9be6-13d7acd0a4fc"
  Jan  3 04:01:26.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7822" for this suite. @ 01/03/24 04:01:26.683
• [6.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/03/24 04:01:26.693
  Jan  3 04:01:26.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename daemonsets @ 01/03/24 04:01:26.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:26.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:26.726
  Jan  3 04:01:26.761: INFO: Create a RollingUpdate DaemonSet
  Jan  3 04:01:26.769: INFO: Check that daemon pods launch on every node of the cluster
  Jan  3 04:01:26.780: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:01:26.780: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:01:27.783: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:01:27.783: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:01:28.783: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan  3 04:01:28.783: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Jan  3 04:01:28.783: INFO: Update the DaemonSet to trigger a rollout
  Jan  3 04:01:28.796: INFO: Updating DaemonSet daemon-set
  Jan  3 04:01:31.818: INFO: Roll back the DaemonSet before rollout is complete
  Jan  3 04:01:31.840: INFO: Updating DaemonSet daemon-set
  Jan  3 04:01:31.840: INFO: Make sure DaemonSet rollback is complete
  Jan  3 04:01:31.849: INFO: Wrong image for pod: daemon-set-tgzlc. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jan  3 04:01:31.849: INFO: Pod daemon-set-tgzlc is not available
  Jan  3 04:01:36.853: INFO: Pod daemon-set-lh7h5 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 01/03/24 04:01:36.874
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-964, will wait for the garbage collector to delete the pods @ 01/03/24 04:01:36.875
  Jan  3 04:01:36.946: INFO: Deleting DaemonSet.extensions daemon-set took: 15.238931ms
  Jan  3 04:01:37.047: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.103316ms
  Jan  3 04:01:39.557: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:01:39.557: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan  3 04:01:39.562: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"96202"},"items":null}

  Jan  3 04:01:39.568: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"96202"},"items":null}

  Jan  3 04:01:39.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-964" for this suite. @ 01/03/24 04:01:39.601
• [12.918 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 01/03/24 04:01:39.612
  Jan  3 04:01:39.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pv @ 01/03/24 04:01:39.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:39.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:39.649
  STEP: Creating initial PV and PVC @ 01/03/24 04:01:39.657
  Jan  3 04:01:39.658: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8703" @ 01/03/24 04:01:39.705
  STEP: Listing PVCs in namespace "pv-8703" @ 01/03/24 04:01:39.71
  STEP: Patching the PV "pv-8703-jgwlx" @ 01/03/24 04:01:39.717
  STEP: Patching the PVC "pvc-gdlq2" @ 01/03/24 04:01:39.745
  STEP: Getting PV "pv-8703-jgwlx" @ 01/03/24 04:01:39.763
  STEP: Getting PVC "pvc-gdlq2" @ 01/03/24 04:01:39.768
  STEP: Deleting PVC "pvc-gdlq2" @ 01/03/24 04:01:39.773
  STEP: Confirm deletion of PVC "pvc-gdlq2" @ 01/03/24 04:01:39.782
  STEP: Deleting PV "pv-8703-jgwlx" @ 01/03/24 04:01:41.796
  STEP: Confirm deletion of PV "pv-8703-jgwlx" @ 01/03/24 04:01:41.805
  STEP: Recreating another PV & PVC @ 01/03/24 04:01:43.823
  Jan  3 04:01:43.824: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8703-4lzhw" @ 01/03/24 04:01:43.842
  STEP: Updating the PVC "pvc-x94jj" @ 01/03/24 04:01:43.857
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-x94jj=updated" @ 01/03/24 04:01:43.871
  STEP: Deleting PVC "pvc-x94jj" via DeleteCollection @ 01/03/24 04:01:43.879
  STEP: Confirm deletion of PVC "pvc-x94jj" @ 01/03/24 04:01:43.893
  STEP: Deleting PV "pv-8703-4lzhw" via DeleteCollection @ 01/03/24 04:01:45.906
  STEP: Confirm deletion of PV "pv-8703-4lzhw" @ 01/03/24 04:01:45.918
  Jan  3 04:01:47.935: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jan  3 04:01:47.936: INFO: Deleting PersistentVolumeClaim "pvc-x94jj"
  Jan  3 04:01:47.942: INFO: Deleting PersistentVolume "pv-8703-4lzhw"
  Jan  3 04:01:47.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8703" for this suite. @ 01/03/24 04:01:47.956
• [8.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/03/24 04:01:47.968
  Jan  3 04:01:47.968: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename limitrange @ 01/03/24 04:01:47.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:47.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:48.004
  STEP: Creating a LimitRange @ 01/03/24 04:01:48.012
  STEP: Setting up watch @ 01/03/24 04:01:48.012
  STEP: Submitting a LimitRange @ 01/03/24 04:01:48.12
  STEP: Verifying LimitRange creation was observed @ 01/03/24 04:01:48.133
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/03/24 04:01:48.133
  Jan  3 04:01:48.139: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jan  3 04:01:48.139: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/03/24 04:01:48.139
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/03/24 04:01:48.149
  Jan  3 04:01:48.155: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jan  3 04:01:48.155: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/03/24 04:01:48.155
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/03/24 04:01:48.165
  Jan  3 04:01:48.172: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jan  3 04:01:48.172: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/03/24 04:01:48.172
  STEP: Failing to create a Pod with more than max resources @ 01/03/24 04:01:48.177
  STEP: Updating a LimitRange @ 01/03/24 04:01:48.183
  STEP: Verifying LimitRange updating is effective @ 01/03/24 04:01:48.193
  STEP: Creating a Pod with less than former min resources @ 01/03/24 04:01:50.201
  STEP: Failing to create a Pod with more than max resources @ 01/03/24 04:01:50.211
  STEP: Deleting a LimitRange @ 01/03/24 04:01:50.225
  STEP: Verifying the LimitRange was deleted @ 01/03/24 04:01:50.236
  Jan  3 04:01:55.245: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/03/24 04:01:55.245
  Jan  3 04:01:55.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6534" for this suite. @ 01/03/24 04:01:55.276
• [7.317 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 01/03/24 04:01:55.287
  Jan  3 04:01:55.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:01:55.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:55.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:55.323
  STEP: validating cluster-info @ 01/03/24 04:01:55.33
  Jan  3 04:01:55.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-2144 cluster-info'
  Jan  3 04:01:55.496: INFO: stderr: ""
  Jan  3 04:01:55.496: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://169.169.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jan  3 04:01:55.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2144" for this suite. @ 01/03/24 04:01:55.504
• [0.227 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/03/24 04:01:55.515
  Jan  3 04:01:55.515: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replicaset @ 01/03/24 04:01:55.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:01:55.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:01:55.548
  Jan  3 04:01:55.562: INFO: Creating ReplicaSet my-hostname-basic-4e53f59b-d62e-4398-9fdf-00a043d04226
  Jan  3 04:01:55.575: INFO: Pod name my-hostname-basic-4e53f59b-d62e-4398-9fdf-00a043d04226: Found 0 pods out of 1
  Jan  3 04:02:00.584: INFO: Pod name my-hostname-basic-4e53f59b-d62e-4398-9fdf-00a043d04226: Found 1 pods out of 1
  Jan  3 04:02:00.584: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-4e53f59b-d62e-4398-9fdf-00a043d04226" is running
  Jan  3 04:02:00.589: INFO: Pod "my-hostname-basic-4e53f59b-d62e-4398-9fdf-00a043d04226-4b4jk" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:01:57 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:01:55 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:01:57 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:01:57 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:01:54 +0000 UTC Reason: Message:}])
  Jan  3 04:02:00.589: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/03/24 04:02:00.589
  Jan  3 04:02:00.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1682" for this suite. @ 01/03/24 04:02:00.615
• [5.108 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/03/24 04:02:00.623
  Jan  3 04:02:00.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replicaset @ 01/03/24 04:02:00.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:02:00.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:02:00.657
  STEP: Create a ReplicaSet @ 01/03/24 04:02:00.663
  STEP: Verify that the required pods have come up @ 01/03/24 04:02:00.67
  Jan  3 04:02:00.676: INFO: Pod name sample-pod: Found 0 pods out of 3
  Jan  3 04:02:05.688: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/03/24 04:02:05.688
  Jan  3 04:02:05.697: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/03/24 04:02:05.697
  STEP: DeleteCollection of the ReplicaSets @ 01/03/24 04:02:05.704
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/03/24 04:02:05.718
  Jan  3 04:02:05.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9390" for this suite. @ 01/03/24 04:02:05.738
• [5.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/03/24 04:02:05.751
  Jan  3 04:02:05.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:02:05.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:02:05.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:02:05.861
  STEP: Creating a pod to test downward api env vars @ 01/03/24 04:02:05.876
  STEP: Saw pod success @ 01/03/24 04:02:09.921
  Jan  3 04:02:09.926: INFO: Trying to get logs from node 192.168.18.92 pod downward-api-8cd3a888-7b05-4121-95d1-ac4d048fc1d8 container dapi-container: <nil>
  STEP: delete the pod @ 01/03/24 04:02:09.946
  Jan  3 04:02:09.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6564" for this suite. @ 01/03/24 04:02:09.982
• [4.246 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/03/24 04:02:09.997
  Jan  3 04:02:09.997: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:02:09.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:02:10.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:02:10.034
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-716cf23e-ecfe-4e5e-876a-6dcd2d4d1232 @ 01/03/24 04:02:10.046
  STEP: Creating the pod @ 01/03/24 04:02:10.054
  STEP: Updating configmap projected-configmap-test-upd-716cf23e-ecfe-4e5e-876a-6dcd2d4d1232 @ 01/03/24 04:02:12.098
  STEP: waiting to observe update in volume @ 01/03/24 04:02:12.108
  Jan  3 04:02:14.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7195" for this suite. @ 01/03/24 04:02:14.143
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 01/03/24 04:02:14.153
  Jan  3 04:02:14.153: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename var-expansion @ 01/03/24 04:02:14.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:02:14.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:02:14.186
  STEP: Creating a pod to test substitution in container's args @ 01/03/24 04:02:14.194
  STEP: Saw pod success @ 01/03/24 04:02:18.232
  Jan  3 04:02:18.238: INFO: Trying to get logs from node 192.168.18.92 pod var-expansion-23dd602b-fdf5-4047-8b0d-4c7bee44f895 container dapi-container: <nil>
  STEP: delete the pod @ 01/03/24 04:02:18.25
  Jan  3 04:02:18.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-615" for this suite. @ 01/03/24 04:02:18.275
• [4.132 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/03/24 04:02:18.286
  Jan  3 04:02:18.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename chunking @ 01/03/24 04:02:18.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:02:18.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:02:18.322
  STEP: creating a large number of resources @ 01/03/24 04:02:18.329
  STEP: retrieving the first page @ 01/03/24 04:02:36.001
  Jan  3 04:02:36.053: INFO: Retrieved 40/40 results with rv 97007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 01/03/24 04:02:36.053
  Jan  3 04:02:56.069: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:03:16.068: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:03:36.068: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:03:56.069: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:04:16.067: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:04:36.066: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:04:56.071: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:05:16.068: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:05:36.067: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:05:56.074: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:06:16.069: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:06:36.066: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:06:56.069: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:07:16.067: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:07:36.067: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:07:56.070: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:08:16.070: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:08:36.067: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:08:56.074: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:09:16.068: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:09:36.072: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:09:56.073: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTcwMDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jan  3 04:10:16.064: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jan  3 04:10:16.064: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/03/24 04:10:16.064
  STEP: retrieving all remaining pages @ 01/03/24 04:10:16.086
  Jan  3 04:10:16.095: INFO: Retrieved 40/40 results with rv 97649 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTc2NDksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jan  3 04:10:16.112: INFO: Retrieved 40/40 results with rv 97649 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTc2NDksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jan  3 04:10:16.122: INFO: Retrieved 40/40 results with rv 97649 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTc2NDksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jan  3 04:10:16.131: INFO: Retrieved 40/40 results with rv 97649 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTc2NDksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jan  3 04:10:16.141: INFO: Retrieved 40/40 results with rv 97649 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTc2NDksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jan  3 04:10:16.152: INFO: Retrieved 40/40 results with rv 97649 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTc2NDksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jan  3 04:10:16.162: INFO: Retrieved 40/40 results with rv 97649 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTc2NDksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jan  3 04:10:16.171: INFO: Retrieved 40/40 results with rv 97649 and continue 
  Jan  3 04:10:16.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7800" for this suite. @ 01/03/24 04:10:16.181
• [477.905 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 01/03/24 04:10:16.191
  Jan  3 04:10:16.191: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:10:16.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:10:16.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:10:16.228
  STEP: Creating a pod to test downward api env vars @ 01/03/24 04:10:16.235
  STEP: Saw pod success @ 01/03/24 04:10:20.287
  Jan  3 04:10:20.293: INFO: Trying to get logs from node 192.168.18.92 pod downward-api-6e4596ae-2387-473d-8bee-a594ee68f5b8 container dapi-container: <nil>
  STEP: delete the pod @ 01/03/24 04:10:20.342
  Jan  3 04:10:20.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9474" for this suite. @ 01/03/24 04:10:20.375
• [4.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 01/03/24 04:10:20.385
  Jan  3 04:10:20.385: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 04:10:20.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:10:20.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:10:20.41
  STEP: Creating secret with name secret-test-d3c30026-03c2-49d6-9ff9-eab941928ed1 @ 01/03/24 04:10:20.416
  STEP: Creating a pod to test consume secrets @ 01/03/24 04:10:20.423
  STEP: Saw pod success @ 01/03/24 04:10:24.458
  Jan  3 04:10:24.465: INFO: Trying to get logs from node 192.168.18.92 pod pod-secrets-77dee818-9b2c-4889-bb17-bfba6bbaa7e6 container secret-env-test: <nil>
  STEP: delete the pod @ 01/03/24 04:10:24.481
  Jan  3 04:10:24.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6544" for this suite. @ 01/03/24 04:10:24.514
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 01/03/24 04:10:24.529
  Jan  3 04:10:24.529: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename disruption @ 01/03/24 04:10:24.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:10:24.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:10:24.565
  STEP: Waiting for the pdb to be processed @ 01/03/24 04:10:24.582
  STEP: Waiting for all pods to be running @ 01/03/24 04:10:26.676
  Jan  3 04:10:26.683: INFO: running pods: 0 < 3
  Jan  3 04:10:28.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4441" for this suite. @ 01/03/24 04:10:28.703
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/03/24 04:10:28.711
  Jan  3 04:10:28.711: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename subpath @ 01/03/24 04:10:28.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:10:28.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:10:28.748
  STEP: Setting up data @ 01/03/24 04:10:28.754
  STEP: Creating pod pod-subpath-test-secret-r8b7 @ 01/03/24 04:10:28.77
  STEP: Creating a pod to test atomic-volume-subpath @ 01/03/24 04:10:28.77
  STEP: Saw pod success @ 01/03/24 04:11:08.983
  Jan  3 04:11:08.989: INFO: Trying to get logs from node 192.168.18.92 pod pod-subpath-test-secret-r8b7 container test-container-subpath-secret-r8b7: <nil>
  STEP: delete the pod @ 01/03/24 04:11:09.004
  STEP: Deleting pod pod-subpath-test-secret-r8b7 @ 01/03/24 04:11:09.028
  Jan  3 04:11:09.028: INFO: Deleting pod "pod-subpath-test-secret-r8b7" in namespace "subpath-1244"
  Jan  3 04:11:09.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1244" for this suite. @ 01/03/24 04:11:09.042
• [40.339 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/03/24 04:11:09.051
  Jan  3 04:11:09.051: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename subpath @ 01/03/24 04:11:09.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:11:09.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:11:09.085
  STEP: Setting up data @ 01/03/24 04:11:09.091
  STEP: Creating pod pod-subpath-test-configmap-7jqp @ 01/03/24 04:11:09.107
  STEP: Creating a pod to test atomic-volume-subpath @ 01/03/24 04:11:09.107
  STEP: Saw pod success @ 01/03/24 04:11:33.231
  Jan  3 04:11:33.237: INFO: Trying to get logs from node 192.168.18.92 pod pod-subpath-test-configmap-7jqp container test-container-subpath-configmap-7jqp: <nil>
  STEP: delete the pod @ 01/03/24 04:11:33.253
  STEP: Deleting pod pod-subpath-test-configmap-7jqp @ 01/03/24 04:11:33.27
  Jan  3 04:11:33.270: INFO: Deleting pod "pod-subpath-test-configmap-7jqp" in namespace "subpath-3185"
  Jan  3 04:11:33.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3185" for this suite. @ 01/03/24 04:11:33.286
• [24.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 01/03/24 04:11:33.296
  Jan  3 04:11:33.296: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 04:11:33.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:11:33.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:11:33.328
  STEP: Setting up server cert @ 01/03/24 04:11:33.367
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 04:11:34.363
  STEP: Deploying the webhook pod @ 01/03/24 04:11:34.38
  STEP: Wait for the deployment to be ready @ 01/03/24 04:11:34.398
  Jan  3 04:11:34.408: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/03/24 04:11:36.428
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 04:11:36.442
  Jan  3 04:11:37.443: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan  3 04:11:37.460: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9201-crds.webhook.example.com via the AdmissionRegistration API @ 01/03/24 04:11:37.985
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/03/24 04:11:38.026
  Jan  3 04:11:40.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7708" for this suite. @ 01/03/24 04:11:40.724
  STEP: Destroying namespace "webhook-markers-8070" for this suite. @ 01/03/24 04:11:40.734
• [7.450 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/03/24 04:11:40.746
  Jan  3 04:11:40.746: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename deployment @ 01/03/24 04:11:40.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:11:40.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:11:40.783
  Jan  3 04:11:40.805: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Jan  3 04:11:45.813: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/03/24 04:11:45.813
  Jan  3 04:11:45.813: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Jan  3 04:11:47.824: INFO: Creating deployment "test-rollover-deployment"
  Jan  3 04:11:47.837: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Jan  3 04:11:49.850: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jan  3 04:11:49.864: INFO: Ensure that both replica sets have 1 created replica
  Jan  3 04:11:49.875: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jan  3 04:11:49.896: INFO: Updating deployment test-rollover-deployment
  Jan  3 04:11:49.896: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Jan  3 04:11:51.911: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jan  3 04:11:51.924: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jan  3 04:11:51.935: INFO: all replica sets need to contain the pod-template-hash label
  Jan  3 04:11:51.935: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:11:53.952: INFO: all replica sets need to contain the pod-template-hash label
  Jan  3 04:11:53.952: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:11:55.951: INFO: all replica sets need to contain the pod-template-hash label
  Jan  3 04:11:55.951: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:11:57.952: INFO: all replica sets need to contain the pod-template-hash label
  Jan  3 04:11:57.953: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:11:59.951: INFO: all replica sets need to contain the pod-template-hash label
  Jan  3 04:11:59.951: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:12:01.956: INFO: 
  Jan  3 04:12:01.956: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 12, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 11, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:12:03.950: INFO: 
  Jan  3 04:12:03.950: INFO: Ensure that both old replica sets have no replicas
  Jan  3 04:12:03.969: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5814",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa8492ba-213a-4950-a40a-bc3cd21fe0df",
      ResourceVersion: (string) (len=5) "98593",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan  3 04:12:03.981: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5814",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75dbd963-bf2c-4dcc-a7f8-29ec2bc73ba0",
      ResourceVersion: (string) (len=5) "98583",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "fa8492ba-213a-4950-a40a-bc3cd21fe0df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 61 38 34 39 32  62 61 2d 32 31 33 61 2d  |\"fa8492ba-213a-|
              00000120  34 39 35 30 2d 61 34 30  61 2d 62 63 33 63 64 32  |4950-a40a-bc3cd2|
              00000130  31 66 65 30 64 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1fe0df\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 04:12:03.983: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jan  3 04:12:03.984: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5814",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23d62f01-df61-4825-aeb2-c6ceaca10f32",
      ResourceVersion: (string) (len=5) "98592",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "fa8492ba-213a-4950-a40a-bc3cd21fe0df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 61 38 34 39 32 62 61  2d 32 31 33 61 2d 34 39  |fa8492ba-213a-49|
              000000c0  35 30 2d 61 34 30 61 2d  62 63 33 63 64 32 31 66  |50-a40a-bc3cd21f|
              000000d0  65 30 64 66 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |e0df\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 04:12:03.987: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5814",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "971449e0-2ce9-4c75-ba9e-92618fd34e21",
      ResourceVersion: (string) (len=5) "98553",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "fa8492ba-213a-4950-a40a-bc3cd21fe0df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 61 38 34 39 32  62 61 2d 32 31 33 61 2d  |\"fa8492ba-213a-|
              00000120  34 39 35 30 2d 61 34 30  61 2d 62 63 33 63 64 32  |4950-a40a-bc3cd2|
              00000130  31 66 65 30 64 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1fe0df\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 04:12:03.997: INFO: Pod "test-rollover-deployment-5d484bf7f9-g5rkj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-g5rkj",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-5814",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0309fb8f-75d8-4ef1-b195-b3f9b7998f3e",
      ResourceVersion: (string) (len=5) "98566",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e1efb7b331cbc2d434969cf8094115470c00d6f344d6d515b8640a634878f066",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "75dbd963-bf2c-4dcc-a7f8-29ec2bc73ba0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 35  64 62 64 39 36 33 2d 62  |d\":\"75dbd963-b|
              00000090  66 32 63 2d 34 64 63 63  2d 61 37 66 38 2d 32 39  |f2c-4dcc-a7f8-29|
              000000a0  65 63 32 62 63 37 33 62  61 30 5c 22 7d 22 3a 7b  |ec2bc73ba0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 32  39 5c 22 7d 22 3a 7b 22  |.1.155.29\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4vw7k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4vw7k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839851909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=11) "10.1.155.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.155.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839851909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839851911,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://0201e8b58a954769ab09f85c9d30b7db29440d9f410c3e57f1162f3754477c2c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:12:04.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5814" for this suite. @ 01/03/24 04:12:04.018
• [23.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/03/24 04:12:04.029
  Jan  3 04:12:04.029: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename runtimeclass @ 01/03/24 04:12:04.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:12:04.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:12:04.062
  Jan  3 04:12:04.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4812" for this suite. @ 01/03/24 04:12:04.133
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 01/03/24 04:12:04.15
  Jan  3 04:12:04.150: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/03/24 04:12:04.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:12:04.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:12:04.184
  Jan  3 04:12:04.192: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/03/24 04:12:05.968
  Jan  3 04:12:05.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 --namespace=crd-publish-openapi-5367 create -f -'
  Jan  3 04:12:06.238: INFO: stderr: ""
  Jan  3 04:12:06.238: INFO: stdout: "e2e-test-crd-publish-openapi-1174-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jan  3 04:12:06.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 --namespace=crd-publish-openapi-5367 delete e2e-test-crd-publish-openapi-1174-crds test-foo'
  Jan  3 04:12:06.416: INFO: stderr: ""
  Jan  3 04:12:06.416: INFO: stdout: "e2e-test-crd-publish-openapi-1174-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jan  3 04:12:06.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 --namespace=crd-publish-openapi-5367 apply -f -'
  Jan  3 04:12:06.600: INFO: stderr: ""
  Jan  3 04:12:06.601: INFO: stdout: "e2e-test-crd-publish-openapi-1174-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jan  3 04:12:06.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 --namespace=crd-publish-openapi-5367 delete e2e-test-crd-publish-openapi-1174-crds test-foo'
  Jan  3 04:12:06.793: INFO: stderr: ""
  Jan  3 04:12:06.793: INFO: stdout: "e2e-test-crd-publish-openapi-1174-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/03/24 04:12:06.793
  Jan  3 04:12:06.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 --namespace=crd-publish-openapi-5367 create -f -'
  Jan  3 04:12:06.975: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/03/24 04:12:06.975
  Jan  3 04:12:06.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 --namespace=crd-publish-openapi-5367 create -f -'
  Jan  3 04:12:07.168: INFO: rc: 1
  Jan  3 04:12:07.169: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 --namespace=crd-publish-openapi-5367 apply -f -'
  Jan  3 04:12:07.354: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/03/24 04:12:07.354
  Jan  3 04:12:07.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 --namespace=crd-publish-openapi-5367 create -f -'
  Jan  3 04:12:07.545: INFO: rc: 1
  Jan  3 04:12:07.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 --namespace=crd-publish-openapi-5367 apply -f -'
  Jan  3 04:12:07.762: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/03/24 04:12:07.762
  Jan  3 04:12:07.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 explain e2e-test-crd-publish-openapi-1174-crds'
  Jan  3 04:12:07.933: INFO: stderr: ""
  Jan  3 04:12:07.933: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1174-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/03/24 04:12:07.933
  Jan  3 04:12:07.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 explain e2e-test-crd-publish-openapi-1174-crds.metadata'
  Jan  3 04:12:08.105: INFO: stderr: ""
  Jan  3 04:12:08.105: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1174-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jan  3 04:12:08.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 explain e2e-test-crd-publish-openapi-1174-crds.spec'
  Jan  3 04:12:08.234: INFO: stderr: ""
  Jan  3 04:12:08.234: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1174-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jan  3 04:12:08.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 explain e2e-test-crd-publish-openapi-1174-crds.spec.bars'
  Jan  3 04:12:08.403: INFO: stderr: ""
  Jan  3 04:12:08.403: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1174-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/03/24 04:12:08.404
  Jan  3 04:12:08.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=crd-publish-openapi-5367 explain e2e-test-crd-publish-openapi-1174-crds.spec.bars2'
  Jan  3 04:12:08.600: INFO: rc: 1
  Jan  3 04:12:10.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5367" for this suite. @ 01/03/24 04:12:10.353
• [6.211 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 01/03/24 04:12:10.361
  Jan  3 04:12:10.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename dns @ 01/03/24 04:12:10.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:12:10.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:12:10.388
  STEP: Creating a test headless service @ 01/03/24 04:12:10.394
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local;sleep 1; done
   @ 01/03/24 04:12:10.406
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local;sleep 1; done
   @ 01/03/24 04:12:10.406
  STEP: creating a pod to probe DNS @ 01/03/24 04:12:10.406
  STEP: submitting the pod to kubernetes @ 01/03/24 04:12:10.406
  STEP: retrieving the pod @ 01/03/24 04:12:14.452
  STEP: looking for the results for each expected name from probers @ 01/03/24 04:12:14.463
  Jan  3 04:12:14.472: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:14.478: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:14.483: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:14.489: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:14.494: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:14.501: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:14.507: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:14.513: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:14.513: INFO: Lookups using dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local]

  Jan  3 04:12:14.527: INFO: Pod client logs for webserver: 
  Jan  3 04:12:14.537: INFO: Pod client logs for querier: 
  Jan  3 04:12:14.546: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:12:19.475: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:19.482: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:19.492: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:19.499: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:19.507: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:19.518: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:19.526: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:19.532: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:19.532: INFO: Lookups using dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local]

  Jan  3 04:12:19.543: INFO: Pod client logs for webserver: 
  Jan  3 04:12:19.553: INFO: Pod client logs for querier: 
  Jan  3 04:12:19.563: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:12:24.472: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:24.479: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:24.485: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:24.492: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:24.499: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:24.506: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:24.513: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:24.520: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:24.520: INFO: Lookups using dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local]

  Jan  3 04:12:24.533: INFO: Pod client logs for webserver: 
  Jan  3 04:12:24.543: INFO: Pod client logs for querier: 
  Jan  3 04:12:24.554: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:12:29.473: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:29.481: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:29.488: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:29.495: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:29.502: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:29.509: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:29.517: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:29.525: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:29.525: INFO: Lookups using dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local]

  Jan  3 04:12:29.537: INFO: Pod client logs for webserver: 
  Jan  3 04:12:29.549: INFO: Pod client logs for querier: 
  Jan  3 04:12:29.560: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:12:34.471: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:34.478: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:34.484: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:34.490: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:34.500: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:34.507: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:34.512: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:34.519: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:34.519: INFO: Lookups using dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local]

  Jan  3 04:12:34.530: INFO: Pod client logs for webserver: 
  Jan  3 04:12:34.540: INFO: Pod client logs for querier: 
  Jan  3 04:12:34.552: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:12:39.474: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:39.482: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:39.490: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:39.497: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:39.504: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:39.511: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:39.519: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:39.525: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea: the server could not find the requested resource (get pods dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea)
  Jan  3 04:12:39.525: INFO: Lookups using dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local]

  Jan  3 04:12:39.537: INFO: Pod client logs for webserver: 
  Jan  3 04:12:39.549: INFO: Pod client logs for querier: 
  Jan  3 04:12:39.562: INFO: Pod client logs for jessie-querier: 
  Jan  3 04:12:44.522: INFO: DNS probes using dns-5460/dns-test-7825c142-2df6-4ea3-9317-38cccbff89ea succeeded

  STEP: deleting the pod @ 01/03/24 04:12:44.523
  STEP: deleting the test headless service @ 01/03/24 04:12:44.55
  Jan  3 04:12:44.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5460" for this suite. @ 01/03/24 04:12:44.601
• [34.260 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/03/24 04:12:44.622
  Jan  3 04:12:44.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename namespaces @ 01/03/24 04:12:44.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:12:44.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:12:44.657
  STEP: Creating a test namespace @ 01/03/24 04:12:44.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:12:44.686
  STEP: Creating a service in the namespace @ 01/03/24 04:12:44.692
  STEP: Deleting the namespace @ 01/03/24 04:12:44.706
  STEP: Waiting for the namespace to be removed. @ 01/03/24 04:12:44.723
  STEP: Recreating the namespace @ 01/03/24 04:12:50.729
  STEP: Verifying there is no service in the namespace @ 01/03/24 04:12:50.751
  Jan  3 04:12:50.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9704" for this suite. @ 01/03/24 04:12:50.766
  STEP: Destroying namespace "nsdeletetest-3926" for this suite. @ 01/03/24 04:12:50.776
  Jan  3 04:12:50.782: INFO: Namespace nsdeletetest-3926 was already deleted
  STEP: Destroying namespace "nsdeletetest-6035" for this suite. @ 01/03/24 04:12:50.782
• [6.169 seconds]
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 01/03/24 04:12:50.791
  Jan  3 04:12:50.791: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 04:12:50.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:12:50.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:12:50.83
  STEP: Creating pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350 @ 01/03/24 04:12:50.837
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/03/24 04:12:52.865
  Jan  3 04:12:52.872: INFO: Initial restart count of pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f is 0
  Jan  3 04:12:52.879: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:12:54.888: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:12:56.898: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:12:58.907: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:00.916: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:02.925: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:04.934: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:06.942: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:08.951: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:10.961: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:12.968: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:14.979: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:16.987: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:18.998: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:21.009: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:23.018: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:25.028: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:27.037: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:29.048: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:31.060: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:33.069: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:35.077: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:37.088: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:39.103: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:41.113: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:43.122: INFO: Get pod busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f in namespace container-probe-7350
  Jan  3 04:13:43.122: INFO: Restart count of pod container-probe-7350/busybox-d7d51210-ba34-40c0-a7d9-3260c3715d2f is now 1 (50.249976365s elapsed)
  STEP: deleting the pod @ 01/03/24 04:13:43.123
  Jan  3 04:13:43.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7350" for this suite. @ 01/03/24 04:13:43.15
• [52.370 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 01/03/24 04:13:43.161
  Jan  3 04:13:43.161: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename field-validation @ 01/03/24 04:13:43.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:13:43.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:13:43.199
  STEP: apply creating a deployment @ 01/03/24 04:13:43.214
  Jan  3 04:13:43.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8614" for this suite. @ 01/03/24 04:13:43.246
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 01/03/24 04:13:43.258
  Jan  3 04:13:43.258: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:13:43.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:13:43.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:13:43.299
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/03/24 04:13:43.306
  Jan  3 04:13:43.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-1692 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jan  3 04:13:43.500: INFO: stderr: ""
  Jan  3 04:13:43.500: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/03/24 04:13:43.5
  Jan  3 04:13:43.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-1692 delete pods e2e-test-httpd-pod'
  Jan  3 04:13:46.512: INFO: stderr: ""
  Jan  3 04:13:46.512: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jan  3 04:13:46.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1692" for this suite. @ 01/03/24 04:13:46.522
• [3.271 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/03/24 04:13:46.529
  Jan  3 04:13:46.529: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:13:46.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:13:46.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:13:46.559
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:13:46.565
  STEP: Saw pod success @ 01/03/24 04:13:50.602
  Jan  3 04:13:50.608: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-4005483b-4e13-4b38-a00e-9e8793087c25 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:13:50.621
  Jan  3 04:13:50.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4589" for this suite. @ 01/03/24 04:13:50.667
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 01/03/24 04:13:50.678
  Jan  3 04:13:50.678: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename statefulset @ 01/03/24 04:13:50.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:13:50.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:13:50.71
  STEP: Creating service test in namespace statefulset-4724 @ 01/03/24 04:13:50.717
  STEP: Looking for a node to schedule stateful set and pod @ 01/03/24 04:13:50.726
  STEP: Creating pod with conflicting port in namespace statefulset-4724 @ 01/03/24 04:13:50.734
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4724 @ 01/03/24 04:13:50.746
  STEP: Creating statefulset with conflicting port in namespace statefulset-4724 @ 01/03/24 04:13:52.761
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4724 @ 01/03/24 04:13:52.772
  Jan  3 04:13:52.791: INFO: Observed stateful pod in namespace: statefulset-4724, name: ss-0, uid: 1a6cfc5f-9469-4124-b6a9-6008a0127d1f, status phase: Pending. Waiting for statefulset controller to delete.
  Jan  3 04:13:52.819: INFO: Observed stateful pod in namespace: statefulset-4724, name: ss-0, uid: 1a6cfc5f-9469-4124-b6a9-6008a0127d1f, status phase: Failed. Waiting for statefulset controller to delete.
  Jan  3 04:13:52.833: INFO: Observed stateful pod in namespace: statefulset-4724, name: ss-0, uid: 1a6cfc5f-9469-4124-b6a9-6008a0127d1f, status phase: Failed. Waiting for statefulset controller to delete.
  Jan  3 04:13:52.837: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4724
  STEP: Removing pod with conflicting port in namespace statefulset-4724 @ 01/03/24 04:13:52.837
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4724 and will be in running state @ 01/03/24 04:13:52.875
  Jan  3 04:13:56.917: INFO: Deleting all statefulset in ns statefulset-4724
  Jan  3 04:13:56.922: INFO: Scaling statefulset ss to 0
  Jan  3 04:14:06.947: INFO: Waiting for statefulset status.replicas updated to 0
  Jan  3 04:14:06.954: INFO: Deleting statefulset ss
  Jan  3 04:14:06.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4724" for this suite. @ 01/03/24 04:14:06.986
• [16.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 01/03/24 04:14:07
  Jan  3 04:14:07.000: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename security-context-test @ 01/03/24 04:14:07.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:14:07.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:14:07.034
  Jan  3 04:14:11.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2483" for this suite. @ 01/03/24 04:14:11.111
• [4.122 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/03/24 04:14:11.122
  Jan  3 04:14:11.122: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/03/24 04:14:11.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:14:11.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:14:11.158
  STEP: Creating 50 configmaps @ 01/03/24 04:14:11.166
  STEP: Creating RC which spawns configmap-volume pods @ 01/03/24 04:14:11.538
  Jan  3 04:14:11.566: INFO: Pod name wrapped-volume-race-4f9c5974-719e-4dbe-abb4-66d458e6ed72: Found 0 pods out of 5
  Jan  3 04:14:16.583: INFO: Pod name wrapped-volume-race-4f9c5974-719e-4dbe-abb4-66d458e6ed72: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/03/24 04:14:16.584
  STEP: Creating RC which spawns configmap-volume pods @ 01/03/24 04:14:16.623
  Jan  3 04:14:16.646: INFO: Pod name wrapped-volume-race-421e00fe-53c8-4d14-9972-b9ab292b1da1: Found 0 pods out of 5
  Jan  3 04:14:21.680: INFO: Pod name wrapped-volume-race-421e00fe-53c8-4d14-9972-b9ab292b1da1: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/03/24 04:14:21.68
  STEP: Creating RC which spawns configmap-volume pods @ 01/03/24 04:14:21.735
  Jan  3 04:14:21.770: INFO: Pod name wrapped-volume-race-2b9687d4-622d-4f4d-a3b3-92b4005aceca: Found 0 pods out of 5
  Jan  3 04:14:26.808: INFO: Pod name wrapped-volume-race-2b9687d4-622d-4f4d-a3b3-92b4005aceca: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/03/24 04:14:26.808
  STEP: deleting ReplicationController wrapped-volume-race-2b9687d4-622d-4f4d-a3b3-92b4005aceca in namespace emptydir-wrapper-2219, will wait for the garbage collector to delete the pods @ 01/03/24 04:14:26.854
  Jan  3 04:14:26.924: INFO: Deleting ReplicationController wrapped-volume-race-2b9687d4-622d-4f4d-a3b3-92b4005aceca took: 12.190427ms
  Jan  3 04:14:27.040: INFO: Terminating ReplicationController wrapped-volume-race-2b9687d4-622d-4f4d-a3b3-92b4005aceca pods took: 115.547934ms
  STEP: deleting ReplicationController wrapped-volume-race-421e00fe-53c8-4d14-9972-b9ab292b1da1 in namespace emptydir-wrapper-2219, will wait for the garbage collector to delete the pods @ 01/03/24 04:14:29.341
  Jan  3 04:14:29.410: INFO: Deleting ReplicationController wrapped-volume-race-421e00fe-53c8-4d14-9972-b9ab292b1da1 took: 9.750078ms
  Jan  3 04:14:29.511: INFO: Terminating ReplicationController wrapped-volume-race-421e00fe-53c8-4d14-9972-b9ab292b1da1 pods took: 100.933878ms
  STEP: deleting ReplicationController wrapped-volume-race-4f9c5974-719e-4dbe-abb4-66d458e6ed72 in namespace emptydir-wrapper-2219, will wait for the garbage collector to delete the pods @ 01/03/24 04:14:31.813
  Jan  3 04:14:31.886: INFO: Deleting ReplicationController wrapped-volume-race-4f9c5974-719e-4dbe-abb4-66d458e6ed72 took: 12.608072ms
  Jan  3 04:14:32.090: INFO: Terminating ReplicationController wrapped-volume-race-4f9c5974-719e-4dbe-abb4-66d458e6ed72 pods took: 203.417075ms
  STEP: Cleaning up the configMaps @ 01/03/24 04:14:34.191
  Jan  3 04:14:34.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2219" for this suite. @ 01/03/24 04:14:34.563
• [23.450 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 01/03/24 04:14:34.572
  Jan  3 04:14:34.572: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/03/24 04:14:34.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:14:34.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:14:34.62
  STEP: create the container to handle the HTTPGet hook request. @ 01/03/24 04:14:34.632
  STEP: create the pod with lifecycle hook @ 01/03/24 04:14:38.673
  STEP: delete the pod with lifecycle hook @ 01/03/24 04:14:40.702
  STEP: check prestop hook @ 01/03/24 04:14:44.745
  Jan  3 04:14:44.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5961" for this suite. @ 01/03/24 04:14:44.768
• [10.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/03/24 04:14:44.779
  Jan  3 04:14:44.779: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename proxy @ 01/03/24 04:14:44.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:14:44.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:14:44.818
  Jan  3 04:14:44.824: INFO: Creating pod...
  Jan  3 04:14:48.861: INFO: Creating service...
  Jan  3 04:14:48.877: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/pods/agnhost/proxy/some/path/with/DELETE
  Jan  3 04:14:48.889: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan  3 04:14:48.890: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/pods/agnhost/proxy/some/path/with/GET
  Jan  3 04:14:48.897: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jan  3 04:14:48.897: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/pods/agnhost/proxy/some/path/with/HEAD
  Jan  3 04:14:48.902: INFO: http.Client request:HEAD | StatusCode:200
  Jan  3 04:14:48.902: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/pods/agnhost/proxy/some/path/with/OPTIONS
  Jan  3 04:14:48.908: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan  3 04:14:48.908: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/pods/agnhost/proxy/some/path/with/PATCH
  Jan  3 04:14:48.914: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan  3 04:14:48.914: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/pods/agnhost/proxy/some/path/with/POST
  Jan  3 04:14:48.922: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan  3 04:14:48.922: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/pods/agnhost/proxy/some/path/with/PUT
  Jan  3 04:14:48.927: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan  3 04:14:48.927: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/services/test-service/proxy/some/path/with/DELETE
  Jan  3 04:14:48.934: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan  3 04:14:48.934: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/services/test-service/proxy/some/path/with/GET
  Jan  3 04:14:48.941: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jan  3 04:14:48.942: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/services/test-service/proxy/some/path/with/HEAD
  Jan  3 04:14:48.947: INFO: http.Client request:HEAD | StatusCode:200
  Jan  3 04:14:48.947: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/services/test-service/proxy/some/path/with/OPTIONS
  Jan  3 04:14:48.954: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan  3 04:14:48.954: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/services/test-service/proxy/some/path/with/PATCH
  Jan  3 04:14:48.961: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan  3 04:14:48.961: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/services/test-service/proxy/some/path/with/POST
  Jan  3 04:14:48.968: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan  3 04:14:48.968: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-7847/services/test-service/proxy/some/path/with/PUT
  Jan  3 04:14:48.977: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan  3 04:14:48.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7847" for this suite. @ 01/03/24 04:14:48.985
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 01/03/24 04:14:49.006
  Jan  3 04:14:49.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename disruption @ 01/03/24 04:14:49.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:14:49.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:14:49.04
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/03/24 04:14:49.047
  STEP: Waiting for the pdb to be processed @ 01/03/24 04:14:49.053
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/03/24 04:14:51.074
  STEP: Waiting for all pods to be running @ 01/03/24 04:14:51.074
  Jan  3 04:14:51.081: INFO: pods: 0 < 3
  Jan  3 04:14:53.086: INFO: running pods: 1 < 3
  STEP: locating a running pod @ 01/03/24 04:14:55.084
  STEP: Updating the pdb to allow a pod to be evicted @ 01/03/24 04:14:55.104
  STEP: Waiting for the pdb to be processed @ 01/03/24 04:14:55.126
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/03/24 04:14:57.134
  STEP: Waiting for all pods to be running @ 01/03/24 04:14:57.134
  STEP: Waiting for the pdb to observed all healthy pods @ 01/03/24 04:14:57.142
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/03/24 04:14:57.19
  STEP: Waiting for the pdb to be processed @ 01/03/24 04:14:57.254
  STEP: Waiting for all pods to be running @ 01/03/24 04:14:59.263
  STEP: locating a running pod @ 01/03/24 04:14:59.282
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/03/24 04:14:59.3
  STEP: Waiting for the pdb to be deleted @ 01/03/24 04:14:59.309
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/03/24 04:14:59.313
  STEP: Waiting for all pods to be running @ 01/03/24 04:14:59.314
  Jan  3 04:14:59.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2218" for this suite. @ 01/03/24 04:14:59.36
• [10.383 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 01/03/24 04:14:59.389
  Jan  3 04:14:59.390: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:14:59.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:14:59.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:14:59.45
  STEP: Creating configMap configmap-3865/configmap-test-df4791c3-b040-4f88-8480-4a74e37b032e @ 01/03/24 04:14:59.457
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:14:59.465
  STEP: Saw pod success @ 01/03/24 04:15:03.502
  Jan  3 04:15:03.508: INFO: Trying to get logs from node 192.168.18.92 pod pod-configmaps-8da93bc6-da6a-48d4-b11a-f481bdf4912d container env-test: <nil>
  STEP: delete the pod @ 01/03/24 04:15:03.524
  Jan  3 04:15:03.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3865" for this suite. @ 01/03/24 04:15:03.556
• [4.179 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 01/03/24 04:15:03.569
  Jan  3 04:15:03.569: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:15:03.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:15:03.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:15:03.601
  STEP: creating service multi-endpoint-test in namespace services-3590 @ 01/03/24 04:15:03.609
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3590 to expose endpoints map[] @ 01/03/24 04:15:03.624
  Jan  3 04:15:03.632: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Jan  3 04:15:04.670: INFO: successfully validated that service multi-endpoint-test in namespace services-3590 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3590 @ 01/03/24 04:15:04.671
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3590 to expose endpoints map[pod1:[100]] @ 01/03/24 04:15:06.717
  Jan  3 04:15:06.737: INFO: successfully validated that service multi-endpoint-test in namespace services-3590 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3590 @ 01/03/24 04:15:06.737
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3590 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/03/24 04:15:10.775
  Jan  3 04:15:10.801: INFO: successfully validated that service multi-endpoint-test in namespace services-3590 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/03/24 04:15:10.801
  Jan  3 04:15:10.801: INFO: Creating new exec pod
  Jan  3 04:15:13.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3590 exec execpoddvtrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jan  3 04:15:14.174: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jan  3 04:15:14.174: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:15:14.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3590 exec execpoddvtrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.174.15 80'
  Jan  3 04:15:14.492: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.174.15 80\nConnection to 169.169.174.15 80 port [tcp/http] succeeded!\n"
  Jan  3 04:15:14.493: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:15:14.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3590 exec execpoddvtrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jan  3 04:15:14.752: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jan  3 04:15:14.752: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:15:14.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3590 exec execpoddvtrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.174.15 81'
  Jan  3 04:15:15.031: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.174.15 81\nConnection to 169.169.174.15 81 port [tcp/*] succeeded!\n"
  Jan  3 04:15:15.031: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3590 @ 01/03/24 04:15:15.031
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3590 to expose endpoints map[pod2:[101]] @ 01/03/24 04:15:15.063
  Jan  3 04:15:15.089: INFO: successfully validated that service multi-endpoint-test in namespace services-3590 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3590 @ 01/03/24 04:15:15.089
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3590 to expose endpoints map[] @ 01/03/24 04:15:15.127
  Jan  3 04:15:15.148: INFO: successfully validated that service multi-endpoint-test in namespace services-3590 exposes endpoints map[]
  Jan  3 04:15:15.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3590" for this suite. @ 01/03/24 04:15:15.192
• [11.632 seconds]
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/03/24 04:15:15.201
  Jan  3 04:15:15.201: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename endpointslice @ 01/03/24 04:15:15.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:15:15.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:15:15.238
  STEP: referencing a single matching pod @ 01/03/24 04:15:20.341
  STEP: referencing matching pods with named port @ 01/03/24 04:15:25.353
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/03/24 04:15:30.369
  STEP: recreating EndpointSlices after they've been deleted @ 01/03/24 04:15:35.383
  Jan  3 04:15:35.413: INFO: EndpointSlice for Service endpointslice-2518/example-named-port not found
  Jan  3 04:15:45.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2518" for this suite. @ 01/03/24 04:15:45.439
• [30.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 01/03/24 04:15:45.454
  Jan  3 04:15:45.454: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename field-validation @ 01/03/24 04:15:45.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:15:45.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:15:45.489
  Jan  3 04:15:45.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  W0103 04:15:45.498593      20 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00071bfe0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0103 04:15:48.099573      20 warnings.go:70] unknown field "alpha"
  W0103 04:15:48.099659      20 warnings.go:70] unknown field "beta"
  W0103 04:15:48.099672      20 warnings.go:70] unknown field "delta"
  W0103 04:15:48.099682      20 warnings.go:70] unknown field "epsilon"
  W0103 04:15:48.099692      20 warnings.go:70] unknown field "gamma"
  Jan  3 04:15:48.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5190" for this suite. @ 01/03/24 04:15:48.694
• [3.248 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 01/03/24 04:15:48.703
  Jan  3 04:15:48.703: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-preemption @ 01/03/24 04:15:48.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:15:48.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:15:48.732
  Jan  3 04:15:48.765: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan  3 04:16:48.779: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/03/24 04:16:48.791
  Jan  3 04:16:48.843: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jan  3 04:16:48.851: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jan  3 04:16:48.904: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jan  3 04:16:48.923: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/03/24 04:16:48.925
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/03/24 04:16:52.967
  Jan  3 04:16:57.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9046" for this suite. @ 01/03/24 04:16:57.15
• [68.458 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/03/24 04:16:57.161
  Jan  3 04:16:57.161: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 04:16:57.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:16:57.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:16:57.195
  STEP: Creating secret with name secret-test-68ac2501-08a7-4bdd-8fc6-a288b3b1f5db @ 01/03/24 04:16:57.2
  STEP: Creating a pod to test consume secrets @ 01/03/24 04:16:57.207
  STEP: Saw pod success @ 01/03/24 04:17:01.242
  Jan  3 04:17:01.248: INFO: Trying to get logs from node 192.168.18.92 pod pod-secrets-d9eec29f-20c7-44db-8741-ab7a8c63b4a3 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 04:17:01.285
  Jan  3 04:17:01.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3993" for this suite. @ 01/03/24 04:17:01.314
• [4.163 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 01/03/24 04:17:01.324
  Jan  3 04:17:01.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubelet-test @ 01/03/24 04:17:01.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:01.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:01.359
  Jan  3 04:17:03.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7008" for this suite. @ 01/03/24 04:17:03.429
• [2.113 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 01/03/24 04:17:03.438
  Jan  3 04:17:03.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:17:03.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:03.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:03.457
  STEP: fetching services @ 01/03/24 04:17:03.461
  Jan  3 04:17:03.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3325" for this suite. @ 01/03/24 04:17:03.47
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 01/03/24 04:17:03.478
  Jan  3 04:17:03.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename var-expansion @ 01/03/24 04:17:03.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:03.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:03.499
  STEP: Creating a pod to test env composition @ 01/03/24 04:17:03.504
  STEP: Saw pod success @ 01/03/24 04:17:07.537
  Jan  3 04:17:07.543: INFO: Trying to get logs from node 192.168.18.92 pod var-expansion-cbd6f17f-e1d1-4058-90be-e34fc5425967 container dapi-container: <nil>
  STEP: delete the pod @ 01/03/24 04:17:07.565
  Jan  3 04:17:07.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2947" for this suite. @ 01/03/24 04:17:07.598
• [4.131 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 01/03/24 04:17:07.609
  Jan  3 04:17:07.609: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:17:07.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:07.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:07.652
  STEP: creating the pod @ 01/03/24 04:17:07.663
  Jan  3 04:17:07.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-4382 create -f -'
  Jan  3 04:17:08.068: INFO: stderr: ""
  Jan  3 04:17:08.068: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/03/24 04:17:10.086
  Jan  3 04:17:10.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-4382 label pods pause testing-label=testing-label-value'
  Jan  3 04:17:10.309: INFO: stderr: ""
  Jan  3 04:17:10.310: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/03/24 04:17:10.31
  Jan  3 04:17:10.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-4382 get pod pause -L testing-label'
  Jan  3 04:17:10.496: INFO: stderr: ""
  Jan  3 04:17:10.496: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/03/24 04:17:10.496
  Jan  3 04:17:10.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-4382 label pods pause testing-label-'
  Jan  3 04:17:10.686: INFO: stderr: ""
  Jan  3 04:17:10.687: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/03/24 04:17:10.687
  Jan  3 04:17:10.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-4382 get pod pause -L testing-label'
  Jan  3 04:17:10.864: INFO: stderr: ""
  Jan  3 04:17:10.865: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 01/03/24 04:17:10.865
  Jan  3 04:17:10.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-4382 delete --grace-period=0 --force -f -'
  Jan  3 04:17:11.087: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan  3 04:17:11.087: INFO: stdout: "pod \"pause\" force deleted\n"
  Jan  3 04:17:11.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-4382 get rc,svc -l name=pause --no-headers'
  Jan  3 04:17:11.262: INFO: stderr: "No resources found in kubectl-4382 namespace.\n"
  Jan  3 04:17:11.263: INFO: stdout: ""
  Jan  3 04:17:11.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-4382 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jan  3 04:17:11.438: INFO: stderr: ""
  Jan  3 04:17:11.438: INFO: stdout: ""
  Jan  3 04:17:11.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4382" for this suite. @ 01/03/24 04:17:11.447
• [3.847 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/03/24 04:17:11.456
  Jan  3 04:17:11.456: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:17:11.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:11.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:11.488
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:17:11.495
  STEP: Saw pod success @ 01/03/24 04:17:15.536
  Jan  3 04:17:15.543: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-e62185bf-d68a-4e52-a047-51281661af49 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:17:15.555
  Jan  3 04:17:15.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6092" for this suite. @ 01/03/24 04:17:15.585
• [4.139 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/03/24 04:17:15.597
  Jan  3 04:17:15.597: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:17:15.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:15.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:15.631
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:17:15.648
  STEP: Saw pod success @ 01/03/24 04:17:19.69
  Jan  3 04:17:19.695: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-c869418f-b64c-4f63-b979-41e223cc0d33 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:17:19.708
  Jan  3 04:17:19.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6281" for this suite. @ 01/03/24 04:17:19.74
• [4.153 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/03/24 04:17:19.75
  Jan  3 04:17:19.750: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename events @ 01/03/24 04:17:19.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:19.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:19.786
  STEP: Create set of events @ 01/03/24 04:17:19.792
  Jan  3 04:17:19.800: INFO: created test-event-1
  Jan  3 04:17:19.807: INFO: created test-event-2
  Jan  3 04:17:19.813: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/03/24 04:17:19.813
  STEP: delete collection of events @ 01/03/24 04:17:19.819
  Jan  3 04:17:19.819: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/03/24 04:17:19.843
  Jan  3 04:17:19.843: INFO: requesting list of events to confirm quantity
  Jan  3 04:17:19.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5051" for this suite. @ 01/03/24 04:17:19.857
• [0.115 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/03/24 04:17:19.865
  Jan  3 04:17:19.865: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:17:19.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:19.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:19.903
  STEP: Creating projection with secret that has name projected-secret-test-map-576a1870-97b9-4fe0-82aa-8c7ef1d7c834 @ 01/03/24 04:17:19.909
  STEP: Creating a pod to test consume secrets @ 01/03/24 04:17:19.916
  STEP: Saw pod success @ 01/03/24 04:17:23.952
  Jan  3 04:17:23.959: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-secrets-38f8dbc7-9519-4145-806f-3a945a4dd95e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 04:17:23.973
  Jan  3 04:17:23.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4995" for this suite. @ 01/03/24 04:17:24.002
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 01/03/24 04:17:24.013
  Jan  3 04:17:24.013: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 04:17:24.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:24.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:24.043
  STEP: Counting existing ResourceQuota @ 01/03/24 04:17:24.048
  STEP: Creating a ResourceQuota @ 01/03/24 04:17:29.056
  STEP: Ensuring resource quota status is calculated @ 01/03/24 04:17:29.065
  STEP: Creating a ReplicaSet @ 01/03/24 04:17:31.074
  STEP: Ensuring resource quota status captures replicaset creation @ 01/03/24 04:17:31.093
  STEP: Deleting a ReplicaSet @ 01/03/24 04:17:33.102
  STEP: Ensuring resource quota status released usage @ 01/03/24 04:17:33.112
  Jan  3 04:17:35.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3058" for this suite. @ 01/03/24 04:17:35.135
• [11.131 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/03/24 04:17:35.146
  Jan  3 04:17:35.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename watch @ 01/03/24 04:17:35.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:35.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:35.179
  STEP: creating a new configmap @ 01/03/24 04:17:35.186
  STEP: modifying the configmap once @ 01/03/24 04:17:35.193
  STEP: modifying the configmap a second time @ 01/03/24 04:17:35.206
  STEP: deleting the configmap @ 01/03/24 04:17:35.218
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/03/24 04:17:35.227
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/03/24 04:17:35.23
  Jan  3 04:17:35.230: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-723  3ed29d7f-adb7-4261-bd06-349c0fc0609a 100913 0 2024-01-03 04:17:34 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-01-03 04:17:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 04:17:35.231: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-723  3ed29d7f-adb7-4261-bd06-349c0fc0609a 100914 0 2024-01-03 04:17:34 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-01-03 04:17:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan  3 04:17:35.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-723" for this suite. @ 01/03/24 04:17:35.239
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/03/24 04:17:35.249
  Jan  3 04:17:35.249: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:17:35.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:35.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:35.283
  STEP: Creating configMap with name configmap-test-upd-7e286729-d078-4841-812b-4064c3d7e618 @ 01/03/24 04:17:35.299
  STEP: Creating the pod @ 01/03/24 04:17:35.306
  STEP: Updating configmap configmap-test-upd-7e286729-d078-4841-812b-4064c3d7e618 @ 01/03/24 04:17:37.365
  STEP: waiting to observe update in volume @ 01/03/24 04:17:37.373
  Jan  3 04:17:39.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6487" for this suite. @ 01/03/24 04:17:39.41
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 01/03/24 04:17:39.422
  Jan  3 04:17:39.422: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 04:17:39.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:39.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:39.458
  STEP: Counting existing ResourceQuota @ 01/03/24 04:17:39.464
  STEP: Creating a ResourceQuota @ 01/03/24 04:17:44.47
  STEP: Ensuring resource quota status is calculated @ 01/03/24 04:17:44.483
  STEP: Creating a Service @ 01/03/24 04:17:46.49
  STEP: Creating a NodePort Service @ 01/03/24 04:17:46.525
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/03/24 04:17:46.566
  STEP: Ensuring resource quota status captures service creation @ 01/03/24 04:17:46.588
  STEP: Deleting Services @ 01/03/24 04:17:48.603
  STEP: Ensuring resource quota status released usage @ 01/03/24 04:17:48.666
  Jan  3 04:17:50.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4716" for this suite. @ 01/03/24 04:17:50.684
• [11.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/03/24 04:17:50.695
  Jan  3 04:17:50.695: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 04:17:50.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:50.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:50.729
  STEP: Creating secret with name secret-test-map-7c1a2218-1588-47f0-b70f-f150338042f3 @ 01/03/24 04:17:50.737
  STEP: Creating a pod to test consume secrets @ 01/03/24 04:17:50.744
  STEP: Saw pod success @ 01/03/24 04:17:54.79
  Jan  3 04:17:54.796: INFO: Trying to get logs from node 192.168.18.92 pod pod-secrets-0d0173c1-f03b-4fb5-a5f3-95a98164c262 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 04:17:54.809
  Jan  3 04:17:54.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9201" for this suite. @ 01/03/24 04:17:54.839
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/03/24 04:17:54.849
  Jan  3 04:17:54.849: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:17:54.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:54.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:54.893
  STEP: Creating configMap with name projected-configmap-test-volume-94b2df8b-c302-4165-87eb-74a5b005d1d8 @ 01/03/24 04:17:54.901
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:17:54.91
  STEP: Saw pod success @ 01/03/24 04:17:58.951
  Jan  3 04:17:58.956: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-configmaps-a3b38145-3da7-4792-b489-c4d721e1bb4c container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:17:58.968
  Jan  3 04:17:58.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4905" for this suite. @ 01/03/24 04:17:58.995
• [4.157 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 01/03/24 04:17:59.006
  Jan  3 04:17:59.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:17:59.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:17:59.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:17:59.051
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/03/24 04:17:59.056
  Jan  3 04:17:59.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-2395 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jan  3 04:17:59.235: INFO: stderr: ""
  Jan  3 04:17:59.235: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/03/24 04:17:59.235
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/03/24 04:18:04.287
  Jan  3 04:18:04.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-2395 get pod e2e-test-httpd-pod -o json'
  Jan  3 04:18:04.492: INFO: stderr: ""
  Jan  3 04:18:04.492: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"568690f71b02f82513bc35980cf907ef1d78865d239fec9ebaf17feaada9c74e\",\n            \"cni.projectcalico.org/podIP\": \"10.1.155.9/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.1.155.9/32\"\n        },\n        \"creationTimestamp\": \"2024-01-03T04:17:58Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2395\",\n        \"resourceVersion\": \"101102\",\n        \"uid\": \"18b035d2-d1b5-4489-9e22-d825afe3cee2\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-6v2pb\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"192.168.18.92\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-6v2pb\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-03T04:18:01Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-03T04:17:59Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-03T04:18:01Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-03T04:18:01Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-03T04:17:58Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://62301921d64114fad010daff2a52cff57e87cdf9dea8b761d85cdcc5c0b6e4dc\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-01-03T04:18:00Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.18.92\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.18.92\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.1.155.9\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.1.155.9\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-01-03T04:17:59Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/03/24 04:18:04.492
  Jan  3 04:18:04.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-2395 replace -f -'
  Jan  3 04:18:04.858: INFO: stderr: ""
  Jan  3 04:18:04.858: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/03/24 04:18:04.858
  Jan  3 04:18:04.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-2395 delete pods e2e-test-httpd-pod'
  Jan  3 04:18:06.394: INFO: stderr: ""
  Jan  3 04:18:06.394: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jan  3 04:18:06.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2395" for this suite. @ 01/03/24 04:18:06.403
• [7.403 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/03/24 04:18:06.41
  Jan  3 04:18:06.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/03/24 04:18:06.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:06.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:06.435
  STEP: creating a target pod @ 01/03/24 04:18:06.443
  STEP: adding an ephemeral container @ 01/03/24 04:18:08.472
  STEP: checking pod container endpoints @ 01/03/24 04:18:12.531
  Jan  3 04:18:12.531: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8615 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:18:12.531: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:18:12.533: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:18:12.533: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/ephemeral-containers-test-8615/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jan  3 04:18:12.688: INFO: Exec stderr: ""
  Jan  3 04:18:12.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8615" for this suite. @ 01/03/24 04:18:12.713
• [6.314 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 01/03/24 04:18:12.725
  Jan  3 04:18:12.725: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-pred @ 01/03/24 04:18:12.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:12.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:12.764
  Jan  3 04:18:12.771: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan  3 04:18:12.789: INFO: Waiting for terminating namespaces to be deleted...
  Jan  3 04:18:12.795: INFO: 
  Logging pods the apiserver thinks is on node 192.168.18.91 before test
  Jan  3 04:18:12.810: INFO: calico-kube-controllers-7ddc4f45bc-svj88 from kube-system started at 2023-12-24 15:52:08 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.810: INFO: 	Container calico-kube-controllers ready: true, restart count 3
  Jan  3 04:18:12.810: INFO: calico-node-drgqp from kube-system started at 2023-12-24 15:52:08 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.810: INFO: 	Container calico-node ready: true, restart count 4
  Jan  3 04:18:12.810: INFO: coredns-76f75df574-6qkhz from kube-system started at 2023-12-24 15:51:48 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.810: INFO: 	Container coredns ready: true, restart count 3
  Jan  3 04:18:12.810: INFO: etcd-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.810: INFO: 	Container etcd ready: true, restart count 4
  Jan  3 04:18:12.810: INFO: kube-apiserver-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.810: INFO: 	Container kube-apiserver ready: true, restart count 0
  Jan  3 04:18:12.810: INFO: kube-controller-manager-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.810: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Jan  3 04:18:12.810: INFO: kube-proxy-96snq from kube-system started at 2023-12-24 15:51:47 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.810: INFO: 	Container kube-proxy ready: true, restart count 4
  Jan  3 04:18:12.810: INFO: kube-scheduler-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.810: INFO: 	Container kube-scheduler ready: true, restart count 0
  Jan  3 04:18:12.810: INFO: sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-l24d8 from sonobuoy started at 2024-01-03 03:26:22 +0000 UTC (2 container statuses recorded)
  Jan  3 04:18:12.810: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 04:18:12.810: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan  3 04:18:12.810: INFO: 
  Logging pods the apiserver thinks is on node 192.168.18.92 before test
  Jan  3 04:18:12.823: INFO: ephemeral-containers-target-pod from ephemeral-containers-test-8615 started at 2024-01-03 04:18:06 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.823: INFO: 	Container test-container-1 ready: true, restart count 0
  Jan  3 04:18:12.823: INFO: calico-node-cdwkb from kube-system started at 2023-12-24 15:53:04 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.823: INFO: 	Container calico-node ready: true, restart count 3
  Jan  3 04:18:12.823: INFO: kube-proxy-95zdw from kube-system started at 2023-12-24 15:53:04 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.823: INFO: 	Container kube-proxy ready: true, restart count 3
  Jan  3 04:18:12.823: INFO: sonobuoy from sonobuoy started at 2024-01-03 03:26:21 +0000 UTC (1 container statuses recorded)
  Jan  3 04:18:12.823: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan  3 04:18:12.823: INFO: sonobuoy-e2e-job-4b415b506d534fb8 from sonobuoy started at 2024-01-03 03:26:23 +0000 UTC (2 container statuses recorded)
  Jan  3 04:18:12.823: INFO: 	Container e2e ready: true, restart count 0
  Jan  3 04:18:12.823: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 04:18:12.823: INFO: sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-gswct from sonobuoy started at 2024-01-03 03:26:23 +0000 UTC (2 container statuses recorded)
  Jan  3 04:18:12.823: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 04:18:12.823: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node 192.168.18.91 @ 01/03/24 04:18:12.863
  STEP: verifying the node has the label node 192.168.18.92 @ 01/03/24 04:18:12.89
  Jan  3 04:18:12.924: INFO: Pod ephemeral-containers-target-pod requesting resource cpu=0m on Node 192.168.18.92
  Jan  3 04:18:12.924: INFO: Pod calico-kube-controllers-7ddc4f45bc-svj88 requesting resource cpu=0m on Node 192.168.18.91
  Jan  3 04:18:12.924: INFO: Pod calico-node-cdwkb requesting resource cpu=250m on Node 192.168.18.92
  Jan  3 04:18:12.924: INFO: Pod calico-node-drgqp requesting resource cpu=250m on Node 192.168.18.91
  Jan  3 04:18:12.924: INFO: Pod coredns-76f75df574-6qkhz requesting resource cpu=100m on Node 192.168.18.91
  Jan  3 04:18:12.924: INFO: Pod etcd-192.168.18.91 requesting resource cpu=100m on Node 192.168.18.91
  Jan  3 04:18:12.924: INFO: Pod kube-apiserver-192.168.18.91 requesting resource cpu=250m on Node 192.168.18.91
  Jan  3 04:18:12.924: INFO: Pod kube-controller-manager-192.168.18.91 requesting resource cpu=200m on Node 192.168.18.91
  Jan  3 04:18:12.924: INFO: Pod kube-proxy-95zdw requesting resource cpu=0m on Node 192.168.18.92
  Jan  3 04:18:12.924: INFO: Pod kube-proxy-96snq requesting resource cpu=0m on Node 192.168.18.91
  Jan  3 04:18:12.924: INFO: Pod kube-scheduler-192.168.18.91 requesting resource cpu=100m on Node 192.168.18.91
  Jan  3 04:18:12.924: INFO: Pod sonobuoy requesting resource cpu=0m on Node 192.168.18.92
  Jan  3 04:18:12.924: INFO: Pod sonobuoy-e2e-job-4b415b506d534fb8 requesting resource cpu=0m on Node 192.168.18.92
  Jan  3 04:18:12.924: INFO: Pod sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-gswct requesting resource cpu=0m on Node 192.168.18.92
  Jan  3 04:18:12.924: INFO: Pod sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-l24d8 requesting resource cpu=0m on Node 192.168.18.91
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/03/24 04:18:12.925
  Jan  3 04:18:12.925: INFO: Creating a pod which consumes cpu=2100m on Node 192.168.18.91
  Jan  3 04:18:12.948: INFO: Creating a pod which consumes cpu=2625m on Node 192.168.18.92
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/03/24 04:18:14.998
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-15c8c217-0989-471f-bf0c-37845c8349ce.17a6bb573a42e09f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4119/filler-pod-15c8c217-0989-471f-bf0c-37845c8349ce to 192.168.18.91] @ 01/03/24 04:18:15.008
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-15c8c217-0989-471f-bf0c-37845c8349ce.17a6bb5776b6481b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 01/03/24 04:18:15.008
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-15c8c217-0989-471f-bf0c-37845c8349ce.17a6bb5778eaf865], Reason = [Created], Message = [Created container filler-pod-15c8c217-0989-471f-bf0c-37845c8349ce] @ 01/03/24 04:18:15.008
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-15c8c217-0989-471f-bf0c-37845c8349ce.17a6bb57866902bc], Reason = [Started], Message = [Started container filler-pod-15c8c217-0989-471f-bf0c-37845c8349ce] @ 01/03/24 04:18:15.008
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3d15554e-071a-44a1-acc4-4eba1d786ce5.17a6bb573b67120a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4119/filler-pod-3d15554e-071a-44a1-acc4-4eba1d786ce5 to 192.168.18.92] @ 01/03/24 04:18:15.008
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3d15554e-071a-44a1-acc4-4eba1d786ce5.17a6bb579e2dc7f6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 01/03/24 04:18:15.008
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3d15554e-071a-44a1-acc4-4eba1d786ce5.17a6bb57a04ea64a], Reason = [Created], Message = [Created container filler-pod-3d15554e-071a-44a1-acc4-4eba1d786ce5] @ 01/03/24 04:18:15.008
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3d15554e-071a-44a1-acc4-4eba1d786ce5.17a6bb57ad1949e8], Reason = [Started], Message = [Started container filler-pod-3d15554e-071a-44a1-acc4-4eba1d786ce5] @ 01/03/24 04:18:15.008
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17a6bb57b4c0d16c], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 01/03/24 04:18:15.031
  STEP: removing the label node off the node 192.168.18.91 @ 01/03/24 04:18:16.035
  STEP: verifying the node doesn't have the label node @ 01/03/24 04:18:16.06
  STEP: removing the label node off the node 192.168.18.92 @ 01/03/24 04:18:16.067
  STEP: verifying the node doesn't have the label node @ 01/03/24 04:18:16.096
  Jan  3 04:18:16.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4119" for this suite. @ 01/03/24 04:18:16.112
• [3.400 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/03/24 04:18:16.125
  Jan  3 04:18:16.125: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:18:16.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:16.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:16.164
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:18:16.173
  STEP: Saw pod success @ 01/03/24 04:18:20.212
  Jan  3 04:18:20.218: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-5a84cc48-a1b8-4e20-9e24-1643a22091fd container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:18:20.231
  Jan  3 04:18:20.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9043" for this suite. @ 01/03/24 04:18:20.26
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/03/24 04:18:20.278
  Jan  3 04:18:20.279: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:18:20.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:20.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:20.307
  STEP: Creating configMap with name configmap-test-volume-3a3c6cb4-1d99-4113-9b5e-4d404619f680 @ 01/03/24 04:18:20.313
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:18:20.322
  STEP: Saw pod success @ 01/03/24 04:18:24.357
  Jan  3 04:18:24.366: INFO: Trying to get logs from node 192.168.18.92 pod pod-configmaps-d6955fb1-7c18-461b-aa20-3d31af9f6691 container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:18:24.379
  Jan  3 04:18:24.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4879" for this suite. @ 01/03/24 04:18:24.413
• [4.144 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/03/24 04:18:24.423
  Jan  3 04:18:24.423: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:18:24.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:24.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:24.456
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:18:24.464
  STEP: Saw pod success @ 01/03/24 04:18:28.499
  Jan  3 04:18:28.506: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-81044d3b-b652-4dc2-8058-2129fdb7b849 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:18:28.521
  Jan  3 04:18:28.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3036" for this suite. @ 01/03/24 04:18:28.559
• [4.146 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/03/24 04:18:28.57
  Jan  3 04:18:28.570: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/03/24 04:18:28.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:28.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:28.607
  STEP: creating a target pod @ 01/03/24 04:18:28.613
  STEP: adding an ephemeral container @ 01/03/24 04:18:30.649
  STEP: checking pod container endpoints @ 01/03/24 04:18:34.705
  Jan  3 04:18:34.705: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1900 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:18:34.705: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:18:34.707: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:18:34.708: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/ephemeral-containers-test-1900/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jan  3 04:18:34.867: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/03/24 04:18:34.882
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/03/24 04:18:34.892
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/03/24 04:18:34.912
  Jan  3 04:18:34.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1900" for this suite. @ 01/03/24 04:18:34.931
• [6.377 seconds]
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 01/03/24 04:18:34.947
  Jan  3 04:18:34.947: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename dns @ 01/03/24 04:18:34.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:34.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:34.982
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/03/24 04:18:34.991
  Jan  3 04:18:35.006: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3914  705c84f1-030b-4426-af76-43a5afec8588 101406 0 2024-01-03 04:18:34 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-01-03 04:18:34 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-njkf9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-njkf9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/03/24 04:18:37.023
  Jan  3 04:18:37.023: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3914 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:18:37.023: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:18:37.025: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:18:37.025: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/dns-3914/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/03/24 04:18:37.227
  Jan  3 04:18:37.227: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3914 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:18:37.228: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:18:37.230: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:18:37.230: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/dns-3914/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan  3 04:18:37.423: INFO: Deleting pod test-dns-nameservers...
  Jan  3 04:18:37.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3914" for this suite. @ 01/03/24 04:18:37.451
• [2.518 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 01/03/24 04:18:37.467
  Jan  3 04:18:37.467: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename security-context @ 01/03/24 04:18:37.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:37.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:37.51
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/03/24 04:18:37.518
  STEP: Saw pod success @ 01/03/24 04:18:41.563
  Jan  3 04:18:41.569: INFO: Trying to get logs from node 192.168.18.92 pod security-context-ecb8be74-d927-46e4-8243-50a3c45e2c61 container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:18:41.582
  Jan  3 04:18:41.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-838" for this suite. @ 01/03/24 04:18:41.611
• [4.154 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 01/03/24 04:18:41.622
  Jan  3 04:18:41.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-webhook @ 01/03/24 04:18:41.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:41.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:41.66
  STEP: Setting up server cert @ 01/03/24 04:18:41.668
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/03/24 04:18:42.744
  STEP: Deploying the custom resource conversion webhook pod @ 01/03/24 04:18:42.755
  STEP: Wait for the deployment to be ready @ 01/03/24 04:18:42.775
  Jan  3 04:18:42.787: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/03/24 04:18:44.807
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 04:18:44.822
  Jan  3 04:18:45.823: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jan  3 04:18:45.836: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Creating a v1 custom resource @ 01/03/24 04:18:48.49
  STEP: v2 custom resource should be converted @ 01/03/24 04:18:48.498
  Jan  3 04:18:49.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2420" for this suite. @ 01/03/24 04:18:49.109
• [7.498 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 01/03/24 04:18:49.124
  Jan  3 04:18:49.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename svcaccounts @ 01/03/24 04:18:49.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:49.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:49.169
  STEP: creating a ServiceAccount @ 01/03/24 04:18:49.183
  STEP: watching for the ServiceAccount to be added @ 01/03/24 04:18:49.201
  STEP: patching the ServiceAccount @ 01/03/24 04:18:49.206
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/03/24 04:18:49.219
  STEP: deleting the ServiceAccount @ 01/03/24 04:18:49.226
  Jan  3 04:18:49.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1827" for this suite. @ 01/03/24 04:18:49.255
• [0.140 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 01/03/24 04:18:49.264
  Jan  3 04:18:49.264: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 04:18:49.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:49.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:49.304
  STEP: Setting up server cert @ 01/03/24 04:18:49.34
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 04:18:50.071
  STEP: Deploying the webhook pod @ 01/03/24 04:18:50.079
  STEP: Wait for the deployment to be ready @ 01/03/24 04:18:50.097
  Jan  3 04:18:50.112: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jan  3 04:18:52.133: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 18, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 18, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 18, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 18, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/03/24 04:18:54.141
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 04:18:54.154
  Jan  3 04:18:55.155: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/03/24 04:18:55.168
  STEP: create a namespace for the webhook @ 01/03/24 04:18:55.199
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/03/24 04:18:55.221
  Jan  3 04:18:55.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2022" for this suite. @ 01/03/24 04:18:55.333
  STEP: Destroying namespace "webhook-markers-1835" for this suite. @ 01/03/24 04:18:55.352
  STEP: Destroying namespace "fail-closed-namespace-1293" for this suite. @ 01/03/24 04:18:55.361
• [6.106 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/03/24 04:18:55.371
  Jan  3 04:18:55.371: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:18:55.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:18:55.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:18:55.428
  STEP: Creating secret with name s-test-opt-del-7edafda4-00f2-47eb-b93a-dd404d409c7e @ 01/03/24 04:18:55.467
  STEP: Creating secret with name s-test-opt-upd-d1427964-a776-4fdf-a8ac-fc67c987c3bf @ 01/03/24 04:18:55.474
  STEP: Creating the pod @ 01/03/24 04:18:55.481
  STEP: Deleting secret s-test-opt-del-7edafda4-00f2-47eb-b93a-dd404d409c7e @ 01/03/24 04:18:59.575
  STEP: Updating secret s-test-opt-upd-d1427964-a776-4fdf-a8ac-fc67c987c3bf @ 01/03/24 04:18:59.586
  STEP: Creating secret with name s-test-opt-create-6a230669-22a1-46d7-a928-ac6a301db8fb @ 01/03/24 04:18:59.6
  STEP: waiting to observe update in volume @ 01/03/24 04:18:59.61
  Jan  3 04:20:18.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-249" for this suite. @ 01/03/24 04:20:18.527
• [83.168 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/03/24 04:20:18.539
  Jan  3 04:20:18.539: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:20:18.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:20:18.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:20:18.579
  STEP: Creating configMap with name projected-configmap-test-volume-def01ca8-85f9-4201-abcb-a3f5993386ac @ 01/03/24 04:20:18.585
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:20:18.595
  STEP: Saw pod success @ 01/03/24 04:20:22.631
  Jan  3 04:20:22.637: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-configmaps-6d2d47fe-02a3-4c84-b3b6-523b3a7a201f container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:20:22.65
  Jan  3 04:20:22.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7626" for this suite. @ 01/03/24 04:20:22.679
• [4.148 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 01/03/24 04:20:22.687
  Jan  3 04:20:22.687: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pv @ 01/03/24 04:20:22.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:20:22.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:20:22.722
  STEP: Creating initial PV and PVC @ 01/03/24 04:20:22.729
  Jan  3 04:20:22.729: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7707" @ 01/03/24 04:20:22.749
  STEP: Listing PVCs in namespace "pv-7707" @ 01/03/24 04:20:22.754
  STEP: Reading "pvc-67pbl" Status @ 01/03/24 04:20:22.759
  STEP: Reading "pv-7707-crfvv" Status @ 01/03/24 04:20:22.767
  STEP: Patching "pvc-67pbl" Status @ 01/03/24 04:20:22.778
  STEP: Patching "pv-7707-crfvv" Status @ 01/03/24 04:20:22.786
  STEP: Updating "pvc-67pbl" Status @ 01/03/24 04:20:22.794
  STEP: Updating "pv-7707-crfvv" Status @ 01/03/24 04:20:22.806
  Jan  3 04:20:22.820: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jan  3 04:20:22.820: INFO: Deleting PersistentVolumeClaim "pvc-67pbl"
  Jan  3 04:20:22.828: INFO: Deleting PersistentVolume "pv-7707-crfvv"
  Jan  3 04:20:22.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7707" for this suite. @ 01/03/24 04:20:22.844
• [0.168 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/03/24 04:20:22.856
  Jan  3 04:20:22.856: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:20:22.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:20:22.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:20:22.893
  STEP: Creating a pod to test downward api env vars @ 01/03/24 04:20:22.9
  STEP: Saw pod success @ 01/03/24 04:20:26.938
  Jan  3 04:20:26.944: INFO: Trying to get logs from node 192.168.18.92 pod downward-api-52291002-7c8c-42db-84be-46968a2e1e61 container dapi-container: <nil>
  STEP: delete the pod @ 01/03/24 04:20:26.964
  Jan  3 04:20:26.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7294" for this suite. @ 01/03/24 04:20:26.994
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/03/24 04:20:27.004
  Jan  3 04:20:27.004: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pod-network-test @ 01/03/24 04:20:27.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:20:27.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:20:27.037
  STEP: Performing setup for networking test in namespace pod-network-test-7757 @ 01/03/24 04:20:27.045
  STEP: creating a selector @ 01/03/24 04:20:27.045
  STEP: Creating the service pods in kubernetes @ 01/03/24 04:20:27.045
  Jan  3 04:20:27.045: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/03/24 04:20:49.226
  Jan  3 04:20:53.271: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan  3 04:20:53.271: INFO: Breadth first check of 10.1.213.127 on host 192.168.18.91...
  Jan  3 04:20:53.277: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.155.23:9080/dial?request=hostname&protocol=udp&host=10.1.213.127&port=8081&tries=1'] Namespace:pod-network-test-7757 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:20:53.277: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:20:53.279: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:20:53.279: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/pod-network-test-7757/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.155.23%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.213.127%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan  3 04:20:53.451: INFO: Waiting for responses: map[]
  Jan  3 04:20:53.451: INFO: reached 10.1.213.127 after 0/1 tries
  Jan  3 04:20:53.451: INFO: Breadth first check of 10.1.155.34 on host 192.168.18.92...
  Jan  3 04:20:53.459: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.155.23:9080/dial?request=hostname&protocol=udp&host=10.1.155.34&port=8081&tries=1'] Namespace:pod-network-test-7757 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:20:53.459: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:20:53.460: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:20:53.461: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/pod-network-test-7757/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.155.23%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.155.34%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan  3 04:20:53.610: INFO: Waiting for responses: map[]
  Jan  3 04:20:53.610: INFO: reached 10.1.155.34 after 0/1 tries
  Jan  3 04:20:53.610: INFO: Going to retry 0 out of 2 pods....
  Jan  3 04:20:53.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7757" for this suite. @ 01/03/24 04:20:53.62
• [26.624 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/03/24 04:20:53.629
  Jan  3 04:20:53.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename init-container @ 01/03/24 04:20:53.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:20:53.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:20:53.66
  STEP: creating the pod @ 01/03/24 04:20:53.666
  Jan  3 04:20:53.667: INFO: PodSpec: initContainers in spec.initContainers
  Jan  3 04:20:57.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4150" for this suite. @ 01/03/24 04:20:57.513
• [3.899 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/03/24 04:20:57.528
  Jan  3 04:20:57.528: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 04:20:57.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:20:57.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:20:57.567
  STEP: creating pod @ 01/03/24 04:20:57.573
  Jan  3 04:20:59.603: INFO: Pod pod-hostip-e058b163-2268-4299-b532-a4a903c5fc33 has hostIP: 192.168.18.92
  Jan  3 04:20:59.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9822" for this suite. @ 01/03/24 04:20:59.61
• [2.088 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 01/03/24 04:20:59.618
  Jan  3 04:20:59.618: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 04:20:59.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:20:59.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:20:59.74
  STEP: Counting existing ResourceQuota @ 01/03/24 04:21:16.754
  STEP: Creating a ResourceQuota @ 01/03/24 04:21:21.761
  STEP: Ensuring resource quota status is calculated @ 01/03/24 04:21:21.769
  STEP: Creating a ConfigMap @ 01/03/24 04:21:23.779
  STEP: Ensuring resource quota status captures configMap creation @ 01/03/24 04:21:23.802
  STEP: Deleting a ConfigMap @ 01/03/24 04:21:25.812
  STEP: Ensuring resource quota status released usage @ 01/03/24 04:21:25.821
  Jan  3 04:21:27.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4214" for this suite. @ 01/03/24 04:21:27.841
• [28.233 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 01/03/24 04:21:27.851
  Jan  3 04:21:27.851: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 04:21:27.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:21:27.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:21:27.883
  STEP: Setting up server cert @ 01/03/24 04:21:27.924
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 04:21:28.657
  STEP: Deploying the webhook pod @ 01/03/24 04:21:28.669
  STEP: Wait for the deployment to be ready @ 01/03/24 04:21:28.685
  Jan  3 04:21:28.697: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jan  3 04:21:30.718: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 21, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 21, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 21, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 21, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/03/24 04:21:32.726
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 04:21:32.741
  Jan  3 04:21:33.741: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/03/24 04:21:33.755
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/03/24 04:21:33.8
  STEP: Creating a configMap that should not be mutated @ 01/03/24 04:21:33.819
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/03/24 04:21:33.837
  STEP: Creating a configMap that should be mutated @ 01/03/24 04:21:33.853
  Jan  3 04:21:33.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6569" for this suite. @ 01/03/24 04:21:33.964
  STEP: Destroying namespace "webhook-markers-9170" for this suite. @ 01/03/24 04:21:33.976
• [6.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/03/24 04:21:33.99
  Jan  3 04:21:33.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:21:33.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:21:34.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:21:34.028
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:21:34.04
  STEP: Saw pod success @ 01/03/24 04:21:38.094
  Jan  3 04:21:38.107: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-69014298-9475-4427-be46-b91489eb4b8a container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:21:38.12
  Jan  3 04:21:38.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2796" for this suite. @ 01/03/24 04:21:38.152
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 01/03/24 04:21:38.168
  Jan  3 04:21:38.168: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:21:38.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:21:38.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:21:38.201
  STEP: creating service in namespace services-7793 @ 01/03/24 04:21:38.209
  STEP: creating service affinity-clusterip-transition in namespace services-7793 @ 01/03/24 04:21:38.209
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7793 @ 01/03/24 04:21:38.226
  I0103 04:21:38.240405      20 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-7793, replica count: 3
  I0103 04:21:41.293516      20 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan  3 04:21:41.305: INFO: Creating new exec pod
  Jan  3 04:21:44.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-7793 exec execpod-affinityr6klv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jan  3 04:21:44.668: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jan  3 04:21:44.668: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:21:44.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-7793 exec execpod-affinityr6klv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.72.196 80'
  Jan  3 04:21:44.975: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.72.196 80\nConnection to 169.169.72.196 80 port [tcp/http] succeeded!\n"
  Jan  3 04:21:44.975: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:21:44.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-7793 exec execpod-affinityr6klv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://169.169.72.196:80/ ; done'
  Jan  3 04:21:45.498: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n"
  Jan  3 04:21:45.498: INFO: stdout: "\naffinity-clusterip-transition-jj4cw\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-jj4cw\naffinity-clusterip-transition-z55w5\naffinity-clusterip-transition-z55w5\naffinity-clusterip-transition-jj4cw\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-z55w5\naffinity-clusterip-transition-jj4cw\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-z55w5\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-z55w5\naffinity-clusterip-transition-z55w5\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q"
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-jj4cw
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-jj4cw
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-z55w5
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-z55w5
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-jj4cw
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-z55w5
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-jj4cw
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-z55w5
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-z55w5
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-z55w5
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:45.498: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:45.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-7793 exec execpod-affinityr6klv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://169.169.72.196:80/ ; done'
  Jan  3 04:21:46.070: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.72.196:80/\n"
  Jan  3 04:21:46.070: INFO: stdout: "\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q\naffinity-clusterip-transition-dlm6q"
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Received response from host: affinity-clusterip-transition-dlm6q
  Jan  3 04:21:46.070: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7793, will wait for the garbage collector to delete the pods @ 01/03/24 04:21:46.097
  Jan  3 04:21:46.170: INFO: Deleting ReplicationController affinity-clusterip-transition took: 11.151189ms
  Jan  3 04:21:46.273: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 102.624749ms
  Jan  3 04:21:50.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7793" for this suite. @ 01/03/24 04:21:50.007
• [11.852 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 01/03/24 04:21:50.02
  Jan  3 04:21:50.020: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename containers @ 01/03/24 04:21:50.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:21:50.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:21:50.048
  STEP: Creating a pod to test override arguments @ 01/03/24 04:21:50.054
  STEP: Saw pod success @ 01/03/24 04:21:54.092
  Jan  3 04:21:54.111: INFO: Trying to get logs from node 192.168.18.92 pod client-containers-c7e4161d-f44c-4fa1-857b-5fc0b6e73523 container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:21:54.126
  Jan  3 04:21:54.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9889" for this suite. @ 01/03/24 04:21:54.162
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/03/24 04:21:54.17
  Jan  3 04:21:54.171: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:21:54.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:21:54.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:21:54.203
  STEP: Creating configMap with name configmap-projected-all-test-volume-3935883f-7754-4f34-80eb-4a2727709f00 @ 01/03/24 04:21:54.21
  STEP: Creating secret with name secret-projected-all-test-volume-f8aa131d-4f43-44b7-bd79-44e4a28d785b @ 01/03/24 04:21:54.217
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/03/24 04:21:54.224
  STEP: Saw pod success @ 01/03/24 04:21:58.261
  Jan  3 04:21:58.267: INFO: Trying to get logs from node 192.168.18.92 pod projected-volume-81f9d36d-37c3-462a-b8ca-3e83f873764f container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 04:21:58.281
  Jan  3 04:21:58.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2707" for this suite. @ 01/03/24 04:21:58.321
• [4.161 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 01/03/24 04:21:58.332
  Jan  3 04:21:58.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename job @ 01/03/24 04:21:58.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:21:58.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:21:58.368
  STEP: Creating Indexed job @ 01/03/24 04:21:58.376
  STEP: Ensuring job reaches completions @ 01/03/24 04:21:58.387
  STEP: Ensuring pods with index for job exist @ 01/03/24 04:22:06.396
  Jan  3 04:22:06.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7249" for this suite. @ 01/03/24 04:22:06.413
• [8.092 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 01/03/24 04:22:06.425
  Jan  3 04:22:06.425: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 04:22:06.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:22:06.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:22:06.463
  STEP: Creating a ResourceQuota @ 01/03/24 04:22:06.469
  STEP: Getting a ResourceQuota @ 01/03/24 04:22:06.475
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/03/24 04:22:06.484
  STEP: Patching the ResourceQuota @ 01/03/24 04:22:06.488
  STEP: Deleting a Collection of ResourceQuotas @ 01/03/24 04:22:06.5
  STEP: Verifying the deleted ResourceQuota @ 01/03/24 04:22:06.511
  Jan  3 04:22:06.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-363" for this suite. @ 01/03/24 04:22:06.523
• [0.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/03/24 04:22:06.531
  Jan  3 04:22:06.531: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 04:22:06.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:22:06.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:22:06.565
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/03/24 04:22:06.571
  STEP: Saw pod success @ 01/03/24 04:22:10.608
  Jan  3 04:22:10.615: INFO: Trying to get logs from node 192.168.18.92 pod pod-26ecae63-8d0d-4633-bf31-c57534db5aca container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:22:10.633
  Jan  3 04:22:10.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-985" for this suite. @ 01/03/24 04:22:10.665
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 01/03/24 04:22:10.675
  Jan  3 04:22:10.675: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/03/24 04:22:10.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:22:10.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:22:10.705
  Jan  3 04:22:10.712: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan  3 04:23:10.712: INFO: Waiting for terminating namespaces to be deleted...
  Jan  3 04:23:10.721: INFO: Starting informer...
  STEP: Starting pods... @ 01/03/24 04:23:10.721
  Jan  3 04:23:10.964: INFO: Pod1 is running on 192.168.18.92. Tainting Node
  Jan  3 04:23:13.210: INFO: Pod2 is running on 192.168.18.92. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/03/24 04:23:13.21
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/03/24 04:23:13.236
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/03/24 04:23:13.245
  Jan  3 04:23:19.448: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Jan  3 04:23:39.547: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/03/24 04:23:39.575
  Jan  3 04:23:39.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-5345" for this suite. @ 01/03/24 04:23:39.595
• [88.929 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 01/03/24 04:23:39.605
  Jan  3 04:23:39.605: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 04:23:39.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:23:39.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:23:39.639
  STEP: Counting existing ResourceQuota @ 01/03/24 04:23:39.646
  STEP: Creating a ResourceQuota @ 01/03/24 04:23:44.656
  STEP: Ensuring resource quota status is calculated @ 01/03/24 04:23:44.668
  STEP: Creating a ReplicationController @ 01/03/24 04:23:46.679
  STEP: Ensuring resource quota status captures replication controller creation @ 01/03/24 04:23:46.706
  STEP: Deleting a ReplicationController @ 01/03/24 04:23:48.715
  STEP: Ensuring resource quota status released usage @ 01/03/24 04:23:48.725
  Jan  3 04:23:50.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3002" for this suite. @ 01/03/24 04:23:50.742
• [11.146 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/03/24 04:23:50.751
  Jan  3 04:23:50.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename namespaces @ 01/03/24 04:23:50.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:23:50.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:23:50.783
  STEP: Creating namespace "e2e-ns-psgtn" @ 01/03/24 04:23:50.79
  Jan  3 04:23:50.824: INFO: Namespace "e2e-ns-psgtn-1803" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-psgtn-1803" @ 01/03/24 04:23:50.824
  Jan  3 04:23:50.836: INFO: Namespace "e2e-ns-psgtn-1803" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-psgtn-1803" @ 01/03/24 04:23:50.837
  Jan  3 04:23:50.848: INFO: Namespace "e2e-ns-psgtn-1803" has []v1.FinalizerName{"kubernetes"}
  Jan  3 04:23:50.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6073" for this suite. @ 01/03/24 04:23:50.855
  STEP: Destroying namespace "e2e-ns-psgtn-1803" for this suite. @ 01/03/24 04:23:50.863
• [0.122 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/03/24 04:23:50.873
  Jan  3 04:23:50.873: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-runtime @ 01/03/24 04:23:50.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:23:50.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:23:50.906
  STEP: create the container @ 01/03/24 04:23:50.913
  W0103 04:23:50.926281      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/03/24 04:23:50.926
  STEP: get the container status @ 01/03/24 04:23:54.963
  STEP: the container should be terminated @ 01/03/24 04:23:54.969
  STEP: the termination message should be set @ 01/03/24 04:23:54.969
  Jan  3 04:23:54.969: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/03/24 04:23:54.969
  Jan  3 04:23:54.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-611" for this suite. @ 01/03/24 04:23:54.998
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 01/03/24 04:23:55.014
  Jan  3 04:23:55.014: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:23:55.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:23:55.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:23:55.053
  Jan  3 04:23:55.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-8567 version'
  Jan  3 04:23:55.250: INFO: stderr: ""
  Jan  3 04:23:55.250: INFO: stdout: "Client Version: v1.29.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.0\n"
  Jan  3 04:23:55.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8567" for this suite. @ 01/03/24 04:23:55.259
• [0.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/03/24 04:23:55.27
  Jan  3 04:23:55.270: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename deployment @ 01/03/24 04:23:55.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:23:55.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:23:55.312
  STEP: creating a Deployment @ 01/03/24 04:23:55.329
  STEP: waiting for Deployment to be created @ 01/03/24 04:23:55.339
  STEP: waiting for all Replicas to be Ready @ 01/03/24 04:23:55.342
  Jan  3 04:23:55.346: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan  3 04:23:55.346: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan  3 04:23:55.357: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan  3 04:23:55.357: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan  3 04:23:55.385: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan  3 04:23:55.386: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan  3 04:23:55.437: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan  3 04:23:55.437: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan  3 04:23:56.626: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jan  3 04:23:56.626: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jan  3 04:23:57.616: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/03/24 04:23:57.616
  Jan  3 04:23:57.635: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/03/24 04:23:57.636
  Jan  3 04:23:57.641: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0
  Jan  3 04:23:57.641: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0
  Jan  3 04:23:57.641: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0
  Jan  3 04:23:57.641: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0
  Jan  3 04:23:57.642: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0
  Jan  3 04:23:57.642: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0
  Jan  3 04:23:57.642: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0
  Jan  3 04:23:57.642: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 0
  Jan  3 04:23:57.643: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:23:57.643: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:23:57.643: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:57.643: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:57.643: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:57.643: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:57.658: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:57.658: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:57.676: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:57.677: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:57.709: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:23:57.709: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:23:57.735: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:23:57.735: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:23:59.667: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:59.667: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:23:59.723: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  STEP: listing Deployments @ 01/03/24 04:23:59.723
  Jan  3 04:23:59.731: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/03/24 04:23:59.731
  Jan  3 04:23:59.756: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/03/24 04:23:59.756
  Jan  3 04:23:59.770: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan  3 04:23:59.775: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan  3 04:23:59.812: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan  3 04:23:59.850: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan  3 04:23:59.871: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan  3 04:24:01.670: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jan  3 04:24:01.713: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Jan  3 04:24:01.792: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jan  3 04:24:01.804: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jan  3 04:24:03.682: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/03/24 04:24:03.735
  STEP: fetching the DeploymentStatus @ 01/03/24 04:24:03.753
  Jan  3 04:24:03.764: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:24:03.764: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:24:03.764: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:24:03.766: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:24:03.766: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 1
  Jan  3 04:24:03.766: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:24:03.766: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 3
  Jan  3 04:24:03.766: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:24:03.766: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 2
  Jan  3 04:24:03.766: INFO: observed Deployment test-deployment in namespace deployment-4018 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/03/24 04:24:03.767
  Jan  3 04:24:03.779: INFO: observed event type MODIFIED
  Jan  3 04:24:03.779: INFO: observed event type MODIFIED
  Jan  3 04:24:03.779: INFO: observed event type MODIFIED
  Jan  3 04:24:03.780: INFO: observed event type MODIFIED
  Jan  3 04:24:03.780: INFO: observed event type MODIFIED
  Jan  3 04:24:03.781: INFO: observed event type MODIFIED
  Jan  3 04:24:03.781: INFO: observed event type MODIFIED
  Jan  3 04:24:03.782: INFO: observed event type MODIFIED
  Jan  3 04:24:03.782: INFO: observed event type MODIFIED
  Jan  3 04:24:03.782: INFO: observed event type MODIFIED
  Jan  3 04:24:03.783: INFO: observed event type MODIFIED
  Jan  3 04:24:03.783: INFO: observed event type MODIFIED
  Jan  3 04:24:03.783: INFO: observed event type MODIFIED
  Jan  3 04:24:03.788: INFO: Log out all the ReplicaSets if there is no deployment created
  Jan  3 04:24:03.795: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4018",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "158a06d6-8350-4f31-840e-8a86bee72b12",
      ResourceVersion: (string) (len=6) "103230",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "45b1b487-ede0-45bb-818a-b65aae26ab75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 35 62 31  62 34 38 37 2d 65 64 65  |":\"45b1b487-ede|
              00000130  30 2d 34 35 62 62 2d 38  31 38 61 2d 62 36 35 61  |0-45bb-818a-b65a|
              00000140  61 65 32 36 61 62 37 35  5c 22 7d 22 3a 7b 7d 7d  |ae26ab75\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jan  3 04:24:03.807: INFO: pod: "test-deployment-64fd565c98-tw9s6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-tw9s6",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-4018",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "090619d3-db9b-42a8-9662-8ccd6437b136",
      ResourceVersion: (string) (len=6) "103226",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852645,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7f615efde8686ce993e1b3e0704c1a0b39f9e7c94c957d6e3f334a216f6a2f1a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.97/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.97/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "158a06d6-8350-4f31-840e-8a86bee72b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 35 38 61 30 36 64 36  |uid\":\"158a06d6|
              000000a0  2d 38 33 35 30 2d 34 66  33 31 2d 38 34 30 65 2d  |-8350-4f31-840e-|
              000000b0  38 61 38 36 62 65 65 37  32 62 31 32 5c 22 7d 22  |8a86bee72b12\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 31 33 2e 39  37 5c 22 7d 22 3a 7b 22  |.1.213.97\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p7hkj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p7hkj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) (len=11) "10.1.213.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.213.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839852640,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://47c1c2967739b526507996fc6e570351658bfbf5ef9dc550af9d02a640fac368",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jan  3 04:24:03.812: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4018",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "323e716d-e78b-44e4-843d-c19765bf8d72",
      ResourceVersion: (string) (len=6) "103120",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852634,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "45b1b487-ede0-45bb-818a-b65aae26ab75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 35 62 31  62 34 38 37 2d 65 64 65  |":\"45b1b487-ede|
              00000130  30 2d 34 35 62 62 2d 38  31 38 61 2d 62 36 35 61  |0-45bb-818a-b65a|
              00000140  61 65 32 36 61 62 37 35  5c 22 7d 22 3a 7b 7d 7d  |ae26ab75\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jan  3 04:24:03.825: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4018",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3836d082-0628-4628-a3b2-14cfc39325d6",
      ResourceVersion: (string) (len=6) "103222",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "45b1b487-ede0-45bb-818a-b65aae26ab75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 35 62 31  62 34 38 37 2d 65 64 65  |":\"45b1b487-ede|
              00000130  30 2d 34 35 62 62 2d 38  31 38 61 2d 62 36 35 61  |0-45bb-818a-b65a|
              00000140  61 65 32 36 61 62 37 35  5c 22 7d 22 3a 7b 7d 7d  |ae26ab75\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jan  3 04:24:03.842: INFO: pod: "test-deployment-79ff746c4-mwjd4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-mwjd4",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-4018",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6048f7df-2368-43d1-b0c4-fe4aa65b7404",
      ResourceVersion: (string) (len=6) "103238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "13b9c0c30589b5dcbdb36ed9be6539eb340a7b9b5d74be2425b6825333e72118",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.32/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.32/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "3836d082-0628-4628-a3b2-14cfc39325d6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 38 33 36 64 30 38 32  |uid\":\"3836d082|
              000000a0  2d 30 36 32 38 2d 34 36  32 38 2d 61 33 62 32 2d  |-0628-4628-a3b2-|
              000000b0  31 34 63 66 63 33 39 33  32 35 64 36 5c 22 7d 22  |14cfc39325d6\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 33  32 5c 22 7d 22 3a 7b 22  |.1.155.32\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5l2l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5l2l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=11) "10.1.155.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.155.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839852640,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7a363244e8d1fe6eec9e62319bbb1f25b802879ff2d9a6923359b032a5fb4545",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jan  3 04:24:03.853: INFO: pod: "test-deployment-79ff746c4-wmwzw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-wmwzw",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-4018",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c362608d-4c6a-4d70-b89f-abd1897819f9",
      ResourceVersion: (string) (len=6) "103239",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "676b9e3b4582ee418973a7429e6c5aeedfb8afaf7541d5636a9703f64ecfa5ac",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.213.66/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.213.66/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "3836d082-0628-4628-a3b2-14cfc39325d6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 38 33 36 64 30 38 32  |uid\":\"3836d082|
              000000a0  2d 30 36 32 38 2d 34 36  32 38 2d 61 33 62 32 2d  |-0628-4628-a3b2-|
              000000b0  31 34 63 66 63 33 39 33  32 35 64 36 5c 22 7d 22  |14cfc39325d6\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 31 33 2e 36  36 5c 22 7d 22 3a 7b 22  |.1.213.66\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gfdp6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gfdp6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839852641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) (len=11) "10.1.213.66",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.213.66"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839852641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839852642,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e978e3747581350cb31f994145f685145636a314d36a6bda9078bdeea3b80fc6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jan  3 04:24:03.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4018" for this suite. @ 01/03/24 04:24:03.87
• [8.610 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 01/03/24 04:24:03.881
  Jan  3 04:24:03.881: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 04:24:03.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:24:03.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:24:03.909
  STEP: Setting up server cert @ 01/03/24 04:24:03.944
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 04:24:04.861
  STEP: Deploying the webhook pod @ 01/03/24 04:24:04.876
  STEP: Wait for the deployment to be ready @ 01/03/24 04:24:04.898
  Jan  3 04:24:04.912: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/03/24 04:24:06.933
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 04:24:06.947
  Jan  3 04:24:07.948: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/03/24 04:24:07.965
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/03/24 04:24:07.999
  Jan  3 04:24:07.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:24:08.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1428" for this suite. @ 01/03/24 04:24:08.099
  STEP: Destroying namespace "webhook-markers-2377" for this suite. @ 01/03/24 04:24:08.125
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 01/03/24 04:24:08.14
  Jan  3 04:24:08.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename statefulset @ 01/03/24 04:24:08.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:24:08.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:24:08.185
  STEP: Creating service test in namespace statefulset-4598 @ 01/03/24 04:24:08.191
  Jan  3 04:24:08.215: INFO: Found 0 stateful pods, waiting for 1
  Jan  3 04:24:18.215: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/03/24 04:24:18.229
  W0103 04:24:18.253335      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jan  3 04:24:18.266: INFO: Found 1 stateful pods, waiting for 2
  Jan  3 04:24:28.273: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 04:24:28.273: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/03/24 04:24:28.285
  STEP: Delete all of the StatefulSets @ 01/03/24 04:24:28.29
  STEP: Verify that StatefulSets have been deleted @ 01/03/24 04:24:28.3
  Jan  3 04:24:28.307: INFO: Deleting all statefulset in ns statefulset-4598
  Jan  3 04:24:28.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4598" for this suite. @ 01/03/24 04:24:28.334
• [20.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/03/24 04:24:28.364
  Jan  3 04:24:28.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pod-network-test @ 01/03/24 04:24:28.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:24:28.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:24:28.408
  STEP: Performing setup for networking test in namespace pod-network-test-8417 @ 01/03/24 04:24:28.416
  STEP: creating a selector @ 01/03/24 04:24:28.416
  STEP: Creating the service pods in kubernetes @ 01/03/24 04:24:28.416
  Jan  3 04:24:28.416: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/03/24 04:24:50.594
  Jan  3 04:24:52.654: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan  3 04:24:52.654: INFO: Going to poll 10.1.213.119 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Jan  3 04:24:52.659: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.213.119:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8417 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:24:52.659: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:24:52.660: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:24:52.661: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/pod-network-test-8417/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.213.119%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan  3 04:24:52.817: INFO: Found all 1 expected endpoints: [netserver-0]
  Jan  3 04:24:52.817: INFO: Going to poll 10.1.155.25 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Jan  3 04:24:52.824: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.155.25:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8417 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:24:52.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:24:52.826: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:24:52.826: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/pod-network-test-8417/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.155.25%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan  3 04:24:52.975: INFO: Found all 1 expected endpoints: [netserver-1]
  Jan  3 04:24:52.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8417" for this suite. @ 01/03/24 04:24:52.986
• [24.631 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/03/24 04:24:52.996
  Jan  3 04:24:52.996: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename apf @ 01/03/24 04:24:52.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:24:53.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:24:53.033
  STEP: getting /apis @ 01/03/24 04:24:53.04
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/03/24 04:24:53.052
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/03/24 04:24:53.055
  STEP: creating @ 01/03/24 04:24:53.058
  STEP: getting @ 01/03/24 04:24:53.084
  STEP: listing @ 01/03/24 04:24:53.088
  STEP: watching @ 01/03/24 04:24:53.094
  Jan  3 04:24:53.094: INFO: starting watch
  STEP: patching @ 01/03/24 04:24:53.097
  STEP: updating @ 01/03/24 04:24:53.114
  Jan  3 04:24:53.127: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 01/03/24 04:24:53.128
  STEP: patching /status @ 01/03/24 04:24:53.133
  STEP: updating /status @ 01/03/24 04:24:53.142
  STEP: deleting @ 01/03/24 04:24:53.155
  STEP: deleting a collection @ 01/03/24 04:24:53.174
  Jan  3 04:24:53.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-405" for this suite. @ 01/03/24 04:24:53.205
• [0.218 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 01/03/24 04:24:53.214
  Jan  3 04:24:53.214: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename svcaccounts @ 01/03/24 04:24:53.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:24:53.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:24:53.242
  STEP: Creating ServiceAccount "e2e-sa-lwk46"  @ 01/03/24 04:24:53.249
  Jan  3 04:24:53.256: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-lwk46"  @ 01/03/24 04:24:53.256
  Jan  3 04:24:53.268: INFO: AutomountServiceAccountToken: true
  Jan  3 04:24:53.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5203" for this suite. @ 01/03/24 04:24:53.276
• [0.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/03/24 04:24:53.286
  Jan  3 04:24:53.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename hostport @ 01/03/24 04:24:53.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:24:53.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:24:53.323
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/03/24 04:24:53.338
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.18.92 on the node which pod1 resides and expect scheduled @ 01/03/24 04:24:55.364
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.18.92 but use UDP protocol on the node which pod2 resides @ 01/03/24 04:24:57.389
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/03/24 04:25:03.461
  Jan  3 04:25:03.461: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.18.92 http://127.0.0.1:54323/hostname] Namespace:hostport-1898 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:25:03.461: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:25:03.463: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:25:03.463: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/hostport-1898/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.18.92+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.18.92, port: 54323 @ 01/03/24 04:25:03.621
  Jan  3 04:25:03.622: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.18.92:54323/hostname] Namespace:hostport-1898 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:25:03.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:25:03.623: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:25:03.624: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/hostport-1898/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.18.92%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.18.92, port: 54323 UDP @ 01/03/24 04:25:03.793
  Jan  3 04:25:03.793: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.18.92 54323] Namespace:hostport-1898 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:25:03.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:25:03.794: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:25:03.795: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/hostport-1898/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.18.92+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Jan  3 04:25:08.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1898" for this suite. @ 01/03/24 04:25:08.968
• [15.695 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 01/03/24 04:25:08.991
  Jan  3 04:25:08.991: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 04:25:08.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:25:09.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:25:09.026
  STEP: Creating pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751 @ 01/03/24 04:25:09.033
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/03/24 04:25:13.073
  Jan  3 04:25:13.079: INFO: Initial restart count of pod liveness-9ba263f9-7700-45e8-b023-157983783af2 is 0
  Jan  3 04:25:13.085: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:15.093: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:17.101: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:19.111: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:21.123: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:23.131: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:25.138: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:27.147: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:29.156: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:31.168: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:31.168: INFO: Restart count of pod container-probe-9751/liveness-9ba263f9-7700-45e8-b023-157983783af2 is now 1 (18.089353756s elapsed)
  Jan  3 04:25:33.175: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:35.185: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:37.195: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:39.207: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:41.217: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:43.225: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:45.234: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:47.243: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:49.253: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:51.267: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:51.267: INFO: Restart count of pod container-probe-9751/liveness-9ba263f9-7700-45e8-b023-157983783af2 is now 2 (38.188021557s elapsed)
  Jan  3 04:25:53.275: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:55.284: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:57.293: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:25:59.305: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:01.317: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:03.325: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:05.336: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:07.345: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:09.356: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:11.369: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:11.369: INFO: Restart count of pod container-probe-9751/liveness-9ba263f9-7700-45e8-b023-157983783af2 is now 3 (58.29030809s elapsed)
  Jan  3 04:26:13.381: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:15.389: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:17.399: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:19.409: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:21.423: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:23.432: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:25.441: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:27.450: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:29.460: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:31.472: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:31.472: INFO: Restart count of pod container-probe-9751/liveness-9ba263f9-7700-45e8-b023-157983783af2 is now 4 (1m18.392981524s elapsed)
  Jan  3 04:26:33.483: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:35.491: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:37.499: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:39.507: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:41.517: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:43.528: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:45.541: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:47.551: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:49.564: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:51.574: INFO: Get pod liveness-9ba263f9-7700-45e8-b023-157983783af2 in namespace container-probe-9751
  Jan  3 04:26:51.574: INFO: Restart count of pod container-probe-9751/liveness-9ba263f9-7700-45e8-b023-157983783af2 is now 5 (1m38.494740595s elapsed)
  STEP: deleting the pod @ 01/03/24 04:26:51.574
  Jan  3 04:26:51.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9751" for this suite. @ 01/03/24 04:26:51.61
• [102.630 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/03/24 04:26:51.621
  Jan  3 04:26:51.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/03/24 04:26:51.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:26:51.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:26:51.664
  STEP: creating @ 01/03/24 04:26:51.672
  STEP: getting @ 01/03/24 04:26:51.7
  STEP: listing in namespace @ 01/03/24 04:26:51.709
  STEP: patching @ 01/03/24 04:26:51.715
  STEP: deleting @ 01/03/24 04:26:51.775
  Jan  3 04:26:51.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2529" for this suite. @ 01/03/24 04:26:51.849
• [0.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/03/24 04:26:51.858
  Jan  3 04:26:51.859: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename conformance-tests @ 01/03/24 04:26:51.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:26:51.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:26:51.882
  STEP: Getting node addresses @ 01/03/24 04:26:51.886
  Jan  3 04:26:51.886: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jan  3 04:26:51.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1043" for this suite. @ 01/03/24 04:26:51.902
• [0.051 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 01/03/24 04:26:51.91
  Jan  3 04:26:51.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:26:51.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:26:51.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:26:51.943
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9175 @ 01/03/24 04:26:51.947
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/03/24 04:26:51.958
  STEP: creating service externalsvc in namespace services-9175 @ 01/03/24 04:26:51.958
  STEP: creating replication controller externalsvc in namespace services-9175 @ 01/03/24 04:26:51.972
  I0103 04:26:51.983523      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9175, replica count: 2
  I0103 04:26:55.035055      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/03/24 04:26:55.043
  Jan  3 04:26:55.064: INFO: Creating new exec pod
  Jan  3 04:26:57.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-9175 exec execpodm8g76 -- /bin/sh -x -c nslookup clusterip-service.services-9175.svc.cluster.local'
  Jan  3 04:26:57.464: INFO: stderr: "+ nslookup clusterip-service.services-9175.svc.cluster.local\n"
  Jan  3 04:26:57.464: INFO: stdout: "Server:\t\t169.169.0.10\nAddress:\t169.169.0.10#53\n\nclusterip-service.services-9175.svc.cluster.local\tcanonical name = externalsvc.services-9175.svc.cluster.local.\nName:\texternalsvc.services-9175.svc.cluster.local\nAddress: 169.169.186.84\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9175, will wait for the garbage collector to delete the pods @ 01/03/24 04:26:57.464
  Jan  3 04:26:57.531: INFO: Deleting ReplicationController externalsvc took: 9.768235ms
  Jan  3 04:26:57.631: INFO: Terminating ReplicationController externalsvc pods took: 100.344272ms
  Jan  3 04:27:00.866: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jan  3 04:27:00.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9175" for this suite. @ 01/03/24 04:27:00.892
• [8.992 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 01/03/24 04:27:00.906
  Jan  3 04:27:00.906: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:27:00.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:27:00.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:27:00.94
  STEP: creating service in namespace services-2676 @ 01/03/24 04:27:00.947
  STEP: creating service affinity-nodeport-transition in namespace services-2676 @ 01/03/24 04:27:00.947
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2676 @ 01/03/24 04:27:00.965
  I0103 04:27:00.974743      20 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-2676, replica count: 3
  I0103 04:27:04.026199      20 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan  3 04:27:04.050: INFO: Creating new exec pod
  Jan  3 04:27:07.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-2676 exec execpod-affinity6zq77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jan  3 04:27:07.433: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jan  3 04:27:07.433: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:27:07.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-2676 exec execpod-affinity6zq77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.252.136 80'
  Jan  3 04:27:07.764: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.252.136 80\nConnection to 169.169.252.136 80 port [tcp/http] succeeded!\n"
  Jan  3 04:27:07.764: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:27:07.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-2676 exec execpod-affinity6zq77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.18.91 30630'
  Jan  3 04:27:08.104: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.18.91 30630\nConnection to 192.168.18.91 30630 port [tcp/*] succeeded!\n"
  Jan  3 04:27:08.104: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:27:08.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-2676 exec execpod-affinity6zq77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.18.92 30630'
  Jan  3 04:27:08.442: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.18.92 30630\nConnection to 192.168.18.92 30630 port [tcp/*] succeeded!\n"
  Jan  3 04:27:08.442: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:27:08.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-2676 exec execpod-affinity6zq77 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.18.91:30630/ ; done'
  Jan  3 04:27:08.968: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n"
  Jan  3 04:27:08.968: INFO: stdout: "\naffinity-nodeport-transition-vz5xg\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-vh42k\naffinity-nodeport-transition-vz5xg\naffinity-nodeport-transition-vh42k\naffinity-nodeport-transition-vz5xg\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-vh42k\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-vz5xg\naffinity-nodeport-transition-vh42k\naffinity-nodeport-transition-v9bmp"
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-vz5xg
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-vh42k
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-vz5xg
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-vh42k
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-vz5xg
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-vh42k
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-vz5xg
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-vh42k
  Jan  3 04:27:08.968: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:08.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-2676 exec execpod-affinity6zq77 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.18.91:30630/ ; done'
  Jan  3 04:27:09.476: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:30630/\n"
  Jan  3 04:27:09.476: INFO: stdout: "\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp\naffinity-nodeport-transition-v9bmp"
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.476: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.477: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.477: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.477: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.477: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.477: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.477: INFO: Received response from host: affinity-nodeport-transition-v9bmp
  Jan  3 04:27:09.477: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2676, will wait for the garbage collector to delete the pods @ 01/03/24 04:27:09.504
  Jan  3 04:27:09.573: INFO: Deleting ReplicationController affinity-nodeport-transition took: 10.226341ms
  Jan  3 04:27:09.674: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.242439ms
  Jan  3 04:27:13.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2676" for this suite. @ 01/03/24 04:27:13.041
• [12.145 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/03/24 04:27:13.052
  Jan  3 04:27:13.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename proxy @ 01/03/24 04:27:13.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:27:13.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:27:13.087
  STEP: starting an echo server on multiple ports @ 01/03/24 04:27:13.11
  STEP: creating replication controller proxy-service-mfpjr in namespace proxy-6541 @ 01/03/24 04:27:13.11
  I0103 04:27:13.138321      20 runners.go:197] Created replication controller with name: proxy-service-mfpjr, namespace: proxy-6541, replica count: 1
  I0103 04:27:14.191649      20 runners.go:197] proxy-service-mfpjr Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0103 04:27:15.192751      20 runners.go:197] proxy-service-mfpjr Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0103 04:27:16.193336      20 runners.go:197] proxy-service-mfpjr Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan  3 04:27:16.200: INFO: setup took 3.106754865s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/03/24 04:27:16.201
  Jan  3 04:27:16.220: INFO: (0) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 18.863552ms)
  Jan  3 04:27:16.220: INFO: (0) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 18.894808ms)
  Jan  3 04:27:16.220: INFO: (0) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 19.162817ms)
  Jan  3 04:27:16.221: INFO: (0) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 19.086449ms)
  Jan  3 04:27:16.221: INFO: (0) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 19.580039ms)
  Jan  3 04:27:16.226: INFO: (0) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 24.35866ms)
  Jan  3 04:27:16.226: INFO: (0) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 25.039164ms)
  Jan  3 04:27:16.226: INFO: (0) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 24.923794ms)
  Jan  3 04:27:16.226: INFO: (0) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 25.148227ms)
  Jan  3 04:27:16.227: INFO: (0) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 25.088441ms)
  Jan  3 04:27:16.228: INFO: (0) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 26.387864ms)
  Jan  3 04:27:16.243: INFO: (0) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 41.503287ms)
  Jan  3 04:27:16.243: INFO: (0) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 41.986547ms)
  Jan  3 04:27:16.244: INFO: (0) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 42.495956ms)
  Jan  3 04:27:16.250: INFO: (0) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 49.011782ms)
  Jan  3 04:27:16.250: INFO: (0) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 49.093118ms)
  Jan  3 04:27:16.263: INFO: (1) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 11.151955ms)
  Jan  3 04:27:16.266: INFO: (1) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 13.330659ms)
  Jan  3 04:27:16.266: INFO: (1) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 15.151686ms)
  Jan  3 04:27:16.266: INFO: (1) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 12.162063ms)
  Jan  3 04:27:16.266: INFO: (1) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 15.534252ms)
  Jan  3 04:27:16.266: INFO: (1) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 13.829643ms)
  Jan  3 04:27:16.266: INFO: (1) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 13.577236ms)
  Jan  3 04:27:16.266: INFO: (1) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 13.056524ms)
  Jan  3 04:27:16.267: INFO: (1) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 15.342401ms)
  Jan  3 04:27:16.268: INFO: (1) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 16.143567ms)
  Jan  3 04:27:16.270: INFO: (1) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 15.387301ms)
  Jan  3 04:27:16.270: INFO: (1) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 18.232735ms)
  Jan  3 04:27:16.270: INFO: (1) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 18.658022ms)
  Jan  3 04:27:16.270: INFO: (1) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 17.336612ms)
  Jan  3 04:27:16.271: INFO: (1) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 16.064697ms)
  Jan  3 04:27:16.271: INFO: (1) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 20.317419ms)
  Jan  3 04:27:16.289: INFO: (2) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 18.083468ms)
  Jan  3 04:27:16.289: INFO: (2) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 17.489932ms)
  Jan  3 04:27:16.289: INFO: (2) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 17.150965ms)
  Jan  3 04:27:16.289: INFO: (2) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 18.830643ms)
  Jan  3 04:27:16.291: INFO: (2) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 19.804413ms)
  Jan  3 04:27:16.291: INFO: (2) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 18.962269ms)
  Jan  3 04:27:16.291: INFO: (2) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 19.289737ms)
  Jan  3 04:27:16.291: INFO: (2) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 19.045571ms)
  Jan  3 04:27:16.291: INFO: (2) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 18.988332ms)
  Jan  3 04:27:16.292: INFO: (2) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 19.386357ms)
  Jan  3 04:27:16.305: INFO: (2) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 32.938521ms)
  Jan  3 04:27:16.305: INFO: (2) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 32.467533ms)
  Jan  3 04:27:16.305: INFO: (2) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 32.897782ms)
  Jan  3 04:27:16.305: INFO: (2) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 32.512542ms)
  Jan  3 04:27:16.305: INFO: (2) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 32.912317ms)
  Jan  3 04:27:16.305: INFO: (2) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 32.832825ms)
  Jan  3 04:27:16.322: INFO: (3) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 16.485551ms)
  Jan  3 04:27:16.324: INFO: (3) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 18.057489ms)
  Jan  3 04:27:16.324: INFO: (3) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 18.859399ms)
  Jan  3 04:27:16.324: INFO: (3) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 18.397331ms)
  Jan  3 04:27:16.324: INFO: (3) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 18.285703ms)
  Jan  3 04:27:16.327: INFO: (3) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 20.9095ms)
  Jan  3 04:27:16.327: INFO: (3) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 21.862695ms)
  Jan  3 04:27:16.331: INFO: (3) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 24.794863ms)
  Jan  3 04:27:16.331: INFO: (3) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 24.496435ms)
  Jan  3 04:27:16.331: INFO: (3) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 24.357519ms)
  Jan  3 04:27:16.331: INFO: (3) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 24.472807ms)
  Jan  3 04:27:16.331: INFO: (3) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 25.523744ms)
  Jan  3 04:27:16.331: INFO: (3) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 25.494831ms)
  Jan  3 04:27:16.331: INFO: (3) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 24.884061ms)
  Jan  3 04:27:16.332: INFO: (3) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 25.154296ms)
  Jan  3 04:27:16.332: INFO: (3) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 27.031187ms)
  Jan  3 04:27:16.364: INFO: (4) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 31.364074ms)
  Jan  3 04:27:16.364: INFO: (4) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 29.786239ms)
  Jan  3 04:27:16.364: INFO: (4) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 29.795632ms)
  Jan  3 04:27:16.364: INFO: (4) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 30.905771ms)
  Jan  3 04:27:16.365: INFO: (4) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 30.912398ms)
  Jan  3 04:27:16.367: INFO: (4) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 33.396242ms)
  Jan  3 04:27:16.367: INFO: (4) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 33.156333ms)
  Jan  3 04:27:16.367: INFO: (4) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 33.540389ms)
  Jan  3 04:27:16.368: INFO: (4) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 33.575295ms)
  Jan  3 04:27:16.368: INFO: (4) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 33.511305ms)
  Jan  3 04:27:16.368: INFO: (4) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 33.508182ms)
  Jan  3 04:27:16.368: INFO: (4) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 33.821129ms)
  Jan  3 04:27:16.368: INFO: (4) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 33.803387ms)
  Jan  3 04:27:16.368: INFO: (4) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 33.806301ms)
  Jan  3 04:27:16.368: INFO: (4) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 33.869286ms)
  Jan  3 04:27:16.368: INFO: (4) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 34.362223ms)
  Jan  3 04:27:16.382: INFO: (5) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 12.909797ms)
  Jan  3 04:27:16.382: INFO: (5) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 12.941392ms)
  Jan  3 04:27:16.382: INFO: (5) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 13.228508ms)
  Jan  3 04:27:16.387: INFO: (5) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 17.60916ms)
  Jan  3 04:27:16.387: INFO: (5) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 18.568471ms)
  Jan  3 04:27:16.387: INFO: (5) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 18.206647ms)
  Jan  3 04:27:16.387: INFO: (5) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 17.974397ms)
  Jan  3 04:27:16.391: INFO: (5) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 21.925846ms)
  Jan  3 04:27:16.391: INFO: (5) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 22.490611ms)
  Jan  3 04:27:16.391: INFO: (5) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 22.475836ms)
  Jan  3 04:27:16.393: INFO: (5) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 23.853511ms)
  Jan  3 04:27:16.393: INFO: (5) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 23.986012ms)
  Jan  3 04:27:16.393: INFO: (5) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 24.09582ms)
  Jan  3 04:27:16.397: INFO: (5) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 27.927546ms)
  Jan  3 04:27:16.397: INFO: (5) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 28.23765ms)
  Jan  3 04:27:16.397: INFO: (5) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 28.285511ms)
  Jan  3 04:27:16.413: INFO: (6) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 14.45103ms)
  Jan  3 04:27:16.413: INFO: (6) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 14.770211ms)
  Jan  3 04:27:16.417: INFO: (6) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 18.747819ms)
  Jan  3 04:27:16.417: INFO: (6) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 18.264948ms)
  Jan  3 04:27:16.417: INFO: (6) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 18.466197ms)
  Jan  3 04:27:16.417: INFO: (6) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 18.730253ms)
  Jan  3 04:27:16.417: INFO: (6) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 18.72714ms)
  Jan  3 04:27:16.417: INFO: (6) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 18.602166ms)
  Jan  3 04:27:16.417: INFO: (6) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 18.584698ms)
  Jan  3 04:27:16.417: INFO: (6) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 19.120042ms)
  Jan  3 04:27:16.417: INFO: (6) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 19.828383ms)
  Jan  3 04:27:16.419: INFO: (6) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 21.386976ms)
  Jan  3 04:27:16.422: INFO: (6) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 23.344251ms)
  Jan  3 04:27:16.423: INFO: (6) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 24.617396ms)
  Jan  3 04:27:16.424: INFO: (6) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 25.101247ms)
  Jan  3 04:27:16.424: INFO: (6) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 25.56124ms)
  Jan  3 04:27:16.434: INFO: (7) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 8.752043ms)
  Jan  3 04:27:16.435: INFO: (7) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 10.04122ms)
  Jan  3 04:27:16.435: INFO: (7) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 10.487965ms)
  Jan  3 04:27:16.435: INFO: (7) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 10.544727ms)
  Jan  3 04:27:16.435: INFO: (7) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 10.533125ms)
  Jan  3 04:27:16.435: INFO: (7) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 10.352156ms)
  Jan  3 04:27:16.436: INFO: (7) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 11.051551ms)
  Jan  3 04:27:16.436: INFO: (7) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 10.898999ms)
  Jan  3 04:27:16.436: INFO: (7) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 12.380105ms)
  Jan  3 04:27:16.436: INFO: (7) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 11.072644ms)
  Jan  3 04:27:16.441: INFO: (7) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 16.325728ms)
  Jan  3 04:27:16.441: INFO: (7) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 15.649733ms)
  Jan  3 04:27:16.441: INFO: (7) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 15.586576ms)
  Jan  3 04:27:16.441: INFO: (7) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 16.79355ms)
  Jan  3 04:27:16.441: INFO: (7) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 16.374388ms)
  Jan  3 04:27:16.441: INFO: (7) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 16.03937ms)
  Jan  3 04:27:16.451: INFO: (8) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 7.423351ms)
  Jan  3 04:27:16.451: INFO: (8) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 9.113258ms)
  Jan  3 04:27:16.451: INFO: (8) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 8.69822ms)
  Jan  3 04:27:16.452: INFO: (8) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 10.170192ms)
  Jan  3 04:27:16.453: INFO: (8) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 9.036387ms)
  Jan  3 04:27:16.453: INFO: (8) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 9.728074ms)
  Jan  3 04:27:16.454: INFO: (8) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 10.405014ms)
  Jan  3 04:27:16.455: INFO: (8) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 11.111489ms)
  Jan  3 04:27:16.455: INFO: (8) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 14.109491ms)
  Jan  3 04:27:16.455: INFO: (8) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 10.549743ms)
  Jan  3 04:27:16.455: INFO: (8) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 13.614068ms)
  Jan  3 04:27:16.455: INFO: (8) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 13.876972ms)
  Jan  3 04:27:16.456: INFO: (8) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 12.046123ms)
  Jan  3 04:27:16.457: INFO: (8) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 11.931682ms)
  Jan  3 04:27:16.457: INFO: (8) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 12.57295ms)
  Jan  3 04:27:16.457: INFO: (8) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 14.124362ms)
  Jan  3 04:27:16.471: INFO: (9) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 13.590271ms)
  Jan  3 04:27:16.471: INFO: (9) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 13.145364ms)
  Jan  3 04:27:16.472: INFO: (9) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 14.197508ms)
  Jan  3 04:27:16.475: INFO: (9) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 17.614627ms)
  Jan  3 04:27:16.475: INFO: (9) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 17.559168ms)
  Jan  3 04:27:16.475: INFO: (9) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 17.006187ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 17.54069ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 17.228072ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 17.46653ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 17.726536ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 17.992051ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 17.461926ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 17.596288ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 17.70233ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 18.253751ms)
  Jan  3 04:27:16.476: INFO: (9) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 18.394147ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 11.978592ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 12.22079ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 11.877049ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 11.740878ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 12.084546ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 11.669738ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 11.654641ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 11.786147ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 12.009722ms)
  Jan  3 04:27:16.489: INFO: (10) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 11.54879ms)
  Jan  3 04:27:16.493: INFO: (10) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 15.324103ms)
  Jan  3 04:27:16.493: INFO: (10) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 15.547323ms)
  Jan  3 04:27:16.493: INFO: (10) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 15.473156ms)
  Jan  3 04:27:16.493: INFO: (10) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 15.465968ms)
  Jan  3 04:27:16.493: INFO: (10) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 15.565003ms)
  Jan  3 04:27:16.493: INFO: (10) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 15.65179ms)
  Jan  3 04:27:16.501: INFO: (11) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 7.571891ms)
  Jan  3 04:27:16.502: INFO: (11) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 8.868636ms)
  Jan  3 04:27:16.503: INFO: (11) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 9.417275ms)
  Jan  3 04:27:16.504: INFO: (11) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 10.363615ms)
  Jan  3 04:27:16.504: INFO: (11) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 10.236254ms)
  Jan  3 04:27:16.504: INFO: (11) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 10.322374ms)
  Jan  3 04:27:16.504: INFO: (11) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 10.413207ms)
  Jan  3 04:27:16.505: INFO: (11) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 11.231581ms)
  Jan  3 04:27:16.505: INFO: (11) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 11.658345ms)
  Jan  3 04:27:16.505: INFO: (11) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 11.351478ms)
  Jan  3 04:27:16.505: INFO: (11) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 11.701162ms)
  Jan  3 04:27:16.505: INFO: (11) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 11.713106ms)
  Jan  3 04:27:16.505: INFO: (11) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 11.737622ms)
  Jan  3 04:27:16.506: INFO: (11) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 11.806159ms)
  Jan  3 04:27:16.506: INFO: (11) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 11.862474ms)
  Jan  3 04:27:16.506: INFO: (11) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 11.659217ms)
  Jan  3 04:27:16.515: INFO: (12) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 8.706807ms)
  Jan  3 04:27:16.515: INFO: (12) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 8.873185ms)
  Jan  3 04:27:16.515: INFO: (12) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 8.571025ms)
  Jan  3 04:27:16.515: INFO: (12) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 8.452512ms)
  Jan  3 04:27:16.515: INFO: (12) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 9.302678ms)
  Jan  3 04:27:16.521: INFO: (12) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 13.628821ms)
  Jan  3 04:27:16.521: INFO: (12) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 14.956786ms)
  Jan  3 04:27:16.523: INFO: (12) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 15.927141ms)
  Jan  3 04:27:16.523: INFO: (12) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 16.356562ms)
  Jan  3 04:27:16.523: INFO: (12) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 16.189099ms)
  Jan  3 04:27:16.523: INFO: (12) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 16.240433ms)
  Jan  3 04:27:16.527: INFO: (12) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 19.323879ms)
  Jan  3 04:27:16.527: INFO: (12) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 19.778721ms)
  Jan  3 04:27:16.527: INFO: (12) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 19.917284ms)
  Jan  3 04:27:16.527: INFO: (12) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 19.648191ms)
  Jan  3 04:27:16.530: INFO: (12) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 22.863342ms)
  Jan  3 04:27:16.536: INFO: (13) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 5.719055ms)
  Jan  3 04:27:16.537: INFO: (13) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 6.86265ms)
  Jan  3 04:27:16.537: INFO: (13) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 6.987658ms)
  Jan  3 04:27:16.537: INFO: (13) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 6.930969ms)
  Jan  3 04:27:16.541: INFO: (13) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 11.059685ms)
  Jan  3 04:27:16.541: INFO: (13) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 11.001909ms)
  Jan  3 04:27:16.542: INFO: (13) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 11.180774ms)
  Jan  3 04:27:16.542: INFO: (13) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 11.133321ms)
  Jan  3 04:27:16.542: INFO: (13) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 11.253876ms)
  Jan  3 04:27:16.543: INFO: (13) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 12.544781ms)
  Jan  3 04:27:16.544: INFO: (13) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 13.536679ms)
  Jan  3 04:27:16.544: INFO: (13) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 13.142527ms)
  Jan  3 04:27:16.544: INFO: (13) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 13.697401ms)
  Jan  3 04:27:16.549: INFO: (13) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 18.741514ms)
  Jan  3 04:27:16.549: INFO: (13) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 18.395088ms)
  Jan  3 04:27:16.549: INFO: (13) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 18.536139ms)
  Jan  3 04:27:16.558: INFO: (14) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 9.414364ms)
  Jan  3 04:27:16.563: INFO: (14) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 13.355032ms)
  Jan  3 04:27:16.563: INFO: (14) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 13.782899ms)
  Jan  3 04:27:16.563: INFO: (14) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 11.427192ms)
  Jan  3 04:27:16.563: INFO: (14) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 12.527066ms)
  Jan  3 04:27:16.563: INFO: (14) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 11.909055ms)
  Jan  3 04:27:16.567: INFO: (14) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 15.868665ms)
  Jan  3 04:27:16.567: INFO: (14) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 16.267281ms)
  Jan  3 04:27:16.568: INFO: (14) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 18.018007ms)
  Jan  3 04:27:16.568: INFO: (14) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 18.220145ms)
  Jan  3 04:27:16.568: INFO: (14) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 18.604724ms)
  Jan  3 04:27:16.569: INFO: (14) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 17.39733ms)
  Jan  3 04:27:16.569: INFO: (14) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 18.273889ms)
  Jan  3 04:27:16.570: INFO: (14) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 18.647554ms)
  Jan  3 04:27:16.571: INFO: (14) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 18.957875ms)
  Jan  3 04:27:16.571: INFO: (14) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 19.910595ms)
  Jan  3 04:27:16.577: INFO: (15) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 5.356319ms)
  Jan  3 04:27:16.578: INFO: (15) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 6.253444ms)
  Jan  3 04:27:16.585: INFO: (15) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 12.200345ms)
  Jan  3 04:27:16.586: INFO: (15) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 12.860676ms)
  Jan  3 04:27:16.586: INFO: (15) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 13.805421ms)
  Jan  3 04:27:16.586: INFO: (15) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 12.301183ms)
  Jan  3 04:27:16.586: INFO: (15) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 13.388132ms)
  Jan  3 04:27:16.586: INFO: (15) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 12.90335ms)
  Jan  3 04:27:16.588: INFO: (15) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 14.256569ms)
  Jan  3 04:27:16.588: INFO: (15) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 14.885796ms)
  Jan  3 04:27:16.591: INFO: (15) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 17.416544ms)
  Jan  3 04:27:16.592: INFO: (15) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 18.941523ms)
  Jan  3 04:27:16.592: INFO: (15) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 18.315443ms)
  Jan  3 04:27:16.592: INFO: (15) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 18.153092ms)
  Jan  3 04:27:16.592: INFO: (15) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 18.95057ms)
  Jan  3 04:27:16.592: INFO: (15) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 18.333031ms)
  Jan  3 04:27:16.601: INFO: (16) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 7.859525ms)
  Jan  3 04:27:16.601: INFO: (16) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 7.774244ms)
  Jan  3 04:27:16.601: INFO: (16) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 8.583933ms)
  Jan  3 04:27:16.605: INFO: (16) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 12.680242ms)
  Jan  3 04:27:16.606: INFO: (16) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 11.57284ms)
  Jan  3 04:27:16.606: INFO: (16) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 12.366158ms)
  Jan  3 04:27:16.606: INFO: (16) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 13.677811ms)
  Jan  3 04:27:16.606: INFO: (16) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 13.085531ms)
  Jan  3 04:27:16.606: INFO: (16) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 13.480486ms)
  Jan  3 04:27:16.606: INFO: (16) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 11.869571ms)
  Jan  3 04:27:16.607: INFO: (16) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 13.918374ms)
  Jan  3 04:27:16.607: INFO: (16) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 12.066973ms)
  Jan  3 04:27:16.607: INFO: (16) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 12.741923ms)
  Jan  3 04:27:16.607: INFO: (16) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 12.667976ms)
  Jan  3 04:27:16.607: INFO: (16) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 14.061208ms)
  Jan  3 04:27:16.607: INFO: (16) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 12.678991ms)
  Jan  3 04:27:16.616: INFO: (17) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 8.508582ms)
  Jan  3 04:27:16.617: INFO: (17) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 9.022281ms)
  Jan  3 04:27:16.617: INFO: (17) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 8.582683ms)
  Jan  3 04:27:16.618: INFO: (17) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 10.069642ms)
  Jan  3 04:27:16.618: INFO: (17) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 10.388242ms)
  Jan  3 04:27:16.627: INFO: (17) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 16.986163ms)
  Jan  3 04:27:16.627: INFO: (17) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 17.550812ms)
  Jan  3 04:27:16.627: INFO: (17) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 19.835257ms)
  Jan  3 04:27:16.627: INFO: (17) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 17.210651ms)
  Jan  3 04:27:16.627: INFO: (17) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 17.47336ms)
  Jan  3 04:27:16.627: INFO: (17) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 18.670383ms)
  Jan  3 04:27:16.627: INFO: (17) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 18.358948ms)
  Jan  3 04:27:16.627: INFO: (17) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 18.244695ms)
  Jan  3 04:27:16.628: INFO: (17) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 18.384026ms)
  Jan  3 04:27:16.630: INFO: (17) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 21.518657ms)
  Jan  3 04:27:16.632: INFO: (17) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 23.542567ms)
  Jan  3 04:27:16.643: INFO: (18) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 8.321103ms)
  Jan  3 04:27:16.644: INFO: (18) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 10.382834ms)
  Jan  3 04:27:16.644: INFO: (18) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 12.298191ms)
  Jan  3 04:27:16.645: INFO: (18) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 12.081645ms)
  Jan  3 04:27:16.645: INFO: (18) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 11.427705ms)
  Jan  3 04:27:16.646: INFO: (18) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 10.772583ms)
  Jan  3 04:27:16.646: INFO: (18) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 12.119815ms)
  Jan  3 04:27:16.647: INFO: (18) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 14.220955ms)
  Jan  3 04:27:16.647: INFO: (18) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 14.554547ms)
  Jan  3 04:27:16.647: INFO: (18) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 12.381271ms)
  Jan  3 04:27:16.647: INFO: (18) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 12.804294ms)
  Jan  3 04:27:16.647: INFO: (18) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 13.186004ms)
  Jan  3 04:27:16.647: INFO: (18) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 13.042996ms)
  Jan  3 04:27:16.647: INFO: (18) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 14.938363ms)
  Jan  3 04:27:16.649: INFO: (18) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 15.146101ms)
  Jan  3 04:27:16.649: INFO: (18) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 14.113312ms)
  Jan  3 04:27:16.658: INFO: (19) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:462/proxy/: tls qux (200; 8.233937ms)
  Jan  3 04:27:16.658: INFO: (19) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">test<... (200; 8.751755ms)
  Jan  3 04:27:16.658: INFO: (19) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:1080/proxy/rewriteme">... (200; 7.005095ms)
  Jan  3 04:27:16.658: INFO: (19) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname1/proxy/: foo (200; 8.236159ms)
  Jan  3 04:27:16.658: INFO: (19) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 8.61023ms)
  Jan  3 04:27:16.658: INFO: (19) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:460/proxy/: tls baz (200; 9.16269ms)
  Jan  3 04:27:16.658: INFO: (19) /api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/https:proxy-service-mfpjr-xcx9b:443/proxy/tlsrewritem... (200; 8.09184ms)
  Jan  3 04:27:16.659: INFO: (19) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/: <a href="/api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b/proxy/rewriteme">test</a> (200; 7.75856ms)
  Jan  3 04:27:16.659: INFO: (19) /api/v1/namespaces/proxy-6541/pods/http:proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 8.910293ms)
  Jan  3 04:27:16.659: INFO: (19) /api/v1/namespaces/proxy-6541/services/proxy-service-mfpjr:portname2/proxy/: bar (200; 8.59309ms)
  Jan  3 04:27:16.660: INFO: (19) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname1/proxy/: tls baz (200; 9.902949ms)
  Jan  3 04:27:16.660: INFO: (19) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname1/proxy/: foo (200; 9.380921ms)
  Jan  3 04:27:16.660: INFO: (19) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:162/proxy/: bar (200; 8.722949ms)
  Jan  3 04:27:16.660: INFO: (19) /api/v1/namespaces/proxy-6541/pods/proxy-service-mfpjr-xcx9b:160/proxy/: foo (200; 9.519583ms)
  Jan  3 04:27:16.661: INFO: (19) /api/v1/namespaces/proxy-6541/services/http:proxy-service-mfpjr:portname2/proxy/: bar (200; 9.562612ms)
  Jan  3 04:27:16.664: INFO: (19) /api/v1/namespaces/proxy-6541/services/https:proxy-service-mfpjr:tlsportname2/proxy/: tls qux (200; 12.981725ms)
  STEP: deleting ReplicationController proxy-service-mfpjr in namespace proxy-6541, will wait for the garbage collector to delete the pods @ 01/03/24 04:27:16.664
  Jan  3 04:27:16.727: INFO: Deleting ReplicationController proxy-service-mfpjr took: 8.543414ms
  Jan  3 04:27:16.829: INFO: Terminating ReplicationController proxy-service-mfpjr pods took: 101.277878ms
  Jan  3 04:27:19.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6541" for this suite. @ 01/03/24 04:27:19.039
• [5.998 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 01/03/24 04:27:19.052
  Jan  3 04:27:19.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-pred @ 01/03/24 04:27:19.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:27:19.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:27:19.086
  Jan  3 04:27:19.094: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan  3 04:27:19.110: INFO: Waiting for terminating namespaces to be deleted...
  Jan  3 04:27:19.114: INFO: 
  Logging pods the apiserver thinks is on node 192.168.18.91 before test
  Jan  3 04:27:19.129: INFO: calico-kube-controllers-7ddc4f45bc-svj88 from kube-system started at 2023-12-24 15:52:08 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.129: INFO: 	Container calico-kube-controllers ready: true, restart count 3
  Jan  3 04:27:19.129: INFO: calico-node-drgqp from kube-system started at 2023-12-24 15:52:08 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.129: INFO: 	Container calico-node ready: true, restart count 4
  Jan  3 04:27:19.129: INFO: coredns-76f75df574-6qkhz from kube-system started at 2023-12-24 15:51:48 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.129: INFO: 	Container coredns ready: true, restart count 3
  Jan  3 04:27:19.129: INFO: etcd-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.129: INFO: 	Container etcd ready: true, restart count 4
  Jan  3 04:27:19.129: INFO: kube-apiserver-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.129: INFO: 	Container kube-apiserver ready: true, restart count 0
  Jan  3 04:27:19.129: INFO: kube-controller-manager-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.129: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Jan  3 04:27:19.129: INFO: kube-proxy-96snq from kube-system started at 2023-12-24 15:51:47 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.129: INFO: 	Container kube-proxy ready: true, restart count 4
  Jan  3 04:27:19.129: INFO: kube-scheduler-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.129: INFO: 	Container kube-scheduler ready: true, restart count 0
  Jan  3 04:27:19.129: INFO: sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-l24d8 from sonobuoy started at 2024-01-03 03:26:22 +0000 UTC (2 container statuses recorded)
  Jan  3 04:27:19.129: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 04:27:19.129: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan  3 04:27:19.129: INFO: 
  Logging pods the apiserver thinks is on node 192.168.18.92 before test
  Jan  3 04:27:19.141: INFO: calico-node-cdwkb from kube-system started at 2023-12-24 15:53:04 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.141: INFO: 	Container calico-node ready: true, restart count 3
  Jan  3 04:27:19.141: INFO: kube-proxy-95zdw from kube-system started at 2023-12-24 15:53:04 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.141: INFO: 	Container kube-proxy ready: true, restart count 3
  Jan  3 04:27:19.141: INFO: sonobuoy from sonobuoy started at 2024-01-03 03:26:21 +0000 UTC (1 container statuses recorded)
  Jan  3 04:27:19.141: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan  3 04:27:19.141: INFO: sonobuoy-e2e-job-4b415b506d534fb8 from sonobuoy started at 2024-01-03 03:26:23 +0000 UTC (2 container statuses recorded)
  Jan  3 04:27:19.141: INFO: 	Container e2e ready: true, restart count 0
  Jan  3 04:27:19.141: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 04:27:19.141: INFO: sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-gswct from sonobuoy started at 2024-01-03 03:26:23 +0000 UTC (2 container statuses recorded)
  Jan  3 04:27:19.141: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 04:27:19.141: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/03/24 04:27:19.141
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17a6bbd66739a51f], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 01/03/24 04:27:19.191
  Jan  3 04:27:20.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6390" for this suite. @ 01/03/24 04:27:20.198
• [1.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 01/03/24 04:27:20.211
  Jan  3 04:27:20.211: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 04:27:20.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:27:20.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:27:20.246
  STEP: Creating a ResourceQuota with best effort scope @ 01/03/24 04:27:20.254
  STEP: Ensuring ResourceQuota status is calculated @ 01/03/24 04:27:20.263
  STEP: Creating a ResourceQuota with not best effort scope @ 01/03/24 04:27:22.273
  STEP: Ensuring ResourceQuota status is calculated @ 01/03/24 04:27:22.283
  STEP: Creating a best-effort pod @ 01/03/24 04:27:24.291
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/03/24 04:27:24.312
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/03/24 04:27:26.328
  STEP: Deleting the pod @ 01/03/24 04:27:28.338
  STEP: Ensuring resource quota status released the pod usage @ 01/03/24 04:27:28.357
  STEP: Creating a not best-effort pod @ 01/03/24 04:27:30.369
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/03/24 04:27:30.387
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/03/24 04:27:32.397
  STEP: Deleting the pod @ 01/03/24 04:27:34.405
  STEP: Ensuring resource quota status released the pod usage @ 01/03/24 04:27:34.434
  Jan  3 04:27:36.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2725" for this suite. @ 01/03/24 04:27:36.452
• [16.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 01/03/24 04:27:36.462
  Jan  3 04:27:36.462: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:27:36.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:27:36.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:27:36.499
  STEP: creating service in namespace services-6408 @ 01/03/24 04:27:36.507
  STEP: creating service affinity-nodeport in namespace services-6408 @ 01/03/24 04:27:36.507
  STEP: creating replication controller affinity-nodeport in namespace services-6408 @ 01/03/24 04:27:36.532
  I0103 04:27:36.554601      20 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-6408, replica count: 3
  I0103 04:27:39.606093      20 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan  3 04:27:39.631: INFO: Creating new exec pod
  Jan  3 04:27:42.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-6408 exec execpod-affinitygsdt2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jan  3 04:27:43.025: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jan  3 04:27:43.025: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:27:43.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-6408 exec execpod-affinitygsdt2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.120.235 80'
  Jan  3 04:27:43.332: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.120.235 80\nConnection to 169.169.120.235 80 port [tcp/http] succeeded!\n"
  Jan  3 04:27:43.332: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:27:43.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-6408 exec execpod-affinitygsdt2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.18.91 31776'
  Jan  3 04:27:43.638: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.18.91 31776\nConnection to 192.168.18.91 31776 port [tcp/*] succeeded!\n"
  Jan  3 04:27:43.638: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:27:43.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-6408 exec execpod-affinitygsdt2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.18.92 31776'
  Jan  3 04:27:43.913: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.18.92 31776\nConnection to 192.168.18.92 31776 port [tcp/*] succeeded!\n"
  Jan  3 04:27:43.913: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:27:43.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-6408 exec execpod-affinitygsdt2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.18.91:31776/ ; done'
  Jan  3 04:27:44.403: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.18.91:31776/\n"
  Jan  3 04:27:44.403: INFO: stdout: "\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2\naffinity-nodeport-mgxg2"
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Received response from host: affinity-nodeport-mgxg2
  Jan  3 04:27:44.403: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6408, will wait for the garbage collector to delete the pods @ 01/03/24 04:27:44.421
  Jan  3 04:27:44.487: INFO: Deleting ReplicationController affinity-nodeport took: 9.281484ms
  Jan  3 04:27:44.588: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.734405ms
  Jan  3 04:27:48.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6408" for this suite. @ 01/03/24 04:27:48.227
• [11.773 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 01/03/24 04:27:48.237
  Jan  3 04:27:48.237: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:27:48.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:27:48.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:27:48.268
  STEP: creating a ConfigMap @ 01/03/24 04:27:48.276
  STEP: fetching the ConfigMap @ 01/03/24 04:27:48.283
  STEP: patching the ConfigMap @ 01/03/24 04:27:48.287
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/03/24 04:27:48.298
  STEP: deleting the ConfigMap by collection with a label selector @ 01/03/24 04:27:48.305
  STEP: listing all ConfigMaps in test namespace @ 01/03/24 04:27:48.315
  Jan  3 04:27:48.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7733" for this suite. @ 01/03/24 04:27:48.328
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 01/03/24 04:27:48.338
  Jan  3 04:27:48.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename statefulset @ 01/03/24 04:27:48.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:27:48.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:27:48.376
  STEP: Creating service test in namespace statefulset-8868 @ 01/03/24 04:27:48.384
  STEP: Creating stateful set ss in namespace statefulset-8868 @ 01/03/24 04:27:48.39
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8868 @ 01/03/24 04:27:48.404
  Jan  3 04:27:48.410: INFO: Found 0 stateful pods, waiting for 1
  Jan  3 04:27:58.415: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/03/24 04:27:58.415
  Jan  3 04:27:58.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8868 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 04:27:58.847: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 04:27:58.847: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 04:27:58.847: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan  3 04:27:58.854: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jan  3 04:28:08.857: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan  3 04:28:08.857: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan  3 04:28:08.889: INFO: POD   NODE           PHASE    GRACE  CONDITIONS
  Jan  3 04:28:08.889: INFO: ss-0  192.168.18.92  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:47 +0000 UTC  }]
  Jan  3 04:28:08.889: INFO: 
  Jan  3 04:28:08.889: INFO: StatefulSet ss has not reached scale 3, at 1
  Jan  3 04:28:09.897: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.991499102s
  Jan  3 04:28:10.907: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.983788453s
  Jan  3 04:28:11.919: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.973968522s
  Jan  3 04:28:12.930: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.961228769s
  Jan  3 04:28:13.939: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.950754897s
  Jan  3 04:28:14.950: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.941601854s
  Jan  3 04:28:15.959: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.930490019s
  Jan  3 04:28:16.971: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.921067537s
  Jan  3 04:28:17.982: INFO: Verifying statefulset ss doesn't scale past 3 for another 909.380807ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8868 @ 01/03/24 04:28:18.982
  Jan  3 04:28:18.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8868 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:28:19.318: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan  3 04:28:19.318: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan  3 04:28:19.318: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan  3 04:28:19.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8868 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:28:19.655: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jan  3 04:28:19.655: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan  3 04:28:19.655: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan  3 04:28:19.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8868 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:28:19.990: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jan  3 04:28:19.990: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan  3 04:28:19.990: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan  3 04:28:19.999: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 04:28:19.999: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 04:28:19.999: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/03/24 04:28:19.999
  Jan  3 04:28:20.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8868 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 04:28:20.347: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 04:28:20.347: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 04:28:20.347: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan  3 04:28:20.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8868 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 04:28:20.664: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 04:28:20.665: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 04:28:20.665: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan  3 04:28:20.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-8868 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 04:28:21.037: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 04:28:21.037: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 04:28:21.037: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan  3 04:28:21.037: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan  3 04:28:21.042: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Jan  3 04:28:31.058: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan  3 04:28:31.058: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jan  3 04:28:31.058: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jan  3 04:28:31.083: INFO: POD   NODE           PHASE    GRACE  CONDITIONS
  Jan  3 04:28:31.084: INFO: ss-0  192.168.18.92  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:47 +0000 UTC  }]
  Jan  3 04:28:31.084: INFO: ss-1  192.168.18.91  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:08 +0000 UTC  }]
  Jan  3 04:28:31.084: INFO: ss-2  192.168.18.92  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:08 +0000 UTC  }]
  Jan  3 04:28:31.084: INFO: 
  Jan  3 04:28:31.084: INFO: StatefulSet ss has not reached scale 0, at 3
  Jan  3 04:28:32.105: INFO: POD   NODE           PHASE      GRACE  CONDITIONS
  Jan  3 04:28:32.106: INFO: ss-0  192.168.18.92  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:48 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:20 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:20 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:27:47 +0000 UTC  }]
  Jan  3 04:28:32.106: INFO: ss-1  192.168.18.91  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:08 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:20 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:20 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:08 +0000 UTC  }]
  Jan  3 04:28:32.106: INFO: ss-2  192.168.18.92  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:08 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:21 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:21 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-03 04:28:08 +0000 UTC  }]
  Jan  3 04:28:32.106: INFO: 
  Jan  3 04:28:32.106: INFO: StatefulSet ss has not reached scale 0, at 3
  Jan  3 04:28:33.113: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.968964886s
  Jan  3 04:28:34.119: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.961752292s
  Jan  3 04:28:35.127: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.954290043s
  Jan  3 04:28:36.135: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.947652541s
  Jan  3 04:28:37.143: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.939282249s
  Jan  3 04:28:38.151: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.931650714s
  Jan  3 04:28:39.163: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.923488065s
  Jan  3 04:28:40.171: INFO: Verifying statefulset ss doesn't scale past 0 for another 912.259828ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8868 @ 01/03/24 04:28:41.172
  Jan  3 04:28:41.185: INFO: Scaling statefulset ss to 0
  Jan  3 04:28:41.206: INFO: Waiting for statefulset status.replicas updated to 0
  Jan  3 04:28:41.211: INFO: Deleting all statefulset in ns statefulset-8868
  Jan  3 04:28:41.217: INFO: Scaling statefulset ss to 0
  Jan  3 04:28:41.236: INFO: Waiting for statefulset status.replicas updated to 0
  Jan  3 04:28:41.241: INFO: Deleting statefulset ss
  Jan  3 04:28:41.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8868" for this suite. @ 01/03/24 04:28:41.274
• [52.949 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 01/03/24 04:28:41.287
  Jan  3 04:28:41.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/03/24 04:28:41.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:28:41.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:28:41.317
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/03/24 04:28:41.323
  Jan  3 04:28:41.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:28:43.062: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:28:50.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1712" for this suite. @ 01/03/24 04:28:50.328
• [9.049 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 01/03/24 04:28:50.337
  Jan  3 04:28:50.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename field-validation @ 01/03/24 04:28:50.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:28:50.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:28:50.373
  Jan  3 04:28:50.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  W0103 04:28:52.981708      20 warnings.go:70] unknown field "alpha"
  W0103 04:28:52.981857      20 warnings.go:70] unknown field "beta"
  W0103 04:28:52.981883      20 warnings.go:70] unknown field "delta"
  W0103 04:28:52.981896      20 warnings.go:70] unknown field "epsilon"
  W0103 04:28:52.981909      20 warnings.go:70] unknown field "gamma"
  Jan  3 04:28:53.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1347" for this suite. @ 01/03/24 04:28:53.577
• [3.253 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 01/03/24 04:28:53.59
  Jan  3 04:28:53.590: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename job @ 01/03/24 04:28:53.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:28:53.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:28:53.621
  STEP: Creating a job @ 01/03/24 04:28:53.628
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/03/24 04:28:53.637
  STEP: patching /status @ 01/03/24 04:28:55.653
  STEP: updating /status @ 01/03/24 04:28:55.667
  STEP: get /status @ 01/03/24 04:28:55.688
  Jan  3 04:28:55.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2366" for this suite. @ 01/03/24 04:28:55.704
• [2.122 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 01/03/24 04:28:55.713
  Jan  3 04:28:55.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename job @ 01/03/24 04:28:55.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:28:55.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:28:55.744
  STEP: Creating a suspended job @ 01/03/24 04:28:55.76
  STEP: Patching the Job @ 01/03/24 04:28:55.771
  STEP: Watching for Job to be patched @ 01/03/24 04:28:55.811
  Jan  3 04:28:55.815: INFO: Event ADDED observed for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf] and annotations: map[]
  Jan  3 04:28:55.815: INFO: Event MODIFIED observed for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf] and annotations: map[]
  Jan  3 04:28:55.815: INFO: Event MODIFIED found for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf e2e-n6tbf:patched] and annotations: map[]
  STEP: Updating the job @ 01/03/24 04:28:55.815
  STEP: Watching for Job to be updated @ 01/03/24 04:28:55.833
  Jan  3 04:28:55.837: INFO: Event MODIFIED found for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf e2e-n6tbf:patched] and annotations: map[updated:true]
  Jan  3 04:28:55.837: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/03/24 04:28:55.837
  Jan  3 04:28:55.843: INFO: Job: e2e-n6tbf as labels: map[e2e-job-label:e2e-n6tbf e2e-n6tbf:patched]
  STEP: Waiting for job to complete @ 01/03/24 04:28:55.844
  STEP: Delete a job collection with a labelselector @ 01/03/24 04:29:03.85
  STEP: Watching for Job to be deleted @ 01/03/24 04:29:03.861
  Jan  3 04:29:03.867: INFO: Event MODIFIED observed for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf e2e-n6tbf:patched] and annotations: map[updated:true]
  Jan  3 04:29:03.868: INFO: Event MODIFIED observed for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf e2e-n6tbf:patched] and annotations: map[updated:true]
  Jan  3 04:29:03.868: INFO: Event MODIFIED observed for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf e2e-n6tbf:patched] and annotations: map[updated:true]
  Jan  3 04:29:03.868: INFO: Event MODIFIED observed for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf e2e-n6tbf:patched] and annotations: map[updated:true]
  Jan  3 04:29:03.868: INFO: Event MODIFIED observed for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf e2e-n6tbf:patched] and annotations: map[updated:true]
  Jan  3 04:29:03.868: INFO: Event DELETED found for Job e2e-n6tbf in namespace job-936 with labels: map[e2e-job-label:e2e-n6tbf e2e-n6tbf:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/03/24 04:29:03.868
  Jan  3 04:29:03.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-936" for this suite. @ 01/03/24 04:29:03.884
• [8.188 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/03/24 04:29:03.902
  Jan  3 04:29:03.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename endpointslice @ 01/03/24 04:29:03.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:29:03.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:29:03.936
  Jan  3 04:29:04.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3136" for this suite. @ 01/03/24 04:29:04.011
• [0.117 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/03/24 04:29:04.019
  Jan  3 04:29:04.020: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename podtemplate @ 01/03/24 04:29:04.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:29:04.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:29:04.049
  STEP: Create a pod template @ 01/03/24 04:29:04.056
  STEP: Replace a pod template @ 01/03/24 04:29:04.063
  Jan  3 04:29:04.077: INFO: Found updated podtemplate annotation: "true"

  Jan  3 04:29:04.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1708" for this suite. @ 01/03/24 04:29:04.084
• [0.071 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/03/24 04:29:04.091
  Jan  3 04:29:04.091: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:29:04.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:29:04.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:29:04.121
  STEP: Creating configMap with name configmap-test-upd-58cb24ff-755b-406f-8b33-2f2c57185507 @ 01/03/24 04:29:04.135
  STEP: Creating the pod @ 01/03/24 04:29:04.141
  STEP: Waiting for pod with text data @ 01/03/24 04:29:08.179
  STEP: Waiting for pod with binary data @ 01/03/24 04:29:08.219
  Jan  3 04:29:08.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9965" for this suite. @ 01/03/24 04:29:08.24
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/03/24 04:29:08.252
  Jan  3 04:29:08.252: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:29:08.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:29:08.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:29:08.283
  STEP: Creating projection with secret that has name projected-secret-test-a846ddeb-c237-4815-8001-a9f06cbc83e0 @ 01/03/24 04:29:08.29
  STEP: Creating a pod to test consume secrets @ 01/03/24 04:29:08.297
  STEP: Saw pod success @ 01/03/24 04:29:12.344
  Jan  3 04:29:12.351: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-secrets-7735c8fa-717b-4d57-863e-309233a580b6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 04:29:12.367
  Jan  3 04:29:12.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1563" for this suite. @ 01/03/24 04:29:12.408
• [4.165 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/03/24 04:29:12.417
  Jan  3 04:29:12.417: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename gc @ 01/03/24 04:29:12.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:29:12.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:29:12.456
  STEP: create the rc1 @ 01/03/24 04:29:12.471
  STEP: create the rc2 @ 01/03/24 04:29:12.478
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/03/24 04:29:18.506
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/03/24 04:29:20.035
  STEP: wait for the rc to be deleted @ 01/03/24 04:29:20.053
  Jan  3 04:29:25.243: INFO: 71 pods remaining
  Jan  3 04:29:25.243: INFO: 71 pods has nil DeletionTimestamp
  Jan  3 04:29:25.243: INFO: 
  STEP: Gathering metrics @ 01/03/24 04:29:30.076
  Jan  3 04:29:30.261: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan  3 04:29:30.262: INFO: Deleting pod "simpletest-rc-to-be-deleted-44954" in namespace "gc-3318"
  Jan  3 04:29:30.289: INFO: Deleting pod "simpletest-rc-to-be-deleted-46ghc" in namespace "gc-3318"
  Jan  3 04:29:30.306: INFO: Deleting pod "simpletest-rc-to-be-deleted-48797" in namespace "gc-3318"
  Jan  3 04:29:30.346: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bkwp" in namespace "gc-3318"
  Jan  3 04:29:30.389: INFO: Deleting pod "simpletest-rc-to-be-deleted-4brzs" in namespace "gc-3318"
  Jan  3 04:29:30.413: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pcvj" in namespace "gc-3318"
  Jan  3 04:29:30.467: INFO: Deleting pod "simpletest-rc-to-be-deleted-5czhz" in namespace "gc-3318"
  Jan  3 04:29:30.495: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hlrb" in namespace "gc-3318"
  Jan  3 04:29:30.515: INFO: Deleting pod "simpletest-rc-to-be-deleted-5jgdm" in namespace "gc-3318"
  Jan  3 04:29:30.533: INFO: Deleting pod "simpletest-rc-to-be-deleted-5ntl5" in namespace "gc-3318"
  Jan  3 04:29:30.565: INFO: Deleting pod "simpletest-rc-to-be-deleted-6qdhl" in namespace "gc-3318"
  Jan  3 04:29:30.598: INFO: Deleting pod "simpletest-rc-to-be-deleted-7c4lw" in namespace "gc-3318"
  Jan  3 04:29:30.634: INFO: Deleting pod "simpletest-rc-to-be-deleted-7r7mn" in namespace "gc-3318"
  Jan  3 04:29:30.669: INFO: Deleting pod "simpletest-rc-to-be-deleted-7x4dv" in namespace "gc-3318"
  Jan  3 04:29:30.697: INFO: Deleting pod "simpletest-rc-to-be-deleted-89nks" in namespace "gc-3318"
  Jan  3 04:29:30.719: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bl8n" in namespace "gc-3318"
  Jan  3 04:29:30.737: INFO: Deleting pod "simpletest-rc-to-be-deleted-8czh8" in namespace "gc-3318"
  Jan  3 04:29:30.753: INFO: Deleting pod "simpletest-rc-to-be-deleted-8kpnw" in namespace "gc-3318"
  Jan  3 04:29:30.778: INFO: Deleting pod "simpletest-rc-to-be-deleted-8p9gb" in namespace "gc-3318"
  Jan  3 04:29:30.824: INFO: Deleting pod "simpletest-rc-to-be-deleted-99swz" in namespace "gc-3318"
  Jan  3 04:29:30.874: INFO: Deleting pod "simpletest-rc-to-be-deleted-9bvlg" in namespace "gc-3318"
  Jan  3 04:29:30.894: INFO: Deleting pod "simpletest-rc-to-be-deleted-9hkgv" in namespace "gc-3318"
  Jan  3 04:29:30.962: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvss2" in namespace "gc-3318"
  Jan  3 04:29:30.987: INFO: Deleting pod "simpletest-rc-to-be-deleted-cbxlc" in namespace "gc-3318"
  Jan  3 04:29:31.016: INFO: Deleting pod "simpletest-rc-to-be-deleted-csz88" in namespace "gc-3318"
  Jan  3 04:29:31.066: INFO: Deleting pod "simpletest-rc-to-be-deleted-d26f5" in namespace "gc-3318"
  Jan  3 04:29:31.128: INFO: Deleting pod "simpletest-rc-to-be-deleted-dc5t7" in namespace "gc-3318"
  Jan  3 04:29:31.227: INFO: Deleting pod "simpletest-rc-to-be-deleted-dczjd" in namespace "gc-3318"
  Jan  3 04:29:31.372: INFO: Deleting pod "simpletest-rc-to-be-deleted-dqvj6" in namespace "gc-3318"
  Jan  3 04:29:31.458: INFO: Deleting pod "simpletest-rc-to-be-deleted-dz4p4" in namespace "gc-3318"
  Jan  3 04:29:31.518: INFO: Deleting pod "simpletest-rc-to-be-deleted-f27qd" in namespace "gc-3318"
  Jan  3 04:29:31.616: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdpzh" in namespace "gc-3318"
  Jan  3 04:29:31.662: INFO: Deleting pod "simpletest-rc-to-be-deleted-fhn4g" in namespace "gc-3318"
  Jan  3 04:29:31.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-fk527" in namespace "gc-3318"
  Jan  3 04:29:31.737: INFO: Deleting pod "simpletest-rc-to-be-deleted-fqdlw" in namespace "gc-3318"
  Jan  3 04:29:31.828: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2jcc" in namespace "gc-3318"
  Jan  3 04:29:31.873: INFO: Deleting pod "simpletest-rc-to-be-deleted-ggs9r" in namespace "gc-3318"
  Jan  3 04:29:31.909: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkv95" in namespace "gc-3318"
  Jan  3 04:29:31.937: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqlx4" in namespace "gc-3318"
  Jan  3 04:29:31.973: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqtkf" in namespace "gc-3318"
  Jan  3 04:29:32.032: INFO: Deleting pod "simpletest-rc-to-be-deleted-hlxqk" in namespace "gc-3318"
  Jan  3 04:29:32.128: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2r9q" in namespace "gc-3318"
  Jan  3 04:29:32.170: INFO: Deleting pod "simpletest-rc-to-be-deleted-jhjjm" in namespace "gc-3318"
  Jan  3 04:29:32.192: INFO: Deleting pod "simpletest-rc-to-be-deleted-jkj4s" in namespace "gc-3318"
  Jan  3 04:29:32.230: INFO: Deleting pod "simpletest-rc-to-be-deleted-k4k66" in namespace "gc-3318"
  Jan  3 04:29:32.266: INFO: Deleting pod "simpletest-rc-to-be-deleted-k7j2c" in namespace "gc-3318"
  Jan  3 04:29:32.308: INFO: Deleting pod "simpletest-rc-to-be-deleted-kdnhf" in namespace "gc-3318"
  Jan  3 04:29:32.344: INFO: Deleting pod "simpletest-rc-to-be-deleted-kgwss" in namespace "gc-3318"
  Jan  3 04:29:32.425: INFO: Deleting pod "simpletest-rc-to-be-deleted-khzj2" in namespace "gc-3318"
  Jan  3 04:29:32.491: INFO: Deleting pod "simpletest-rc-to-be-deleted-kqjwm" in namespace "gc-3318"
  Jan  3 04:29:32.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3318" for this suite. @ 01/03/24 04:29:32.558
• [20.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/03/24 04:29:32.599
  Jan  3 04:29:32.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename daemonsets @ 01/03/24 04:29:32.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:29:32.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:29:32.684
  Jan  3 04:29:32.750: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/03/24 04:29:32.763
  Jan  3 04:29:32.785: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:29:32.785: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:29:33.797: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:29:33.797: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:29:34.782: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:29:34.782: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:29:35.774: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:29:35.774: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:29:36.783: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 04:29:36.783: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:29:37.778: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan  3 04:29:37.778: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/03/24 04:29:37.809
  STEP: Check that daemon pods images are updated. @ 01/03/24 04:29:37.826
  Jan  3 04:29:37.832: INFO: Wrong image for pod: daemon-set-7rhxh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan  3 04:29:37.832: INFO: Wrong image for pod: daemon-set-c7b2f. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan  3 04:29:38.833: INFO: Wrong image for pod: daemon-set-7rhxh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan  3 04:29:39.833: INFO: Wrong image for pod: daemon-set-7rhxh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan  3 04:29:39.833: INFO: Pod daemon-set-blfxb is not available
  Jan  3 04:29:40.836: INFO: Wrong image for pod: daemon-set-7rhxh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan  3 04:29:40.836: INFO: Pod daemon-set-blfxb is not available
  Jan  3 04:29:42.837: INFO: Pod daemon-set-8dv4c is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/03/24 04:29:42.847
  Jan  3 04:29:42.859: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 04:29:42.859: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 04:29:43.866: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 04:29:43.867: INFO: Node 192.168.18.92 is running 0 daemon pod, expected 1
  Jan  3 04:29:44.862: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan  3 04:29:44.862: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/03/24 04:29:44.892
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-89, will wait for the garbage collector to delete the pods @ 01/03/24 04:29:44.892
  Jan  3 04:29:44.957: INFO: Deleting DaemonSet.extensions daemon-set took: 10.203947ms
  Jan  3 04:29:45.059: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.437754ms
  Jan  3 04:29:47.469: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:29:47.469: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan  3 04:29:47.475: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"107818"},"items":null}

  Jan  3 04:29:47.481: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"107818"},"items":null}

  Jan  3 04:29:47.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-89" for this suite. @ 01/03/24 04:29:47.509
• [14.919 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 01/03/24 04:29:47.519
  Jan  3 04:29:47.519: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 04:29:47.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:29:47.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:29:47.569
  STEP: Counting existing ResourceQuota @ 01/03/24 04:29:47.584
  STEP: Creating a ResourceQuota @ 01/03/24 04:29:52.594
  STEP: Ensuring resource quota status is calculated @ 01/03/24 04:29:52.612
  Jan  3 04:29:54.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6403" for this suite. @ 01/03/24 04:29:54.629
• [7.121 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/03/24 04:29:54.641
  Jan  3 04:29:54.641: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:29:54.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:29:54.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:29:54.678
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:29:54.686
  STEP: Saw pod success @ 01/03/24 04:29:58.741
  Jan  3 04:29:58.747: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-b5042501-0eb1-4c25-a263-17e4eee5e779 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:29:58.76
  Jan  3 04:29:58.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6370" for this suite. @ 01/03/24 04:29:58.789
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/03/24 04:29:58.799
  Jan  3 04:29:58.799: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 04:29:58.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:29:58.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:29:58.845
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/03/24 04:29:58.852
  STEP: Saw pod success @ 01/03/24 04:30:02.892
  Jan  3 04:30:02.900: INFO: Trying to get logs from node 192.168.18.92 pod pod-8e5cf181-f2d5-45e6-abfc-199e00cae23f container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:30:02.919
  Jan  3 04:30:02.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3730" for this suite. @ 01/03/24 04:30:02.958
• [4.169 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/03/24 04:30:02.968
  Jan  3 04:30:02.968: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 04:30:02.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:30:02.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:30:03.005
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/03/24 04:30:03.013
  STEP: Saw pod success @ 01/03/24 04:30:09.061
  Jan  3 04:30:09.067: INFO: Trying to get logs from node 192.168.18.92 pod pod-a27737f9-e483-417d-b557-f095f80f65ac container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:30:09.079
  Jan  3 04:30:09.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8085" for this suite. @ 01/03/24 04:30:09.113
• [6.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/03/24 04:30:09.125
  Jan  3 04:30:09.125: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename daemonsets @ 01/03/24 04:30:09.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:30:09.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:30:09.154
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/03/24 04:30:09.192
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/03/24 04:30:09.199
  Jan  3 04:30:09.210: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:30:09.210: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:30:10.214: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:30:10.214: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:30:11.219: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 04:30:11.219: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:30:12.219: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan  3 04:30:12.219: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/03/24 04:30:12.227
  Jan  3 04:30:12.286: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 04:30:12.286: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:30:13.273: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 04:30:13.273: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:30:14.272: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 04:30:14.272: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  Jan  3 04:30:15.274: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan  3 04:30:15.274: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/03/24 04:30:15.274
  STEP: Deleting DaemonSet "daemon-set" @ 01/03/24 04:30:15.285
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4690, will wait for the garbage collector to delete the pods @ 01/03/24 04:30:15.285
  Jan  3 04:30:15.351: INFO: Deleting DaemonSet.extensions daemon-set took: 10.127089ms
  Jan  3 04:30:15.452: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.848738ms
  Jan  3 04:30:17.659: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 04:30:17.659: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan  3 04:30:17.664: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"108075"},"items":null}

  Jan  3 04:30:17.669: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"108075"},"items":null}

  Jan  3 04:30:17.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4690" for this suite. @ 01/03/24 04:30:17.693
• [8.577 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 01/03/24 04:30:17.703
  Jan  3 04:30:17.703: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:30:17.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:30:17.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:30:17.737
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7635 @ 01/03/24 04:30:17.743
  STEP: changing the ExternalName service to type=NodePort @ 01/03/24 04:30:17.749
  STEP: creating replication controller externalname-service in namespace services-7635 @ 01/03/24 04:30:17.776
  I0103 04:30:17.789432      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7635, replica count: 2
  I0103 04:30:20.841899      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan  3 04:30:20.842: INFO: Creating new exec pod
  Jan  3 04:30:23.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-7635 exec execpodbgmtp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jan  3 04:30:24.175: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jan  3 04:30:24.175: INFO: stdout: "externalname-service-6lvh7"
  Jan  3 04:30:24.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-7635 exec execpodbgmtp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.66.17 80'
  Jan  3 04:30:24.417: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.66.17 80\nConnection to 169.169.66.17 80 port [tcp/http] succeeded!\n"
  Jan  3 04:30:24.417: INFO: stdout: ""
  Jan  3 04:30:25.177: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-7635 exec execpodbgmtp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.66.17 80'
  Jan  3 04:30:25.484: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.66.17 80\nConnection to 169.169.66.17 80 port [tcp/http] succeeded!\n"
  Jan  3 04:30:25.484: INFO: stdout: "externalname-service-6lvh7"
  Jan  3 04:30:25.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-7635 exec execpodbgmtp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.18.91 31432'
  Jan  3 04:30:25.820: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.18.91 31432\nConnection to 192.168.18.91 31432 port [tcp/*] succeeded!\n"
  Jan  3 04:30:25.820: INFO: stdout: "externalname-service-wz6mx"
  Jan  3 04:30:25.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-7635 exec execpodbgmtp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.18.92 31432'
  Jan  3 04:30:26.127: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.18.92 31432\nConnection to 192.168.18.92 31432 port [tcp/*] succeeded!\n"
  Jan  3 04:30:26.127: INFO: stdout: "externalname-service-6lvh7"
  Jan  3 04:30:26.128: INFO: Cleaning up the ExternalName to NodePort test service
  Jan  3 04:30:26.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7635" for this suite. @ 01/03/24 04:30:26.172
• [8.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 01/03/24 04:30:26.186
  Jan  3 04:30:26.186: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename cronjob @ 01/03/24 04:30:26.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:30:26.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:30:26.219
  STEP: Creating a ReplaceConcurrent cronjob @ 01/03/24 04:30:26.227
  STEP: Ensuring a job is scheduled @ 01/03/24 04:30:26.234
  STEP: Ensuring exactly one is scheduled @ 01/03/24 04:31:02.241
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/03/24 04:31:02.248
  STEP: Ensuring the job is replaced with a new one @ 01/03/24 04:31:02.254
  STEP: Removing cronjob @ 01/03/24 04:32:02.264
  Jan  3 04:32:02.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8066" for this suite. @ 01/03/24 04:32:02.283
• [96.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/03/24 04:32:02.293
  Jan  3 04:32:02.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replicaset @ 01/03/24 04:32:02.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:32:02.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:32:02.352
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/03/24 04:32:02.36
  Jan  3 04:32:02.374: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan  3 04:32:07.380: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/03/24 04:32:07.38
  STEP: getting scale subresource @ 01/03/24 04:32:07.38
  STEP: updating a scale subresource @ 01/03/24 04:32:07.387
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/03/24 04:32:07.398
  STEP: Patch a scale subresource @ 01/03/24 04:32:07.406
  Jan  3 04:32:07.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1965" for this suite. @ 01/03/24 04:32:07.465
• [5.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/03/24 04:32:07.48
  Jan  3 04:32:07.480: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 04:32:07.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:32:07.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:32:07.51
  STEP: Creating secret with name secret-test-d420609a-af00-4bd7-884b-96c155b116ec @ 01/03/24 04:32:07.546
  STEP: Creating a pod to test consume secrets @ 01/03/24 04:32:07.551
  STEP: Saw pod success @ 01/03/24 04:32:11.593
  Jan  3 04:32:11.599: INFO: Trying to get logs from node 192.168.18.92 pod pod-secrets-8fcc2a2c-5dcd-4ca5-aee6-143f927ff722 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 04:32:11.633
  Jan  3 04:32:11.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8698" for this suite. @ 01/03/24 04:32:11.661
  STEP: Destroying namespace "secret-namespace-8881" for this suite. @ 01/03/24 04:32:11.671
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 01/03/24 04:32:11.681
  Jan  3 04:32:11.682: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename svcaccounts @ 01/03/24 04:32:11.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:32:11.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:32:11.714
  STEP: Creating a pod to test service account token:  @ 01/03/24 04:32:11.721
  STEP: Saw pod success @ 01/03/24 04:32:15.764
  Jan  3 04:32:15.771: INFO: Trying to get logs from node 192.168.18.92 pod test-pod-2a97b931-bb21-40b6-8e46-50dcb51d171f container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:32:15.785
  Jan  3 04:32:15.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1386" for this suite. @ 01/03/24 04:32:15.816
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/03/24 04:32:15.826
  Jan  3 04:32:15.826: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename lease-test @ 01/03/24 04:32:15.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:32:15.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:32:15.856
  Jan  3 04:32:15.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1076" for this suite. @ 01/03/24 04:32:15.967
• [0.149 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/03/24 04:32:15.976
  Jan  3 04:32:15.976: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-watch @ 01/03/24 04:32:15.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:32:16.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:32:16.017
  Jan  3 04:32:16.026: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Creating first CR  @ 01/03/24 04:32:18.626
  Jan  3 04:32:18.637: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-03T04:32:17Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-03T04:32:17Z]] name:name1 resourceVersion:108575 uid:7c6dc936-907f-476e-9fd2-fe909c7597e8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 01/03/24 04:32:28.638
  Jan  3 04:32:28.656: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-03T04:32:27Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-03T04:32:27Z]] name:name2 resourceVersion:108601 uid:39d7429c-0112-41ab-a93d-b1267b090594] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 01/03/24 04:32:38.658
  Jan  3 04:32:38.675: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-03T04:32:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-03T04:32:38Z]] name:name1 resourceVersion:108632 uid:7c6dc936-907f-476e-9fd2-fe909c7597e8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 01/03/24 04:32:48.679
  Jan  3 04:32:48.695: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-03T04:32:27Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-03T04:32:48Z]] name:name2 resourceVersion:108649 uid:39d7429c-0112-41ab-a93d-b1267b090594] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 01/03/24 04:32:58.696
  Jan  3 04:32:58.710: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-03T04:32:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-03T04:32:38Z]] name:name1 resourceVersion:108664 uid:7c6dc936-907f-476e-9fd2-fe909c7597e8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 01/03/24 04:33:08.714
  Jan  3 04:33:08.729: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-03T04:32:27Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-03T04:32:48Z]] name:name2 resourceVersion:108678 uid:39d7429c-0112-41ab-a93d-b1267b090594] num:map[num1:9223372036854775807 num2:1000000]]}
  Jan  3 04:33:19.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2495" for this suite. @ 01/03/24 04:33:19.265
• [63.301 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/03/24 04:33:19.277
  Jan  3 04:33:19.278: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename certificates @ 01/03/24 04:33:19.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:33:19.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:33:19.325
  STEP: getting /apis @ 01/03/24 04:33:20.365
  STEP: getting /apis/certificates.k8s.io @ 01/03/24 04:33:20.378
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/03/24 04:33:20.38
  STEP: creating @ 01/03/24 04:33:20.383
  STEP: getting @ 01/03/24 04:33:20.414
  STEP: listing @ 01/03/24 04:33:20.417
  STEP: watching @ 01/03/24 04:33:20.422
  Jan  3 04:33:20.422: INFO: starting watch
  STEP: patching @ 01/03/24 04:33:20.425
  STEP: updating @ 01/03/24 04:33:20.437
  Jan  3 04:33:20.447: INFO: waiting for watch events with expected annotations
  Jan  3 04:33:20.447: INFO: saw patched and updated annotations
  STEP: getting /approval @ 01/03/24 04:33:20.447
  STEP: patching /approval @ 01/03/24 04:33:20.453
  STEP: updating /approval @ 01/03/24 04:33:20.466
  STEP: getting /status @ 01/03/24 04:33:20.476
  STEP: patching /status @ 01/03/24 04:33:20.481
  STEP: updating /status @ 01/03/24 04:33:20.494
  STEP: deleting @ 01/03/24 04:33:20.505
  STEP: deleting a collection @ 01/03/24 04:33:20.523
  Jan  3 04:33:20.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1122" for this suite. @ 01/03/24 04:33:20.554
• [1.287 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/03/24 04:33:20.565
  Jan  3 04:33:20.565: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replicaset @ 01/03/24 04:33:20.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:33:20.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:33:20.598
  STEP: Create a Replicaset @ 01/03/24 04:33:20.612
  STEP: Verify that the required pods have come up. @ 01/03/24 04:33:20.623
  Jan  3 04:33:20.627: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan  3 04:33:25.635: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/03/24 04:33:25.636
  STEP: Getting /status @ 01/03/24 04:33:25.636
  Jan  3 04:33:25.645: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/03/24 04:33:25.645
  Jan  3 04:33:25.660: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/03/24 04:33:25.66
  Jan  3 04:33:25.665: INFO: Observed &ReplicaSet event: ADDED
  Jan  3 04:33:25.666: INFO: Observed &ReplicaSet event: MODIFIED
  Jan  3 04:33:25.666: INFO: Observed &ReplicaSet event: MODIFIED
  Jan  3 04:33:25.666: INFO: Observed &ReplicaSet event: MODIFIED
  Jan  3 04:33:25.666: INFO: Found replicaset test-rs in namespace replicaset-7343 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan  3 04:33:25.667: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/03/24 04:33:25.667
  Jan  3 04:33:25.667: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jan  3 04:33:25.677: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/03/24 04:33:25.677
  Jan  3 04:33:25.682: INFO: Observed &ReplicaSet event: ADDED
  Jan  3 04:33:25.682: INFO: Observed &ReplicaSet event: MODIFIED
  Jan  3 04:33:25.683: INFO: Observed &ReplicaSet event: MODIFIED
  Jan  3 04:33:25.683: INFO: Observed &ReplicaSet event: MODIFIED
  Jan  3 04:33:25.683: INFO: Observed replicaset test-rs in namespace replicaset-7343 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan  3 04:33:25.684: INFO: Observed &ReplicaSet event: MODIFIED
  Jan  3 04:33:25.684: INFO: Found replicaset test-rs in namespace replicaset-7343 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jan  3 04:33:25.684: INFO: Replicaset test-rs has a patched status
  Jan  3 04:33:25.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7343" for this suite. @ 01/03/24 04:33:25.692
• [5.138 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/03/24 04:33:25.704
  Jan  3 04:33:25.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replicaset @ 01/03/24 04:33:25.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:33:25.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:33:25.744
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/03/24 04:33:25.752
  STEP: When a replicaset with a matching selector is created @ 01/03/24 04:33:27.794
  STEP: Then the orphan pod is adopted @ 01/03/24 04:33:27.803
  STEP: When the matched label of one of its pods change @ 01/03/24 04:33:28.821
  Jan  3 04:33:28.831: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/03/24 04:33:28.881
  Jan  3 04:33:29.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7402" for this suite. @ 01/03/24 04:33:29.913
• [4.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 01/03/24 04:33:29.924
  Jan  3 04:33:29.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 04:33:29.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:33:29.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:33:29.955
  STEP: Creating pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189 @ 01/03/24 04:33:29.961
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/03/24 04:33:31.988
  Jan  3 04:33:31.995: INFO: Initial restart count of pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d is 0
  Jan  3 04:33:32.000: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:34.011: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:36.021: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:38.031: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:40.043: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:42.057: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:44.068: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:46.078: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:48.087: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:50.096: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:52.118: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:54.128: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:56.135: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:33:58.144: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:00.154: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:02.164: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:04.175: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:06.184: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:08.193: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:10.202: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:12.211: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:14.221: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:16.230: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:18.240: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:20.250: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:22.258: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:24.270: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:26.279: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:28.289: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:30.302: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:32.311: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:34.319: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:36.329: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:38.341: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:40.354: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:42.366: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:44.376: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:46.388: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:48.399: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:50.410: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:52.419: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:54.428: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:56.436: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:34:58.445: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:00.455: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:02.463: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:04.471: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:06.481: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:08.490: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:10.503: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:12.512: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:14.522: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:16.532: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:18.544: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:20.555: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:22.563: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:24.571: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:26.579: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:28.589: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:30.598: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:32.607: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:34.615: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:36.630: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:38.641: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:40.652: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:42.667: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:44.676: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:46.688: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:48.696: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:50.707: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:52.718: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:54.727: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:56.737: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:35:58.748: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:00.761: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:02.772: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:04.781: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:06.790: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:08.799: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:10.812: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:12.821: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:14.830: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:16.841: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:18.851: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:20.864: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:22.873: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:24.882: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:26.894: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:28.904: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:30.914: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:32.923: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:34.933: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:36.942: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:38.952: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:40.964: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:42.972: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:44.980: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:46.989: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:48.998: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:51.012: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:53.023: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:55.036: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:57.045: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:36:59.054: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:01.065: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:03.075: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:05.084: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:07.092: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:09.100: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:11.116: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:13.123: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:15.133: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:17.141: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:19.149: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:21.161: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:23.171: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:25.180: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:27.189: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:29.197: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  Jan  3 04:37:31.207: INFO: Get pod liveness-93a4cb6c-c00e-4cc7-9054-cea91935a43d in namespace container-probe-5189
  STEP: deleting the pod @ 01/03/24 04:37:33.208
  Jan  3 04:37:33.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5189" for this suite. @ 01/03/24 04:37:33.257
• [243.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 01/03/24 04:37:33.269
  Jan  3 04:37:33.269: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:37:33.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:37:33.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:37:33.308
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1331 @ 01/03/24 04:37:33.319
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/03/24 04:37:33.34
  STEP: creating service externalsvc in namespace services-1331 @ 01/03/24 04:37:33.34
  STEP: creating replication controller externalsvc in namespace services-1331 @ 01/03/24 04:37:33.362
  I0103 04:37:33.377605      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1331, replica count: 2
  I0103 04:37:36.429563      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/03/24 04:37:36.437
  Jan  3 04:37:36.460: INFO: Creating new exec pod
  Jan  3 04:37:38.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-1331 exec execpodfdjc4 -- /bin/sh -x -c nslookup nodeport-service.services-1331.svc.cluster.local'
  Jan  3 04:37:38.912: INFO: stderr: "+ nslookup nodeport-service.services-1331.svc.cluster.local\n"
  Jan  3 04:37:38.912: INFO: stdout: "Server:\t\t169.169.0.10\nAddress:\t169.169.0.10#53\n\nnodeport-service.services-1331.svc.cluster.local\tcanonical name = externalsvc.services-1331.svc.cluster.local.\nName:\texternalsvc.services-1331.svc.cluster.local\nAddress: 169.169.103.250\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1331, will wait for the garbage collector to delete the pods @ 01/03/24 04:37:38.913
  Jan  3 04:37:38.981: INFO: Deleting ReplicationController externalsvc took: 10.287785ms
  Jan  3 04:37:39.084: INFO: Terminating ReplicationController externalsvc pods took: 102.449738ms
  Jan  3 04:37:42.408: INFO: Cleaning up the NodePort to ExternalName test service
  Jan  3 04:37:42.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1331" for this suite. @ 01/03/24 04:37:42.441
• [9.182 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/03/24 04:37:42.451
  Jan  3 04:37:42.451: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-runtime @ 01/03/24 04:37:42.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:37:42.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:37:42.48
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/03/24 04:37:42.5
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/03/24 04:37:59.659
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/03/24 04:37:59.667
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/03/24 04:37:59.687
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/03/24 04:37:59.688
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/03/24 04:37:59.726
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/03/24 04:38:03.767
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/03/24 04:38:04.786
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/03/24 04:38:04.797
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/03/24 04:38:04.797
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/03/24 04:38:04.827
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/03/24 04:38:05.841
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/03/24 04:38:08.881
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/03/24 04:38:08.892
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/03/24 04:38:08.892
  Jan  3 04:38:08.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7042" for this suite. @ 01/03/24 04:38:08.934
• [26.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 01/03/24 04:38:08.944
  Jan  3 04:38:08.944: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename svcaccounts @ 01/03/24 04:38:08.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:08.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:08.972
  Jan  3 04:38:08.982: INFO: Got root ca configmap in namespace "svcaccounts-3658"
  Jan  3 04:38:08.989: INFO: Deleted root ca configmap in namespace "svcaccounts-3658"
  STEP: waiting for a new root ca configmap created @ 01/03/24 04:38:09.49
  Jan  3 04:38:09.497: INFO: Recreated root ca configmap in namespace "svcaccounts-3658"
  Jan  3 04:38:09.507: INFO: Updated root ca configmap in namespace "svcaccounts-3658"
  STEP: waiting for the root ca configmap reconciled @ 01/03/24 04:38:10.009
  Jan  3 04:38:10.017: INFO: Reconciled root ca configmap in namespace "svcaccounts-3658"
  Jan  3 04:38:10.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3658" for this suite. @ 01/03/24 04:38:10.026
• [1.096 seconds]
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/03/24 04:38:10.039
  Jan  3 04:38:10.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename watch @ 01/03/24 04:38:10.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:10.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:10.07
  STEP: getting a starting resourceVersion @ 01/03/24 04:38:10.078
  STEP: starting a background goroutine to produce watch events @ 01/03/24 04:38:10.083
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/03/24 04:38:10.083
  Jan  3 04:38:12.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4611" for this suite. @ 01/03/24 04:38:12.902
• [2.914 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 01/03/24 04:38:12.954
  Jan  3 04:38:12.955: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename statefulset @ 01/03/24 04:38:12.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:12.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:12.982
  STEP: Creating service test in namespace statefulset-1077 @ 01/03/24 04:38:12.989
  STEP: Creating statefulset ss in namespace statefulset-1077 @ 01/03/24 04:38:13.005
  Jan  3 04:38:13.021: INFO: Found 0 stateful pods, waiting for 1
  Jan  3 04:38:23.025: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/03/24 04:38:23.037
  STEP: Getting /status @ 01/03/24 04:38:23.05
  Jan  3 04:38:23.060: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/03/24 04:38:23.06
  Jan  3 04:38:23.079: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/03/24 04:38:23.08
  Jan  3 04:38:23.085: INFO: Observed &StatefulSet event: ADDED
  Jan  3 04:38:23.085: INFO: Found Statefulset ss in namespace statefulset-1077 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan  3 04:38:23.085: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/03/24 04:38:23.085
  Jan  3 04:38:23.085: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jan  3 04:38:23.096: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/03/24 04:38:23.097
  Jan  3 04:38:23.101: INFO: Observed &StatefulSet event: ADDED
  Jan  3 04:38:23.101: INFO: Observed Statefulset ss in namespace statefulset-1077 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan  3 04:38:23.101: INFO: Observed &StatefulSet event: MODIFIED
  Jan  3 04:38:23.102: INFO: Deleting all statefulset in ns statefulset-1077
  Jan  3 04:38:23.106: INFO: Scaling statefulset ss to 0
  Jan  3 04:38:33.130: INFO: Waiting for statefulset status.replicas updated to 0
  Jan  3 04:38:33.135: INFO: Deleting statefulset ss
  Jan  3 04:38:33.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1077" for this suite. @ 01/03/24 04:38:33.17
• [20.229 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/03/24 04:38:33.184
  Jan  3 04:38:33.184: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-runtime @ 01/03/24 04:38:33.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:33.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:33.223
  STEP: create the container @ 01/03/24 04:38:33.231
  W0103 04:38:33.244706      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/03/24 04:38:33.244
  STEP: get the container status @ 01/03/24 04:38:37.287
  STEP: the container should be terminated @ 01/03/24 04:38:37.293
  STEP: the termination message should be set @ 01/03/24 04:38:37.293
  Jan  3 04:38:37.293: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/03/24 04:38:37.293
  Jan  3 04:38:37.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2718" for this suite. @ 01/03/24 04:38:37.324
• [4.149 seconds]
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/03/24 04:38:37.334
  Jan  3 04:38:37.334: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/03/24 04:38:37.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:37.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:37.371
  STEP: getting /apis @ 01/03/24 04:38:37.379
  STEP: getting /apis/storage.k8s.io @ 01/03/24 04:38:37.393
  STEP: getting /apis/storage.k8s.io/v1 @ 01/03/24 04:38:37.396
  STEP: creating @ 01/03/24 04:38:37.399
  STEP: watching @ 01/03/24 04:38:37.425
  Jan  3 04:38:37.426: INFO: starting watch
  STEP: getting @ 01/03/24 04:38:37.437
  STEP: listing in namespace @ 01/03/24 04:38:37.443
  STEP: listing across namespaces @ 01/03/24 04:38:37.447
  STEP: patching @ 01/03/24 04:38:37.457
  STEP: updating @ 01/03/24 04:38:37.466
  Jan  3 04:38:37.474: INFO: waiting for watch events with expected annotations in namespace
  Jan  3 04:38:37.474: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/03/24 04:38:37.475
  STEP: deleting a collection @ 01/03/24 04:38:37.492
  Jan  3 04:38:37.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3121" for this suite. @ 01/03/24 04:38:37.517
• [0.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/03/24 04:38:37.528
  Jan  3 04:38:37.528: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replication-controller @ 01/03/24 04:38:37.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:37.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:37.557
  Jan  3 04:38:37.563: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/03/24 04:38:38.584
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/03/24 04:38:38.594
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/03/24 04:38:39.608
  Jan  3 04:38:39.626: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/03/24 04:38:39.627
  Jan  3 04:38:39.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1138" for this suite. @ 01/03/24 04:38:39.654
• [2.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/03/24 04:38:39.669
  Jan  3 04:38:39.669: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/03/24 04:38:39.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:39.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:39.7
  Jan  3 04:38:39.707: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:38:40.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9923" for this suite. @ 01/03/24 04:38:40.761
• [1.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 01/03/24 04:38:40.772
  Jan  3 04:38:40.772: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:38:40.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:40.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:40.815
  STEP: Creating configMap configmap-5377/configmap-test-658a3143-cb85-4256-bde2-bb3f469a2b4e @ 01/03/24 04:38:40.823
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:38:40.83
  STEP: Saw pod success @ 01/03/24 04:38:44.88
  Jan  3 04:38:44.890: INFO: Trying to get logs from node 192.168.18.92 pod pod-configmaps-9ebff149-948d-4f29-8fbf-4310015bdcce container env-test: <nil>
  STEP: delete the pod @ 01/03/24 04:38:44.938
  Jan  3 04:38:44.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5377" for this suite. @ 01/03/24 04:38:44.966
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/03/24 04:38:44.974
  Jan  3 04:38:44.974: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 04:38:44.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:44.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:44.999
  STEP: creating the pod @ 01/03/24 04:38:45.004
  STEP: submitting the pod to kubernetes @ 01/03/24 04:38:45.004
  STEP: verifying the pod is in kubernetes @ 01/03/24 04:38:47.035
  STEP: updating the pod @ 01/03/24 04:38:47.04
  Jan  3 04:38:47.562: INFO: Successfully updated pod "pod-update-b7b89b1d-dd51-4b44-9d8d-2fa5de5571e6"
  STEP: verifying the updated pod is in kubernetes @ 01/03/24 04:38:47.571
  Jan  3 04:38:47.577: INFO: Pod update OK
  Jan  3 04:38:47.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7210" for this suite. @ 01/03/24 04:38:47.586
• [2.621 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/03/24 04:38:47.596
  Jan  3 04:38:47.596: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:38:47.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:47.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:47.636
  STEP: Creating configMap with name configmap-test-volume-7e3db605-01fb-4647-bec0-e286ecd196b1 @ 01/03/24 04:38:47.642
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:38:47.651
  STEP: Saw pod success @ 01/03/24 04:38:51.684
  Jan  3 04:38:51.690: INFO: Trying to get logs from node 192.168.18.92 pod pod-configmaps-25b8440c-ac0f-4e04-a3ba-37bb60fa426a container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:38:51.703
  Jan  3 04:38:51.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7396" for this suite. @ 01/03/24 04:38:51.742
• [4.158 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 01/03/24 04:38:51.755
  Jan  3 04:38:51.755: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 04:38:51.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:38:51.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:38:51.806
  STEP: Setting up server cert @ 01/03/24 04:38:51.836
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 04:38:52.562
  STEP: Deploying the webhook pod @ 01/03/24 04:38:52.574
  STEP: Wait for the deployment to be ready @ 01/03/24 04:38:52.593
  Jan  3 04:38:52.602: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jan  3 04:38:54.625: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 38, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 38, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 38, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 38, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/03/24 04:38:56.634
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 04:38:56.651
  Jan  3 04:38:57.652: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/03/24 04:38:57.668
  STEP: create a pod @ 01/03/24 04:38:57.707
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/03/24 04:38:59.733
  Jan  3 04:38:59.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=webhook-8936 attach --namespace=webhook-8936 to-be-attached-pod -i -c=container1'
  Jan  3 04:38:59.954: INFO: rc: 1
  Jan  3 04:39:00.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8936" for this suite. @ 01/03/24 04:39:00.041
  STEP: Destroying namespace "webhook-markers-2454" for this suite. @ 01/03/24 04:39:00.052
• [8.305 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/03/24 04:39:00.06
  Jan  3 04:39:00.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:39:00.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:39:00.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:39:00.092
  STEP: Creating configMap with name cm-test-opt-del-e7536fed-68e9-4fd9-b1b2-e6e46fd7c6e9 @ 01/03/24 04:39:00.108
  STEP: Creating configMap with name cm-test-opt-upd-fdacf537-102f-4026-8da7-726c24a46d98 @ 01/03/24 04:39:00.116
  STEP: Creating the pod @ 01/03/24 04:39:00.126
  STEP: Deleting configmap cm-test-opt-del-e7536fed-68e9-4fd9-b1b2-e6e46fd7c6e9 @ 01/03/24 04:39:04.212
  STEP: Updating configmap cm-test-opt-upd-fdacf537-102f-4026-8da7-726c24a46d98 @ 01/03/24 04:39:04.22
  STEP: Creating configMap with name cm-test-opt-create-c42db14d-69cc-44ec-8704-c65755cad99d @ 01/03/24 04:39:04.229
  STEP: waiting to observe update in volume @ 01/03/24 04:39:04.237
  Jan  3 04:40:27.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7081" for this suite. @ 01/03/24 04:40:27.24
• [87.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 01/03/24 04:40:27.249
  Jan  3 04:40:27.249: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 04:40:27.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:40:27.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:40:27.284
  STEP: Creating pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730 @ 01/03/24 04:40:27.292
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/03/24 04:40:29.393
  Jan  3 04:40:29.399: INFO: Initial restart count of pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 is 0
  Jan  3 04:40:29.405: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:31.413: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:33.424: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:35.432: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:37.443: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:39.453: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:41.462: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:43.472: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:45.481: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:47.490: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:49.501: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:51.510: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:53.521: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:55.534: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:57.546: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:40:59.556: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:01.566: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:03.575: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:05.587: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:07.601: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:09.612: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:11.622: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:13.634: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:15.642: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:17.656: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:19.666: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:21.674: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:23.684: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:25.694: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:27.703: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:29.713: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:31.722: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:33.730: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:35.740: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:37.754: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:39.766: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:41.773: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:43.783: INFO: Get pod test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 in namespace container-probe-9730
  Jan  3 04:41:43.783: INFO: Restart count of pod container-probe-9730/test-grpc-61d965e4-2b07-4a37-acf6-d24bdf6d10b2 is now 1 (1m14.383644778s elapsed)
  STEP: deleting the pod @ 01/03/24 04:41:43.784
  Jan  3 04:41:43.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9730" for this suite. @ 01/03/24 04:41:43.821
• [76.584 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/03/24 04:41:43.835
  Jan  3 04:41:43.835: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename gc @ 01/03/24 04:41:43.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:41:43.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:41:43.883
  Jan  3 04:41:43.961: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"9f045ddf-ee76-43fe-b496-333a3128ad8c", Controller:(*bool)(0xc005d8a912), BlockOwnerDeletion:(*bool)(0xc005d8a913)}}
  Jan  3 04:41:43.974: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"8a9cefbd-5ac2-4756-a4af-e54b5e51b127", Controller:(*bool)(0xc005d8abc2), BlockOwnerDeletion:(*bool)(0xc005d8abc3)}}
  Jan  3 04:41:43.984: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"9ae1648c-381d-456b-8e59-1cfcdb349d48", Controller:(*bool)(0xc004c4f25a), BlockOwnerDeletion:(*bool)(0xc004c4f25b)}}
  Jan  3 04:41:49.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3610" for this suite. @ 01/03/24 04:41:49.014
• [5.189 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/03/24 04:41:49.023
  Jan  3 04:41:49.023: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename gc @ 01/03/24 04:41:49.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:41:49.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:41:49.061
  STEP: create the rc @ 01/03/24 04:41:49.077
  W0103 04:41:49.085858      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/03/24 04:41:55.106
  STEP: wait for the rc to be deleted @ 01/03/24 04:41:55.13
  Jan  3 04:41:56.333: INFO: 80 pods remaining
  Jan  3 04:41:56.333: INFO: 80 pods has nil DeletionTimestamp
  Jan  3 04:41:56.333: INFO: 
  Jan  3 04:41:57.216: INFO: 70 pods remaining
  Jan  3 04:41:57.216: INFO: 70 pods has nil DeletionTimestamp
  Jan  3 04:41:57.216: INFO: 
  Jan  3 04:41:58.208: INFO: 59 pods remaining
  Jan  3 04:41:58.208: INFO: 58 pods has nil DeletionTimestamp
  Jan  3 04:41:58.208: INFO: 
  Jan  3 04:41:59.224: INFO: 41 pods remaining
  Jan  3 04:41:59.224: INFO: 41 pods has nil DeletionTimestamp
  Jan  3 04:41:59.224: INFO: 
  Jan  3 04:42:00.176: INFO: 31 pods remaining
  Jan  3 04:42:00.176: INFO: 31 pods has nil DeletionTimestamp
  Jan  3 04:42:00.176: INFO: 
  Jan  3 04:42:01.175: INFO: 18 pods remaining
  Jan  3 04:42:01.176: INFO: 18 pods has nil DeletionTimestamp
  Jan  3 04:42:01.176: INFO: 
  STEP: Gathering metrics @ 01/03/24 04:42:02.146
  Jan  3 04:42:02.387: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan  3 04:42:02.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4024" for this suite. @ 01/03/24 04:42:02.394
• [13.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/03/24 04:42:02.409
  Jan  3 04:42:02.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 04:42:02.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:02.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:02.449
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/03/24 04:42:02.455
  STEP: Saw pod success @ 01/03/24 04:42:10.552
  Jan  3 04:42:10.558: INFO: Trying to get logs from node 192.168.18.92 pod pod-d4c35feb-3b0e-49eb-a260-eac8f09c3305 container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:42:10.581
  Jan  3 04:42:10.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6942" for this suite. @ 01/03/24 04:42:10.608
• [8.205 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 01/03/24 04:42:10.615
  Jan  3 04:42:10.615: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:42:10.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:10.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:10.64
  STEP: creating a Service @ 01/03/24 04:42:10.656
  STEP: watching for the Service to be added @ 01/03/24 04:42:10.671
  Jan  3 04:42:10.676: INFO: Found Service test-service-bb5ln in namespace services-9856 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31824}]
  Jan  3 04:42:10.676: INFO: Service test-service-bb5ln created
  STEP: Getting /status @ 01/03/24 04:42:10.676
  Jan  3 04:42:10.681: INFO: Service test-service-bb5ln has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/03/24 04:42:10.681
  STEP: watching for the Service to be patched @ 01/03/24 04:42:10.69
  Jan  3 04:42:10.701: INFO: observed Service test-service-bb5ln in namespace services-9856 with annotations: map[] & LoadBalancer: {[]}
  Jan  3 04:42:10.702: INFO: Found Service test-service-bb5ln in namespace services-9856 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jan  3 04:42:10.702: INFO: Service test-service-bb5ln has service status patched
  STEP: updating the ServiceStatus @ 01/03/24 04:42:10.702
  Jan  3 04:42:10.753: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/03/24 04:42:10.753
  Jan  3 04:42:10.761: INFO: Observed Service test-service-bb5ln in namespace services-9856 with annotations: map[] & Conditions: {[]}
  Jan  3 04:42:10.761: INFO: Observed event: &Service{ObjectMeta:{test-service-bb5ln  services-9856  6c28ccf9-cbba-4c39-89b1-6d1f706d099c 112212 0 2024-01-03 04:42:10 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-01-03 04:42:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-01-03 04:42:10 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31824,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:169.169.234.128,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[169.169.234.128],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jan  3 04:42:10.761: INFO: Found Service test-service-bb5ln in namespace services-9856 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan  3 04:42:10.761: INFO: Service test-service-bb5ln has service status updated
  STEP: patching the service @ 01/03/24 04:42:10.761
  STEP: watching for the Service to be patched @ 01/03/24 04:42:10.796
  Jan  3 04:42:10.800: INFO: observed Service test-service-bb5ln in namespace services-9856 with labels: map[test-service-static:true]
  Jan  3 04:42:10.800: INFO: observed Service test-service-bb5ln in namespace services-9856 with labels: map[test-service-static:true]
  Jan  3 04:42:10.800: INFO: observed Service test-service-bb5ln in namespace services-9856 with labels: map[test-service-static:true]
  Jan  3 04:42:10.800: INFO: Found Service test-service-bb5ln in namespace services-9856 with labels: map[test-service:patched test-service-static:true]
  Jan  3 04:42:10.800: INFO: Service test-service-bb5ln patched
  STEP: deleting the service @ 01/03/24 04:42:10.8
  STEP: watching for the Service to be deleted @ 01/03/24 04:42:10.835
  Jan  3 04:42:10.837: INFO: Observed event: ADDED
  Jan  3 04:42:10.837: INFO: Observed event: MODIFIED
  Jan  3 04:42:10.838: INFO: Observed event: MODIFIED
  Jan  3 04:42:10.838: INFO: Observed event: MODIFIED
  Jan  3 04:42:10.838: INFO: Found Service test-service-bb5ln in namespace services-9856 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jan  3 04:42:10.838: INFO: Service test-service-bb5ln deleted
  Jan  3 04:42:10.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9856" for this suite. @ 01/03/24 04:42:10.844
• [0.235 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/03/24 04:42:10.85
  Jan  3 04:42:10.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:42:10.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:10.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:10.874
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:42:10.883
  STEP: Saw pod success @ 01/03/24 04:42:14.914
  Jan  3 04:42:14.921: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-fd615dc0-97fa-40ac-970e-787ca9a2dbdd container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:42:14.933
  Jan  3 04:42:14.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5686" for this suite. @ 01/03/24 04:42:14.963
• [4.122 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/03/24 04:42:14.973
  Jan  3 04:42:14.973: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename deployment @ 01/03/24 04:42:14.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:15.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:15.008
  Jan  3 04:42:15.015: INFO: Creating simple deployment test-new-deployment
  Jan  3 04:42:15.035: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 01/03/24 04:42:17.059
  STEP: updating a scale subresource @ 01/03/24 04:42:17.066
  STEP: verifying the deployment Spec.Replicas was modified @ 01/03/24 04:42:17.078
  STEP: Patch a scale subresource @ 01/03/24 04:42:17.084
  Jan  3 04:42:17.116: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8237",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b24701a8-8b53-4aee-81d6-fce52ea28cfb",
      ResourceVersion: (string) (len=6) "112363",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839853734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan  3 04:42:17.143: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8237",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b0a0428-f95e-4c9d-bbdf-d9d18fd69bef",
      ResourceVersion: (string) (len=6) "112368",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839853734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "b24701a8-8b53-4aee-81d6-fce52ea28cfb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 32 34 37 30 31  61 38 2d 38 62 35 33 2d  |\"b24701a8-8b53-|
              00000120  34 61 65 65 2d 38 31 64  36 2d 66 63 65 35 32 65  |4aee-81d6-fce52e|
              00000130  61 32 38 63 66 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a28cfb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 04:42:17.159: INFO: Pod "test-new-deployment-557759b7c7-dqxj7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-dqxj7",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8237",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a529e6ba-4260-4567-b238-ce7919b4ed5a",
      ResourceVersion: (string) (len=6) "112357",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839853734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fa4e5ffb551d27c6a561fa201cef2808f40cbb87c7db1f85f94606d3873b6d16",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.155.38/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.155.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5b0a0428-f95e-4c9d-bbdf-d9d18fd69bef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  30 61 30 34 32 38 2d 66  |d\":\"5b0a0428-f|
              00000090  39 35 65 2d 34 63 39 64  2d 62 62 64 66 2d 64 39  |95e-4c9d-bbdf-d9|
              000000a0  64 31 38 66 64 36 39 62  65 66 5c 22 7d 22 3a 7b  |d18fd69bef\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 33  38 5c 22 7d 22 3a 7b 22  |.1.155.38\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-frjqj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-frjqj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=11) "10.1.155.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.155.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839853735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839853736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2921a512290f24006b8741bcca9d19fa7607baf4d754d2bd9c852d552301a4eb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:42:17.167: INFO: Pod "test-new-deployment-557759b7c7-p59ff" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-p59ff",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8237",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "102f0488-68aa-4412-8432-48549b9c7e98",
      ResourceVersion: (string) (len=6) "112370",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839853736,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5b0a0428-f95e-4c9d-bbdf-d9d18fd69bef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  30 61 30 34 32 38 2d 66  |d\":\"5b0a0428-f|
              00000090  39 35 65 2d 34 63 39 64  2d 62 62 64 66 2d 64 39  |95e-4c9d-bbdf-d9|
              000000a0  64 31 38 66 64 36 39 62  65 66 5c 22 7d 22 3a 7b  |d18fd69bef\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-slg8m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-slg8m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839853736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839853736,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 04:42:17.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8237" for this suite. @ 01/03/24 04:42:17.181
• [2.222 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 01/03/24 04:42:17.196
  Jan  3 04:42:17.196: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:42:17.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:17.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:17.225
  STEP: creating service multiprotocol-test in namespace services-3579 @ 01/03/24 04:42:17.23
  STEP: creating pod pod1 in namespace services-3579 @ 01/03/24 04:42:17.241
  STEP: Creating pod pod1 in namespace services-3579 @ 01/03/24 04:42:17.241
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-3579 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/03/24 04:42:21.337
  Jan  3 04:42:21.361: INFO: successfully validated that service multiprotocol-test in namespace services-3579 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/03/24 04:42:21.361
  Jan  3 04:42:21.361: INFO: Creating new exec pod
  Jan  3 04:42:25.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.156.197 80'
  Jan  3 04:42:25.751: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.156.197 80\nConnection to 169.169.156.197 80 port [tcp/http] succeeded!\n"
  Jan  3 04:42:25.751: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:42:25.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 169.169.156.197 80'
  Jan  3 04:42:30.075: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 169.169.156.197 80\nConnection to 169.169.156.197 80 port [udp/*] succeeded!\n"
  Jan  3 04:42:30.075: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/03/24 04:42:30.075
  Jan  3 04:42:30.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.156.197 80'
  Jan  3 04:42:30.442: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.156.197 80\nConnection to 169.169.156.197 80 port [tcp/http] succeeded!\n"
  Jan  3 04:42:30.442: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 04:42:30.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 169.169.156.197 80'
  Jan  3 04:42:34.796: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 169.169.156.197 80\nConnection to 169.169.156.197 80 port [udp/*] succeeded!\n"
  Jan  3 04:42:34.796: INFO: stdout: ""
  Jan  3 04:42:34.797: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 169.169.156.197 80'
  Jan  3 04:42:39.146: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 169.169.156.197 80\nConnection to 169.169.156.197 80 port [udp/*] succeeded!\n"
  Jan  3 04:42:39.146: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 01/03/24 04:42:39.147
  Jan  3 04:42:39.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 169.169.156.197 80'
  Jan  3 04:42:43.530: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 169.169.156.197 80\nConnection to 169.169.156.197 80 port [udp/*] succeeded!\n"
  Jan  3 04:42:43.530: INFO: stdout: "pod1"
  Jan  3 04:42:43.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.156.197 80'
  Jan  3 04:42:45.806: INFO: rc: 1
  Jan  3 04:42:45.806: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.156.197 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 169.169.156.197 80
  nc: connect to 169.169.156.197 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan  3 04:42:45.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.156.197 80'
  Jan  3 04:42:48.112: INFO: rc: 1
  Jan  3 04:42:48.113: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.156.197 80:
  Command stdout:

  stderr:
  + echo+  hostNamenc
   -v -t -w 2 169.169.156.197 80
  nc: connect to 169.169.156.197 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan  3 04:42:48.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.156.197 80'
  Jan  3 04:42:50.411: INFO: rc: 1
  Jan  3 04:42:50.411: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-3579 exec execpod8sh5z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.156.197 80:
  Command stdout:

  stderr:
  + echo+ nc hostName -v -t -w
   2 169.169.156.197 80
  nc: connect to 169.169.156.197 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jan  3 04:42:50.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3579" for this suite. @ 01/03/24 04:42:50.419
• [33.230 seconds]
------------------------------
S
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 01/03/24 04:42:50.427
  Jan  3 04:42:50.427: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:42:50.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:50.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:50.452
  STEP: creating a collection of services @ 01/03/24 04:42:50.457
  Jan  3 04:42:50.457: INFO: Creating e2e-svc-a-5bq9n
  Jan  3 04:42:50.479: INFO: Creating e2e-svc-b-gq4hn
  Jan  3 04:42:50.492: INFO: Creating e2e-svc-c-wgzjr
  STEP: deleting service collection @ 01/03/24 04:42:50.58
  Jan  3 04:42:50.615: INFO: Collection of services has been deleted
  Jan  3 04:42:50.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6562" for this suite. @ 01/03/24 04:42:50.621
• [0.204 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/03/24 04:42:50.631
  Jan  3 04:42:50.631: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename namespaces @ 01/03/24 04:42:50.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:50.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:50.658
  STEP: creating a Namespace @ 01/03/24 04:42:50.662
  STEP: patching the Namespace @ 01/03/24 04:42:50.677
  STEP: get the Namespace and ensuring it has the label @ 01/03/24 04:42:50.686
  Jan  3 04:42:50.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4375" for this suite. @ 01/03/24 04:42:50.695
  STEP: Destroying namespace "nspatchtest-acdd0ce9-db31-4aeb-9490-44e46580d35a-3794" for this suite. @ 01/03/24 04:42:50.701
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/03/24 04:42:50.712
  Jan  3 04:42:50.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename events @ 01/03/24 04:42:50.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:50.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:50.735
  STEP: Create set of events @ 01/03/24 04:42:50.739
  STEP: get a list of Events with a label in the current namespace @ 01/03/24 04:42:50.757
  STEP: delete a list of events @ 01/03/24 04:42:50.76
  Jan  3 04:42:50.760: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/03/24 04:42:50.776
  Jan  3 04:42:50.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9975" for this suite. @ 01/03/24 04:42:50.796
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 01/03/24 04:42:50.805
  Jan  3 04:42:50.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl-logs @ 01/03/24 04:42:50.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:50.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:50.83
  STEP: creating an pod @ 01/03/24 04:42:50.835
  Jan  3 04:42:50.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-logs-4584 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jan  3 04:42:51.021: INFO: stderr: ""
  Jan  3 04:42:51.021: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/03/24 04:42:51.021
  Jan  3 04:42:51.021: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Jan  3 04:42:53.037: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/03/24 04:42:53.037
  Jan  3 04:42:53.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-logs-4584 logs logs-generator logs-generator'
  Jan  3 04:42:53.211: INFO: stderr: ""
  Jan  3 04:42:53.211: INFO: stdout: "I0103 04:42:52.140865       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/jm8g 378\nI0103 04:42:52.341413       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/frc 574\nI0103 04:42:52.542426       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/kwcd 323\nI0103 04:42:52.742876       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/hjcn 449\nI0103 04:42:52.941368       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/qtz 524\nI0103 04:42:53.141970       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/dbhq 456\n"
  STEP: limiting log lines @ 01/03/24 04:42:53.211
  Jan  3 04:42:53.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-logs-4584 logs logs-generator logs-generator --tail=1'
  Jan  3 04:42:53.394: INFO: stderr: ""
  Jan  3 04:42:53.394: INFO: stdout: "I0103 04:42:53.341509       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/gr7m 406\n"
  Jan  3 04:42:53.394: INFO: got output "I0103 04:42:53.341509       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/gr7m 406\n"
  STEP: limiting log bytes @ 01/03/24 04:42:53.394
  Jan  3 04:42:53.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-logs-4584 logs logs-generator logs-generator --limit-bytes=1'
  Jan  3 04:42:53.533: INFO: stderr: ""
  Jan  3 04:42:53.533: INFO: stdout: "I"
  Jan  3 04:42:53.533: INFO: got output "I"
  STEP: exposing timestamps @ 01/03/24 04:42:53.533
  Jan  3 04:42:53.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-logs-4584 logs logs-generator logs-generator --tail=1 --timestamps'
  Jan  3 04:42:53.695: INFO: stderr: ""
  Jan  3 04:42:53.695: INFO: stdout: "2024-01-03T12:42:53.542189478+08:00 I0103 04:42:53.541964       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/79ms 388\n"
  Jan  3 04:42:53.695: INFO: got output "2024-01-03T12:42:53.542189478+08:00 I0103 04:42:53.541964       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/79ms 388\n"
  STEP: restricting to a time range @ 01/03/24 04:42:53.695
  Jan  3 04:42:56.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-logs-4584 logs logs-generator logs-generator --since=1s'
  Jan  3 04:42:56.330: INFO: stderr: ""
  Jan  3 04:42:56.330: INFO: stdout: "I0103 04:42:55.341199       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/rmw 349\nI0103 04:42:55.541834       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/zmqv 237\nI0103 04:42:55.742495       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/r8zv 351\nI0103 04:42:55.942027       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/cwq 597\nI0103 04:42:56.141648       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/vxb 588\n"
  Jan  3 04:42:56.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-logs-4584 logs logs-generator logs-generator --since=24h'
  Jan  3 04:42:56.502: INFO: stderr: ""
  Jan  3 04:42:56.503: INFO: stdout: "I0103 04:42:52.140865       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/jm8g 378\nI0103 04:42:52.341413       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/frc 574\nI0103 04:42:52.542426       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/kwcd 323\nI0103 04:42:52.742876       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/hjcn 449\nI0103 04:42:52.941368       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/qtz 524\nI0103 04:42:53.141970       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/dbhq 456\nI0103 04:42:53.341509       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/gr7m 406\nI0103 04:42:53.541964       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/79ms 388\nI0103 04:42:53.741611       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/4shw 514\nI0103 04:42:53.941161       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/bxj 325\nI0103 04:42:54.141976       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/mstw 311\nI0103 04:42:54.341270       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/xttq 321\nI0103 04:42:54.542027       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/lcv 493\nI0103 04:42:54.741526       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/bzf 337\nI0103 04:42:54.941918       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/gxtv 331\nI0103 04:42:55.141662       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/c42 230\nI0103 04:42:55.341199       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/rmw 349\nI0103 04:42:55.541834       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/zmqv 237\nI0103 04:42:55.742495       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/r8zv 351\nI0103 04:42:55.942027       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/cwq 597\nI0103 04:42:56.141648       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/vxb 588\nI0103 04:42:56.341867       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/6xn 499\n"
  Jan  3 04:42:56.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-logs-4584 delete pod logs-generator'
  Jan  3 04:42:57.808: INFO: stderr: ""
  Jan  3 04:42:57.808: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jan  3 04:42:57.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4584" for this suite. @ 01/03/24 04:42:57.814
• [7.016 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 01/03/24 04:42:57.822
  Jan  3 04:42:57.822: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubelet-test @ 01/03/24 04:42:57.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:42:57.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:42:57.852
  Jan  3 04:43:01.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8532" for this suite. @ 01/03/24 04:43:01.888
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 01/03/24 04:43:01.898
  Jan  3 04:43:01.898: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename security-context @ 01/03/24 04:43:01.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:43:01.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:43:01.932
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/03/24 04:43:01.94
  STEP: Saw pod success @ 01/03/24 04:43:05.977
  Jan  3 04:43:05.983: INFO: Trying to get logs from node 192.168.18.92 pod security-context-6bc7b3b3-ac88-4ba9-858e-7c299d44241c container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:43:05.994
  Jan  3 04:43:06.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7183" for this suite. @ 01/03/24 04:43:06.025
• [4.136 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/03/24 04:43:06.034
  Jan  3 04:43:06.034: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename events @ 01/03/24 04:43:06.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:43:06.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:43:06.065
  STEP: creating a test event @ 01/03/24 04:43:06.071
  STEP: listing events in all namespaces @ 01/03/24 04:43:06.08
  STEP: listing events in test namespace @ 01/03/24 04:43:06.086
  STEP: listing events with field selection filtering on source @ 01/03/24 04:43:06.091
  STEP: listing events with field selection filtering on reportingController @ 01/03/24 04:43:06.096
  STEP: getting the test event @ 01/03/24 04:43:06.104
  STEP: patching the test event @ 01/03/24 04:43:06.109
  STEP: getting the test event @ 01/03/24 04:43:06.128
  STEP: updating the test event @ 01/03/24 04:43:06.136
  STEP: getting the test event @ 01/03/24 04:43:06.145
  STEP: deleting the test event @ 01/03/24 04:43:06.15
  STEP: listing events in all namespaces @ 01/03/24 04:43:06.158
  STEP: listing events in test namespace @ 01/03/24 04:43:06.164
  Jan  3 04:43:06.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2181" for this suite. @ 01/03/24 04:43:06.176
• [0.150 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 01/03/24 04:43:06.184
  Jan  3 04:43:06.184: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 04:43:06.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:43:06.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:43:06.213
  STEP: Setting up server cert @ 01/03/24 04:43:06.25
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 04:43:07.132
  STEP: Deploying the webhook pod @ 01/03/24 04:43:07.144
  STEP: Wait for the deployment to be ready @ 01/03/24 04:43:07.16
  Jan  3 04:43:07.171: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/03/24 04:43:09.194
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 04:43:09.209
  Jan  3 04:43:10.210: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/03/24 04:43:10.315
  STEP: Creating a configMap that should be mutated @ 01/03/24 04:43:10.35
  STEP: Deleting the collection of validation webhooks @ 01/03/24 04:43:10.417
  STEP: Creating a configMap that should not be mutated @ 01/03/24 04:43:10.518
  Jan  3 04:43:10.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7934" for this suite. @ 01/03/24 04:43:10.611
  STEP: Destroying namespace "webhook-markers-6377" for this suite. @ 01/03/24 04:43:10.623
• [4.451 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 01/03/24 04:43:10.665
  Jan  3 04:43:10.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename dns @ 01/03/24 04:43:10.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:43:10.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:43:10.698
  STEP: Creating a test headless service @ 01/03/24 04:43:10.704
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9031.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9031.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 01/03/24 04:43:10.713
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9031.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9031.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/03/24 04:43:10.713
  STEP: creating a pod to probe DNS @ 01/03/24 04:43:10.713
  STEP: submitting the pod to kubernetes @ 01/03/24 04:43:10.713
  STEP: retrieving the pod @ 01/03/24 04:43:14.754
  STEP: looking for the results for each expected name from probers @ 01/03/24 04:43:14.76
  Jan  3 04:43:14.792: INFO: DNS probes using dns-9031/dns-test-5158eb7c-7981-4b93-a653-57485d52d819 succeeded

  STEP: deleting the pod @ 01/03/24 04:43:14.792
  STEP: deleting the test headless service @ 01/03/24 04:43:14.827
  Jan  3 04:43:14.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9031" for this suite. @ 01/03/24 04:43:14.861
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 01/03/24 04:43:14.875
  Jan  3 04:43:14.875: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 04:43:14.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:43:14.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:43:14.909
  STEP: Creating a pod to test downward api env vars @ 01/03/24 04:43:14.916
  STEP: Saw pod success @ 01/03/24 04:43:18.957
  Jan  3 04:43:18.962: INFO: Trying to get logs from node 192.168.18.92 pod downward-api-7d755c84-0ab6-4e98-a045-256a7cc40dae container dapi-container: <nil>
  STEP: delete the pod @ 01/03/24 04:43:18.982
  Jan  3 04:43:19.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3761" for this suite. @ 01/03/24 04:43:19.019
• [4.153 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/03/24 04:43:19.029
  Jan  3 04:43:19.029: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:43:19.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:43:19.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:43:19.062
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:43:19.07
  STEP: Saw pod success @ 01/03/24 04:43:23.113
  Jan  3 04:43:23.119: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-a8de0391-8467-4224-8e62-8c1527f9b7ac container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:43:23.131
  Jan  3 04:43:23.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-276" for this suite. @ 01/03/24 04:43:23.161
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/03/24 04:43:23.173
  Jan  3 04:43:23.173: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename subjectreview @ 01/03/24 04:43:23.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:43:23.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:43:23.203
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8059" @ 01/03/24 04:43:23.211
  Jan  3 04:43:23.217: INFO: saUsername: "system:serviceaccount:subjectreview-8059:e2e"
  Jan  3 04:43:23.217: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8059"}
  Jan  3 04:43:23.217: INFO: saUID: "f79f0ea9-fdcb-4b89-b490-a60553691ce0"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8059:e2e" @ 01/03/24 04:43:23.218
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8059:e2e" @ 01/03/24 04:43:23.219
  Jan  3 04:43:23.224: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8059:e2e" api 'list' configmaps in "subjectreview-8059" namespace @ 01/03/24 04:43:23.224
  Jan  3 04:43:23.227: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8059:e2e" @ 01/03/24 04:43:23.228
  Jan  3 04:43:23.233: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jan  3 04:43:23.233: INFO: LocalSubjectAccessReview has been verified
  Jan  3 04:43:23.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8059" for this suite. @ 01/03/24 04:43:23.24
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 01/03/24 04:43:23.25
  Jan  3 04:43:23.250: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename svcaccounts @ 01/03/24 04:43:23.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:43:23.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:43:23.278
  Jan  3 04:43:23.306: INFO: created pod
  STEP: Saw pod success @ 01/03/24 04:43:27.332
  Jan  3 04:43:57.332: INFO: polling logs
  Jan  3 04:43:57.354: INFO: Pod logs: 
  I0103 04:43:24.634272       1 log.go:194] OK: Got token
  I0103 04:43:24.634586       1 log.go:194] validating with in-cluster discovery
  I0103 04:43:24.635747       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0103 04:43:24.635879       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2781:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001255c0), NotBefore:(*jwt.NumericDate)(0xc0001256a8), IssuedAt:(*jwt.NumericDate)(0xc0001255d0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2781", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"d49bc1ce-d81d-45fb-be8d-21586964f59e"}}}
  I0103 04:43:24.674785       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0103 04:43:24.697264       1 log.go:194] OK: Validated signature on JWT
  I0103 04:43:24.697548       1 log.go:194] OK: Got valid claims from token!
  I0103 04:43:24.697656       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2781:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000048c50), NotBefore:(*jwt.NumericDate)(0xc000048c78), IssuedAt:(*jwt.NumericDate)(0xc000048c58), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2781", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"d49bc1ce-d81d-45fb-be8d-21586964f59e"}}}

  Jan  3 04:43:57.355: INFO: completed pod
  Jan  3 04:43:57.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2781" for this suite. @ 01/03/24 04:43:57.371
• [34.130 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/03/24 04:43:57.38
  Jan  3 04:43:57.380: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 04:43:57.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:43:57.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:43:57.415
  STEP: Creating secret with name secret-test-fb92dc29-f176-4195-b1bf-b523ea3a18e4 @ 01/03/24 04:43:57.422
  STEP: Creating a pod to test consume secrets @ 01/03/24 04:43:57.432
  STEP: Saw pod success @ 01/03/24 04:44:01.474
  Jan  3 04:44:01.480: INFO: Trying to get logs from node 192.168.18.92 pod pod-secrets-305955b3-375f-4721-b4e9-76bab2e21e43 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 04:44:01.495
  Jan  3 04:44:01.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8022" for this suite. @ 01/03/24 04:44:01.531
• [4.162 seconds]
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 01/03/24 04:44:01.543
  Jan  3 04:44:01.543: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/03/24 04:44:01.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:44:01.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:44:01.595
  STEP: Setting up the test @ 01/03/24 04:44:01.602
  STEP: Creating hostNetwork=false pod @ 01/03/24 04:44:01.603
  STEP: Creating hostNetwork=true pod @ 01/03/24 04:44:05.649
  STEP: Running the test @ 01/03/24 04:44:07.682
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/03/24 04:44:07.682
  Jan  3 04:44:07.682: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:07.682: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:07.684: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:07.684: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan  3 04:44:07.857: INFO: Exec stderr: ""
  Jan  3 04:44:07.857: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:07.857: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:07.859: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:07.859: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan  3 04:44:07.988: INFO: Exec stderr: ""
  Jan  3 04:44:07.988: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:07.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:07.990: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:07.990: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan  3 04:44:08.123: INFO: Exec stderr: ""
  Jan  3 04:44:08.124: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:08.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:08.126: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:08.126: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan  3 04:44:08.272: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/03/24 04:44:08.272
  Jan  3 04:44:08.272: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:08.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:08.274: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:08.274: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jan  3 04:44:08.428: INFO: Exec stderr: ""
  Jan  3 04:44:08.428: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:08.428: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:08.430: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:08.430: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jan  3 04:44:08.577: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/03/24 04:44:08.577
  Jan  3 04:44:08.577: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:08.577: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:08.578: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:08.579: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan  3 04:44:08.719: INFO: Exec stderr: ""
  Jan  3 04:44:08.720: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:08.720: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:08.721: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:08.721: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan  3 04:44:08.859: INFO: Exec stderr: ""
  Jan  3 04:44:08.859: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:08.859: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:08.860: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:08.861: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan  3 04:44:09.002: INFO: Exec stderr: ""
  Jan  3 04:44:09.002: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7361 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:44:09.002: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:44:09.003: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:44:09.003: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7361/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan  3 04:44:09.133: INFO: Exec stderr: ""
  Jan  3 04:44:09.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7361" for this suite. @ 01/03/24 04:44:09.143
• [7.610 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/03/24 04:44:09.153
  Jan  3 04:44:09.153: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:44:09.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:44:09.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:44:09.193
  STEP: Creating configMap with name configmap-test-volume-map-5c754534-0526-4924-b1de-430c8028efec @ 01/03/24 04:44:09.199
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:44:09.207
  STEP: Saw pod success @ 01/03/24 04:44:13.245
  Jan  3 04:44:13.251: INFO: Trying to get logs from node 192.168.18.91 pod pod-configmaps-d2e5fc30-b5aa-4c81-8683-fc880172e0ba container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:44:13.286
  Jan  3 04:44:13.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7361" for this suite. @ 01/03/24 04:44:13.319
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/03/24 04:44:13.329
  Jan  3 04:44:13.329: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replication-controller @ 01/03/24 04:44:13.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:44:13.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:44:13.366
  STEP: Creating ReplicationController "e2e-rc-qr5wh" @ 01/03/24 04:44:13.375
  Jan  3 04:44:13.384: INFO: Get Replication Controller "e2e-rc-qr5wh" to confirm replicas
  Jan  3 04:44:14.384: INFO: Get Replication Controller "e2e-rc-qr5wh" to confirm replicas
  Jan  3 04:44:14.393: INFO: Found 1 replicas for "e2e-rc-qr5wh" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-qr5wh" @ 01/03/24 04:44:14.393
  STEP: Updating a scale subresource @ 01/03/24 04:44:14.398
  STEP: Verifying replicas where modified for replication controller "e2e-rc-qr5wh" @ 01/03/24 04:44:14.409
  Jan  3 04:44:14.409: INFO: Get Replication Controller "e2e-rc-qr5wh" to confirm replicas
  Jan  3 04:44:15.409: INFO: Get Replication Controller "e2e-rc-qr5wh" to confirm replicas
  Jan  3 04:44:15.417: INFO: Found 2 replicas for "e2e-rc-qr5wh" replication controller
  Jan  3 04:44:15.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2648" for this suite. @ 01/03/24 04:44:15.426
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/03/24 04:44:15.438
  Jan  3 04:44:15.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename discovery @ 01/03/24 04:44:15.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:44:15.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:44:15.479
  STEP: Setting up server cert @ 01/03/24 04:44:15.487
  STEP: Requesting APIResourceList from "/api/v1" @ 01/03/24 04:44:15.974
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/03/24 04:44:15.979
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/03/24 04:44:15.982
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/03/24 04:44:15.985
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/03/24 04:44:15.987
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/03/24 04:44:15.99
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/03/24 04:44:15.992
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/03/24 04:44:16.001
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/03/24 04:44:16.004
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/03/24 04:44:16.008
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/03/24 04:44:16.01
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/03/24 04:44:16.013
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/03/24 04:44:16.016
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/03/24 04:44:16.018
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/03/24 04:44:16.021
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/03/24 04:44:16.024
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/03/24 04:44:16.026
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/03/24 04:44:16.029
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/03/24 04:44:16.032
  Jan  3 04:44:16.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7151" for this suite. @ 01/03/24 04:44:16.042
• [0.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/03/24 04:44:16.053
  Jan  3 04:44:16.054: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename subpath @ 01/03/24 04:44:16.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:44:16.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:44:16.086
  STEP: Setting up data @ 01/03/24 04:44:16.092
  STEP: Creating pod pod-subpath-test-configmap-bwdm @ 01/03/24 04:44:16.12
  STEP: Creating a pod to test atomic-volume-subpath @ 01/03/24 04:44:16.12
  STEP: Saw pod success @ 01/03/24 04:44:40.247
  Jan  3 04:44:40.253: INFO: Trying to get logs from node 192.168.18.92 pod pod-subpath-test-configmap-bwdm container test-container-subpath-configmap-bwdm: <nil>
  STEP: delete the pod @ 01/03/24 04:44:40.271
  STEP: Deleting pod pod-subpath-test-configmap-bwdm @ 01/03/24 04:44:40.292
  Jan  3 04:44:40.292: INFO: Deleting pod "pod-subpath-test-configmap-bwdm" in namespace "subpath-168"
  Jan  3 04:44:40.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-168" for this suite. @ 01/03/24 04:44:40.306
• [24.261 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 01/03/24 04:44:40.315
  Jan  3 04:44:40.315: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 04:44:40.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:44:40.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:44:40.351
  STEP: Creating resourceQuota "e2e-rq-status-5lggv" @ 01/03/24 04:44:40.362
  Jan  3 04:44:40.377: INFO: Resource quota "e2e-rq-status-5lggv" reports spec: hard cpu limit of 500m
  Jan  3 04:44:40.377: INFO: Resource quota "e2e-rq-status-5lggv" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-5lggv" /status @ 01/03/24 04:44:40.377
  STEP: Confirm /status for "e2e-rq-status-5lggv" resourceQuota via watch @ 01/03/24 04:44:40.389
  Jan  3 04:44:40.392: INFO: observed resourceQuota "e2e-rq-status-5lggv" in namespace "resourcequota-1097" with hard status: v1.ResourceList(nil)
  Jan  3 04:44:40.392: INFO: Found resourceQuota "e2e-rq-status-5lggv" in namespace "resourcequota-1097" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jan  3 04:44:40.393: INFO: ResourceQuota "e2e-rq-status-5lggv" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/03/24 04:44:40.397
  Jan  3 04:44:40.405: INFO: Resource quota "e2e-rq-status-5lggv" reports spec: hard cpu limit of 1
  Jan  3 04:44:40.405: INFO: Resource quota "e2e-rq-status-5lggv" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-5lggv" /status @ 01/03/24 04:44:40.406
  STEP: Confirm /status for "e2e-rq-status-5lggv" resourceQuota via watch @ 01/03/24 04:44:40.413
  Jan  3 04:44:40.417: INFO: observed resourceQuota "e2e-rq-status-5lggv" in namespace "resourcequota-1097" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jan  3 04:44:40.417: INFO: Found resourceQuota "e2e-rq-status-5lggv" in namespace "resourcequota-1097" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jan  3 04:44:40.417: INFO: ResourceQuota "e2e-rq-status-5lggv" /status was patched
  STEP: Get "e2e-rq-status-5lggv" /status @ 01/03/24 04:44:40.417
  Jan  3 04:44:40.422: INFO: Resourcequota "e2e-rq-status-5lggv" reports status: hard cpu of 1
  Jan  3 04:44:40.422: INFO: Resourcequota "e2e-rq-status-5lggv" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-5lggv" /status before checking Spec is unchanged @ 01/03/24 04:44:40.427
  Jan  3 04:44:40.434: INFO: Resourcequota "e2e-rq-status-5lggv" reports status: hard cpu of 2
  Jan  3 04:44:40.434: INFO: Resourcequota "e2e-rq-status-5lggv" reports status: hard memory of 2Gi
  Jan  3 04:44:40.437: INFO: Found resourceQuota "e2e-rq-status-5lggv" in namespace "resourcequota-1097" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jan  3 04:44:40.441: INFO: ResourceQuota "e2e-rq-status-5lggv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5lggv", GenerateName:"", Namespace:"resourcequota-1097", SelfLink:"", UID:"0835cf48-0a81-424c-8ca9-bb61baee99dc", ResourceVersion:"113324", Generation:0, CreationTimestamp:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5lggv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b40f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b4120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b4168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan  3 04:44:45.446: INFO: ResourceQuota "e2e-rq-status-5lggv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5lggv", GenerateName:"", Namespace:"resourcequota-1097", SelfLink:"", UID:"0835cf48-0a81-424c-8ca9-bb61baee99dc", ResourceVersion:"113324", Generation:0, CreationTimestamp:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5lggv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b43d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b4420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b4450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan  3 04:44:50.447: INFO: ResourceQuota "e2e-rq-status-5lggv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5lggv", GenerateName:"", Namespace:"resourcequota-1097", SelfLink:"", UID:"0835cf48-0a81-424c-8ca9-bb61baee99dc", ResourceVersion:"113324", Generation:0, CreationTimestamp:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5lggv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b4648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b4678), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b46c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan  3 04:44:55.446: INFO: ResourceQuota "e2e-rq-status-5lggv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5lggv", GenerateName:"", Namespace:"resourcequota-1097", SelfLink:"", UID:"0835cf48-0a81-424c-8ca9-bb61baee99dc", ResourceVersion:"113324", Generation:0, CreationTimestamp:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5lggv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b4930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b4960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b4990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan  3 04:45:00.448: INFO: ResourceQuota "e2e-rq-status-5lggv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5lggv", GenerateName:"", Namespace:"resourcequota-1097", SelfLink:"", UID:"0835cf48-0a81-424c-8ca9-bb61baee99dc", ResourceVersion:"113324", Generation:0, CreationTimestamp:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5lggv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102bde8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102be78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102bed8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan  3 04:45:05.445: INFO: ResourceQuota "e2e-rq-status-5lggv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5lggv", GenerateName:"", Namespace:"resourcequota-1097", SelfLink:"", UID:"0835cf48-0a81-424c-8ca9-bb61baee99dc", ResourceVersion:"113324", Generation:0, CreationTimestamp:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5lggv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0033a2318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0033a2390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0033a23d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan  3 04:45:10.447: INFO: ResourceQuota "e2e-rq-status-5lggv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5lggv", GenerateName:"", Namespace:"resourcequota-1097", SelfLink:"", UID:"0835cf48-0a81-424c-8ca9-bb61baee99dc", ResourceVersion:"113324", Generation:0, CreationTimestamp:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5lggv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b27d70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b27da0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b27dd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan  3 04:45:15.448: INFO: ResourceQuota "e2e-rq-status-5lggv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5lggv", GenerateName:"", Namespace:"resourcequota-1097", SelfLink:"", UID:"0835cf48-0a81-424c-8ca9-bb61baee99dc", ResourceVersion:"113324", Generation:0, CreationTimestamp:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5lggv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0033a2798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0033a27e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 3, 4, 44, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0033a2870), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jan  3 04:45:20.449: INFO: ResourceQuota "e2e-rq-status-5lggv" Spec was unchanged and /status reset
  Jan  3 04:45:20.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1097" for this suite. @ 01/03/24 04:45:20.458
• [40.153 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 01/03/24 04:45:20.469
  Jan  3 04:45:20.469: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/03/24 04:45:20.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:45:20.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:45:20.505
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/03/24 04:45:20.511
  Jan  3 04:45:20.512: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/03/24 04:45:27.803
  Jan  3 04:45:27.804: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:45:29.536: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:45:36.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5756" for this suite. @ 01/03/24 04:45:36.55
• [16.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/03/24 04:45:36.558
  Jan  3 04:45:36.558: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename runtimeclass @ 01/03/24 04:45:36.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:45:36.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:45:36.584
  Jan  3 04:45:38.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3329" for this suite. @ 01/03/24 04:45:38.648
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/03/24 04:45:38.66
  Jan  3 04:45:38.660: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 04:45:38.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:45:38.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:45:38.697
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/03/24 04:45:38.704
  STEP: Saw pod success @ 01/03/24 04:45:42.747
  Jan  3 04:45:42.753: INFO: Trying to get logs from node 192.168.18.92 pod pod-ce36226a-c923-4518-8a37-d348ae2b233a container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:45:42.766
  Jan  3 04:45:42.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6248" for this suite. @ 01/03/24 04:45:42.804
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/03/24 04:45:42.816
  Jan  3 04:45:42.816: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename limitrange @ 01/03/24 04:45:42.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:45:42.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:45:42.846
  STEP: Creating LimitRange "e2e-limitrange-nkf6z" in namespace "limitrange-4263" @ 01/03/24 04:45:42.854
  STEP: Creating another limitRange in another namespace @ 01/03/24 04:45:42.863
  Jan  3 04:45:42.883: INFO: Namespace "e2e-limitrange-nkf6z-5703" created
  Jan  3 04:45:42.883: INFO: Creating LimitRange "e2e-limitrange-nkf6z" in namespace "e2e-limitrange-nkf6z-5703"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-nkf6z" @ 01/03/24 04:45:42.893
  Jan  3 04:45:42.898: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-nkf6z" in "limitrange-4263" namespace @ 01/03/24 04:45:42.898
  Jan  3 04:45:42.912: INFO: LimitRange "e2e-limitrange-nkf6z" has been patched
  STEP: Delete LimitRange "e2e-limitrange-nkf6z" by Collection with labelSelector: "e2e-limitrange-nkf6z=patched" @ 01/03/24 04:45:42.912
  STEP: Confirm that the limitRange "e2e-limitrange-nkf6z" has been deleted @ 01/03/24 04:45:42.921
  Jan  3 04:45:42.921: INFO: Requesting list of LimitRange to confirm quantity
  Jan  3 04:45:42.927: INFO: Found 0 LimitRange with label "e2e-limitrange-nkf6z=patched"
  Jan  3 04:45:42.927: INFO: LimitRange "e2e-limitrange-nkf6z" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-nkf6z" @ 01/03/24 04:45:42.927
  Jan  3 04:45:42.931: INFO: Found 1 limitRange
  Jan  3 04:45:42.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4263" for this suite. @ 01/03/24 04:45:42.938
  STEP: Destroying namespace "e2e-limitrange-nkf6z-5703" for this suite. @ 01/03/24 04:45:42.946
• [0.138 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 01/03/24 04:45:42.955
  Jan  3 04:45:42.955: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename statefulset @ 01/03/24 04:45:42.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:45:42.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:45:42.986
  STEP: Creating service test in namespace statefulset-2519 @ 01/03/24 04:45:42.992
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/03/24 04:45:43
  STEP: Creating stateful set ss in namespace statefulset-2519 @ 01/03/24 04:45:43.004
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2519 @ 01/03/24 04:45:43.015
  Jan  3 04:45:43.020: INFO: Found 0 stateful pods, waiting for 1
  Jan  3 04:45:53.023: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/03/24 04:45:53.024
  Jan  3 04:45:53.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 04:45:53.337: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 04:45:53.338: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 04:45:53.338: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan  3 04:45:53.346: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jan  3 04:46:03.348: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan  3 04:46:03.348: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan  3 04:46:03.378: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999159s
  Jan  3 04:46:04.389: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.993348358s
  Jan  3 04:46:05.398: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.981697166s
  Jan  3 04:46:06.408: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.972522728s
  Jan  3 04:46:07.417: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.96234623s
  Jan  3 04:46:08.425: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.954681704s
  Jan  3 04:46:09.433: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.945978076s
  Jan  3 04:46:10.441: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.938376553s
  Jan  3 04:46:11.450: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.9298616s
  Jan  3 04:46:12.459: INFO: Verifying statefulset ss doesn't scale past 1 for another 920.851011ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2519 @ 01/03/24 04:46:13.459
  Jan  3 04:46:13.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:46:13.780: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan  3 04:46:13.780: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan  3 04:46:13.780: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan  3 04:46:13.787: INFO: Found 1 stateful pods, waiting for 3
  Jan  3 04:46:23.794: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 04:46:23.794: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 04:46:23.794: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/03/24 04:46:23.794
  STEP: Scale down will halt with unhealthy stateful pod @ 01/03/24 04:46:23.794
  Jan  3 04:46:23.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 04:46:24.142: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 04:46:24.142: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 04:46:24.142: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan  3 04:46:24.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 04:46:24.479: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 04:46:24.479: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 04:46:24.479: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan  3 04:46:24.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan  3 04:46:24.832: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan  3 04:46:24.832: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan  3 04:46:24.832: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan  3 04:46:24.832: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan  3 04:46:24.840: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Jan  3 04:46:34.850: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan  3 04:46:34.850: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jan  3 04:46:34.850: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jan  3 04:46:34.878: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999496s
  Jan  3 04:46:35.889: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.985512939s
  Jan  3 04:46:36.898: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.975232619s
  Jan  3 04:46:37.908: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.965657443s
  Jan  3 04:46:38.919: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.956369841s
  Jan  3 04:46:39.931: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.944886233s
  Jan  3 04:46:40.941: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.933369129s
  Jan  3 04:46:41.950: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.923204419s
  Jan  3 04:46:42.961: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.913985397s
  Jan  3 04:46:43.972: INFO: Verifying statefulset ss doesn't scale past 3 for another 903.114105ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2519 @ 01/03/24 04:46:44.972
  Jan  3 04:46:44.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:46:45.370: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan  3 04:46:45.370: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan  3 04:46:45.371: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan  3 04:46:45.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:46:45.702: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan  3 04:46:45.702: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan  3 04:46:45.702: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan  3 04:46:45.702: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:46:46.016: INFO: rc: 1
  Jan  3 04:46:46.016: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  error: Internal error occurred: error executing command in container: failed to exec in container: failed to load task: no running task found: task 10ced26a38b250116d61ed33ab1a8a95aa4e00127717c3929267de0c11531a8a not found: not found

  error:
  exit status 1
  Jan  3 04:46:56.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:46:56.231: INFO: rc: 1
  Jan  3 04:46:56.232: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:47:06.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:47:06.439: INFO: rc: 1
  Jan  3 04:47:06.439: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:47:16.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:47:16.642: INFO: rc: 1
  Jan  3 04:47:16.642: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:47:26.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:47:26.836: INFO: rc: 1
  Jan  3 04:47:26.836: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:47:36.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:47:37.035: INFO: rc: 1
  Jan  3 04:47:37.035: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:47:47.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:47:47.229: INFO: rc: 1
  Jan  3 04:47:47.230: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:47:57.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:47:57.411: INFO: rc: 1
  Jan  3 04:47:57.411: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:48:07.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:48:07.603: INFO: rc: 1
  Jan  3 04:48:07.603: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:48:17.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:48:17.800: INFO: rc: 1
  Jan  3 04:48:17.800: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:48:27.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:48:27.995: INFO: rc: 1
  Jan  3 04:48:27.995: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:48:37.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:48:38.195: INFO: rc: 1
  Jan  3 04:48:38.196: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:48:48.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:48:48.389: INFO: rc: 1
  Jan  3 04:48:48.389: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:48:58.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:48:58.623: INFO: rc: 1
  Jan  3 04:48:58.624: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:49:08.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:49:08.808: INFO: rc: 1
  Jan  3 04:49:08.808: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:49:18.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:49:18.995: INFO: rc: 1
  Jan  3 04:49:18.995: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:49:28.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:49:29.209: INFO: rc: 1
  Jan  3 04:49:29.209: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:49:39.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:49:39.415: INFO: rc: 1
  Jan  3 04:49:39.415: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:49:49.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:49:49.612: INFO: rc: 1
  Jan  3 04:49:49.612: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:49:59.614: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:49:59.821: INFO: rc: 1
  Jan  3 04:49:59.822: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:50:09.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:50:10.016: INFO: rc: 1
  Jan  3 04:50:10.016: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:50:20.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:50:20.238: INFO: rc: 1
  Jan  3 04:50:20.238: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:50:30.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:50:30.444: INFO: rc: 1
  Jan  3 04:50:30.444: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:50:40.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:50:40.661: INFO: rc: 1
  Jan  3 04:50:40.661: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:50:50.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:50:50.871: INFO: rc: 1
  Jan  3 04:50:50.871: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:51:00.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:51:01.088: INFO: rc: 1
  Jan  3 04:51:01.089: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:51:11.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:51:11.287: INFO: rc: 1
  Jan  3 04:51:11.288: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:51:21.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:51:21.499: INFO: rc: 1
  Jan  3 04:51:21.500: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:51:31.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:51:31.697: INFO: rc: 1
  Jan  3 04:51:31.697: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:51:41.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:51:41.883: INFO: rc: 1
  Jan  3 04:51:41.883: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  Error from server (NotFound): pods "ss-2" not found

  error:
  exit status 1
  Jan  3 04:51:51.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=statefulset-2519 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan  3 04:51:52.106: INFO: rc: 1
  Jan  3 04:51:52.108: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: 
  Jan  3 04:51:52.108: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/03/24 04:51:52.148
  Jan  3 04:51:52.149: INFO: Deleting all statefulset in ns statefulset-2519
  Jan  3 04:51:52.154: INFO: Scaling statefulset ss to 0
  Jan  3 04:51:52.173: INFO: Waiting for statefulset status.replicas updated to 0
  Jan  3 04:51:52.178: INFO: Deleting statefulset ss
  Jan  3 04:51:52.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2519" for this suite. @ 01/03/24 04:51:52.208
• [369.263 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/03/24 04:51:52.218
  Jan  3 04:51:52.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 04:51:52.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:51:52.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:51:52.253
  STEP: Creating secret with name secret-test-dd6dbe6f-e14a-4177-ae99-250cfe0365ea @ 01/03/24 04:51:52.259
  STEP: Creating a pod to test consume secrets @ 01/03/24 04:51:52.266
  STEP: Saw pod success @ 01/03/24 04:51:56.304
  Jan  3 04:51:56.309: INFO: Trying to get logs from node 192.168.18.92 pod pod-secrets-a00de12d-a79e-4128-aba6-b297a494e9a6 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 04:51:56.343
  Jan  3 04:51:56.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3194" for this suite. @ 01/03/24 04:51:56.368
• [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/03/24 04:51:56.382
  Jan  3 04:51:56.382: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename proxy @ 01/03/24 04:51:56.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:51:56.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:51:56.409
  Jan  3 04:51:56.421: INFO: Creating pod...
  Jan  3 04:52:00.468: INFO: Creating service...
  Jan  3 04:52:00.491: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/pods/agnhost/proxy?method=DELETE
  Jan  3 04:52:00.511: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan  3 04:52:00.511: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/pods/agnhost/proxy?method=OPTIONS
  Jan  3 04:52:00.519: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan  3 04:52:00.519: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/pods/agnhost/proxy?method=PATCH
  Jan  3 04:52:00.529: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan  3 04:52:00.529: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/pods/agnhost/proxy?method=POST
  Jan  3 04:52:00.535: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan  3 04:52:00.535: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/pods/agnhost/proxy?method=PUT
  Jan  3 04:52:00.548: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan  3 04:52:00.548: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/services/e2e-proxy-test-service/proxy?method=DELETE
  Jan  3 04:52:00.556: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan  3 04:52:00.556: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jan  3 04:52:00.564: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan  3 04:52:00.564: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/services/e2e-proxy-test-service/proxy?method=PATCH
  Jan  3 04:52:00.571: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan  3 04:52:00.571: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/services/e2e-proxy-test-service/proxy?method=POST
  Jan  3 04:52:00.579: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan  3 04:52:00.579: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/services/e2e-proxy-test-service/proxy?method=PUT
  Jan  3 04:52:00.586: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan  3 04:52:00.586: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/pods/agnhost/proxy?method=GET
  Jan  3 04:52:00.591: INFO: http.Client request:GET StatusCode:301
  Jan  3 04:52:00.591: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/services/e2e-proxy-test-service/proxy?method=GET
  Jan  3 04:52:00.597: INFO: http.Client request:GET StatusCode:301
  Jan  3 04:52:00.597: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/pods/agnhost/proxy?method=HEAD
  Jan  3 04:52:00.601: INFO: http.Client request:HEAD StatusCode:301
  Jan  3 04:52:00.601: INFO: Starting http.Client for https://169.169.0.1:443/api/v1/namespaces/proxy-5217/services/e2e-proxy-test-service/proxy?method=HEAD
  Jan  3 04:52:00.606: INFO: http.Client request:HEAD StatusCode:301
  Jan  3 04:52:00.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5217" for this suite. @ 01/03/24 04:52:00.618
• [4.247 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/03/24 04:52:00.629
  Jan  3 04:52:00.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename aggregator @ 01/03/24 04:52:00.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:52:00.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:52:00.659
  Jan  3 04:52:00.666: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Registering the sample API server. @ 01/03/24 04:52:00.669
  Jan  3 04:52:01.507: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jan  3 04:52:01.550: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Jan  3 04:52:03.614: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:05.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:07.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:09.628: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:11.625: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:13.627: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:15.624: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:17.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:19.624: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:21.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:23.625: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan  3 04:52:25.773: INFO: Waited 136.396296ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/03/24 04:52:25.884
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/03/24 04:52:25.891
  STEP: List APIServices @ 01/03/24 04:52:25.903
  Jan  3 04:52:25.926: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/03/24 04:52:25.926
  Jan  3 04:52:25.966: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/03/24 04:52:25.967
  Jan  3 04:52:25.985: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.January, 3, 4, 52, 24, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/03/24 04:52:25.985
  Jan  3 04:52:25.993: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-01-03 04:52:24 +0000 UTC Passed all checks passed}
  Jan  3 04:52:25.993: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan  3 04:52:25.993: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/03/24 04:52:25.993
  Jan  3 04:52:26.017: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1234715884" @ 01/03/24 04:52:26.017
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/03/24 04:52:26.056
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/03/24 04:52:26.072
  STEP: Patch APIService Status @ 01/03/24 04:52:26.079
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/03/24 04:52:26.09
  Jan  3 04:52:26.095: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-01-03 04:52:24 +0000 UTC Passed all checks passed}
  Jan  3 04:52:26.095: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan  3 04:52:26.095: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jan  3 04:52:26.095: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/03/24 04:52:26.095
  STEP: Confirm that the generated APIService has been deleted @ 01/03/24 04:52:26.112
  Jan  3 04:52:26.112: INFO: Requesting list of APIServices to confirm quantity
  Jan  3 04:52:26.120: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jan  3 04:52:26.121: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jan  3 04:52:26.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-8622" for this suite. @ 01/03/24 04:52:26.308
• [25.700 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 01/03/24 04:52:26.329
  Jan  3 04:52:26.329: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:52:26.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:52:26.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:52:26.362
  STEP: creating an Endpoint @ 01/03/24 04:52:26.372
  STEP: waiting for available Endpoint @ 01/03/24 04:52:26.379
  STEP: listing all Endpoints @ 01/03/24 04:52:26.381
  STEP: updating the Endpoint @ 01/03/24 04:52:26.384
  STEP: fetching the Endpoint @ 01/03/24 04:52:26.392
  STEP: patching the Endpoint @ 01/03/24 04:52:26.402
  STEP: fetching the Endpoint @ 01/03/24 04:52:26.42
  STEP: deleting the Endpoint by Collection @ 01/03/24 04:52:26.424
  STEP: waiting for Endpoint deletion @ 01/03/24 04:52:26.433
  STEP: fetching the Endpoint @ 01/03/24 04:52:26.435
  Jan  3 04:52:26.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9933" for this suite. @ 01/03/24 04:52:26.444
• [0.123 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 01/03/24 04:52:26.452
  Jan  3 04:52:26.452: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 04:52:26.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:52:26.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:52:26.48
  Jan  3 04:52:26.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4228" for this suite. @ 01/03/24 04:52:26.495
• [0.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/03/24 04:52:26.502
  Jan  3 04:52:26.502: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:52:26.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:52:26.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:52:26.525
  STEP: Creating configMap with name configmap-test-volume-map-6566d877-d346-4e15-8c7c-37b4ce7ee5fa @ 01/03/24 04:52:26.53
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:52:26.538
  STEP: Saw pod success @ 01/03/24 04:52:30.58
  Jan  3 04:52:30.585: INFO: Trying to get logs from node 192.168.18.92 pod pod-configmaps-d7db850b-b927-4aac-a1c6-19c5995c51dd container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:52:30.597
  Jan  3 04:52:30.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-467" for this suite. @ 01/03/24 04:52:30.633
• [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/03/24 04:52:30.642
  Jan  3 04:52:30.642: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 04:52:30.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:52:30.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:52:30.674
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/03/24 04:52:30.682
  STEP: Saw pod success @ 01/03/24 04:52:34.724
  Jan  3 04:52:34.731: INFO: Trying to get logs from node 192.168.18.92 pod pod-ff00345a-f2fa-4d00-8a6e-ae6252273690 container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:52:34.744
  Jan  3 04:52:34.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1255" for this suite. @ 01/03/24 04:52:34.774
• [4.141 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/03/24 04:52:34.784
  Jan  3 04:52:34.784: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename namespaces @ 01/03/24 04:52:34.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:52:34.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:52:34.818
  STEP: Read namespace status @ 01/03/24 04:52:34.826
  Jan  3 04:52:34.834: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/03/24 04:52:34.834
  Jan  3 04:52:34.848: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/03/24 04:52:34.849
  Jan  3 04:52:34.877: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jan  3 04:52:34.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-857" for this suite. @ 01/03/24 04:52:34.886
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/03/24 04:52:34.9
  Jan  3 04:52:34.900: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/03/24 04:52:34.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:52:34.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:52:34.934
  STEP: Cleaning up the secret @ 01/03/24 04:52:36.994
  STEP: Cleaning up the configmap @ 01/03/24 04:52:37.002
  STEP: Cleaning up the pod @ 01/03/24 04:52:37.011
  Jan  3 04:52:37.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8928" for this suite. @ 01/03/24 04:52:37.038
• [2.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 01/03/24 04:52:37.05
  Jan  3 04:52:37.050: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename disruption @ 01/03/24 04:52:37.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:52:37.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:52:37.093
  STEP: Waiting for the pdb to be processed @ 01/03/24 04:52:37.111
  STEP: Updating PodDisruptionBudget status @ 01/03/24 04:52:39.118
  STEP: Waiting for all pods to be running @ 01/03/24 04:52:39.153
  Jan  3 04:52:39.161: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 01/03/24 04:52:41.163
  STEP: Waiting for the pdb to be processed @ 01/03/24 04:52:41.185
  STEP: Patching PodDisruptionBudget status @ 01/03/24 04:52:41.198
  STEP: Waiting for the pdb to be processed @ 01/03/24 04:52:41.216
  Jan  3 04:52:41.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6291" for this suite. @ 01/03/24 04:52:41.233
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/03/24 04:52:41.251
  Jan  3 04:52:41.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename cronjob @ 01/03/24 04:52:41.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:52:41.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:52:41.286
  STEP: Creating a cronjob @ 01/03/24 04:52:41.293
  STEP: Ensuring more than one job is running at a time @ 01/03/24 04:52:41.306
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/03/24 04:54:01.313
  STEP: Removing cronjob @ 01/03/24 04:54:01.322
  Jan  3 04:54:01.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2375" for this suite. @ 01/03/24 04:54:01.342
• [80.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 01/03/24 04:54:01.353
  Jan  3 04:54:01.353: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:54:01.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:54:01.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:54:01.403
  STEP: starting the proxy server @ 01/03/24 04:54:01.418
  Jan  3 04:54:01.422: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9154 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/03/24 04:54:01.571
  Jan  3 04:54:01.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9154" for this suite. @ 01/03/24 04:54:01.609
• [0.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 01/03/24 04:54:01.623
  Jan  3 04:54:01.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename var-expansion @ 01/03/24 04:54:01.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:54:01.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:54:01.672
  STEP: creating the pod @ 01/03/24 04:54:01.682
  STEP: waiting for pod running @ 01/03/24 04:54:01.696
  STEP: creating a file in subpath @ 01/03/24 04:54:03.709
  Jan  3 04:54:03.715: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1105 PodName:var-expansion-e000abb6-9b01-431f-870a-de4791697a1e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:54:03.715: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:54:03.717: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:54:03.717: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/var-expansion-1105/pods/var-expansion-e000abb6-9b01-431f-870a-de4791697a1e/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/03/24 04:54:03.905
  Jan  3 04:54:03.914: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1105 PodName:var-expansion-e000abb6-9b01-431f-870a-de4791697a1e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 04:54:03.914: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:54:03.916: INFO: ExecWithOptions: Clientset creation
  Jan  3 04:54:03.916: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/var-expansion-1105/pods/var-expansion-e000abb6-9b01-431f-870a-de4791697a1e/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/03/24 04:54:04.059
  Jan  3 04:54:04.588: INFO: Successfully updated pod "var-expansion-e000abb6-9b01-431f-870a-de4791697a1e"
  STEP: waiting for annotated pod running @ 01/03/24 04:54:04.588
  STEP: deleting the pod gracefully @ 01/03/24 04:54:04.597
  Jan  3 04:54:04.597: INFO: Deleting pod "var-expansion-e000abb6-9b01-431f-870a-de4791697a1e" in namespace "var-expansion-1105"
  Jan  3 04:54:04.612: INFO: Wait up to 5m0s for pod "var-expansion-e000abb6-9b01-431f-870a-de4791697a1e" to be fully deleted
  Jan  3 04:54:38.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1105" for this suite. @ 01/03/24 04:54:38.801
• [37.188 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/03/24 04:54:38.812
  Jan  3 04:54:38.812: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename podtemplate @ 01/03/24 04:54:38.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:54:38.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:54:38.854
  Jan  3 04:54:38.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6376" for this suite. @ 01/03/24 04:54:38.923
• [0.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 01/03/24 04:54:38.933
  Jan  3 04:54:38.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 04:54:38.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:54:38.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:54:38.971
  STEP: Setting up server cert @ 01/03/24 04:54:39.021
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 04:54:39.535
  STEP: Deploying the webhook pod @ 01/03/24 04:54:39.546
  STEP: Wait for the deployment to be ready @ 01/03/24 04:54:39.559
  Jan  3 04:54:39.569: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jan  3 04:54:41.595: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 4, 54, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 54, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 4, 54, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 4, 54, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/03/24 04:54:43.604
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 04:54:43.619
  Jan  3 04:54:44.620: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/03/24 04:54:44.636
  STEP: create a pod that should be denied by the webhook @ 01/03/24 04:54:44.671
  STEP: create a pod that causes the webhook to hang @ 01/03/24 04:54:44.709
  STEP: create a configmap that should be denied by the webhook @ 01/03/24 04:54:54.723
  STEP: create a configmap that should be admitted by the webhook @ 01/03/24 04:54:54.758
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/03/24 04:54:54.795
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/03/24 04:54:54.822
  STEP: create a namespace that bypass the webhook @ 01/03/24 04:54:54.839
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/03/24 04:54:54.892
  Jan  3 04:54:54.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3636" for this suite. @ 01/03/24 04:54:54.986
  STEP: Destroying namespace "webhook-markers-2731" for this suite. @ 01/03/24 04:54:54.994
  STEP: Destroying namespace "exempted-namespace-6630" for this suite. @ 01/03/24 04:54:55
• [16.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/03/24 04:54:55.012
  Jan  3 04:54:55.014: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:54:55.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:54:55.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:54:55.043
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 04:54:55.048
  STEP: Saw pod success @ 01/03/24 04:54:59.082
  Jan  3 04:54:59.088: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-f120fedf-014b-415a-bfbd-b54b29564a9f container client-container: <nil>
  STEP: delete the pod @ 01/03/24 04:54:59.126
  Jan  3 04:54:59.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3468" for this suite. @ 01/03/24 04:54:59.16
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/03/24 04:54:59.17
  Jan  3 04:54:59.170: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/03/24 04:54:59.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:54:59.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:54:59.203
  Jan  3 04:54:59.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 04:55:02.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8565" for this suite. @ 01/03/24 04:55:02.421
• [3.260 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/03/24 04:55:02.431
  Jan  3 04:55:02.431: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replication-controller @ 01/03/24 04:55:02.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:02.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:02.463
  STEP: creating a ReplicationController @ 01/03/24 04:55:02.477
  STEP: waiting for RC to be added @ 01/03/24 04:55:02.486
  STEP: waiting for available Replicas @ 01/03/24 04:55:02.487
  STEP: patching ReplicationController @ 01/03/24 04:55:04.717
  STEP: waiting for RC to be modified @ 01/03/24 04:55:04.741
  STEP: patching ReplicationController status @ 01/03/24 04:55:04.741
  STEP: waiting for RC to be modified @ 01/03/24 04:55:04.755
  STEP: waiting for available Replicas @ 01/03/24 04:55:04.756
  STEP: fetching ReplicationController status @ 01/03/24 04:55:04.765
  STEP: patching ReplicationController scale @ 01/03/24 04:55:04.771
  STEP: waiting for RC to be modified @ 01/03/24 04:55:04.78
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/03/24 04:55:04.78
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/03/24 04:55:06.799
  STEP: updating ReplicationController status @ 01/03/24 04:55:06.805
  STEP: waiting for RC to be modified @ 01/03/24 04:55:06.817
  STEP: listing all ReplicationControllers @ 01/03/24 04:55:06.817
  STEP: checking that ReplicationController has expected values @ 01/03/24 04:55:06.828
  STEP: deleting ReplicationControllers by collection @ 01/03/24 04:55:06.829
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/03/24 04:55:06.839
  Jan  3 04:55:06.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0103 04:55:06.899708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9608" for this suite. @ 01/03/24 04:55:06.905
• [4.482 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 01/03/24 04:55:06.913
  Jan  3 04:55:06.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename resourcequota @ 01/03/24 04:55:06.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:06.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:06.941
  STEP: Discovering how many secrets are in namespace by default @ 01/03/24 04:55:06.949
  E0103 04:55:07.899627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:08.900729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:09.901209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:10.901460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:11.902772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/03/24 04:55:11.963
  E0103 04:55:12.902652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:13.903162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:14.903811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:15.905148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:16.905536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/03/24 04:55:16.97
  STEP: Ensuring resource quota status is calculated @ 01/03/24 04:55:16.98
  E0103 04:55:17.907377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:18.907247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 01/03/24 04:55:18.993
  STEP: Ensuring resource quota status captures secret creation @ 01/03/24 04:55:19.013
  E0103 04:55:19.907794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:20.908817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 01/03/24 04:55:21.021
  STEP: Ensuring resource quota status released usage @ 01/03/24 04:55:21.029
  E0103 04:55:21.909632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:22.909627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:55:23.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1625" for this suite. @ 01/03/24 04:55:23.047
• [16.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/03/24 04:55:23.061
  Jan  3 04:55:23.061: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename runtimeclass @ 01/03/24 04:55:23.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:23.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:23.098
  Jan  3 04:55:23.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7288" for this suite. @ 01/03/24 04:55:23.123
• [0.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/03/24 04:55:23.133
  Jan  3 04:55:23.133: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename events @ 01/03/24 04:55:23.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:23.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:23.163
  STEP: creating a test event @ 01/03/24 04:55:23.17
  STEP: listing all events in all namespaces @ 01/03/24 04:55:23.179
  STEP: patching the test event @ 01/03/24 04:55:23.184
  STEP: fetching the test event @ 01/03/24 04:55:23.195
  STEP: updating the test event @ 01/03/24 04:55:23.2
  STEP: getting the test event @ 01/03/24 04:55:23.214
  STEP: deleting the test event @ 01/03/24 04:55:23.219
  STEP: listing all events in all namespaces @ 01/03/24 04:55:23.229
  Jan  3 04:55:23.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1596" for this suite. @ 01/03/24 04:55:23.243
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 01/03/24 04:55:23.254
  Jan  3 04:55:23.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/03/24 04:55:23.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:23.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:23.344
  STEP: create the container to handle the HTTPGet hook request. @ 01/03/24 04:55:23.359
  E0103 04:55:23.910794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:24.912071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:25.913239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:26.914048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/03/24 04:55:27.406
  E0103 04:55:27.915290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:28.916156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 01/03/24 04:55:29.439
  STEP: delete the pod with lifecycle hook @ 01/03/24 04:55:29.453
  E0103 04:55:29.916671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:30.917826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:31.918757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:32.919263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:55:33.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5224" for this suite. @ 01/03/24 04:55:33.494
• [10.250 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 01/03/24 04:55:33.506
  Jan  3 04:55:33.506: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 04:55:33.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:33.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:33.544
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/03/24 04:55:33.552
  Jan  3 04:55:33.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9595 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jan  3 04:55:33.755: INFO: stderr: ""
  Jan  3 04:55:33.755: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/03/24 04:55:33.755
  Jan  3 04:55:33.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9595 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  E0103 04:55:33.920243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:55:33.951: INFO: stderr: ""
  Jan  3 04:55:33.951: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/03/24 04:55:33.951
  Jan  3 04:55:33.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-9595 delete pods e2e-test-httpd-pod'
  E0103 04:55:34.920939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:35.921611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:36.924201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:55:36.933: INFO: stderr: ""
  Jan  3 04:55:36.933: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jan  3 04:55:36.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9595" for this suite. @ 01/03/24 04:55:36.943
• [3.450 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/03/24 04:55:36.956
  Jan  3 04:55:36.956: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename endpointslice @ 01/03/24 04:55:36.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:36.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:36.997
  STEP: getting /apis @ 01/03/24 04:55:37.005
  STEP: getting /apis/discovery.k8s.io @ 01/03/24 04:55:37.016
  STEP: getting /apis/discovery.k8s.iov1 @ 01/03/24 04:55:37.019
  STEP: creating @ 01/03/24 04:55:37.022
  STEP: getting @ 01/03/24 04:55:37.084
  STEP: listing @ 01/03/24 04:55:37.09
  STEP: watching @ 01/03/24 04:55:37.095
  Jan  3 04:55:37.095: INFO: starting watch
  STEP: cluster-wide listing @ 01/03/24 04:55:37.098
  STEP: cluster-wide watching @ 01/03/24 04:55:37.102
  Jan  3 04:55:37.103: INFO: starting watch
  STEP: patching @ 01/03/24 04:55:37.105
  STEP: updating @ 01/03/24 04:55:37.115
  Jan  3 04:55:37.128: INFO: waiting for watch events with expected annotations
  Jan  3 04:55:37.128: INFO: saw patched and updated annotations
  STEP: deleting @ 01/03/24 04:55:37.129
  STEP: deleting a collection @ 01/03/24 04:55:37.143
  Jan  3 04:55:37.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7133" for this suite. @ 01/03/24 04:55:37.166
• [0.219 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 01/03/24 04:55:37.175
  Jan  3 04:55:37.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename job @ 01/03/24 04:55:37.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:37.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:37.204
  STEP: Creating a job @ 01/03/24 04:55:37.211
  STEP: Ensuring active pods == parallelism @ 01/03/24 04:55:37.219
  E0103 04:55:37.924576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:38.925504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 01/03/24 04:55:39.229
  Jan  3 04:55:39.770: INFO: Successfully updated pod "adopt-release-5qv2t"
  STEP: Checking that the Job readopts the Pod @ 01/03/24 04:55:39.77
  E0103 04:55:39.925705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:40.926573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 01/03/24 04:55:41.786
  E0103 04:55:41.927503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:55:42.310: INFO: Successfully updated pod "adopt-release-5qv2t"
  STEP: Checking that the Job releases the Pod @ 01/03/24 04:55:42.31
  E0103 04:55:42.928866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:43.929789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:55:44.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6822" for this suite. @ 01/03/24 04:55:44.34
• [7.175 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/03/24 04:55:44.351
  Jan  3 04:55:44.351: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:55:44.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:44.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:44.386
  STEP: Creating configMap with name projected-configmap-test-volume-map-8fc83761-63e2-4d4a-bf8d-630be3fa520d @ 01/03/24 04:55:44.4
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:55:44.41
  E0103 04:55:44.930314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:45.930972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:46.931495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:47.931610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 04:55:48.449
  Jan  3 04:55:48.455: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-configmaps-100afad8-6fb6-4827-ab9e-50000a783490 container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:55:48.467
  Jan  3 04:55:48.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4336" for this suite. @ 01/03/24 04:55:48.499
• [4.160 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 01/03/24 04:55:48.511
  Jan  3 04:55:48.511: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename containers @ 01/03/24 04:55:48.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:48.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:48.547
  STEP: Creating a pod to test override all @ 01/03/24 04:55:48.555
  E0103 04:55:48.932641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:49.937586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:50.938500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:51.939329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:52.939711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:53.940670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 04:55:54.605
  Jan  3 04:55:54.612: INFO: Trying to get logs from node 192.168.18.92 pod client-containers-8eb30c23-0331-4895-9b29-bd827b70b7e0 container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:55:54.628
  Jan  3 04:55:54.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9821" for this suite. @ 01/03/24 04:55:54.661
• [6.159 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/03/24 04:55:54.67
  Jan  3 04:55:54.671: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename podtemplate @ 01/03/24 04:55:54.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:54.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:54.709
  STEP: Create set of pod templates @ 01/03/24 04:55:54.717
  Jan  3 04:55:54.730: INFO: created test-podtemplate-1
  Jan  3 04:55:54.740: INFO: created test-podtemplate-2
  Jan  3 04:55:54.750: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/03/24 04:55:54.75
  STEP: delete collection of pod templates @ 01/03/24 04:55:54.757
  Jan  3 04:55:54.757: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/03/24 04:55:54.778
  Jan  3 04:55:54.778: INFO: requesting list of pod templates to confirm quantity
  Jan  3 04:55:54.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7633" for this suite. @ 01/03/24 04:55:54.801
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/03/24 04:55:54.813
  Jan  3 04:55:54.813: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:55:54.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:54.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:54.845
  STEP: Creating configMap with name projected-configmap-test-volume-map-265c4aae-8e55-4627-99d8-553391f26259 @ 01/03/24 04:55:54.852
  STEP: Creating a pod to test consume configMaps @ 01/03/24 04:55:54.86
  E0103 04:55:54.941153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:55.942373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:56.942957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:55:57.943298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 04:55:58.903
  Jan  3 04:55:58.909: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-configmaps-cffac5cf-30d3-483e-83b4-46cc0b449a06 container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 04:55:58.921
  E0103 04:55:58.943812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:55:58.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7445" for this suite. @ 01/03/24 04:55:58.953
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/03/24 04:55:58.963
  Jan  3 04:55:58.963: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 04:55:58.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:55:58.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:55:59.003
  Jan  3 04:55:59.009: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: creating the pod @ 01/03/24 04:55:59.011
  STEP: submitting the pod to kubernetes @ 01/03/24 04:55:59.012
  E0103 04:55:59.944746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:00.945931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:01.946270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:02.946564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:56:03.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5018" for this suite. @ 01/03/24 04:56:03.09
• [4.136 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 01/03/24 04:56:03.099
  Jan  3 04:56:03.099: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename var-expansion @ 01/03/24 04:56:03.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:56:03.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:56:03.143
  STEP: creating the pod with failed condition @ 01/03/24 04:56:03.15
  E0103 04:56:03.946752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:04.947000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:05.947457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:06.948360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:07.948650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:08.949969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:09.950677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:10.951781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:11.952511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:12.952719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:13.953298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:14.954087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:15.954407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:16.954561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:17.955427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:18.955799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:19.956071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:20.957278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:21.957950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:22.958491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:23.958783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:24.959464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:25.959647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:26.960025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:27.960336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:28.960674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:29.961051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:30.961560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:31.961776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:32.962062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:33.962461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:34.963237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:35.963639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:36.964596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:37.965564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:38.965609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:39.966199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:40.966968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:41.967825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:42.968435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:43.968820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:44.969892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:45.969758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:46.970515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:47.971178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:48.971982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:49.972429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:50.972821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:51.973244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:52.973577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:53.975172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:54.975564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:55.975798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:56.975941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:57.976460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:58.977322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:56:59.977950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:00.978768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:01.978862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:02.979345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:03.980944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:04.981558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:05.982384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:06.983032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:07.983524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:08.983836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:09.984245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:10.985240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:11.985862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:12.986210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:13.986416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:14.986951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:15.987323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:16.988052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:17.988370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:18.989651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:19.990679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:20.991465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:21.992198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:22.992605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:23.992807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:24.994231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:25.994414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:26.995661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:27.996398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:28.997563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:29.998855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:31.000182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:32.001635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:33.002160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:34.002538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:35.003892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:36.004665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:37.004718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:38.005847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:39.006521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:40.006721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:41.007286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:42.007251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:43.008092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:44.008388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:45.008419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:46.009665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:47.010412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:48.011594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:49.012140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:50.013360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:51.013880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:52.014752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:53.015188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:54.015563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:55.016737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:56.017050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:57.017820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:58.018203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:57:59.018600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:00.019365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:01.020482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:02.021724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:03.022209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 01/03/24 04:58:03.163
  Jan  3 04:58:03.686: INFO: Successfully updated pod "var-expansion-c1bb35d1-0914-4bed-9e5e-5176d400fc1e"
  STEP: waiting for pod running @ 01/03/24 04:58:03.686
  E0103 04:58:04.022372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:05.023161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/03/24 04:58:05.716
  Jan  3 04:58:05.716: INFO: Deleting pod "var-expansion-c1bb35d1-0914-4bed-9e5e-5176d400fc1e" in namespace "var-expansion-5178"
  Jan  3 04:58:05.732: INFO: Wait up to 5m0s for pod "var-expansion-c1bb35d1-0914-4bed-9e5e-5176d400fc1e" to be fully deleted
  E0103 04:58:06.023558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:07.024353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:08.024817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:09.026705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:10.030784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:11.031937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:12.033236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:13.033600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:14.034507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:15.035193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:16.035502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:17.036261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:18.036454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:19.037239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:20.038272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:21.038624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:22.039727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:23.040076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:24.040402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:25.041544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:26.042790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:27.043499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:28.044337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:29.044951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:30.045236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:31.045967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:32.046159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:33.047347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:34.048217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:35.048325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:36.048643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:37.049852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:58:37.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5178" for this suite. @ 01/03/24 04:58:37.902
• [154.814 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/03/24 04:58:37.913
  Jan  3 04:58:37.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename chunking @ 01/03/24 04:58:37.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:58:37.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:58:37.947
  STEP: creating a large number of resources @ 01/03/24 04:58:37.954
  E0103 04:58:38.050320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:39.050382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:40.051441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:41.051518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:42.052270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:43.053433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:44.054352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:45.055290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:46.055706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:47.056679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:48.057608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:49.057785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:50.057883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:51.058704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:52.058698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:53.059351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:54.060750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:58:55.061339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 01/03/24 04:58:55.633
  Jan  3 04:58:55.679: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Jan  3 04:58:55.727: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Jan  3 04:58:55.778: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Jan  3 04:58:55.833: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Jan  3 04:58:55.881: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Jan  3 04:58:55.927: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Jan  3 04:58:55.979: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Jan  3 04:58:56.024: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  E0103 04:58:56.061401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:58:56.076: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Jan  3 04:58:56.125: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Jan  3 04:58:56.175: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Jan  3 04:58:56.225: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Jan  3 04:58:56.277: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Jan  3 04:58:56.327: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Jan  3 04:58:56.377: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Jan  3 04:58:56.428: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Jan  3 04:58:56.478: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Jan  3 04:58:56.525: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Jan  3 04:58:56.577: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Jan  3 04:58:56.625: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Jan  3 04:58:56.676: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Jan  3 04:58:56.727: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Jan  3 04:58:56.775: INFO: Retrieved 17/17 results with rv 116404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA0LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Jan  3 04:58:56.824: INFO: Retrieved 9/17 results with rv 116404 and continue 
  Jan  3 04:58:56.878: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Jan  3 04:58:56.926: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Jan  3 04:58:56.976: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Jan  3 04:58:57.025: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  E0103 04:58:57.062450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:58:57.078: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Jan  3 04:58:57.126: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Jan  3 04:58:57.177: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Jan  3 04:58:57.226: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Jan  3 04:58:57.278: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Jan  3 04:58:57.326: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Jan  3 04:58:57.376: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Jan  3 04:58:57.424: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Jan  3 04:58:57.476: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Jan  3 04:58:57.526: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Jan  3 04:58:57.574: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Jan  3 04:58:57.628: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Jan  3 04:58:57.677: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Jan  3 04:58:57.727: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Jan  3 04:58:57.778: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Jan  3 04:58:57.826: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Jan  3 04:58:57.882: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Jan  3 04:58:57.927: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Jan  3 04:58:57.975: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Jan  3 04:58:58.024: INFO: Retrieved 9/17 results with rv 116407 and continue 
  E0103 04:58:58.063056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:58:58.076: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Jan  3 04:58:58.126: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Jan  3 04:58:58.178: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Jan  3 04:58:58.226: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Jan  3 04:58:58.275: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Jan  3 04:58:58.325: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Jan  3 04:58:58.380: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Jan  3 04:58:58.428: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Jan  3 04:58:58.476: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Jan  3 04:58:58.527: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Jan  3 04:58:58.582: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Jan  3 04:58:58.626: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Jan  3 04:58:58.680: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Jan  3 04:58:58.726: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Jan  3 04:58:58.778: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Jan  3 04:58:58.827: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Jan  3 04:58:58.889: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Jan  3 04:58:58.925: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Jan  3 04:58:58.977: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Jan  3 04:58:59.026: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  E0103 04:58:59.063354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:58:59.076: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Jan  3 04:58:59.124: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Jan  3 04:58:59.175: INFO: Retrieved 17/17 results with rv 116407 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE2NDA3LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Jan  3 04:58:59.224: INFO: Retrieved 9/17 results with rv 116407 and continue 
  STEP: retrieving those results all at once @ 01/03/24 04:58:59.224
  Jan  3 04:58:59.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3897" for this suite. @ 01/03/24 04:58:59.325
• [21.465 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/03/24 04:58:59.379
  Jan  3 04:58:59.379: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:58:59.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:58:59.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:58:59.421
  STEP: Creating the pod @ 01/03/24 04:58:59.428
  E0103 04:59:00.064022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:01.064828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:02.030: INFO: Successfully updated pod "labelsupdate15c1e02e-b909-453b-9b8d-0101407bab0a"
  E0103 04:59:02.064933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:03.065384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:04.066364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:04.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8651" for this suite. @ 01/03/24 04:59:04.075
• [4.705 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/03/24 04:59:04.084
  Jan  3 04:59:04.084: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 04:59:04.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:59:04.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:59:04.119
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/03/24 04:59:04.126
  E0103 04:59:05.066633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:06.067479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:07.068726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:08.069816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 04:59:08.17
  Jan  3 04:59:08.176: INFO: Trying to get logs from node 192.168.18.92 pod pod-8df811fe-ddcd-4595-b6b2-62e53001f608 container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:59:08.189
  Jan  3 04:59:08.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8867" for this suite. @ 01/03/24 04:59:08.221
• [4.144 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/03/24 04:59:08.229
  Jan  3 04:59:08.229: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename replication-controller @ 01/03/24 04:59:08.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:59:08.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:59:08.258
  STEP: Creating replication controller my-hostname-basic-3edb0c2e-7b81-4bf9-b526-a2a1c530d189 @ 01/03/24 04:59:08.265
  Jan  3 04:59:08.277: INFO: Pod name my-hostname-basic-3edb0c2e-7b81-4bf9-b526-a2a1c530d189: Found 0 pods out of 1
  E0103 04:59:09.071837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:10.072519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:11.072798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:12.073284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:13.073533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:13.294: INFO: Pod name my-hostname-basic-3edb0c2e-7b81-4bf9-b526-a2a1c530d189: Found 1 pods out of 1
  Jan  3 04:59:13.294: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-3edb0c2e-7b81-4bf9-b526-a2a1c530d189" are running
  Jan  3 04:59:13.300: INFO: Pod "my-hostname-basic-3edb0c2e-7b81-4bf9-b526-a2a1c530d189-8rkzs" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:59:10 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:59:08 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:59:10 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:59:10 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-03 04:59:07 +0000 UTC Reason: Message:}])
  Jan  3 04:59:13.300: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/03/24 04:59:13.3
  Jan  3 04:59:13.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7290" for this suite. @ 01/03/24 04:59:13.33
• [5.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/03/24 04:59:13.34
  Jan  3 04:59:13.340: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 04:59:13.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:59:13.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:59:13.377
  STEP: Creating the pod @ 01/03/24 04:59:13.385
  E0103 04:59:14.074766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:15.075402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:15.966: INFO: Successfully updated pod "annotationupdatee107f1cb-f82d-4d7c-8d1c-7c1655ae9eb2"
  E0103 04:59:16.076521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:17.076736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:18.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9381" for this suite. @ 01/03/24 04:59:18.016
• [4.686 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/03/24 04:59:18.028
  Jan  3 04:59:18.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 04:59:18.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:59:18.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:59:18.063
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/03/24 04:59:18.07
  E0103 04:59:18.077477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:19.078245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:20.078611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:21.078703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:22.079224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 04:59:22.121
  Jan  3 04:59:22.127: INFO: Trying to get logs from node 192.168.18.92 pod pod-464b8e35-3957-4e08-b7a0-aa628626cbe1 container test-container: <nil>
  STEP: delete the pod @ 01/03/24 04:59:22.138
  Jan  3 04:59:22.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7881" for this suite. @ 01/03/24 04:59:22.167
• [4.148 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/03/24 04:59:22.177
  Jan  3 04:59:22.177: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename controllerrevisions @ 01/03/24 04:59:22.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:59:22.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:59:22.21
  STEP: Creating DaemonSet "e2e-hqkng-daemon-set" @ 01/03/24 04:59:22.246
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/03/24 04:59:22.255
  Jan  3 04:59:22.266: INFO: Number of nodes with available pods controlled by daemonset e2e-hqkng-daemon-set: 0
  Jan  3 04:59:22.267: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 04:59:23.080573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:23.265: INFO: Number of nodes with available pods controlled by daemonset e2e-hqkng-daemon-set: 0
  Jan  3 04:59:23.265: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 04:59:24.080938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:24.273: INFO: Number of nodes with available pods controlled by daemonset e2e-hqkng-daemon-set: 2
  Jan  3 04:59:24.273: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-hqkng-daemon-set
  STEP: Confirm DaemonSet "e2e-hqkng-daemon-set" successfully created with "daemonset-name=e2e-hqkng-daemon-set" label @ 01/03/24 04:59:24.277
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-hqkng-daemon-set" @ 01/03/24 04:59:24.287
  Jan  3 04:59:24.294: INFO: Located ControllerRevision: "e2e-hqkng-daemon-set-6d58b55cdd"
  STEP: Patching ControllerRevision "e2e-hqkng-daemon-set-6d58b55cdd" @ 01/03/24 04:59:24.299
  Jan  3 04:59:24.311: INFO: e2e-hqkng-daemon-set-6d58b55cdd has been patched
  STEP: Create a new ControllerRevision @ 01/03/24 04:59:24.311
  Jan  3 04:59:24.320: INFO: Created ControllerRevision: e2e-hqkng-daemon-set-85b8495b9d
  STEP: Confirm that there are two ControllerRevisions @ 01/03/24 04:59:24.32
  Jan  3 04:59:24.320: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan  3 04:59:24.326: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-hqkng-daemon-set-6d58b55cdd" @ 01/03/24 04:59:24.326
  STEP: Confirm that there is only one ControllerRevision @ 01/03/24 04:59:24.373
  Jan  3 04:59:24.373: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan  3 04:59:24.388: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-hqkng-daemon-set-85b8495b9d" @ 01/03/24 04:59:24.401
  Jan  3 04:59:24.434: INFO: e2e-hqkng-daemon-set-85b8495b9d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/03/24 04:59:24.434
  W0103 04:59:24.453007      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/03/24 04:59:24.453
  Jan  3 04:59:24.453: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0103 04:59:25.082596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:25.454: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan  3 04:59:25.462: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-hqkng-daemon-set-85b8495b9d=updated" @ 01/03/24 04:59:25.462
  STEP: Confirm that there is only one ControllerRevision @ 01/03/24 04:59:25.475
  Jan  3 04:59:25.475: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan  3 04:59:25.480: INFO: Found 1 ControllerRevisions
  Jan  3 04:59:25.485: INFO: ControllerRevision "e2e-hqkng-daemon-set-7c869bdc8c" has revision 3
  STEP: Deleting DaemonSet "e2e-hqkng-daemon-set" @ 01/03/24 04:59:25.49
  STEP: deleting DaemonSet.extensions e2e-hqkng-daemon-set in namespace controllerrevisions-19, will wait for the garbage collector to delete the pods @ 01/03/24 04:59:25.49
  Jan  3 04:59:25.559: INFO: Deleting DaemonSet.extensions e2e-hqkng-daemon-set took: 12.663279ms
  Jan  3 04:59:25.660: INFO: Terminating DaemonSet.extensions e2e-hqkng-daemon-set pods took: 101.303512ms
  E0103 04:59:26.083206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:27.083338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:27.267: INFO: Number of nodes with available pods controlled by daemonset e2e-hqkng-daemon-set: 0
  Jan  3 04:59:27.267: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-hqkng-daemon-set
  Jan  3 04:59:27.272: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"117074"},"items":null}

  Jan  3 04:59:27.276: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"117074"},"items":null}

  Jan  3 04:59:27.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-19" for this suite. @ 01/03/24 04:59:27.301
• [5.134 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 01/03/24 04:59:27.312
  Jan  3 04:59:27.312: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 04:59:27.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:59:27.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:59:27.35
  STEP: Creating configMap that has name configmap-test-emptyKey-72464bdd-563d-4fc7-80f7-6afa1be3a333 @ 01/03/24 04:59:27.356
  Jan  3 04:59:27.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7131" for this suite. @ 01/03/24 04:59:27.367
• [0.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 01/03/24 04:59:27.375
  Jan  3 04:59:27.375: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename var-expansion @ 01/03/24 04:59:27.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:59:27.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:59:27.402
  STEP: Creating a pod to test substitution in container's command @ 01/03/24 04:59:27.408
  E0103 04:59:28.083746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:29.084286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:30.084939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:31.085494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 04:59:31.441
  Jan  3 04:59:31.446: INFO: Trying to get logs from node 192.168.18.92 pod var-expansion-d9120db2-8690-47de-9a56-ee599ff0b3d2 container dapi-container: <nil>
  STEP: delete the pod @ 01/03/24 04:59:31.459
  Jan  3 04:59:31.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9499" for this suite. @ 01/03/24 04:59:31.497
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/03/24 04:59:31.508
  Jan  3 04:59:31.508: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/03/24 04:59:31.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:59:31.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:59:31.539
  Jan  3 04:59:31.545: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  E0103 04:59:32.085527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 04:59:32.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3305" for this suite. @ 01/03/24 04:59:32.148
• [0.649 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/03/24 04:59:32.157
  Jan  3 04:59:32.157: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename cronjob @ 01/03/24 04:59:32.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 04:59:32.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 04:59:32.188
  STEP: Creating a ForbidConcurrent cronjob @ 01/03/24 04:59:32.196
  STEP: Ensuring a job is scheduled @ 01/03/24 04:59:32.204
  E0103 04:59:33.086085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:34.086598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:35.087683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:36.088546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:37.089370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:38.090680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:39.090788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:40.091638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:41.092159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:42.092424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:43.092839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:44.093654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:45.094247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:46.094605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:47.094974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:48.095461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:49.095900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:50.096581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:51.097041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:52.098431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:53.098788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:54.099329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:55.100154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:56.100604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:57.101570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:58.102755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 04:59:59.103332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:00.104184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:01.104991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:02.105802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 01/03/24 05:00:02.215
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/03/24 05:00:02.221
  STEP: Ensuring no more jobs are scheduled @ 01/03/24 05:00:02.227
  E0103 05:00:03.105772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:04.107024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:05.108167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:06.108561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:07.109721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:08.111302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:09.112077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:10.111885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:11.112902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:12.113858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:13.114469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:14.115505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:15.117025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:16.117528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:17.118547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:18.119044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:19.119075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:20.119588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:21.120082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:22.120998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:23.121657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:24.121903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:25.122049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:26.122804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:27.123661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:28.124362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:29.124783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:30.125519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:31.125855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:32.126657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:33.126918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:34.127474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:35.128694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:36.129547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:37.130342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:38.130677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:39.131031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:40.131618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:41.131961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:42.132701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:43.133083      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:44.133576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:45.134740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:46.135588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:47.136263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:48.136582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:49.137071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:50.137746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:51.138476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:52.138994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:53.139706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:54.140641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:55.141255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:56.142040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:57.142386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:58.143314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:00:59.144041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:00.144868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:01.145803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:02.146540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:03.147280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:04.148220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:05.148508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:06.148950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:07.149520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:08.149995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:09.150570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:10.151566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:11.152205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:12.152901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:13.154028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:14.154371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:15.154869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:16.155947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:17.156143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:18.156979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:19.157607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:20.158426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:21.159196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:22.159455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:23.160624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:24.161465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:25.161660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:26.162611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:27.163813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:28.164958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:29.165878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:30.166670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:31.167853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:32.168522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:33.169711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:34.169810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:35.170678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:36.171463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:37.172525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:38.173416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:39.174304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:40.175096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:41.176066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:42.176510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:43.177742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:44.178500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:45.178766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:46.179985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:47.181027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:48.181774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:49.182726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:50.182922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:51.183195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:52.183674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:53.184890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:54.185526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:55.186434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:56.187277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:57.188525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:58.189259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:01:59.190623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:00.191719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:01.193194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:02.194380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:03.195434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:04.196466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:05.197260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:06.198035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:07.198510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:08.199328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:09.199778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:10.200489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:11.201152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:12.201362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:13.202024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:14.202736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:15.203849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:16.204354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:17.205560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:18.206369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:19.207029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:20.207567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:21.207876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:22.208422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:23.209209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:24.210266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:25.210920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:26.211778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:27.213439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:28.213539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:29.214052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:30.214720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:31.215611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:32.216319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:33.216998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:34.217663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:35.218726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:36.219587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:37.220467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:38.221323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:39.222337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:40.223176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:41.223830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:42.223997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:43.224479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:44.224878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:45.225921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:46.226313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:47.227512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:48.228731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:49.229551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:50.229298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:51.229617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:52.229526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:53.230791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:54.230859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:55.231221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:56.231686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:57.232588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:58.232663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:02:59.233067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:00.234439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:01.235077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:02.235628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:03.236362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:04.236952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:05.237590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:06.238442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:07.238610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:08.239277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:09.240260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:10.241892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:11.241731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:12.242417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:13.243211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:14.243644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:15.244976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:16.245026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:17.245391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:18.246326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:19.247033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:20.247197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:21.248180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:22.248573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:23.249462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:24.249632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:25.252007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:26.252321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:27.253064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:28.253586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:29.254088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:30.254218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:31.254657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:32.254812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:33.255889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:34.256661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:35.257993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:36.259017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:37.259491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:38.260450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:39.261336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:40.262505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:41.263199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:42.264061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:43.265040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:44.265089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:45.265535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:46.267866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:47.267359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:48.267337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:49.268184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:50.269188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:51.269680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:52.270029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:53.270628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:54.271565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:55.271924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:56.272844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:57.273060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:58.273598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:03:59.274698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:00.275335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:01.276095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:02.276849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:03.277802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:04.279016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:05.279263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:06.279811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:07.281091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:08.281745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:09.282761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:10.282816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:11.283425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:12.284079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:13.284859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:14.285498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:15.286895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:16.287838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:17.288273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:18.288255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:19.288738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:20.289458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:21.290139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:22.290475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:23.291303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:24.291562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:25.292953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:26.293384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:27.293960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:28.294712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:29.295449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:30.296531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:31.297530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:32.298894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:33.299578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:34.300343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:35.300796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:36.301072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:37.301365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:38.301961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:39.303041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:40.303034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:41.304078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:42.305028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:43.305845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:44.306503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:45.306803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:46.307965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:47.309005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:48.310035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:49.311382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:50.311941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:51.312961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:52.313321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:53.313673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:54.314461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:55.314631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:56.315858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:57.316263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:58.316484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:04:59.316932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:00.318064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:01.318546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 01/03/24 05:05:02.247
  Jan  3 05:05:02.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-529" for this suite. @ 01/03/24 05:05:02.267
• [330.121 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 01/03/24 05:05:02.28
  Jan  3 05:05:02.280: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 05:05:02.284
  E0103 05:05:02.319899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:05:02.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:05:02.379
  STEP: Creating pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266 @ 01/03/24 05:05:02.387
  E0103 05:05:03.320094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:04.321312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/03/24 05:05:04.419
  Jan  3 05:05:04.426: INFO: Initial restart count of pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a is 0
  Jan  3 05:05:04.432: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:05.321465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:06.321909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:06.443: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:07.323530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:08.324254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:08.455: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:09.324629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:10.325745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:10.465: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:11.326345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:12.327165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:12.478: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:13.327531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:14.328388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:14.490: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:15.329489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:16.330416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:16.499: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:17.331639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:18.332537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:18.510: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:19.332668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:20.333685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:20.520: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:21.333735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:22.334050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:22.529: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:23.334519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:24.335371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:24.537: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:25.336637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:26.336941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:26.546: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:27.337612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:28.338640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:28.556: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:29.339515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:30.340489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:30.565: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:31.341337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:32.341512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:32.573: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:33.342363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:34.343199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:34.585: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:35.343516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:36.344892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:36.593: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:37.344964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:38.345873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:38.609: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:39.346515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:40.347476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:40.619: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:41.347888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:42.349230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:42.627: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:43.349545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:44.350414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:44.636: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:45.350575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:46.351902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:46.645: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:47.352436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:48.353278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:48.654: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:49.353681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:50.354069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:50.664: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:51.354506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:52.354627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:52.676: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:53.355357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:54.356252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:54.687: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:55.356549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:56.357528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:56.696: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:57.357591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:05:58.358517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:05:58.705: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:05:59.358898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:00.359450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:00.714: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:01.359705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:02.359921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:02.724: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:03.360419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:04.361253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:04.734: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:05.362499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:06.363203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:06.743: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:07.363516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:08.363988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:08.756: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:09.364494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:10.365209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:10.764: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:11.365374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:12.365761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:12.774: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:13.365899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:14.366321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:14.786: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:15.366731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:16.367548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:16.796: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:17.368840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:18.369744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:18.807: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:19.370236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:20.370917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:20.816: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:21.372225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:22.372614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:22.823: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:23.373557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:24.373900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:24.834: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:25.374950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:26.376048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:26.844: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:27.377030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:28.377945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:28.854: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:29.378552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:30.379442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:30.864: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:31.379814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:32.380039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:32.873: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:33.380603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:34.381471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:34.885: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:35.382788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:36.383385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:36.895: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:37.384020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:38.384925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:38.907: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:39.385496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:40.386355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:40.915: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:41.387563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:42.387813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:42.924: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:43.387817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:44.390068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:44.935: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:45.389357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:46.390380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:46.944: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:47.390555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:48.391699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:48.956: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:49.392406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:50.393195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:50.965: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:51.394501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:52.394722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:52.975: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:53.394957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:54.395813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:54.984: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:55.396705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:56.398090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:56.994: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:57.397846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:06:58.398543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:06:59.006: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:06:59.398852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:00.399769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:01.016: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:01.400196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:02.400996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:03.024: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:03.401807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:04.402484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:05.033: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:05.403164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:06.404512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:07.042: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:07.404566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:08.405835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:09.051: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:09.406731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:10.407642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:11.060: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:11.407768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:12.408008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:13.067: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:13.408533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:14.408910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:15.075: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:15.409500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:16.410563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:17.084: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:17.411942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:18.412783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:19.092: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:19.412944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:20.413802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:21.101: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:21.413495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:22.413634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:23.113: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:23.413955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:24.414677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:25.123: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:25.415439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:26.416296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:27.135: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:27.416934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:28.417671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:29.142: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:29.417994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:30.418745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:31.151: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:31.419862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:32.420181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:33.164: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:33.421017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:34.421248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:35.172: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:35.422309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:36.423079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:37.183: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:37.423405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:38.424080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:39.191: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:39.424316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:40.425027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:41.202: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:41.425416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:42.425944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:43.211: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:43.427013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:44.427451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:45.220: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:45.428736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:46.429491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:47.230: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:47.429809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:48.430803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:49.242: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:49.431852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:50.432486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:51.253: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:51.433378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:52.433921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:53.263: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:53.435012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:54.435851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:55.279: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:55.437085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:56.437889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:57.289: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:57.438264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:07:58.439057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:07:59.299: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:07:59.439236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:00.440314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:01.309: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:01.441400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:02.441480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:03.319: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:03.441586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:04.441991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:05.328: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:05.442828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:06.443578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:07.337: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:07.444318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:08.445159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:09.346: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:09.445326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:10.445755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:11.357: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:11.445915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:12.446335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:13.371: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:13.447296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:14.448074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:15.381: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:15.448734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:16.449570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:17.391: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:17.450639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:18.451230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:19.398: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:19.452465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:20.453448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:21.406: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:21.454853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:22.455205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:23.416: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:23.456341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:24.457329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:25.427: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:25.457410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:26.458352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:27.438: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:27.458736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:28.459680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:29.450: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:29.460048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:30.461218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:31.460: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:31.461251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:32.461467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:33.462544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:33.472: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:34.463986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:35.465146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:35.484: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:36.466456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:37.467003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:37.494: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:38.467891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:39.468796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:39.504: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:40.469230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:41.469742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:41.515: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:42.470736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:43.472313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:43.524: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:44.472800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:45.473781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:45.535: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:46.474279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:47.475002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:47.543: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:48.475439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:49.475710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:49.553: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:50.476247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:51.476616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:51.562: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:52.477689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:53.478833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:53.572: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:54.479326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:55.479520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:55.588: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:56.479997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:57.481229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:57.597: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:08:58.481728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:08:59.482969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:08:59.606: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:09:00.483091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:01.483423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:01.616: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:09:02.484358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:03.484511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:03.625: INFO: Get pod test-webserver-6ccd67ce-72d1-445f-a66a-e76ee029046a in namespace container-probe-5266
  E0103 05:09:04.484990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:05.486143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/03/24 05:09:05.626
  Jan  3 05:09:05.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5266" for this suite. @ 01/03/24 05:09:05.679
• [243.411 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 01/03/24 05:09:05.691
  Jan  3 05:09:05.691: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 05:09:05.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:09:05.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:09:05.735
  STEP: Creating pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957 @ 01/03/24 05:09:05.745
  E0103 05:09:06.489641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:07.490250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:08.490751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:09.491220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/03/24 05:09:09.792
  Jan  3 05:09:09.798: INFO: Initial restart count of pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 is 0
  Jan  3 05:09:09.803: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  E0103 05:09:10.491631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:11.492778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:11.812: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  E0103 05:09:12.493886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:13.495065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:13.822: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  E0103 05:09:14.495791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:15.497183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:15.831: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  E0103 05:09:16.497863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:17.498798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:17.841: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  E0103 05:09:18.499069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:19.499424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:19.852: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  E0103 05:09:20.499560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:21.500279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:21.863: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  E0103 05:09:22.501356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:23.502217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:23.872: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  E0103 05:09:24.502749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:25.503642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:25.882: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  E0103 05:09:26.503761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:27.504147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:27.890: INFO: Get pod liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 in namespace container-probe-1957
  Jan  3 05:09:27.890: INFO: Restart count of pod container-probe-1957/liveness-3956da6c-b5c5-4c66-8df7-52616907a4c5 is now 1 (18.092156136s elapsed)
  STEP: deleting the pod @ 01/03/24 05:09:27.89
  Jan  3 05:09:27.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1957" for this suite. @ 01/03/24 05:09:27.918
• [22.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/03/24 05:09:27.93
  Jan  3 05:09:27.930: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 05:09:27.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:09:27.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:09:27.967
  STEP: Creating configMap with name projected-configmap-test-volume-map-3ee9e0d6-4b87-42ff-b4eb-4b91fc2aa70b @ 01/03/24 05:09:27.98
  STEP: Creating a pod to test consume configMaps @ 01/03/24 05:09:27.989
  E0103 05:09:28.505047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:29.505510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:30.505698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:31.506440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 05:09:32.037
  Jan  3 05:09:32.043: INFO: Trying to get logs from node 192.168.18.92 pod pod-projected-configmaps-bb1a1969-1377-456b-9386-87aef7e67f63 container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 05:09:32.083
  Jan  3 05:09:32.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1514" for this suite. @ 01/03/24 05:09:32.128
• [4.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/03/24 05:09:32.141
  Jan  3 05:09:32.141: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 05:09:32.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:09:32.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:09:32.18
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/03/24 05:09:32.187
  E0103 05:09:32.506809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:33.511576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:34.511698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:35.512736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 05:09:36.231
  Jan  3 05:09:36.237: INFO: Trying to get logs from node 192.168.18.92 pod pod-19e2ddf5-fe0a-4e90-8c71-ddbf5ab8b683 container test-container: <nil>
  STEP: delete the pod @ 01/03/24 05:09:36.25
  Jan  3 05:09:36.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3764" for this suite. @ 01/03/24 05:09:36.281
• [4.156 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/03/24 05:09:36.298
  Jan  3 05:09:36.298: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename deployment @ 01/03/24 05:09:36.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:09:36.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:09:36.349
  Jan  3 05:09:36.375: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0103 05:09:36.513662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:37.513696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:38.514328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:39.514815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:40.515627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:41.384: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/03/24 05:09:41.384
  Jan  3 05:09:41.384: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/03/24 05:09:41.403
  Jan  3 05:09:41.421: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afe057d4-f968-43c1-b321-6c63d427b431",
      ResourceVersion: (string) (len=6) "118210",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839855380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan  3 05:09:41.436: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Jan  3 05:09:41.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7969" for this suite. @ 01/03/24 05:09:41.454
• [5.167 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 01/03/24 05:09:41.466
  Jan  3 05:09:41.466: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 05:09:41.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:09:41.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:09:41.506
  E0103 05:09:41.516339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 01/03/24 05:09:41.543
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 05:09:42.396
  STEP: Deploying the webhook pod @ 01/03/24 05:09:42.412
  STEP: Wait for the deployment to be ready @ 01/03/24 05:09:42.434
  Jan  3 05:09:42.447: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0103 05:09:42.516881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:43.518047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/03/24 05:09:44.469
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 05:09:44.487
  E0103 05:09:44.518427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:45.488: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/03/24 05:09:45.503
  E0103 05:09:45.519438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/03/24 05:09:45.544
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/03/24 05:09:45.565
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/03/24 05:09:45.584
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/03/24 05:09:45.606
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/03/24 05:09:45.621
  Jan  3 05:09:45.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5320" for this suite. @ 01/03/24 05:09:45.727
  STEP: Destroying namespace "webhook-markers-4251" for this suite. @ 01/03/24 05:09:45.744
• [4.292 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 01/03/24 05:09:45.758
  Jan  3 05:09:45.758: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 05:09:45.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:09:45.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:09:45.789
  STEP: Setting up server cert @ 01/03/24 05:09:45.835
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 05:09:46.438
  STEP: Deploying the webhook pod @ 01/03/24 05:09:46.448
  STEP: Wait for the deployment to be ready @ 01/03/24 05:09:46.464
  Jan  3 05:09:46.486: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0103 05:09:46.520481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:47.520070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/03/24 05:09:48.516
  E0103 05:09:48.520591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 05:09:48.534
  E0103 05:09:49.521291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:49.536: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/03/24 05:09:49.551
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/03/24 05:09:49.588
  STEP: Creating a dummy validating-webhook-configuration object @ 01/03/24 05:09:49.622
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/03/24 05:09:49.644
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/03/24 05:09:49.654
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/03/24 05:09:49.672
  Jan  3 05:09:49.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6872" for this suite. @ 01/03/24 05:09:49.765
  STEP: Destroying namespace "webhook-markers-2464" for this suite. @ 01/03/24 05:09:49.773
• [4.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 01/03/24 05:09:49.785
  Jan  3 05:09:49.785: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 05:09:49.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:09:49.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:09:49.822
  STEP: creating service in namespace services-8187 @ 01/03/24 05:09:49.829
  STEP: creating service affinity-clusterip in namespace services-8187 @ 01/03/24 05:09:49.83
  STEP: creating replication controller affinity-clusterip in namespace services-8187 @ 01/03/24 05:09:49.844
  I0103 05:09:49.853463      20 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-8187, replica count: 3
  E0103 05:09:50.521474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:51.521552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:52.521894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0103 05:09:52.906962      20 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan  3 05:09:52.919: INFO: Creating new exec pod
  E0103 05:09:53.522525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:54.523413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:55.524045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:55.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-8187 exec execpod-affinity8vcnn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jan  3 05:09:56.327: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jan  3 05:09:56.327: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 05:09:56.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-8187 exec execpod-affinity8vcnn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.243.209 80'
  E0103 05:09:56.524853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:09:56.679: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.243.209 80\nConnection to 169.169.243.209 80 port [tcp/http] succeeded!\n"
  Jan  3 05:09:56.679: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan  3 05:09:56.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-8187 exec execpod-affinity8vcnn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://169.169.243.209:80/ ; done'
  Jan  3 05:09:57.211: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://169.169.243.209:80/\n"
  Jan  3 05:09:57.211: INFO: stdout: "\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc\naffinity-clusterip-chpxc"
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.211: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.212: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.212: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.212: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.212: INFO: Received response from host: affinity-clusterip-chpxc
  Jan  3 05:09:57.212: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8187, will wait for the garbage collector to delete the pods @ 01/03/24 05:09:57.238
  Jan  3 05:09:57.305: INFO: Deleting ReplicationController affinity-clusterip took: 9.511442ms
  Jan  3 05:09:57.406: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.817104ms
  E0103 05:09:57.525457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:58.525983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:09:59.526329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:00.527596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:00.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8187" for this suite. @ 01/03/24 05:10:00.545
• [10.768 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 01/03/24 05:10:00.555
  Jan  3 05:10:00.555: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 05:10:00.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:10:00.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:10:00.589
  STEP: creating secret secrets-1800/secret-test-0c091d9e-ef78-465c-9619-59096a70900e @ 01/03/24 05:10:00.595
  STEP: Creating a pod to test consume secrets @ 01/03/24 05:10:00.602
  E0103 05:10:01.528434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:02.529053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:03.529714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:04.530392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 05:10:04.64
  Jan  3 05:10:04.646: INFO: Trying to get logs from node 192.168.18.92 pod pod-configmaps-73c11794-263a-4156-bbde-f354fd8ce3b4 container env-test: <nil>
  STEP: delete the pod @ 01/03/24 05:10:04.666
  Jan  3 05:10:04.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1800" for this suite. @ 01/03/24 05:10:04.711
• [4.166 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/03/24 05:10:04.721
  Jan  3 05:10:04.721: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename daemonsets @ 01/03/24 05:10:04.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:10:04.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:10:04.752
  STEP: Creating simple DaemonSet "daemon-set" @ 01/03/24 05:10:04.795
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/03/24 05:10:04.803
  Jan  3 05:10:04.815: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 05:10:04.815: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 05:10:05.531005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:05.815: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 05:10:05.815: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 05:10:06.531741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:06.824: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan  3 05:10:06.824: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/03/24 05:10:06.83
  Jan  3 05:10:06.863: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 05:10:06.863: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 05:10:07.533203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:07.866: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 05:10:07.866: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 05:10:08.534445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:08.864: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 05:10:08.864: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 05:10:09.534327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:09.861: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan  3 05:10:09.861: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 05:10:10.534603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:10.868: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan  3 05:10:10.868: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/03/24 05:10:10.875
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-51, will wait for the garbage collector to delete the pods @ 01/03/24 05:10:10.875
  Jan  3 05:10:10.942: INFO: Deleting DaemonSet.extensions daemon-set took: 11.021599ms
  Jan  3 05:10:11.043: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.266543ms
  E0103 05:10:11.536707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:12.537599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:13.350: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 05:10:13.350: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan  3 05:10:13.356: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"118685"},"items":null}

  Jan  3 05:10:13.361: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"118685"},"items":null}

  Jan  3 05:10:13.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-51" for this suite. @ 01/03/24 05:10:13.397
• [8.686 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 01/03/24 05:10:13.408
  Jan  3 05:10:13.408: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename services @ 01/03/24 05:10:13.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:10:13.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:10:13.442
  STEP: creating service nodeport-test with type=NodePort in namespace services-4616 @ 01/03/24 05:10:13.448
  STEP: creating replication controller nodeport-test in namespace services-4616 @ 01/03/24 05:10:13.48
  I0103 05:10:13.491409      20 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-4616, replica count: 2
  E0103 05:10:13.537547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:14.538572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:15.538662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:16.539233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0103 05:10:16.546041      20 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan  3 05:10:16.546: INFO: Creating new exec pod
  E0103 05:10:17.539946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:18.540387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:19.540715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:19.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-4616 exec execpodj4xbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jan  3 05:10:19.955: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jan  3 05:10:19.955: INFO: stdout: ""
  E0103 05:10:20.541395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:20.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-4616 exec execpodj4xbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jan  3 05:10:20.941: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jan  3 05:10:20.941: INFO: stdout: "nodeport-test-hp98z"
  Jan  3 05:10:20.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-4616 exec execpodj4xbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 169.169.41.186 80'
  Jan  3 05:10:21.286: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 169.169.41.186 80\nConnection to 169.169.41.186 80 port [tcp/http] succeeded!\n"
  Jan  3 05:10:21.286: INFO: stdout: "nodeport-test-hp98z"
  Jan  3 05:10:21.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-4616 exec execpodj4xbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.18.91 32041'
  E0103 05:10:21.541481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:21.598: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.18.91 32041\nConnection to 192.168.18.91 32041 port [tcp/*] succeeded!\n"
  Jan  3 05:10:21.598: INFO: stdout: "nodeport-test-hp98z"
  Jan  3 05:10:21.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=services-4616 exec execpodj4xbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.18.92 32041'
  Jan  3 05:10:21.859: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.18.92 32041\nConnection to 192.168.18.92 32041 port [tcp/*] succeeded!\n"
  Jan  3 05:10:21.859: INFO: stdout: "nodeport-test-hp98z"
  Jan  3 05:10:21.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4616" for this suite. @ 01/03/24 05:10:21.867
• [8.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 01/03/24 05:10:21.878
  Jan  3 05:10:21.878: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 05:10:21.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:10:21.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:10:21.906
  STEP: creating a replication controller @ 01/03/24 05:10:21.911
  Jan  3 05:10:21.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 create -f -'
  Jan  3 05:10:22.203: INFO: stderr: ""
  Jan  3 05:10:22.203: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/03/24 05:10:22.203
  Jan  3 05:10:22.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan  3 05:10:22.348: INFO: stderr: ""
  Jan  3 05:10:22.348: INFO: stdout: "update-demo-nautilus-5pplg update-demo-nautilus-rk97n "
  Jan  3 05:10:22.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-5pplg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan  3 05:10:22.516: INFO: stderr: ""
  Jan  3 05:10:22.517: INFO: stdout: ""
  Jan  3 05:10:22.517: INFO: update-demo-nautilus-5pplg is created but not running
  E0103 05:10:22.542188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:23.543043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:24.543748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:25.544526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:26.545304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:27.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0103 05:10:27.546182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:27.708: INFO: stderr: ""
  Jan  3 05:10:27.708: INFO: stdout: "update-demo-nautilus-5pplg update-demo-nautilus-rk97n "
  Jan  3 05:10:27.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-5pplg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan  3 05:10:27.908: INFO: stderr: ""
  Jan  3 05:10:27.908: INFO: stdout: "true"
  Jan  3 05:10:27.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-5pplg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan  3 05:10:28.056: INFO: stderr: ""
  Jan  3 05:10:28.057: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan  3 05:10:28.057: INFO: validating pod update-demo-nautilus-5pplg
  Jan  3 05:10:28.064: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan  3 05:10:28.064: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan  3 05:10:28.064: INFO: update-demo-nautilus-5pplg is verified up and running
  Jan  3 05:10:28.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-rk97n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan  3 05:10:28.194: INFO: stderr: ""
  Jan  3 05:10:28.194: INFO: stdout: "true"
  Jan  3 05:10:28.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-rk97n -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan  3 05:10:28.340: INFO: stderr: ""
  Jan  3 05:10:28.340: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan  3 05:10:28.340: INFO: validating pod update-demo-nautilus-rk97n
  Jan  3 05:10:28.349: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan  3 05:10:28.349: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan  3 05:10:28.349: INFO: update-demo-nautilus-rk97n is verified up and running
  STEP: scaling down the replication controller @ 01/03/24 05:10:28.349
  Jan  3 05:10:28.353: INFO: scanned /root for discovery docs: <nil>
  Jan  3 05:10:28.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0103 05:10:28.546416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:29.546922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:29.562: INFO: stderr: ""
  Jan  3 05:10:29.563: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/03/24 05:10:29.563
  Jan  3 05:10:29.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan  3 05:10:29.720: INFO: stderr: ""
  Jan  3 05:10:29.720: INFO: stdout: "update-demo-nautilus-5pplg "
  Jan  3 05:10:29.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-5pplg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan  3 05:10:29.870: INFO: stderr: ""
  Jan  3 05:10:29.870: INFO: stdout: "true"
  Jan  3 05:10:29.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-5pplg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan  3 05:10:30.011: INFO: stderr: ""
  Jan  3 05:10:30.012: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan  3 05:10:30.012: INFO: validating pod update-demo-nautilus-5pplg
  Jan  3 05:10:30.017: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan  3 05:10:30.017: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan  3 05:10:30.017: INFO: update-demo-nautilus-5pplg is verified up and running
  STEP: scaling up the replication controller @ 01/03/24 05:10:30.017
  Jan  3 05:10:30.019: INFO: scanned /root for discovery docs: <nil>
  Jan  3 05:10:30.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0103 05:10:30.548642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:31.191: INFO: stderr: ""
  Jan  3 05:10:31.191: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/03/24 05:10:31.191
  Jan  3 05:10:31.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan  3 05:10:31.384: INFO: stderr: ""
  Jan  3 05:10:31.384: INFO: stdout: "update-demo-nautilus-2xp4k update-demo-nautilus-5pplg "
  Jan  3 05:10:31.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-2xp4k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0103 05:10:31.548715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:31.555: INFO: stderr: ""
  Jan  3 05:10:31.555: INFO: stdout: ""
  Jan  3 05:10:31.555: INFO: update-demo-nautilus-2xp4k is created but not running
  E0103 05:10:32.549648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:33.550280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:34.551278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:35.551742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:36.552933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:36.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan  3 05:10:36.752: INFO: stderr: ""
  Jan  3 05:10:36.752: INFO: stdout: "update-demo-nautilus-2xp4k update-demo-nautilus-5pplg "
  Jan  3 05:10:36.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-2xp4k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan  3 05:10:36.904: INFO: stderr: ""
  Jan  3 05:10:36.904: INFO: stdout: "true"
  Jan  3 05:10:36.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-2xp4k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan  3 05:10:37.080: INFO: stderr: ""
  Jan  3 05:10:37.080: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan  3 05:10:37.080: INFO: validating pod update-demo-nautilus-2xp4k
  Jan  3 05:10:37.099: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan  3 05:10:37.099: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan  3 05:10:37.099: INFO: update-demo-nautilus-2xp4k is verified up and running
  Jan  3 05:10:37.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-5pplg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan  3 05:10:37.296: INFO: stderr: ""
  Jan  3 05:10:37.296: INFO: stdout: "true"
  Jan  3 05:10:37.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods update-demo-nautilus-5pplg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan  3 05:10:37.479: INFO: stderr: ""
  Jan  3 05:10:37.479: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan  3 05:10:37.479: INFO: validating pod update-demo-nautilus-5pplg
  Jan  3 05:10:37.485: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan  3 05:10:37.485: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan  3 05:10:37.485: INFO: update-demo-nautilus-5pplg is verified up and running
  STEP: using delete to clean up resources @ 01/03/24 05:10:37.485
  Jan  3 05:10:37.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 delete --grace-period=0 --force -f -'
  E0103 05:10:37.553292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:37.675: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan  3 05:10:37.675: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jan  3 05:10:37.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get rc,svc -l name=update-demo --no-headers'
  Jan  3 05:10:37.943: INFO: stderr: "No resources found in kubectl-3752 namespace.\n"
  Jan  3 05:10:37.943: INFO: stdout: ""
  Jan  3 05:10:37.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-3752 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jan  3 05:10:38.109: INFO: stderr: ""
  Jan  3 05:10:38.110: INFO: stdout: ""
  Jan  3 05:10:38.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3752" for this suite. @ 01/03/24 05:10:38.117
• [16.256 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 01/03/24 05:10:38.134
  Jan  3 05:10:38.134: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-probe @ 01/03/24 05:10:38.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:10:38.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:10:38.19
  STEP: Creating pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386 @ 01/03/24 05:10:38.196
  E0103 05:10:38.553772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:39.554031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/03/24 05:10:40.224
  Jan  3 05:10:40.231: INFO: Initial restart count of pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 is 0
  Jan  3 05:10:40.239: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:40.555246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:41.556324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:42.249: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:42.556556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:43.557317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:44.259: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:44.557517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:45.557889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:46.268: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:46.559081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:47.559667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:48.276: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:48.562726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:49.563372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:50.288: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:50.563569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:51.564354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:52.300: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:52.564323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:53.564722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:54.308: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:54.565862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:55.566425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:56.317: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:56.566666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:57.566970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:10:58.328: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:10:58.567726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:10:59.568192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:00.341: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:00.569357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:01.569719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:02.351: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:02.570635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:03.571591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:04.361: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:04.571830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:05.572297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:06.368: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:06.572774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:07.574514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:08.376: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:08.580576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:09.581007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:10.387: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:10.581424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:11.581905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:12.396: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:12.581961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:13.582781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:14.404: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:14.583206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:15.584685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:16.415: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:16.585704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:17.585994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:18.424: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:18.586713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:19.587500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:20.433: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:20.588331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:21.589165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:22.445: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:22.590165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:23.590943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:24.453: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:24.592034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:25.592296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:26.461: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:26.594292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:27.595015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:28.470: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:28.595800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:29.596439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:30.478: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:30.597427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:31.598555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:32.491: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:32.599286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:33.599589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:34.503: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:34.600810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:35.601264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:36.511: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:36.601265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:37.601467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:38.522: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:38.601580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:39.602048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:40.531: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:40.602209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:41.603282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:42.544: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:42.603660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:43.604047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:44.553: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:44.605151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:45.605545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:46.563: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:46.605920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:47.606266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:48.581: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:48.606350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:49.606870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:50.592: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:50.607545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:51.608328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:52.600: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:52.609037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:53.610202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:54.610272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:54.610: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:55.610819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:56.611886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:56.619: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:57.612364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:11:58.614703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:11:58.629: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:11:59.615269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:00.616179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:00.641: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:01.616554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:02.617147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:02.652: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:03.617459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:04.618604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:04.663: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:05.618604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:06.619414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:06.671: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:07.620201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:08.620395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:08.682: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:09.620891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:10.621606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:10.692: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:11.621998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:12.622642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:12.701: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:13.623993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:14.624761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:14.711: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:15.625478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:16.626391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:16.721: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:17.627157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:18.629304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:18.729: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:19.629753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:20.630947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:20.739: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:21.631476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:22.632680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:22.748: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:23.633368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:24.634306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:24.758: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:25.634766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:26.635693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:26.768: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:27.636233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:28.636545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:28.780: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:29.637048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:30.637802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:30.793: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:31.638876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:32.639536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:32.803: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:33.640070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:34.640395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:34.811: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:35.641708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:36.642181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:36.822: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:37.642481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:38.643489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:38.831: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:39.643979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:40.644839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:40.842: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:41.645749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:42.646242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:42.853: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:43.646844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:44.647698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:44.861: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:45.648154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:46.648901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:46.871: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:47.649425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:48.649573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:48.882: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:49.650065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:50.650867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:50.894: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:51.651363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:52.651717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:52.907: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:53.651915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:54.652740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:54.924: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:55.653928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:56.654622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:56.933: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:57.655672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:12:58.655451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:12:58.944: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:12:59.657381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:00.657673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:00.957: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:01.658082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:02.658507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:02.969: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:03.659505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:04.660305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:04.977: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:05.661051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:06.661535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:06.988: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:07.661943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:08.662413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:09.003: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:09.662818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:10.663093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:11.015: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:11.663542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:12.664023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:13.025: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:13.664569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:14.665434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:15.034: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:15.665737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:16.666539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:17.044: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:17.666701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:18.666913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:19.056: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:19.668258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:20.668944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:21.065: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:21.669243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:22.669461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:23.076: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:23.669812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:24.670406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:25.084: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:25.671278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:26.672152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:27.094: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:27.673023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:28.676087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:29.117: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:29.676905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:30.677760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:31.131: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:31.678138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:32.678444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:33.141: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:33.679079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:34.680408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:35.151: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:35.680179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:36.681201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:37.163: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:37.681944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:38.682667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:39.171: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:39.683696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:40.684153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:41.183: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:41.684596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:42.685708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:43.190: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:43.687026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:44.687755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:45.198: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:45.688018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:46.688829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:47.206: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:47.689200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:48.690511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:49.220: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:49.690835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:50.691303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:51.229: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:51.691724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:52.691907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:53.236: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:53.692483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:54.692882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:55.245: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:55.693258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:56.693949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:57.254: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:57.694242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:13:58.695997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:13:59.263: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:13:59.696481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:00.697275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:01.274: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:01.697319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:02.697629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:03.281: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:03.698729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:04.699537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:05.290: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:05.699858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:06.700211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:07.300: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:07.701407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:08.701650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:09.309: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:09.702404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:10.703298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:11.319: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:11.703569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:12.703943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:13.329: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:13.704173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:14.704611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:15.338: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:15.704865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:16.705634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:17.347: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:17.705954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:18.706537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:19.357: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:19.706833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:20.707791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:21.367: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:21.708207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:22.708429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:23.381: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:23.708990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:24.709927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:25.391: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:25.710177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:26.711019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:27.403: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:27.711570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:28.712299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:29.412: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:29.714027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:30.713957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:31.423: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:31.714993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:32.715984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:33.431: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:33.716670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:34.717016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:35.442: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:35.718170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:36.719050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:37.451: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:37.720361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:38.720447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:39.461: INFO: Get pod test-grpc-9b23a3b1-54e0-4b04-9812-e2b4e0694877 in namespace container-probe-6386
  E0103 05:14:39.720909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:40.721788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/03/24 05:14:41.463
  Jan  3 05:14:41.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6386" for this suite. @ 01/03/24 05:14:41.508
• [243.385 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 01/03/24 05:14:41.52
  Jan  3 05:14:41.520: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename dns @ 01/03/24 05:14:41.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:14:41.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:14:41.578
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/03/24 05:14:41.597
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/03/24 05:14:41.597
  STEP: creating a pod to probe DNS @ 01/03/24 05:14:41.597
  STEP: submitting the pod to kubernetes @ 01/03/24 05:14:41.597
  E0103 05:14:41.722446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:42.722758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:43.723449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:44.724443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/03/24 05:14:45.645
  STEP: looking for the results for each expected name from probers @ 01/03/24 05:14:45.654
  Jan  3 05:14:45.689: INFO: DNS probes using dns-3239/dns-test-706ddb76-c4c5-4f6d-b8d0-04b099dd2cd7 succeeded

  STEP: deleting the pod @ 01/03/24 05:14:45.689
  Jan  3 05:14:45.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0103 05:14:45.724985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-3239" for this suite. @ 01/03/24 05:14:45.725
• [4.220 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/03/24 05:14:45.74
  Jan  3 05:14:45.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename configmap @ 01/03/24 05:14:45.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:14:45.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:14:45.793
  STEP: Creating configMap with name configmap-test-volume-map-ec5c4a90-3431-430f-ac02-129c066d1ec7 @ 01/03/24 05:14:45.799
  STEP: Creating a pod to test consume configMaps @ 01/03/24 05:14:45.807
  E0103 05:14:46.725679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:47.727048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:48.727274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:49.728046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 05:14:49.847
  Jan  3 05:14:49.852: INFO: Trying to get logs from node 192.168.18.92 pod pod-configmaps-f8626303-2801-411c-85de-cd6c9f187e5c container agnhost-container: <nil>
  STEP: delete the pod @ 01/03/24 05:14:49.895
  Jan  3 05:14:49.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9019" for this suite. @ 01/03/24 05:14:49.927
• [4.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/03/24 05:14:49.938
  Jan  3 05:14:49.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename deployment @ 01/03/24 05:14:49.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:14:49.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:14:49.968
  Jan  3 05:14:49.976: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jan  3 05:14:49.991: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0103 05:14:50.728548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:51.729480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:52.730067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:53.730297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:54.731226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:55.000: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/03/24 05:14:55
  Jan  3 05:14:55.000: INFO: Creating deployment "test-rolling-update-deployment"
  Jan  3 05:14:55.009: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jan  3 05:14:55.027: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0103 05:14:55.732074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:14:56.732929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:57.049: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jan  3 05:14:57.057: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jan  3 05:14:57.074: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9070",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ef83652-0f37-4b04-8f9b-199a86ab3469",
      ResourceVersion: (string) (len=6) "119466",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839855694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan  3 05:14:57.088: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9070",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f7107c0-f3e4-49ed-b910-2b231805a403",
      ResourceVersion: (string) (len=6) "119456",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839855694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "4ef83652-0f37-4b04-8f9b-199a86ab3469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 65 66 38 33 36  35 32 2d 30 66 33 37 2d  |\"4ef83652-0f37-|
              00000120  34 62 30 34 2d 38 66 39  62 2d 31 39 39 61 38 36  |4b04-8f9b-199a86|
              00000130  61 62 33 34 36 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ab3469\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 05:14:57.091: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jan  3 05:14:57.092: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9070",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "023a5bf3-b49e-4ed5-9e54-0b4f6cd7da29",
      ResourceVersion: (string) (len=6) "119465",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839855689,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "4ef83652-0f37-4b04-8f9b-199a86ab3469",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 34 65 66 38 33 36 35  |"uid\":\"4ef8365|
              000000b0  32 2d 30 66 33 37 2d 34  62 30 34 2d 38 66 39 62  |2-0f37-4b04-8f9b|
              000000c0  2d 31 39 39 61 38 36 61  62 33 34 36 39 5c 22 7d  |-199a86ab3469\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan  3 05:14:57.103: INFO: Pod "test-rolling-update-deployment-7f5c55c64-vpp2c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-vpp2c",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-9070",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1113a6e-4be3-4feb-99f2-759810a560df",
      ResourceVersion: (string) (len=6) "119455",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839855694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.155.8/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.155.8/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3417814917f5725e82cfdb72674d3b323e74f58a5f5c48835268d4f1cd42ee38"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "7f7107c0-f3e4-49ed-b910-2b231805a403",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  37 31 30 37 63 30 2d 66  |d\":\"7f7107c0-f|
              00000090  33 65 34 2d 34 39 65 64  2d 62 39 31 30 2d 32 62  |3e4-49ed-b910-2b|
              000000a0  32 33 31 38 30 35 61 34  30 33 5c 22 7d 22 3a 7b  |231805a403\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 35 2e 38  5c 22 7d 22 3a 7b 22 2e  |.1.155.8\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xlzv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xlzv5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "192.168.18.92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63839855694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.18.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.18.92"
        }
      },
      PodIP: (string) (len=10) "10.1.155.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.1.155.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63839855695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63839855696,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://6f5f69fef9f67d43ddc0f64179f71bcf0719287ef632afa4550317dda10ea6fc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan  3 05:14:57.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9070" for this suite. @ 01/03/24 05:14:57.117
• [7.188 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 01/03/24 05:14:57.127
  Jan  3 05:14:57.127: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename daemonsets @ 01/03/24 05:14:57.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:14:57.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:14:57.16
  STEP: Creating simple DaemonSet "daemon-set" @ 01/03/24 05:14:57.203
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/03/24 05:14:57.211
  Jan  3 05:14:57.224: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 05:14:57.224: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 05:14:57.733336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:58.231: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 05:14:58.231: INFO: Node 192.168.18.91 is running 0 daemon pod, expected 1
  E0103 05:14:58.734363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:14:59.234: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan  3 05:14:59.234: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 01/03/24 05:14:59.239
  Jan  3 05:14:59.247: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/03/24 05:14:59.247
  Jan  3 05:14:59.263: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/03/24 05:14:59.263
  Jan  3 05:14:59.268: INFO: Observed &DaemonSet event: ADDED
  Jan  3 05:14:59.268: INFO: Observed &DaemonSet event: MODIFIED
  Jan  3 05:14:59.269: INFO: Observed &DaemonSet event: MODIFIED
  Jan  3 05:14:59.269: INFO: Observed &DaemonSet event: MODIFIED
  Jan  3 05:14:59.269: INFO: Found daemon set daemon-set in namespace daemonsets-7215 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan  3 05:14:59.269: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/03/24 05:14:59.269
  STEP: watching for the daemon set status to be patched @ 01/03/24 05:14:59.283
  Jan  3 05:14:59.287: INFO: Observed &DaemonSet event: ADDED
  Jan  3 05:14:59.288: INFO: Observed &DaemonSet event: MODIFIED
  Jan  3 05:14:59.288: INFO: Observed &DaemonSet event: MODIFIED
  Jan  3 05:14:59.289: INFO: Observed &DaemonSet event: MODIFIED
  Jan  3 05:14:59.289: INFO: Observed daemon set daemon-set in namespace daemonsets-7215 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan  3 05:14:59.289: INFO: Observed &DaemonSet event: MODIFIED
  Jan  3 05:14:59.289: INFO: Found daemon set daemon-set in namespace daemonsets-7215 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jan  3 05:14:59.289: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/03/24 05:14:59.295
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7215, will wait for the garbage collector to delete the pods @ 01/03/24 05:14:59.295
  Jan  3 05:14:59.363: INFO: Deleting DaemonSet.extensions daemon-set took: 10.59334ms
  Jan  3 05:14:59.463: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.602751ms
  E0103 05:14:59.735018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:00.735261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:01.736276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:02.071: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan  3 05:15:02.071: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan  3 05:15:02.078: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"119537"},"items":null}

  Jan  3 05:15:02.083: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"119537"},"items":null}

  Jan  3 05:15:02.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7215" for this suite. @ 01/03/24 05:15:02.112
• [4.995 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/03/24 05:15:02.123
  Jan  3 05:15:02.123: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/03/24 05:15:02.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:02.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:02.151
  Jan  3 05:15:02.159: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  E0103 05:15:02.737000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:03.737280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:04.737552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:05.737757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:06.737895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:07.739209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:08.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7482" for this suite. @ 01/03/24 05:15:08.611
• [6.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 01/03/24 05:15:08.623
  Jan  3 05:15:08.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubectl @ 01/03/24 05:15:08.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:08.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:08.666
  STEP: Starting the proxy @ 01/03/24 05:15:08.675
  Jan  3 05:15:08.675: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1728709697 --namespace=kubectl-2786 proxy --unix-socket=/tmp/kubectl-proxy-unix1164798990/test'
  E0103 05:15:08.739428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving proxy /api/ output @ 01/03/24 05:15:08.819
  Jan  3 05:15:08.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2786" for this suite. @ 01/03/24 05:15:08.83
• [0.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 01/03/24 05:15:08.843
  Jan  3 05:15:08.843: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename field-validation @ 01/03/24 05:15:08.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:08.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:08.873
  STEP: apply creating a deployment @ 01/03/24 05:15:08.881
  Jan  3 05:15:08.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2155" for this suite. @ 01/03/24 05:15:08.913
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/03/24 05:15:08.922
  Jan  3 05:15:08.922: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename init-container @ 01/03/24 05:15:08.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:08.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:08.954
  STEP: creating the pod @ 01/03/24 05:15:08.96
  Jan  3 05:15:08.960: INFO: PodSpec: initContainers in spec.initContainers
  E0103 05:15:09.739837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:10.740330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:11.740703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:12.741282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:13.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7182" for this suite. @ 01/03/24 05:15:13.63
• [4.720 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 01/03/24 05:15:13.643
  Jan  3 05:15:13.643: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename job @ 01/03/24 05:15:13.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:13.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:13.69
  STEP: Creating a job @ 01/03/24 05:15:13.698
  STEP: Ensuring job reaches completions @ 01/03/24 05:15:13.707
  E0103 05:15:13.742335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:14.742385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:15.743496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:16.743733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:17.744900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:18.745233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:19.746443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:20.746746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:21.747384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:22.748717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:23.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5944" for this suite. @ 01/03/24 05:15:23.724
• [10.090 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/03/24 05:15:23.733
  Jan  3 05:15:23.733: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename prestop @ 01/03/24 05:15:23.735
  E0103 05:15:23.749229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:23.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:23.763
  STEP: Creating server pod server in namespace prestop-9202 @ 01/03/24 05:15:23.772
  STEP: Waiting for pods to come up. @ 01/03/24 05:15:23.79
  E0103 05:15:24.750325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:25.750856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9202 @ 01/03/24 05:15:25.811
  E0103 05:15:26.751437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:27.751604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 01/03/24 05:15:27.839
  E0103 05:15:28.752667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:29.752934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:30.753643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:31.754472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:32.754886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:32.865: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/03/24 05:15:32.866
  Jan  3 05:15:32.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9202" for this suite. @ 01/03/24 05:15:32.9
• [9.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/03/24 05:15:32.91
  Jan  3 05:15:32.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 05:15:32.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:32.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:32.946
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 05:15:32.952
  E0103 05:15:33.755656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:34.756190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:35.756536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:36.757686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 05:15:36.999
  Jan  3 05:15:37.005: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-b55b3659-f7fe-43f5-836c-db6de6cc6b67 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 05:15:37.02
  Jan  3 05:15:37.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8638" for this suite. @ 01/03/24 05:15:37.053
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/03/24 05:15:37.063
  Jan  3 05:15:37.063: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 05:15:37.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:37.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:37.096
  STEP: creating the pod @ 01/03/24 05:15:37.103
  STEP: setting up watch @ 01/03/24 05:15:37.104
  STEP: submitting the pod to kubernetes @ 01/03/24 05:15:37.209
  STEP: verifying the pod is in kubernetes @ 01/03/24 05:15:37.223
  STEP: verifying pod creation was observed @ 01/03/24 05:15:37.229
  E0103 05:15:37.758824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:38.759762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:39.759400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:40.760251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/03/24 05:15:41.261
  STEP: verifying pod deletion was observed @ 01/03/24 05:15:41.274
  E0103 05:15:41.760601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:42.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2801" for this suite. @ 01/03/24 05:15:42.416
• [5.359 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/03/24 05:15:42.422
  Jan  3 05:15:42.422: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename projected @ 01/03/24 05:15:42.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:42.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:42.449
  STEP: Creating a pod to test downward API volume plugin @ 01/03/24 05:15:42.455
  E0103 05:15:42.761603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:43.761856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:44.762384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:45.762588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 05:15:46.488
  Jan  3 05:15:46.494: INFO: Trying to get logs from node 192.168.18.92 pod downwardapi-volume-b1701841-7c11-416a-81c3-772ac1be6090 container client-container: <nil>
  STEP: delete the pod @ 01/03/24 05:15:46.506
  Jan  3 05:15:46.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3062" for this suite. @ 01/03/24 05:15:46.537
• [4.123 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 01/03/24 05:15:46.545
  Jan  3 05:15:46.545: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 05:15:46.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:46.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:46.583
  STEP: Setting up server cert @ 01/03/24 05:15:46.622
  E0103 05:15:46.763679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 05:15:47.184
  STEP: Deploying the webhook pod @ 01/03/24 05:15:47.199
  STEP: Wait for the deployment to be ready @ 01/03/24 05:15:47.216
  Jan  3 05:15:47.232: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0103 05:15:47.764156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:48.764627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:49.251: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 5, 15, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 5, 15, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 5, 15, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 5, 15, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0103 05:15:49.764779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:50.765721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/03/24 05:15:51.259
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 05:15:51.274
  E0103 05:15:51.766908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:52.275: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/03/24 05:15:52.289
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/03/24 05:15:52.292
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/03/24 05:15:52.293
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/03/24 05:15:52.293
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/03/24 05:15:52.296
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/03/24 05:15:52.296
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/03/24 05:15:52.299
  Jan  3 05:15:52.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1649" for this suite. @ 01/03/24 05:15:52.37
  STEP: Destroying namespace "webhook-markers-1664" for this suite. @ 01/03/24 05:15:52.379
• [5.846 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 01/03/24 05:15:52.392
  Jan  3 05:15:52.392: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename webhook @ 01/03/24 05:15:52.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:52.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:52.428
  STEP: Setting up server cert @ 01/03/24 05:15:52.468
  E0103 05:15:52.767045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/03/24 05:15:52.892
  STEP: Deploying the webhook pod @ 01/03/24 05:15:52.901
  STEP: Wait for the deployment to be ready @ 01/03/24 05:15:52.915
  Jan  3 05:15:52.936: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0103 05:15:53.767899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:54.768868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:54.956: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 3, 5, 15, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 5, 15, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 3, 5, 15, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 3, 5, 15, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0103 05:15:55.769776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:56.770589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/03/24 05:15:56.965
  STEP: Verifying the service has paired with the endpoint @ 01/03/24 05:15:56.979
  E0103 05:15:57.771184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:15:57.979: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/03/24 05:15:57.993
  STEP: create a pod that should be updated by the webhook @ 01/03/24 05:15:58.029
  Jan  3 05:15:58.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4590" for this suite. @ 01/03/24 05:15:58.17
  STEP: Destroying namespace "webhook-markers-2162" for this suite. @ 01/03/24 05:15:58.183
• [5.799 seconds]
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/03/24 05:15:58.192
  Jan  3 05:15:58.192: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename downward-api @ 01/03/24 05:15:58.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:15:58.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:15:58.226
  STEP: Creating the pod @ 01/03/24 05:15:58.233
  E0103 05:15:58.771843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:15:59.772350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:00.773534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:16:00.806: INFO: Successfully updated pod "labelsupdateb021d047-5948-435b-bf96-7d61d64a4823"
  E0103 05:16:01.773910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:02.774560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:03.774971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:04.776094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:05.776922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:06.777776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:07.778879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:08.779647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:09.780339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:10.781162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:11.781450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:12.782834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:13.782918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:14.783441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:15.784361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:16.785304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:17.786392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:18.787323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:19.787426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:20.787742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:21.788467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:22.788853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:23.789059      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:24.789915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:25.790518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:26.791294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:27.791815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:28.792416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:29.792705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:30.793206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:31.796720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:32.796973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:33.797827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:34.797805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:35.798057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:36.798450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:37.798895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:38.799873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:39.801404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:40.802397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:41.803363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:42.803558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:43.804838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:44.805168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:45.805277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:46.805700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:47.805863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:48.806803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:49.807387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:50.808564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:51.808946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:52.809599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:53.809733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:54.810529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:55.810652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:56.811515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:57.812377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:58.812351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:16:59.813454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:00.814182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:01.814745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:02.815232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:03.815484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:04.816463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:05.817502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:06.818575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:07.819204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:08.819920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:09.820263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:10.820816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:11.822041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:12.822252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:13.823034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:14.823822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:15.824474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:16.824703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:17:17.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5203" for this suite. @ 01/03/24 05:17:17.776
• [79.594 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 01/03/24 05:17:17.786
  Jan  3 05:17:17.786: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename sched-pred @ 01/03/24 05:17:17.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:17:17.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:17:17.823
  E0103 05:17:17.825771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:17:17.831: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan  3 05:17:17.848: INFO: Waiting for terminating namespaces to be deleted...
  Jan  3 05:17:17.855: INFO: 
  Logging pods the apiserver thinks is on node 192.168.18.91 before test
  Jan  3 05:17:17.873: INFO: calico-kube-controllers-7ddc4f45bc-svj88 from kube-system started at 2023-12-24 15:52:08 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.873: INFO: 	Container calico-kube-controllers ready: true, restart count 3
  Jan  3 05:17:17.873: INFO: calico-node-drgqp from kube-system started at 2023-12-24 15:52:08 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.873: INFO: 	Container calico-node ready: true, restart count 4
  Jan  3 05:17:17.874: INFO: coredns-76f75df574-6qkhz from kube-system started at 2023-12-24 15:51:48 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.874: INFO: 	Container coredns ready: true, restart count 3
  Jan  3 05:17:17.874: INFO: etcd-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.874: INFO: 	Container etcd ready: true, restart count 4
  Jan  3 05:17:17.874: INFO: kube-apiserver-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.874: INFO: 	Container kube-apiserver ready: true, restart count 0
  Jan  3 05:17:17.874: INFO: kube-controller-manager-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.874: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Jan  3 05:17:17.874: INFO: kube-proxy-96snq from kube-system started at 2023-12-24 15:51:47 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.874: INFO: 	Container kube-proxy ready: true, restart count 4
  Jan  3 05:17:17.874: INFO: kube-scheduler-192.168.18.91 from kube-system started at 2024-01-03 03:19:01 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.875: INFO: 	Container kube-scheduler ready: true, restart count 0
  Jan  3 05:17:17.875: INFO: sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-l24d8 from sonobuoy started at 2024-01-03 03:26:22 +0000 UTC (2 container statuses recorded)
  Jan  3 05:17:17.875: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 05:17:17.875: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan  3 05:17:17.875: INFO: 
  Logging pods the apiserver thinks is on node 192.168.18.92 before test
  Jan  3 05:17:17.889: INFO: labelsupdateb021d047-5948-435b-bf96-7d61d64a4823 from downward-api-5203 started at 2024-01-03 05:15:58 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.889: INFO: 	Container client-container ready: true, restart count 0
  Jan  3 05:17:17.889: INFO: calico-node-cdwkb from kube-system started at 2023-12-24 15:53:04 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.889: INFO: 	Container calico-node ready: true, restart count 3
  Jan  3 05:17:17.889: INFO: kube-proxy-95zdw from kube-system started at 2023-12-24 15:53:04 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.889: INFO: 	Container kube-proxy ready: true, restart count 3
  Jan  3 05:17:17.889: INFO: sonobuoy from sonobuoy started at 2024-01-03 03:26:21 +0000 UTC (1 container statuses recorded)
  Jan  3 05:17:17.889: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan  3 05:17:17.889: INFO: sonobuoy-e2e-job-4b415b506d534fb8 from sonobuoy started at 2024-01-03 03:26:23 +0000 UTC (2 container statuses recorded)
  Jan  3 05:17:17.889: INFO: 	Container e2e ready: true, restart count 0
  Jan  3 05:17:17.889: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 05:17:17.889: INFO: sonobuoy-systemd-logs-daemon-set-55a4b0bc06b542e3-gswct from sonobuoy started at 2024-01-03 03:26:23 +0000 UTC (2 container statuses recorded)
  Jan  3 05:17:17.889: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan  3 05:17:17.889: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/03/24 05:17:17.89
  E0103 05:17:18.826149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:19.826813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:20.827664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:21.828448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/03/24 05:17:21.934
  STEP: Trying to apply a random label on the found node. @ 01/03/24 05:17:21.96
  STEP: verifying the node has the label kubernetes.io/e2e-412565e4-47ca-44e0-9e09-0601e7ae9ddf 42 @ 01/03/24 05:17:21.985
  STEP: Trying to relaunch the pod, now with labels. @ 01/03/24 05:17:22.004
  E0103 05:17:22.829527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:23.829927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-412565e4-47ca-44e0-9e09-0601e7ae9ddf off the node 192.168.18.92 @ 01/03/24 05:17:24.04
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-412565e4-47ca-44e0-9e09-0601e7ae9ddf @ 01/03/24 05:17:24.066
  Jan  3 05:17:24.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6363" for this suite. @ 01/03/24 05:17:24.083
• [6.307 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 01/03/24 05:17:24.093
  Jan  3 05:17:24.093: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/03/24 05:17:24.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:17:24.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:17:24.131
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/03/24 05:17:24.138
  Jan  3 05:17:24.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  E0103 05:17:24.831015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:25.832671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:17:25.967: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  E0103 05:17:26.832977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:27.833976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:28.835798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:29.836131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:30.837338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:31.838609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:32.839466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:17:33.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9992" for this suite. @ 01/03/24 05:17:33.028
• [8.944 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 01/03/24 05:17:33.038
  Jan  3 05:17:33.038: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename kubelet-test @ 01/03/24 05:17:33.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:17:33.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:17:33.071
  Jan  3 05:17:33.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4390" for this suite. @ 01/03/24 05:17:33.128
• [0.098 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 01/03/24 05:17:33.135
  Jan  3 05:17:33.135: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename dns @ 01/03/24 05:17:33.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:17:33.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:17:33.166
  STEP: Creating a test externalName service @ 01/03/24 05:17:33.171
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9001.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local; sleep 1; done
   @ 01/03/24 05:17:33.178
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9001.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local; sleep 1; done
   @ 01/03/24 05:17:33.178
  STEP: creating a pod to probe DNS @ 01/03/24 05:17:33.179
  STEP: submitting the pod to kubernetes @ 01/03/24 05:17:33.18
  E0103 05:17:33.840749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:34.841696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/03/24 05:17:35.21
  STEP: looking for the results for each expected name from probers @ 01/03/24 05:17:35.218
  Jan  3 05:17:35.239: INFO: DNS probes using dns-test-bce87990-02e6-4172-99fd-16a3adf739c0 succeeded

  STEP: changing the externalName to bar.example.com @ 01/03/24 05:17:35.239
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9001.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local; sleep 1; done
   @ 01/03/24 05:17:35.254
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9001.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local; sleep 1; done
   @ 01/03/24 05:17:35.254
  STEP: creating a second pod to probe DNS @ 01/03/24 05:17:35.254
  STEP: submitting the pod to kubernetes @ 01/03/24 05:17:35.254
  E0103 05:17:35.841970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:36.843267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/03/24 05:17:37.284
  STEP: looking for the results for each expected name from probers @ 01/03/24 05:17:37.292
  Jan  3 05:17:37.301: INFO: File wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:37.312: INFO: File jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:37.313: INFO: Lookups using dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 failed for: [wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local]

  Jan  3 05:17:37.327: INFO: Pod client logs for webserver: 
  Jan  3 05:17:37.348: INFO: Pod client logs for querier: 
  Jan  3 05:17:37.358: INFO: Pod client logs for jessie-querier: 
  E0103 05:17:37.843959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:38.844369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:39.845138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:40.845940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:41.846756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:17:42.303: INFO: File wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:42.310: INFO: File jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:42.311: INFO: Lookups using dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 failed for: [wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local]

  Jan  3 05:17:42.324: INFO: Pod client logs for webserver: 
  Jan  3 05:17:42.336: INFO: Pod client logs for querier: 
  Jan  3 05:17:42.349: INFO: Pod client logs for jessie-querier: 
  E0103 05:17:42.846992      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:43.848166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:44.848882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:45.849560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:46.850008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:17:47.308: INFO: File wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:47.318: INFO: File jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:47.318: INFO: Lookups using dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 failed for: [wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local]

  Jan  3 05:17:47.332: INFO: Pod client logs for webserver: 
  Jan  3 05:17:47.350: INFO: Pod client logs for querier: 
  Jan  3 05:17:47.361: INFO: Pod client logs for jessie-querier: 
  E0103 05:17:47.851277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:48.852031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:49.852785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:50.853079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:51.853572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:17:52.303: INFO: File wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:52.312: INFO: File jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:52.312: INFO: Lookups using dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 failed for: [wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local]

  Jan  3 05:17:52.326: INFO: Pod client logs for webserver: 
  Jan  3 05:17:52.339: INFO: Pod client logs for querier: 
  Jan  3 05:17:52.351: INFO: Pod client logs for jessie-querier: 
  E0103 05:17:52.853899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:53.855189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:54.855977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:55.856637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:56.857674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:17:57.302: INFO: File wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:57.310: INFO: File jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:17:57.310: INFO: Lookups using dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 failed for: [wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local]

  Jan  3 05:17:57.323: INFO: Pod client logs for webserver: 
  Jan  3 05:17:57.336: INFO: Pod client logs for querier: 
  Jan  3 05:17:57.347: INFO: Pod client logs for jessie-querier: 
  E0103 05:17:57.857702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:58.858207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:17:59.859040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:00.859859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:01.860460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:02.302: INFO: File wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:18:02.309: INFO: File jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local from pod  dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jan  3 05:18:02.310: INFO: Lookups using dns-9001/dns-test-2133d783-dd69-4078-865d-b87ddf905d51 failed for: [wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local]

  Jan  3 05:18:02.324: INFO: Pod client logs for webserver: 
  Jan  3 05:18:02.350: INFO: Pod client logs for querier: 
  Jan  3 05:18:02.368: INFO: Pod client logs for jessie-querier: 
  E0103 05:18:02.860769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:03.861418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:04.861714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:05.862489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:06.863184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:07.308: INFO: DNS probes using dns-test-2133d783-dd69-4078-865d-b87ddf905d51 succeeded

  STEP: changing the service to type=ClusterIP @ 01/03/24 05:18:07.309
  W0103 05:18:07.335838      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9001.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9001.svc.cluster.local; sleep 1; done
   @ 01/03/24 05:18:07.336
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9001.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9001.svc.cluster.local; sleep 1; done
   @ 01/03/24 05:18:07.336
  STEP: creating a third pod to probe DNS @ 01/03/24 05:18:07.336
  STEP: submitting the pod to kubernetes @ 01/03/24 05:18:07.343
  E0103 05:18:07.863417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:08.864150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:09.864334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:10.865529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/03/24 05:18:11.392
  STEP: looking for the results for each expected name from probers @ 01/03/24 05:18:11.399
  Jan  3 05:18:11.417: INFO: DNS probes using dns-test-a5215c94-c6fb-4287-9096-bbe7923f79c8 succeeded

  STEP: deleting the pod @ 01/03/24 05:18:11.417
  STEP: deleting the pod @ 01/03/24 05:18:11.456
  STEP: deleting the pod @ 01/03/24 05:18:11.485
  STEP: deleting the test externalName service @ 01/03/24 05:18:11.507
  Jan  3 05:18:11.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9001" for this suite. @ 01/03/24 05:18:11.562
• [38.446 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/03/24 05:18:11.582
  Jan  3 05:18:11.582: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 05:18:11.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:18:11.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:18:11.626
  STEP: Create a pod @ 01/03/24 05:18:11.631
  E0103 05:18:11.866201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:12.866414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 01/03/24 05:18:13.658
  Jan  3 05:18:13.683: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jan  3 05:18:13.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8841" for this suite. @ 01/03/24 05:18:13.699
• [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/03/24 05:18:13.71
  Jan  3 05:18:13.710: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename emptydir @ 01/03/24 05:18:13.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:18:13.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:18:13.755
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/03/24 05:18:13.764
  E0103 05:18:13.867562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:14.868514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:15.869434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:16.870209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 05:18:17.804
  Jan  3 05:18:17.809: INFO: Trying to get logs from node 192.168.18.92 pod pod-f107e8f2-4d46-46e3-8b19-ff0761050d4b container test-container: <nil>
  STEP: delete the pod @ 01/03/24 05:18:17.823
  Jan  3 05:18:17.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9283" for this suite. @ 01/03/24 05:18:17.86
• [4.158 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 01/03/24 05:18:17.869
  Jan  3 05:18:17.869: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  E0103 05:18:17.870861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename var-expansion @ 01/03/24 05:18:17.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:18:17.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:18:17.904
  E0103 05:18:18.871475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:19.872493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:19.942: INFO: Deleting pod "var-expansion-641578ee-c80a-492f-bad9-e6a934af729d" in namespace "var-expansion-8442"
  Jan  3 05:18:19.954: INFO: Wait up to 5m0s for pod "var-expansion-641578ee-c80a-492f-bad9-e6a934af729d" to be fully deleted
  E0103 05:18:20.872956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:21.873887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:22.873947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:23.874257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:23.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8442" for this suite. @ 01/03/24 05:18:23.986
• [6.127 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 01/03/24 05:18:23.996
  Jan  3 05:18:23.996: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename statefulset @ 01/03/24 05:18:23.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:18:24.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:18:24.035
  STEP: Creating service test in namespace statefulset-7234 @ 01/03/24 05:18:24.042
  STEP: Creating statefulset ss in namespace statefulset-7234 @ 01/03/24 05:18:24.05
  Jan  3 05:18:24.070: INFO: Found 0 stateful pods, waiting for 1
  E0103 05:18:24.874653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:25.875582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:26.875849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:27.876432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:28.877136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:29.878149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:30.879052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:31.879832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:32.880333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:33.881168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:34.077: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/03/24 05:18:34.089
  STEP: updating a scale subresource @ 01/03/24 05:18:34.096
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/03/24 05:18:34.111
  STEP: Patch a scale subresource @ 01/03/24 05:18:34.117
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/03/24 05:18:34.128
  Jan  3 05:18:34.142: INFO: Deleting all statefulset in ns statefulset-7234
  Jan  3 05:18:34.148: INFO: Scaling statefulset ss to 0
  E0103 05:18:34.881489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:35.882653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:36.882667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:37.883450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:38.883584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:39.884444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:40.885520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:41.886733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:42.887431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:43.887378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:44.209: INFO: Waiting for statefulset status.replicas updated to 0
  Jan  3 05:18:44.214: INFO: Deleting statefulset ss
  Jan  3 05:18:44.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7234" for this suite. @ 01/03/24 05:18:44.25
• [20.263 seconds]
------------------------------
SS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/03/24 05:18:44.259
  Jan  3 05:18:44.259: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename svc-latency @ 01/03/24 05:18:44.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:18:44.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:18:44.304
  Jan  3 05:18:44.312: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-4306 @ 01/03/24 05:18:44.314
  I0103 05:18:44.326930      20 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4306, replica count: 1
  E0103 05:18:44.888527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0103 05:18:45.379176      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0103 05:18:45.889081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0103 05:18:46.380542      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0103 05:18:46.890244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0103 05:18:47.382268      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan  3 05:18:47.500: INFO: Created: latency-svc-f9vg9
  Jan  3 05:18:47.509: INFO: Got endpoints: latency-svc-f9vg9 [26.419526ms]
  Jan  3 05:18:47.532: INFO: Created: latency-svc-tbbm2
  Jan  3 05:18:47.540: INFO: Got endpoints: latency-svc-tbbm2 [29.808216ms]
  Jan  3 05:18:47.547: INFO: Created: latency-svc-dl7cx
  Jan  3 05:18:47.553: INFO: Got endpoints: latency-svc-dl7cx [43.066035ms]
  Jan  3 05:18:47.559: INFO: Created: latency-svc-j268w
  Jan  3 05:18:47.571: INFO: Got endpoints: latency-svc-j268w [60.089588ms]
  Jan  3 05:18:47.572: INFO: Created: latency-svc-fs99w
  Jan  3 05:18:47.577: INFO: Created: latency-svc-n5fzc
  Jan  3 05:18:47.590: INFO: Created: latency-svc-5lvxk
  Jan  3 05:18:47.590: INFO: Got endpoints: latency-svc-n5fzc [79.584352ms]
  Jan  3 05:18:47.591: INFO: Got endpoints: latency-svc-fs99w [79.836358ms]
  Jan  3 05:18:47.599: INFO: Created: latency-svc-w9mm6
  Jan  3 05:18:47.599: INFO: Got endpoints: latency-svc-5lvxk [88.671455ms]
  Jan  3 05:18:47.607: INFO: Got endpoints: latency-svc-w9mm6 [95.592531ms]
  Jan  3 05:18:47.612: INFO: Created: latency-svc-lqw4z
  Jan  3 05:18:47.620: INFO: Created: latency-svc-xbpzs
  Jan  3 05:18:47.624: INFO: Got endpoints: latency-svc-lqw4z [112.949206ms]
  Jan  3 05:18:47.630: INFO: Got endpoints: latency-svc-xbpzs [119.108957ms]
  Jan  3 05:18:47.632: INFO: Created: latency-svc-vd56l
  Jan  3 05:18:47.642: INFO: Got endpoints: latency-svc-vd56l [131.348841ms]
  Jan  3 05:18:47.644: INFO: Created: latency-svc-qgzqx
  Jan  3 05:18:47.652: INFO: Got endpoints: latency-svc-qgzqx [141.088866ms]
  Jan  3 05:18:47.656: INFO: Created: latency-svc-2hjdp
  Jan  3 05:18:47.662: INFO: Created: latency-svc-djt95
  Jan  3 05:18:47.665: INFO: Got endpoints: latency-svc-2hjdp [153.192109ms]
  Jan  3 05:18:47.673: INFO: Created: latency-svc-4gf8d
  Jan  3 05:18:47.680: INFO: Got endpoints: latency-svc-4gf8d [168.47384ms]
  Jan  3 05:18:47.680: INFO: Created: latency-svc-dd4w5
  Jan  3 05:18:47.680: INFO: Got endpoints: latency-svc-djt95 [168.56246ms]
  Jan  3 05:18:47.689: INFO: Got endpoints: latency-svc-dd4w5 [177.279411ms]
  Jan  3 05:18:47.690: INFO: Created: latency-svc-n7hkz
  Jan  3 05:18:47.696: INFO: Got endpoints: latency-svc-n7hkz [156.540265ms]
  Jan  3 05:18:47.701: INFO: Created: latency-svc-gmp4l
  Jan  3 05:18:47.710: INFO: Got endpoints: latency-svc-gmp4l [156.587985ms]
  Jan  3 05:18:47.785: INFO: Created: latency-svc-n4wx5
  Jan  3 05:18:47.802: INFO: Got endpoints: latency-svc-n4wx5 [171.50365ms]
  Jan  3 05:18:47.803: INFO: Created: latency-svc-cr8z9
  Jan  3 05:18:47.803: INFO: Created: latency-svc-mvj2g
  Jan  3 05:18:47.803: INFO: Created: latency-svc-96vpb
  Jan  3 05:18:47.804: INFO: Created: latency-svc-5c2nr
  Jan  3 05:18:47.804: INFO: Created: latency-svc-hgch6
  Jan  3 05:18:47.804: INFO: Got endpoints: latency-svc-hgch6 [161.811337ms]
  Jan  3 05:18:47.804: INFO: Created: latency-svc-ppd92
  Jan  3 05:18:47.805: INFO: Created: latency-svc-v5kcr
  Jan  3 05:18:47.805: INFO: Created: latency-svc-qd5v6
  Jan  3 05:18:47.806: INFO: Created: latency-svc-s27jq
  Jan  3 05:18:47.806: INFO: Created: latency-svc-tfjtd
  Jan  3 05:18:47.806: INFO: Created: latency-svc-drpss
  Jan  3 05:18:47.806: INFO: Created: latency-svc-ds5dh
  Jan  3 05:18:47.817: INFO: Created: latency-svc-ntxl8
  Jan  3 05:18:47.817: INFO: Created: latency-svc-bswkc
  Jan  3 05:18:47.819: INFO: Got endpoints: latency-svc-tfjtd [219.049263ms]
  Jan  3 05:18:47.824: INFO: Got endpoints: latency-svc-v5kcr [200.103076ms]
  Jan  3 05:18:47.825: INFO: Got endpoints: latency-svc-96vpb [115.113371ms]
  Jan  3 05:18:47.839: INFO: Got endpoints: latency-svc-ppd92 [232.324403ms]
  Jan  3 05:18:47.839: INFO: Got endpoints: latency-svc-mvj2g [159.411051ms]
  Jan  3 05:18:47.842: INFO: Got endpoints: latency-svc-qd5v6 [251.719092ms]
  Jan  3 05:18:47.843: INFO: Got endpoints: latency-svc-ntxl8 [153.933923ms]
  Jan  3 05:18:47.844: INFO: Got endpoints: latency-svc-s27jq [191.850734ms]
  Jan  3 05:18:47.851: INFO: Got endpoints: latency-svc-ds5dh [170.92402ms]
  Jan  3 05:18:47.851: INFO: Created: latency-svc-zrsgf
  Jan  3 05:18:47.860: INFO: Got endpoints: latency-svc-drpss [288.741233ms]
  Jan  3 05:18:47.865: INFO: Got endpoints: latency-svc-5c2nr [200.180627ms]
  Jan  3 05:18:47.865: INFO: Got endpoints: latency-svc-bswkc [168.559772ms]
  Jan  3 05:18:47.867: INFO: Got endpoints: latency-svc-cr8z9 [276.283112ms]
  Jan  3 05:18:47.869: INFO: Created: latency-svc-thf2f
  Jan  3 05:18:47.873: INFO: Got endpoints: latency-svc-zrsgf [70.891998ms]
  Jan  3 05:18:47.883: INFO: Got endpoints: latency-svc-thf2f [78.793952ms]
  E0103 05:18:47.890928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:47.940: INFO: Created: latency-svc-vmtwf
  Jan  3 05:18:47.945: INFO: Created: latency-svc-lsbkc
  Jan  3 05:18:47.946: INFO: Created: latency-svc-dhw7n
  Jan  3 05:18:47.946: INFO: Created: latency-svc-jr6nl
  Jan  3 05:18:47.946: INFO: Created: latency-svc-jtb9n
  Jan  3 05:18:47.953: INFO: Created: latency-svc-hstx7
  Jan  3 05:18:47.954: INFO: Created: latency-svc-8q9n6
  Jan  3 05:18:47.954: INFO: Got endpoints: latency-svc-jr6nl [134.909642ms]
  Jan  3 05:18:47.954: INFO: Got endpoints: latency-svc-jtb9n [109.582988ms]
  Jan  3 05:18:47.954: INFO: Got endpoints: latency-svc-vmtwf [70.603956ms]
  Jan  3 05:18:47.954: INFO: Created: latency-svc-7dw9b
  Jan  3 05:18:47.956: INFO: Created: latency-svc-jrwfk
  Jan  3 05:18:47.956: INFO: Created: latency-svc-zbc5n
  Jan  3 05:18:47.957: INFO: Created: latency-svc-6dgkc
  Jan  3 05:18:47.957: INFO: Created: latency-svc-xzcd9
  Jan  3 05:18:47.957: INFO: Created: latency-svc-5c9xn
  Jan  3 05:18:47.959: INFO: Created: latency-svc-f2ggw
  Jan  3 05:18:47.959: INFO: Created: latency-svc-tn27w
  Jan  3 05:18:47.971: INFO: Created: latency-svc-v8f6t
  Jan  3 05:18:47.972: INFO: Got endpoints: latency-svc-lsbkc [132.969606ms]
  Jan  3 05:18:47.974: INFO: Created: latency-svc-p8rpn
  Jan  3 05:18:47.985: INFO: Created: latency-svc-tb799
  Jan  3 05:18:47.987: INFO: Created: latency-svc-8gndc
  Jan  3 05:18:48.005: INFO: Got endpoints: latency-svc-jrwfk [132.446571ms]
  Jan  3 05:18:48.017: INFO: Created: latency-svc-tgttc
  Jan  3 05:18:48.057: INFO: Got endpoints: latency-svc-xzcd9 [232.155314ms]
  Jan  3 05:18:48.068: INFO: Created: latency-svc-pq7w5
  Jan  3 05:18:48.107: INFO: Got endpoints: latency-svc-zbc5n [264.112546ms]
  Jan  3 05:18:48.117: INFO: Created: latency-svc-shfq8
  Jan  3 05:18:48.156: INFO: Got endpoints: latency-svc-5c9xn [331.857056ms]
  Jan  3 05:18:48.167: INFO: Created: latency-svc-hszc6
  Jan  3 05:18:48.209: INFO: Got endpoints: latency-svc-hstx7 [341.34951ms]
  Jan  3 05:18:48.220: INFO: Created: latency-svc-z9ct4
  Jan  3 05:18:48.257: INFO: Got endpoints: latency-svc-f2ggw [397.166906ms]
  Jan  3 05:18:48.268: INFO: Created: latency-svc-9q6t8
  Jan  3 05:18:48.311: INFO: Got endpoints: latency-svc-6dgkc [445.809928ms]
  Jan  3 05:18:48.323: INFO: Created: latency-svc-cpq2b
  Jan  3 05:18:48.359: INFO: Got endpoints: latency-svc-tn27w [494.095959ms]
  Jan  3 05:18:48.371: INFO: Created: latency-svc-422wf
  Jan  3 05:18:48.408: INFO: Got endpoints: latency-svc-8q9n6 [565.462195ms]
  Jan  3 05:18:48.419: INFO: Created: latency-svc-kt2b2
  Jan  3 05:18:48.459: INFO: Got endpoints: latency-svc-7dw9b [619.434231ms]
  Jan  3 05:18:48.477: INFO: Created: latency-svc-pd678
  Jan  3 05:18:48.510: INFO: Got endpoints: latency-svc-dhw7n [659.301734ms]
  Jan  3 05:18:48.529: INFO: Created: latency-svc-hvkb2
  Jan  3 05:18:48.558: INFO: Got endpoints: latency-svc-v8f6t [604.50384ms]
  Jan  3 05:18:48.581: INFO: Created: latency-svc-887k5
  Jan  3 05:18:48.608: INFO: Got endpoints: latency-svc-p8rpn [654.530045ms]
  Jan  3 05:18:48.621: INFO: Created: latency-svc-fhc7w
  Jan  3 05:18:48.663: INFO: Got endpoints: latency-svc-tb799 [708.502686ms]
  Jan  3 05:18:48.681: INFO: Created: latency-svc-vpd52
  Jan  3 05:18:48.710: INFO: Got endpoints: latency-svc-8gndc [737.829192ms]
  Jan  3 05:18:48.723: INFO: Created: latency-svc-lqbwl
  Jan  3 05:18:48.764: INFO: Got endpoints: latency-svc-tgttc [758.670204ms]
  Jan  3 05:18:48.790: INFO: Created: latency-svc-5vpqw
  Jan  3 05:18:48.809: INFO: Got endpoints: latency-svc-pq7w5 [751.415289ms]
  Jan  3 05:18:48.823: INFO: Created: latency-svc-fm676
  Jan  3 05:18:48.860: INFO: Got endpoints: latency-svc-shfq8 [753.060307ms]
  Jan  3 05:18:48.876: INFO: Created: latency-svc-xrjs8
  E0103 05:18:48.891058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:48.909: INFO: Got endpoints: latency-svc-hszc6 [753.022197ms]
  Jan  3 05:18:48.923: INFO: Created: latency-svc-pfg6s
  Jan  3 05:18:48.960: INFO: Got endpoints: latency-svc-z9ct4 [751.245924ms]
  Jan  3 05:18:48.975: INFO: Created: latency-svc-znfxf
  Jan  3 05:18:49.008: INFO: Got endpoints: latency-svc-9q6t8 [751.39802ms]
  Jan  3 05:18:49.022: INFO: Created: latency-svc-xv5nq
  Jan  3 05:18:49.058: INFO: Got endpoints: latency-svc-cpq2b [746.731563ms]
  Jan  3 05:18:49.073: INFO: Created: latency-svc-z884v
  Jan  3 05:18:49.111: INFO: Got endpoints: latency-svc-422wf [752.078009ms]
  Jan  3 05:18:49.134: INFO: Created: latency-svc-szwdh
  Jan  3 05:18:49.161: INFO: Got endpoints: latency-svc-kt2b2 [753.29261ms]
  Jan  3 05:18:49.180: INFO: Created: latency-svc-tznbr
  Jan  3 05:18:49.208: INFO: Got endpoints: latency-svc-pd678 [749.012886ms]
  Jan  3 05:18:49.225: INFO: Created: latency-svc-j5plj
  Jan  3 05:18:49.259: INFO: Got endpoints: latency-svc-hvkb2 [748.814812ms]
  Jan  3 05:18:49.278: INFO: Created: latency-svc-qnz7c
  Jan  3 05:18:49.309: INFO: Got endpoints: latency-svc-887k5 [750.827133ms]
  Jan  3 05:18:49.324: INFO: Created: latency-svc-fnxvr
  Jan  3 05:18:49.366: INFO: Got endpoints: latency-svc-fhc7w [757.635902ms]
  Jan  3 05:18:49.380: INFO: Created: latency-svc-5mjcf
  Jan  3 05:18:49.408: INFO: Got endpoints: latency-svc-vpd52 [745.82037ms]
  Jan  3 05:18:49.423: INFO: Created: latency-svc-995ms
  Jan  3 05:18:49.459: INFO: Got endpoints: latency-svc-lqbwl [748.993828ms]
  Jan  3 05:18:49.481: INFO: Created: latency-svc-z8gnl
  Jan  3 05:18:49.508: INFO: Got endpoints: latency-svc-5vpqw [743.515423ms]
  Jan  3 05:18:49.523: INFO: Created: latency-svc-q2fb6
  Jan  3 05:18:49.558: INFO: Got endpoints: latency-svc-fm676 [748.744899ms]
  Jan  3 05:18:49.577: INFO: Created: latency-svc-4wbcv
  Jan  3 05:18:49.606: INFO: Got endpoints: latency-svc-xrjs8 [746.022711ms]
  Jan  3 05:18:49.620: INFO: Created: latency-svc-6sw2s
  Jan  3 05:18:49.658: INFO: Got endpoints: latency-svc-pfg6s [748.747158ms]
  Jan  3 05:18:49.669: INFO: Created: latency-svc-pd7qk
  Jan  3 05:18:49.709: INFO: Got endpoints: latency-svc-znfxf [749.16754ms]
  Jan  3 05:18:49.722: INFO: Created: latency-svc-mlb6w
  Jan  3 05:18:49.758: INFO: Got endpoints: latency-svc-xv5nq [749.642259ms]
  Jan  3 05:18:49.772: INFO: Created: latency-svc-md6cq
  Jan  3 05:18:49.811: INFO: Got endpoints: latency-svc-z884v [752.523134ms]
  Jan  3 05:18:49.823: INFO: Created: latency-svc-vnkzb
  Jan  3 05:18:49.857: INFO: Got endpoints: latency-svc-szwdh [745.732726ms]
  Jan  3 05:18:49.871: INFO: Created: latency-svc-8bdp7
  E0103 05:18:49.891217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:49.908: INFO: Got endpoints: latency-svc-tznbr [746.632931ms]
  Jan  3 05:18:49.923: INFO: Created: latency-svc-4twxr
  Jan  3 05:18:49.957: INFO: Got endpoints: latency-svc-j5plj [749.289906ms]
  Jan  3 05:18:49.972: INFO: Created: latency-svc-92pcp
  Jan  3 05:18:50.009: INFO: Got endpoints: latency-svc-qnz7c [749.429369ms]
  Jan  3 05:18:50.021: INFO: Created: latency-svc-rhv85
  Jan  3 05:18:50.112: INFO: Got endpoints: latency-svc-fnxvr [802.890569ms]
  Jan  3 05:18:50.127: INFO: Created: latency-svc-gbf4z
  Jan  3 05:18:50.161: INFO: Got endpoints: latency-svc-5mjcf [794.828342ms]
  Jan  3 05:18:50.179: INFO: Created: latency-svc-4slvd
  Jan  3 05:18:50.208: INFO: Got endpoints: latency-svc-995ms [798.52925ms]
  Jan  3 05:18:50.220: INFO: Created: latency-svc-2q2xv
  Jan  3 05:18:50.260: INFO: Got endpoints: latency-svc-z8gnl [800.44622ms]
  Jan  3 05:18:50.271: INFO: Created: latency-svc-bzp72
  Jan  3 05:18:50.313: INFO: Got endpoints: latency-svc-q2fb6 [805.31384ms]
  Jan  3 05:18:50.327: INFO: Created: latency-svc-pfhdk
  Jan  3 05:18:50.362: INFO: Got endpoints: latency-svc-4wbcv [804.337159ms]
  Jan  3 05:18:50.379: INFO: Created: latency-svc-f84mn
  Jan  3 05:18:50.412: INFO: Got endpoints: latency-svc-6sw2s [805.460967ms]
  Jan  3 05:18:50.425: INFO: Created: latency-svc-wb5kq
  Jan  3 05:18:50.461: INFO: Got endpoints: latency-svc-pd7qk [802.767887ms]
  Jan  3 05:18:50.475: INFO: Created: latency-svc-nj7tl
  Jan  3 05:18:50.511: INFO: Got endpoints: latency-svc-mlb6w [801.748387ms]
  Jan  3 05:18:50.527: INFO: Created: latency-svc-lw7pb
  Jan  3 05:18:50.560: INFO: Got endpoints: latency-svc-md6cq [801.458042ms]
  Jan  3 05:18:50.577: INFO: Created: latency-svc-7gw9p
  Jan  3 05:18:50.610: INFO: Got endpoints: latency-svc-vnkzb [798.831178ms]
  Jan  3 05:18:50.623: INFO: Created: latency-svc-lgxj8
  Jan  3 05:18:50.661: INFO: Got endpoints: latency-svc-8bdp7 [803.258688ms]
  Jan  3 05:18:50.677: INFO: Created: latency-svc-frzhj
  Jan  3 05:18:50.710: INFO: Got endpoints: latency-svc-4twxr [802.061018ms]
  Jan  3 05:18:50.725: INFO: Created: latency-svc-nfz2q
  Jan  3 05:18:50.759: INFO: Got endpoints: latency-svc-92pcp [801.254688ms]
  Jan  3 05:18:50.772: INFO: Created: latency-svc-44rdj
  Jan  3 05:18:50.808: INFO: Got endpoints: latency-svc-rhv85 [798.587514ms]
  Jan  3 05:18:50.820: INFO: Created: latency-svc-zzjn5
  Jan  3 05:18:50.859: INFO: Got endpoints: latency-svc-gbf4z [746.982472ms]
  Jan  3 05:18:50.883: INFO: Created: latency-svc-8trrh
  E0103 05:18:50.892134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:50.907: INFO: Got endpoints: latency-svc-4slvd [746.141653ms]
  Jan  3 05:18:50.924: INFO: Created: latency-svc-b9s7v
  Jan  3 05:18:50.958: INFO: Got endpoints: latency-svc-2q2xv [749.734309ms]
  Jan  3 05:18:50.970: INFO: Created: latency-svc-h4jdm
  Jan  3 05:18:51.009: INFO: Got endpoints: latency-svc-bzp72 [748.768026ms]
  Jan  3 05:18:51.022: INFO: Created: latency-svc-ssmmz
  Jan  3 05:18:51.057: INFO: Got endpoints: latency-svc-pfhdk [744.114245ms]
  Jan  3 05:18:51.070: INFO: Created: latency-svc-2gdtv
  Jan  3 05:18:51.117: INFO: Got endpoints: latency-svc-f84mn [754.463507ms]
  Jan  3 05:18:51.131: INFO: Created: latency-svc-wqgw9
  Jan  3 05:18:51.159: INFO: Got endpoints: latency-svc-wb5kq [747.019286ms]
  Jan  3 05:18:51.173: INFO: Created: latency-svc-bmqgx
  Jan  3 05:18:51.208: INFO: Got endpoints: latency-svc-nj7tl [747.170337ms]
  Jan  3 05:18:51.222: INFO: Created: latency-svc-2c5h7
  Jan  3 05:18:51.260: INFO: Got endpoints: latency-svc-lw7pb [748.868544ms]
  Jan  3 05:18:51.280: INFO: Created: latency-svc-kv7zs
  Jan  3 05:18:51.311: INFO: Got endpoints: latency-svc-7gw9p [750.60928ms]
  Jan  3 05:18:51.327: INFO: Created: latency-svc-8dknr
  Jan  3 05:18:51.359: INFO: Got endpoints: latency-svc-lgxj8 [748.49809ms]
  Jan  3 05:18:51.372: INFO: Created: latency-svc-h7zfr
  Jan  3 05:18:51.408: INFO: Got endpoints: latency-svc-frzhj [746.810059ms]
  Jan  3 05:18:51.424: INFO: Created: latency-svc-75wc9
  Jan  3 05:18:51.462: INFO: Got endpoints: latency-svc-nfz2q [751.492678ms]
  Jan  3 05:18:51.485: INFO: Created: latency-svc-k5tw7
  Jan  3 05:18:51.509: INFO: Got endpoints: latency-svc-44rdj [749.977935ms]
  Jan  3 05:18:51.529: INFO: Created: latency-svc-qgt5k
  Jan  3 05:18:51.561: INFO: Got endpoints: latency-svc-zzjn5 [753.46864ms]
  Jan  3 05:18:51.577: INFO: Created: latency-svc-6gct7
  Jan  3 05:18:51.609: INFO: Got endpoints: latency-svc-8trrh [749.458815ms]
  Jan  3 05:18:51.622: INFO: Created: latency-svc-ksg9s
  Jan  3 05:18:51.658: INFO: Got endpoints: latency-svc-b9s7v [750.256419ms]
  Jan  3 05:18:51.672: INFO: Created: latency-svc-vqnpj
  Jan  3 05:18:51.710: INFO: Got endpoints: latency-svc-h4jdm [752.257712ms]
  Jan  3 05:18:51.733: INFO: Created: latency-svc-j824w
  Jan  3 05:18:51.758: INFO: Got endpoints: latency-svc-ssmmz [749.06855ms]
  Jan  3 05:18:51.770: INFO: Created: latency-svc-9dlpc
  Jan  3 05:18:51.813: INFO: Got endpoints: latency-svc-2gdtv [755.770919ms]
  Jan  3 05:18:51.826: INFO: Created: latency-svc-th8nw
  Jan  3 05:18:51.858: INFO: Got endpoints: latency-svc-wqgw9 [741.245706ms]
  Jan  3 05:18:51.872: INFO: Created: latency-svc-dl7sk
  E0103 05:18:51.893257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:51.911: INFO: Got endpoints: latency-svc-bmqgx [751.405224ms]
  Jan  3 05:18:51.927: INFO: Created: latency-svc-k4nrx
  Jan  3 05:18:51.959: INFO: Got endpoints: latency-svc-2c5h7 [749.771869ms]
  Jan  3 05:18:51.971: INFO: Created: latency-svc-r7wv7
  Jan  3 05:18:52.011: INFO: Got endpoints: latency-svc-kv7zs [750.195148ms]
  Jan  3 05:18:52.029: INFO: Created: latency-svc-7wpf4
  Jan  3 05:18:52.060: INFO: Got endpoints: latency-svc-8dknr [748.781818ms]
  Jan  3 05:18:52.073: INFO: Created: latency-svc-bs4lj
  Jan  3 05:18:52.112: INFO: Got endpoints: latency-svc-h7zfr [753.496679ms]
  Jan  3 05:18:52.128: INFO: Created: latency-svc-pxnjg
  Jan  3 05:18:52.160: INFO: Got endpoints: latency-svc-75wc9 [751.844133ms]
  Jan  3 05:18:52.173: INFO: Created: latency-svc-d9p2d
  Jan  3 05:18:52.208: INFO: Got endpoints: latency-svc-k5tw7 [745.719118ms]
  Jan  3 05:18:52.223: INFO: Created: latency-svc-gl4tg
  Jan  3 05:18:52.259: INFO: Got endpoints: latency-svc-qgt5k [749.745119ms]
  Jan  3 05:18:52.275: INFO: Created: latency-svc-jv79m
  Jan  3 05:18:52.309: INFO: Got endpoints: latency-svc-6gct7 [747.471514ms]
  Jan  3 05:18:52.326: INFO: Created: latency-svc-v9g2n
  Jan  3 05:18:52.358: INFO: Got endpoints: latency-svc-ksg9s [748.97632ms]
  Jan  3 05:18:52.380: INFO: Created: latency-svc-24mxk
  Jan  3 05:18:52.409: INFO: Got endpoints: latency-svc-vqnpj [751.039824ms]
  Jan  3 05:18:52.429: INFO: Created: latency-svc-psd87
  Jan  3 05:18:52.458: INFO: Got endpoints: latency-svc-j824w [747.86702ms]
  Jan  3 05:18:52.475: INFO: Created: latency-svc-bqdgw
  Jan  3 05:18:52.510: INFO: Got endpoints: latency-svc-9dlpc [751.865563ms]
  Jan  3 05:18:52.531: INFO: Created: latency-svc-6g6lp
  Jan  3 05:18:52.566: INFO: Got endpoints: latency-svc-th8nw [752.71649ms]
  Jan  3 05:18:52.583: INFO: Created: latency-svc-4qw85
  Jan  3 05:18:52.611: INFO: Got endpoints: latency-svc-dl7sk [752.705603ms]
  Jan  3 05:18:52.626: INFO: Created: latency-svc-cvk5d
  Jan  3 05:18:52.659: INFO: Got endpoints: latency-svc-k4nrx [748.014782ms]
  Jan  3 05:18:52.673: INFO: Created: latency-svc-dvbfr
  Jan  3 05:18:52.708: INFO: Got endpoints: latency-svc-r7wv7 [749.134118ms]
  Jan  3 05:18:52.724: INFO: Created: latency-svc-xm9rh
  Jan  3 05:18:52.762: INFO: Got endpoints: latency-svc-7wpf4 [750.601817ms]
  Jan  3 05:18:52.780: INFO: Created: latency-svc-z64bd
  Jan  3 05:18:52.811: INFO: Got endpoints: latency-svc-bs4lj [750.383383ms]
  Jan  3 05:18:52.823: INFO: Created: latency-svc-gdkfd
  Jan  3 05:18:52.859: INFO: Got endpoints: latency-svc-pxnjg [747.170356ms]
  Jan  3 05:18:52.873: INFO: Created: latency-svc-pmb7m
  E0103 05:18:52.893755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:52.907: INFO: Got endpoints: latency-svc-d9p2d [747.431202ms]
  Jan  3 05:18:52.923: INFO: Created: latency-svc-n7dxm
  Jan  3 05:18:52.959: INFO: Got endpoints: latency-svc-gl4tg [750.739325ms]
  Jan  3 05:18:52.973: INFO: Created: latency-svc-s2h2m
  Jan  3 05:18:53.009: INFO: Got endpoints: latency-svc-jv79m [749.8037ms]
  Jan  3 05:18:53.033: INFO: Created: latency-svc-wh9m9
  Jan  3 05:18:53.058: INFO: Got endpoints: latency-svc-v9g2n [749.167388ms]
  Jan  3 05:18:53.073: INFO: Created: latency-svc-846k5
  Jan  3 05:18:53.112: INFO: Got endpoints: latency-svc-24mxk [753.636671ms]
  Jan  3 05:18:53.128: INFO: Created: latency-svc-tsvq6
  Jan  3 05:18:53.158: INFO: Got endpoints: latency-svc-psd87 [749.557571ms]
  Jan  3 05:18:53.172: INFO: Created: latency-svc-rpkxn
  Jan  3 05:18:53.226: INFO: Got endpoints: latency-svc-bqdgw [767.963601ms]
  Jan  3 05:18:53.240: INFO: Created: latency-svc-8m2bx
  Jan  3 05:18:53.257: INFO: Got endpoints: latency-svc-6g6lp [747.148633ms]
  Jan  3 05:18:53.270: INFO: Created: latency-svc-fxmfl
  Jan  3 05:18:53.332: INFO: Got endpoints: latency-svc-4qw85 [765.718191ms]
  Jan  3 05:18:53.344: INFO: Created: latency-svc-fndfd
  Jan  3 05:18:53.358: INFO: Got endpoints: latency-svc-cvk5d [746.1782ms]
  Jan  3 05:18:53.372: INFO: Created: latency-svc-lhtjw
  Jan  3 05:18:53.409: INFO: Got endpoints: latency-svc-dvbfr [749.903785ms]
  Jan  3 05:18:53.423: INFO: Created: latency-svc-vnj4q
  Jan  3 05:18:53.458: INFO: Got endpoints: latency-svc-xm9rh [750.03919ms]
  Jan  3 05:18:53.471: INFO: Created: latency-svc-jgl75
  Jan  3 05:18:53.508: INFO: Got endpoints: latency-svc-z64bd [746.482302ms]
  Jan  3 05:18:53.528: INFO: Created: latency-svc-4bgrc
  Jan  3 05:18:53.566: INFO: Got endpoints: latency-svc-gdkfd [755.343921ms]
  Jan  3 05:18:53.581: INFO: Created: latency-svc-5s8q8
  Jan  3 05:18:53.611: INFO: Got endpoints: latency-svc-pmb7m [751.711685ms]
  Jan  3 05:18:53.624: INFO: Created: latency-svc-hbnkx
  Jan  3 05:18:53.659: INFO: Got endpoints: latency-svc-n7dxm [751.533876ms]
  Jan  3 05:18:53.672: INFO: Created: latency-svc-d5ngf
  Jan  3 05:18:53.708: INFO: Got endpoints: latency-svc-s2h2m [749.551735ms]
  Jan  3 05:18:53.722: INFO: Created: latency-svc-sd9g7
  Jan  3 05:18:53.759: INFO: Got endpoints: latency-svc-wh9m9 [750.09839ms]
  Jan  3 05:18:53.777: INFO: Created: latency-svc-ql7vs
  Jan  3 05:18:53.810: INFO: Got endpoints: latency-svc-846k5 [751.32364ms]
  Jan  3 05:18:53.874: INFO: Created: latency-svc-mfst9
  Jan  3 05:18:53.879: INFO: Got endpoints: latency-svc-tsvq6 [767.315234ms]
  E0103 05:18:53.894390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:53.910: INFO: Created: latency-svc-sf99b
  Jan  3 05:18:53.920: INFO: Got endpoints: latency-svc-rpkxn [761.859198ms]
  Jan  3 05:18:53.944: INFO: Created: latency-svc-4gz9d
  Jan  3 05:18:53.957: INFO: Got endpoints: latency-svc-8m2bx [730.232093ms]
  Jan  3 05:18:53.968: INFO: Created: latency-svc-94bhm
  Jan  3 05:18:54.006: INFO: Got endpoints: latency-svc-fxmfl [748.345446ms]
  Jan  3 05:18:54.020: INFO: Created: latency-svc-7zq8d
  Jan  3 05:18:54.058: INFO: Got endpoints: latency-svc-fndfd [725.941617ms]
  Jan  3 05:18:54.069: INFO: Created: latency-svc-6xndr
  Jan  3 05:18:54.111: INFO: Got endpoints: latency-svc-lhtjw [753.56864ms]
  Jan  3 05:18:54.123: INFO: Created: latency-svc-9vphp
  Jan  3 05:18:54.157: INFO: Got endpoints: latency-svc-vnj4q [748.067875ms]
  Jan  3 05:18:54.167: INFO: Created: latency-svc-bb6f7
  Jan  3 05:18:54.207: INFO: Got endpoints: latency-svc-jgl75 [749.238874ms]
  Jan  3 05:18:54.222: INFO: Created: latency-svc-z47cv
  Jan  3 05:18:54.263: INFO: Got endpoints: latency-svc-4bgrc [754.815076ms]
  Jan  3 05:18:54.282: INFO: Created: latency-svc-ttcwf
  Jan  3 05:18:54.308: INFO: Got endpoints: latency-svc-5s8q8 [741.761346ms]
  Jan  3 05:18:54.321: INFO: Created: latency-svc-5n4bv
  Jan  3 05:18:54.360: INFO: Got endpoints: latency-svc-hbnkx [748.602304ms]
  Jan  3 05:18:54.373: INFO: Created: latency-svc-gz9j2
  Jan  3 05:18:54.409: INFO: Got endpoints: latency-svc-d5ngf [750.207808ms]
  Jan  3 05:18:54.423: INFO: Created: latency-svc-zllvd
  Jan  3 05:18:54.457: INFO: Got endpoints: latency-svc-sd9g7 [748.562908ms]
  Jan  3 05:18:54.470: INFO: Created: latency-svc-h8zv4
  Jan  3 05:18:54.511: INFO: Got endpoints: latency-svc-ql7vs [751.466359ms]
  Jan  3 05:18:54.527: INFO: Created: latency-svc-g6fn7
  Jan  3 05:18:54.560: INFO: Got endpoints: latency-svc-mfst9 [750.469584ms]
  Jan  3 05:18:54.576: INFO: Created: latency-svc-d8zl4
  Jan  3 05:18:54.611: INFO: Got endpoints: latency-svc-sf99b [731.088255ms]
  Jan  3 05:18:54.626: INFO: Created: latency-svc-5szb2
  Jan  3 05:18:54.662: INFO: Got endpoints: latency-svc-4gz9d [741.39473ms]
  Jan  3 05:18:54.684: INFO: Created: latency-svc-5tt57
  Jan  3 05:18:54.712: INFO: Got endpoints: latency-svc-94bhm [754.650122ms]
  Jan  3 05:18:54.728: INFO: Created: latency-svc-rgj6n
  Jan  3 05:18:54.761: INFO: Got endpoints: latency-svc-7zq8d [755.327096ms]
  Jan  3 05:18:54.774: INFO: Created: latency-svc-xsk4g
  Jan  3 05:18:54.807: INFO: Got endpoints: latency-svc-6xndr [749.482626ms]
  Jan  3 05:18:54.823: INFO: Created: latency-svc-85bn7
  Jan  3 05:18:54.859: INFO: Got endpoints: latency-svc-9vphp [747.272443ms]
  Jan  3 05:18:54.871: INFO: Created: latency-svc-svxh7
  E0103 05:18:54.894367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:54.908: INFO: Got endpoints: latency-svc-bb6f7 [750.927378ms]
  Jan  3 05:18:54.924: INFO: Created: latency-svc-f4ltl
  Jan  3 05:18:54.960: INFO: Got endpoints: latency-svc-z47cv [752.576612ms]
  Jan  3 05:18:54.974: INFO: Created: latency-svc-jqmfl
  Jan  3 05:18:55.007: INFO: Got endpoints: latency-svc-ttcwf [743.570192ms]
  Jan  3 05:18:55.029: INFO: Created: latency-svc-xwdjz
  Jan  3 05:18:55.058: INFO: Got endpoints: latency-svc-5n4bv [750.273003ms]
  Jan  3 05:18:55.077: INFO: Created: latency-svc-5kgjp
  Jan  3 05:18:55.113: INFO: Got endpoints: latency-svc-gz9j2 [752.58167ms]
  Jan  3 05:18:55.131: INFO: Created: latency-svc-p2rsv
  Jan  3 05:18:55.161: INFO: Got endpoints: latency-svc-zllvd [751.929131ms]
  Jan  3 05:18:55.176: INFO: Created: latency-svc-cs4vp
  Jan  3 05:18:55.207: INFO: Got endpoints: latency-svc-h8zv4 [749.887036ms]
  Jan  3 05:18:55.223: INFO: Created: latency-svc-2h9r6
  Jan  3 05:18:55.260: INFO: Got endpoints: latency-svc-g6fn7 [748.903082ms]
  Jan  3 05:18:55.275: INFO: Created: latency-svc-vjb4z
  Jan  3 05:18:55.309: INFO: Got endpoints: latency-svc-d8zl4 [748.976855ms]
  Jan  3 05:18:55.329: INFO: Created: latency-svc-46d4t
  Jan  3 05:18:55.360: INFO: Got endpoints: latency-svc-5szb2 [749.393898ms]
  Jan  3 05:18:55.373: INFO: Created: latency-svc-qmm9x
  Jan  3 05:18:55.407: INFO: Got endpoints: latency-svc-5tt57 [745.003003ms]
  Jan  3 05:18:55.459: INFO: Got endpoints: latency-svc-rgj6n [747.705154ms]
  Jan  3 05:18:55.509: INFO: Got endpoints: latency-svc-xsk4g [747.665394ms]
  Jan  3 05:18:55.559: INFO: Got endpoints: latency-svc-85bn7 [751.383292ms]
  Jan  3 05:18:55.609: INFO: Got endpoints: latency-svc-svxh7 [750.504423ms]
  Jan  3 05:18:55.658: INFO: Got endpoints: latency-svc-f4ltl [749.517595ms]
  Jan  3 05:18:55.713: INFO: Got endpoints: latency-svc-jqmfl [753.16522ms]
  Jan  3 05:18:55.761: INFO: Got endpoints: latency-svc-xwdjz [753.91864ms]
  Jan  3 05:18:55.811: INFO: Got endpoints: latency-svc-5kgjp [752.078239ms]
  Jan  3 05:18:55.858: INFO: Got endpoints: latency-svc-p2rsv [745.517104ms]
  E0103 05:18:55.895014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:18:55.910: INFO: Got endpoints: latency-svc-cs4vp [748.522475ms]
  Jan  3 05:18:55.958: INFO: Got endpoints: latency-svc-2h9r6 [750.979486ms]
  Jan  3 05:18:56.009: INFO: Got endpoints: latency-svc-vjb4z [748.670049ms]
  Jan  3 05:18:56.062: INFO: Got endpoints: latency-svc-46d4t [752.666045ms]
  Jan  3 05:18:56.115: INFO: Got endpoints: latency-svc-qmm9x [754.731431ms]
  Jan  3 05:18:56.117: INFO: Latencies: [29.808216ms 43.066035ms 60.089588ms 70.603956ms 70.891998ms 78.793952ms 79.584352ms 79.836358ms 88.671455ms 95.592531ms 109.582988ms 112.949206ms 115.113371ms 119.108957ms 131.348841ms 132.446571ms 132.969606ms 134.909642ms 141.088866ms 153.192109ms 153.933923ms 156.540265ms 156.587985ms 159.411051ms 161.811337ms 168.47384ms 168.559772ms 168.56246ms 170.92402ms 171.50365ms 177.279411ms 191.850734ms 200.103076ms 200.180627ms 219.049263ms 232.155314ms 232.324403ms 251.719092ms 264.112546ms 276.283112ms 288.741233ms 331.857056ms 341.34951ms 397.166906ms 445.809928ms 494.095959ms 565.462195ms 604.50384ms 619.434231ms 654.530045ms 659.301734ms 708.502686ms 725.941617ms 730.232093ms 731.088255ms 737.829192ms 741.245706ms 741.39473ms 741.761346ms 743.515423ms 743.570192ms 744.114245ms 745.003003ms 745.517104ms 745.719118ms 745.732726ms 745.82037ms 746.022711ms 746.141653ms 746.1782ms 746.482302ms 746.632931ms 746.731563ms 746.810059ms 746.982472ms 747.019286ms 747.148633ms 747.170337ms 747.170356ms 747.272443ms 747.431202ms 747.471514ms 747.665394ms 747.705154ms 747.86702ms 748.014782ms 748.067875ms 748.345446ms 748.49809ms 748.522475ms 748.562908ms 748.602304ms 748.670049ms 748.744899ms 748.747158ms 748.768026ms 748.781818ms 748.814812ms 748.868544ms 748.903082ms 748.97632ms 748.976855ms 748.993828ms 749.012886ms 749.06855ms 749.134118ms 749.167388ms 749.16754ms 749.238874ms 749.289906ms 749.393898ms 749.429369ms 749.458815ms 749.482626ms 749.517595ms 749.551735ms 749.557571ms 749.642259ms 749.734309ms 749.745119ms 749.771869ms 749.8037ms 749.887036ms 749.903785ms 749.977935ms 750.03919ms 750.09839ms 750.195148ms 750.207808ms 750.256419ms 750.273003ms 750.383383ms 750.469584ms 750.504423ms 750.601817ms 750.60928ms 750.739325ms 750.827133ms 750.927378ms 750.979486ms 751.039824ms 751.245924ms 751.32364ms 751.383292ms 751.39802ms 751.405224ms 751.415289ms 751.466359ms 751.492678ms 751.533876ms 751.711685ms 751.844133ms 751.865563ms 751.929131ms 752.078009ms 752.078239ms 752.257712ms 752.523134ms 752.576612ms 752.58167ms 752.666045ms 752.705603ms 752.71649ms 753.022197ms 753.060307ms 753.16522ms 753.29261ms 753.46864ms 753.496679ms 753.56864ms 753.636671ms 753.91864ms 754.463507ms 754.650122ms 754.731431ms 754.815076ms 755.327096ms 755.343921ms 755.770919ms 757.635902ms 758.670204ms 761.859198ms 765.718191ms 767.315234ms 767.963601ms 794.828342ms 798.52925ms 798.587514ms 798.831178ms 800.44622ms 801.254688ms 801.458042ms 801.748387ms 802.061018ms 802.767887ms 802.890569ms 803.258688ms 804.337159ms 805.31384ms 805.460967ms]
  Jan  3 05:18:56.118: INFO: 50 %ile: 748.97632ms
  Jan  3 05:18:56.118: INFO: 90 %ile: 758.670204ms
  Jan  3 05:18:56.118: INFO: 99 %ile: 805.31384ms
  Jan  3 05:18:56.118: INFO: Total sample count: 200
  Jan  3 05:18:56.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4306" for this suite. @ 01/03/24 05:18:56.129
• [11.878 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/03/24 05:18:56.138
  Jan  3 05:18:56.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pod-network-test @ 01/03/24 05:18:56.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:18:56.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:18:56.169
  STEP: Performing setup for networking test in namespace pod-network-test-3259 @ 01/03/24 05:18:56.176
  STEP: creating a selector @ 01/03/24 05:18:56.176
  STEP: Creating the service pods in kubernetes @ 01/03/24 05:18:56.176
  Jan  3 05:18:56.177: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0103 05:18:56.896052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:57.896535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:58.896948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:18:59.897415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:00.898362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:01.898528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:02.898711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:03.899369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:04.899534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:05.900236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:06.900339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:07.900489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:08.901062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:09.901782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:10.902165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:11.902861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:12.903444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:13.903957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:14.904355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:15.904730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:16.905301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:17.905864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/03/24 05:19:18.338
  E0103 05:19:18.906593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:19.906454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:19:20.367: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan  3 05:19:20.367: INFO: Breadth first check of 10.1.213.125 on host 192.168.18.91...
  Jan  3 05:19:20.372: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.155.3:9080/dial?request=hostname&protocol=http&host=10.1.213.125&port=8083&tries=1'] Namespace:pod-network-test-3259 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 05:19:20.372: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 05:19:20.374: INFO: ExecWithOptions: Clientset creation
  Jan  3 05:19:20.374: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/pod-network-test-3259/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.155.3%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.213.125%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan  3 05:19:20.536: INFO: Waiting for responses: map[]
  Jan  3 05:19:20.536: INFO: reached 10.1.213.125 after 0/1 tries
  Jan  3 05:19:20.536: INFO: Breadth first check of 10.1.155.53 on host 192.168.18.92...
  Jan  3 05:19:20.545: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.155.3:9080/dial?request=hostname&protocol=http&host=10.1.155.53&port=8083&tries=1'] Namespace:pod-network-test-3259 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan  3 05:19:20.545: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  Jan  3 05:19:20.546: INFO: ExecWithOptions: Clientset creation
  Jan  3 05:19:20.547: INFO: ExecWithOptions: execute(POST https://169.169.0.1:443/api/v1/namespaces/pod-network-test-3259/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.155.3%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.155.53%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan  3 05:19:20.696: INFO: Waiting for responses: map[]
  Jan  3 05:19:20.696: INFO: reached 10.1.155.53 after 0/1 tries
  Jan  3 05:19:20.696: INFO: Going to retry 0 out of 2 pods....
  Jan  3 05:19:20.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3259" for this suite. @ 01/03/24 05:19:20.706
• [24.577 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/03/24 05:19:20.716
  Jan  3 05:19:20.716: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename pods @ 01/03/24 05:19:20.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:19:20.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:19:20.751
  STEP: creating the pod @ 01/03/24 05:19:20.759
  STEP: submitting the pod to kubernetes @ 01/03/24 05:19:20.76
  STEP: verifying QOS class is set on the pod @ 01/03/24 05:19:20.772
  Jan  3 05:19:20.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9219" for this suite. @ 01/03/24 05:19:20.785
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 01/03/24 05:19:20.841
  Jan  3 05:19:20.841: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename statefulset @ 01/03/24 05:19:20.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:19:20.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:19:20.883
  STEP: Creating service test in namespace statefulset-543 @ 01/03/24 05:19:20.89
  STEP: Creating a new StatefulSet @ 01/03/24 05:19:20.899
  E0103 05:19:20.907212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:19:20.912: INFO: Found 0 stateful pods, waiting for 3
  E0103 05:19:21.908366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:22.908647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:23.909183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:24.909919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:25.910897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:26.911699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:27.912878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:28.914288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:29.915739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:30.916554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:19:30.920: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 05:19:30.920: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 05:19:30.920: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/03/24 05:19:30.943
  Jan  3 05:19:30.971: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 01/03/24 05:19:30.971
  E0103 05:19:31.916954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:32.917478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:33.918351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:34.919040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:35.919831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:36.920698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:37.921089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:38.921868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:39.922519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:40.922863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/03/24 05:19:40.99
  STEP: Performing a canary update @ 01/03/24 05:19:40.991
  Jan  3 05:19:41.018: INFO: Updating stateful set ss2
  Jan  3 05:19:41.035: INFO: Waiting for Pod statefulset-543/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0103 05:19:41.923550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:42.923989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:43.924656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:44.925042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:45.926348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:46.926973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:47.927951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:48.927890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:49.928812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:50.929909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/03/24 05:19:51.04
  Jan  3 05:19:51.130: INFO: Found 2 stateful pods, waiting for 3
  E0103 05:19:51.930557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:52.930967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:53.931573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:54.932378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:55.932869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:56.933022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:57.933576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:58.934389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:19:59.935280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:00.936086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:20:01.123: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 05:20:01.123: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan  3 05:20:01.123: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/03/24 05:20:01.138
  Jan  3 05:20:01.166: INFO: Updating stateful set ss2
  Jan  3 05:20:01.181: INFO: Waiting for Pod statefulset-543/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0103 05:20:01.936424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:02.936591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:03.937086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:04.937315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:05.938320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:06.938982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:07.939334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:08.939706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:09.940068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:10.940522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:20:11.217: INFO: Updating stateful set ss2
  Jan  3 05:20:11.232: INFO: Waiting for StatefulSet statefulset-543/ss2 to complete update
  Jan  3 05:20:11.232: INFO: Waiting for Pod statefulset-543/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0103 05:20:11.940922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:12.941726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:13.942506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:14.942650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:15.943876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:16.944329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:17.944914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:18.945729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:19.946402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:20.947330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:20:21.238: INFO: Deleting all statefulset in ns statefulset-543
  Jan  3 05:20:21.243: INFO: Scaling statefulset ss2 to 0
  E0103 05:20:21.948410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:22.948871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:23.954319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:24.951559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:25.952826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:26.953704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:27.954307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:28.959362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:29.956143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:30.956876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:20:31.271: INFO: Waiting for statefulset status.replicas updated to 0
  Jan  3 05:20:31.279: INFO: Deleting statefulset ss2
  Jan  3 05:20:31.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-543" for this suite. @ 01/03/24 05:20:31.312
• [70.483 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/03/24 05:20:31.325
  Jan  3 05:20:31.325: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename init-container @ 01/03/24 05:20:31.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:20:31.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:20:31.364
  STEP: creating the pod @ 01/03/24 05:20:31.374
  Jan  3 05:20:31.374: INFO: PodSpec: initContainers in spec.initContainers
  E0103 05:20:31.957521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:32.958565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:33.959798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:34.960565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:35.961032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan  3 05:20:36.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3722" for this suite. @ 01/03/24 05:20:36.768
• [5.452 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/03/24 05:20:36.778
  Jan  3 05:20:36.778: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename container-runtime @ 01/03/24 05:20:36.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:20:36.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:20:36.806
  STEP: create the container @ 01/03/24 05:20:36.813
  W0103 05:20:36.825202      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/03/24 05:20:36.825
  E0103 05:20:36.962075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:37.962788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:38.963495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/03/24 05:20:39.853
  STEP: the container should be terminated @ 01/03/24 05:20:39.859
  STEP: the termination message should be set @ 01/03/24 05:20:39.859
  Jan  3 05:20:39.859: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/03/24 05:20:39.859
  Jan  3 05:20:39.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7619" for this suite. @ 01/03/24 05:20:39.893
• [3.128 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/03/24 05:20:39.907
  Jan  3 05:20:39.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1728709697
  STEP: Building a namespace api object, basename secrets @ 01/03/24 05:20:39.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/03/24 05:20:39.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/03/24 05:20:39.937
  STEP: Creating secret with name secret-test-86921997-4faf-4eef-9433-d2f60c91881b @ 01/03/24 05:20:39.944
  STEP: Creating a pod to test consume secrets @ 01/03/24 05:20:39.95
  E0103 05:20:39.964028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:40.965019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:41.965880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:42.966589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0103 05:20:43.968184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/03/24 05:20:43.986
  Jan  3 05:20:43.992: INFO: Trying to get logs from node 192.168.18.92 pod pod-secrets-779636aa-fe2f-4380-a331-7d221fefe75a container secret-volume-test: <nil>
  STEP: delete the pod @ 01/03/24 05:20:44.024
  Jan  3 05:20:44.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8662" for this suite. @ 01/03/24 05:20:44.053
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Jan  3 05:20:44.067: INFO: Running AfterSuite actions on node 1
  Jan  3 05:20:44.067: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.133 seconds]
------------------------------

Ran 388 of 7407 Specs in 6856.296 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h54m19.802517898s
Test Suite Passed

 